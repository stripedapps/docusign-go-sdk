/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiRequestLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiRequestLog{}

// ApiRequestLog Contains API request log information.
type ApiRequestLog struct {
	// The UTC DateTime when the item was created.
	CreatedDateTime *string `json:"createdDateTime,omitempty"`
	// The API endpoint that was called.
	Description *string `json:"description,omitempty"`
	// The ID of the log entry.
	RequestLogId *string `json:"requestLogId,omitempty"`
	// The status of the API request.
	Status *string `json:"status,omitempty"`
}

// NewApiRequestLog instantiates a new ApiRequestLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRequestLog() *ApiRequestLog {
	this := ApiRequestLog{}
	return &this
}

// NewApiRequestLogWithDefaults instantiates a new ApiRequestLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRequestLogWithDefaults() *ApiRequestLog {
	this := ApiRequestLog{}
	return &this
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise.
func (o *ApiRequestLog) GetCreatedDateTime() string {
	if o == nil || IsNil(o.CreatedDateTime) {
		var ret string
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestLog) GetCreatedDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDateTime) {
		return nil, false
	}
	return o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *ApiRequestLog) HasCreatedDateTime() bool {
	if o != nil && !IsNil(o.CreatedDateTime) {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given string and assigns it to the CreatedDateTime field.
func (o *ApiRequestLog) SetCreatedDateTime(v string) {
	o.CreatedDateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiRequestLog) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestLog) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiRequestLog) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiRequestLog) SetDescription(v string) {
	o.Description = &v
}

// GetRequestLogId returns the RequestLogId field value if set, zero value otherwise.
func (o *ApiRequestLog) GetRequestLogId() string {
	if o == nil || IsNil(o.RequestLogId) {
		var ret string
		return ret
	}
	return *o.RequestLogId
}

// GetRequestLogIdOk returns a tuple with the RequestLogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestLog) GetRequestLogIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestLogId) {
		return nil, false
	}
	return o.RequestLogId, true
}

// HasRequestLogId returns a boolean if a field has been set.
func (o *ApiRequestLog) HasRequestLogId() bool {
	if o != nil && !IsNil(o.RequestLogId) {
		return true
	}

	return false
}

// SetRequestLogId gets a reference to the given string and assigns it to the RequestLogId field.
func (o *ApiRequestLog) SetRequestLogId(v string) {
	o.RequestLogId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiRequestLog) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRequestLog) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiRequestLog) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApiRequestLog) SetStatus(v string) {
	o.Status = &v
}

func (o ApiRequestLog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRequestLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedDateTime) {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.RequestLogId) {
		toSerialize["requestLogId"] = o.RequestLogId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableApiRequestLog struct {
	value *ApiRequestLog
	isSet bool
}

func (v NullableApiRequestLog) Get() *ApiRequestLog {
	return v.value
}

func (v *NullableApiRequestLog) Set(val *ApiRequestLog) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRequestLog) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRequestLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRequestLog(val *ApiRequestLog) *NullableApiRequestLog {
	return &NullableApiRequestLog{value: val, isSet: true}
}

func (v NullableApiRequestLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRequestLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


