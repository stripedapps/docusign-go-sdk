/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BulkEnvelopeStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkEnvelopeStatus{}

// BulkEnvelopeStatus 
type BulkEnvelopeStatus struct {
	// Specifies an identifier which can be used to retrieve a more detailed status of individual bulk recipient batches.
	BatchId *string `json:"batchId,omitempty"`
	// The number of items returned in this response.
	BatchSize *string `json:"batchSize,omitempty"`
	// A list of bulk envelope objects.
	BulkEnvelopes []BulkEnvelope `json:"bulkEnvelopes,omitempty"`
	// URI at which you can retrieve the batch envelopes.
	BulkEnvelopesBatchUri *string `json:"bulkEnvelopesBatchUri,omitempty"`
	// The last index position in the result set. 
	EndPosition *string `json:"endPosition,omitempty"`
	// The number of entries with a status of failed. 
	Failed *string `json:"failed,omitempty"`
	// The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. 
	NextUri *string `json:"nextUri,omitempty"`
	// The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. 
	PreviousUri *string `json:"previousUri,omitempty"`
	// The number of entries with a status of queued. 
	Queued *string `json:"queued,omitempty"`
	// The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.
	ResultSetSize *string `json:"resultSetSize,omitempty"`
	// The number of entries with a status of sent.
	Sent *string `json:"sent,omitempty"`
	// The starting index position of the current result set.
	StartPosition *string `json:"startPosition,omitempty"`
	// The date on which the bulk envelope was created.
	SubmittedDate *string `json:"submittedDate,omitempty"`
	// The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.
	TotalSetSize *string `json:"totalSetSize,omitempty"`
}

// NewBulkEnvelopeStatus instantiates a new BulkEnvelopeStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkEnvelopeStatus() *BulkEnvelopeStatus {
	this := BulkEnvelopeStatus{}
	return &this
}

// NewBulkEnvelopeStatusWithDefaults instantiates a new BulkEnvelopeStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkEnvelopeStatusWithDefaults() *BulkEnvelopeStatus {
	this := BulkEnvelopeStatus{}
	return &this
}

// GetBatchId returns the BatchId field value if set, zero value otherwise.
func (o *BulkEnvelopeStatus) GetBatchId() string {
	if o == nil || IsNil(o.BatchId) {
		var ret string
		return ret
	}
	return *o.BatchId
}

// GetBatchIdOk returns a tuple with the BatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelopeStatus) GetBatchIdOk() (*string, bool) {
	if o == nil || IsNil(o.BatchId) {
		return nil, false
	}
	return o.BatchId, true
}

// HasBatchId returns a boolean if a field has been set.
func (o *BulkEnvelopeStatus) HasBatchId() bool {
	if o != nil && !IsNil(o.BatchId) {
		return true
	}

	return false
}

// SetBatchId gets a reference to the given string and assigns it to the BatchId field.
func (o *BulkEnvelopeStatus) SetBatchId(v string) {
	o.BatchId = &v
}

// GetBatchSize returns the BatchSize field value if set, zero value otherwise.
func (o *BulkEnvelopeStatus) GetBatchSize() string {
	if o == nil || IsNil(o.BatchSize) {
		var ret string
		return ret
	}
	return *o.BatchSize
}

// GetBatchSizeOk returns a tuple with the BatchSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelopeStatus) GetBatchSizeOk() (*string, bool) {
	if o == nil || IsNil(o.BatchSize) {
		return nil, false
	}
	return o.BatchSize, true
}

// HasBatchSize returns a boolean if a field has been set.
func (o *BulkEnvelopeStatus) HasBatchSize() bool {
	if o != nil && !IsNil(o.BatchSize) {
		return true
	}

	return false
}

// SetBatchSize gets a reference to the given string and assigns it to the BatchSize field.
func (o *BulkEnvelopeStatus) SetBatchSize(v string) {
	o.BatchSize = &v
}

// GetBulkEnvelopes returns the BulkEnvelopes field value if set, zero value otherwise.
func (o *BulkEnvelopeStatus) GetBulkEnvelopes() []BulkEnvelope {
	if o == nil || IsNil(o.BulkEnvelopes) {
		var ret []BulkEnvelope
		return ret
	}
	return o.BulkEnvelopes
}

// GetBulkEnvelopesOk returns a tuple with the BulkEnvelopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelopeStatus) GetBulkEnvelopesOk() ([]BulkEnvelope, bool) {
	if o == nil || IsNil(o.BulkEnvelopes) {
		return nil, false
	}
	return o.BulkEnvelopes, true
}

// HasBulkEnvelopes returns a boolean if a field has been set.
func (o *BulkEnvelopeStatus) HasBulkEnvelopes() bool {
	if o != nil && !IsNil(o.BulkEnvelopes) {
		return true
	}

	return false
}

// SetBulkEnvelopes gets a reference to the given []BulkEnvelope and assigns it to the BulkEnvelopes field.
func (o *BulkEnvelopeStatus) SetBulkEnvelopes(v []BulkEnvelope) {
	o.BulkEnvelopes = v
}

// GetBulkEnvelopesBatchUri returns the BulkEnvelopesBatchUri field value if set, zero value otherwise.
func (o *BulkEnvelopeStatus) GetBulkEnvelopesBatchUri() string {
	if o == nil || IsNil(o.BulkEnvelopesBatchUri) {
		var ret string
		return ret
	}
	return *o.BulkEnvelopesBatchUri
}

// GetBulkEnvelopesBatchUriOk returns a tuple with the BulkEnvelopesBatchUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelopeStatus) GetBulkEnvelopesBatchUriOk() (*string, bool) {
	if o == nil || IsNil(o.BulkEnvelopesBatchUri) {
		return nil, false
	}
	return o.BulkEnvelopesBatchUri, true
}

// HasBulkEnvelopesBatchUri returns a boolean if a field has been set.
func (o *BulkEnvelopeStatus) HasBulkEnvelopesBatchUri() bool {
	if o != nil && !IsNil(o.BulkEnvelopesBatchUri) {
		return true
	}

	return false
}

// SetBulkEnvelopesBatchUri gets a reference to the given string and assigns it to the BulkEnvelopesBatchUri field.
func (o *BulkEnvelopeStatus) SetBulkEnvelopesBatchUri(v string) {
	o.BulkEnvelopesBatchUri = &v
}

// GetEndPosition returns the EndPosition field value if set, zero value otherwise.
func (o *BulkEnvelopeStatus) GetEndPosition() string {
	if o == nil || IsNil(o.EndPosition) {
		var ret string
		return ret
	}
	return *o.EndPosition
}

// GetEndPositionOk returns a tuple with the EndPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelopeStatus) GetEndPositionOk() (*string, bool) {
	if o == nil || IsNil(o.EndPosition) {
		return nil, false
	}
	return o.EndPosition, true
}

// HasEndPosition returns a boolean if a field has been set.
func (o *BulkEnvelopeStatus) HasEndPosition() bool {
	if o != nil && !IsNil(o.EndPosition) {
		return true
	}

	return false
}

// SetEndPosition gets a reference to the given string and assigns it to the EndPosition field.
func (o *BulkEnvelopeStatus) SetEndPosition(v string) {
	o.EndPosition = &v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *BulkEnvelopeStatus) GetFailed() string {
	if o == nil || IsNil(o.Failed) {
		var ret string
		return ret
	}
	return *o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelopeStatus) GetFailedOk() (*string, bool) {
	if o == nil || IsNil(o.Failed) {
		return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *BulkEnvelopeStatus) HasFailed() bool {
	if o != nil && !IsNil(o.Failed) {
		return true
	}

	return false
}

// SetFailed gets a reference to the given string and assigns it to the Failed field.
func (o *BulkEnvelopeStatus) SetFailed(v string) {
	o.Failed = &v
}

// GetNextUri returns the NextUri field value if set, zero value otherwise.
func (o *BulkEnvelopeStatus) GetNextUri() string {
	if o == nil || IsNil(o.NextUri) {
		var ret string
		return ret
	}
	return *o.NextUri
}

// GetNextUriOk returns a tuple with the NextUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelopeStatus) GetNextUriOk() (*string, bool) {
	if o == nil || IsNil(o.NextUri) {
		return nil, false
	}
	return o.NextUri, true
}

// HasNextUri returns a boolean if a field has been set.
func (o *BulkEnvelopeStatus) HasNextUri() bool {
	if o != nil && !IsNil(o.NextUri) {
		return true
	}

	return false
}

// SetNextUri gets a reference to the given string and assigns it to the NextUri field.
func (o *BulkEnvelopeStatus) SetNextUri(v string) {
	o.NextUri = &v
}

// GetPreviousUri returns the PreviousUri field value if set, zero value otherwise.
func (o *BulkEnvelopeStatus) GetPreviousUri() string {
	if o == nil || IsNil(o.PreviousUri) {
		var ret string
		return ret
	}
	return *o.PreviousUri
}

// GetPreviousUriOk returns a tuple with the PreviousUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelopeStatus) GetPreviousUriOk() (*string, bool) {
	if o == nil || IsNil(o.PreviousUri) {
		return nil, false
	}
	return o.PreviousUri, true
}

// HasPreviousUri returns a boolean if a field has been set.
func (o *BulkEnvelopeStatus) HasPreviousUri() bool {
	if o != nil && !IsNil(o.PreviousUri) {
		return true
	}

	return false
}

// SetPreviousUri gets a reference to the given string and assigns it to the PreviousUri field.
func (o *BulkEnvelopeStatus) SetPreviousUri(v string) {
	o.PreviousUri = &v
}

// GetQueued returns the Queued field value if set, zero value otherwise.
func (o *BulkEnvelopeStatus) GetQueued() string {
	if o == nil || IsNil(o.Queued) {
		var ret string
		return ret
	}
	return *o.Queued
}

// GetQueuedOk returns a tuple with the Queued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelopeStatus) GetQueuedOk() (*string, bool) {
	if o == nil || IsNil(o.Queued) {
		return nil, false
	}
	return o.Queued, true
}

// HasQueued returns a boolean if a field has been set.
func (o *BulkEnvelopeStatus) HasQueued() bool {
	if o != nil && !IsNil(o.Queued) {
		return true
	}

	return false
}

// SetQueued gets a reference to the given string and assigns it to the Queued field.
func (o *BulkEnvelopeStatus) SetQueued(v string) {
	o.Queued = &v
}

// GetResultSetSize returns the ResultSetSize field value if set, zero value otherwise.
func (o *BulkEnvelopeStatus) GetResultSetSize() string {
	if o == nil || IsNil(o.ResultSetSize) {
		var ret string
		return ret
	}
	return *o.ResultSetSize
}

// GetResultSetSizeOk returns a tuple with the ResultSetSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelopeStatus) GetResultSetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.ResultSetSize) {
		return nil, false
	}
	return o.ResultSetSize, true
}

// HasResultSetSize returns a boolean if a field has been set.
func (o *BulkEnvelopeStatus) HasResultSetSize() bool {
	if o != nil && !IsNil(o.ResultSetSize) {
		return true
	}

	return false
}

// SetResultSetSize gets a reference to the given string and assigns it to the ResultSetSize field.
func (o *BulkEnvelopeStatus) SetResultSetSize(v string) {
	o.ResultSetSize = &v
}

// GetSent returns the Sent field value if set, zero value otherwise.
func (o *BulkEnvelopeStatus) GetSent() string {
	if o == nil || IsNil(o.Sent) {
		var ret string
		return ret
	}
	return *o.Sent
}

// GetSentOk returns a tuple with the Sent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelopeStatus) GetSentOk() (*string, bool) {
	if o == nil || IsNil(o.Sent) {
		return nil, false
	}
	return o.Sent, true
}

// HasSent returns a boolean if a field has been set.
func (o *BulkEnvelopeStatus) HasSent() bool {
	if o != nil && !IsNil(o.Sent) {
		return true
	}

	return false
}

// SetSent gets a reference to the given string and assigns it to the Sent field.
func (o *BulkEnvelopeStatus) SetSent(v string) {
	o.Sent = &v
}

// GetStartPosition returns the StartPosition field value if set, zero value otherwise.
func (o *BulkEnvelopeStatus) GetStartPosition() string {
	if o == nil || IsNil(o.StartPosition) {
		var ret string
		return ret
	}
	return *o.StartPosition
}

// GetStartPositionOk returns a tuple with the StartPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelopeStatus) GetStartPositionOk() (*string, bool) {
	if o == nil || IsNil(o.StartPosition) {
		return nil, false
	}
	return o.StartPosition, true
}

// HasStartPosition returns a boolean if a field has been set.
func (o *BulkEnvelopeStatus) HasStartPosition() bool {
	if o != nil && !IsNil(o.StartPosition) {
		return true
	}

	return false
}

// SetStartPosition gets a reference to the given string and assigns it to the StartPosition field.
func (o *BulkEnvelopeStatus) SetStartPosition(v string) {
	o.StartPosition = &v
}

// GetSubmittedDate returns the SubmittedDate field value if set, zero value otherwise.
func (o *BulkEnvelopeStatus) GetSubmittedDate() string {
	if o == nil || IsNil(o.SubmittedDate) {
		var ret string
		return ret
	}
	return *o.SubmittedDate
}

// GetSubmittedDateOk returns a tuple with the SubmittedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelopeStatus) GetSubmittedDateOk() (*string, bool) {
	if o == nil || IsNil(o.SubmittedDate) {
		return nil, false
	}
	return o.SubmittedDate, true
}

// HasSubmittedDate returns a boolean if a field has been set.
func (o *BulkEnvelopeStatus) HasSubmittedDate() bool {
	if o != nil && !IsNil(o.SubmittedDate) {
		return true
	}

	return false
}

// SetSubmittedDate gets a reference to the given string and assigns it to the SubmittedDate field.
func (o *BulkEnvelopeStatus) SetSubmittedDate(v string) {
	o.SubmittedDate = &v
}

// GetTotalSetSize returns the TotalSetSize field value if set, zero value otherwise.
func (o *BulkEnvelopeStatus) GetTotalSetSize() string {
	if o == nil || IsNil(o.TotalSetSize) {
		var ret string
		return ret
	}
	return *o.TotalSetSize
}

// GetTotalSetSizeOk returns a tuple with the TotalSetSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelopeStatus) GetTotalSetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.TotalSetSize) {
		return nil, false
	}
	return o.TotalSetSize, true
}

// HasTotalSetSize returns a boolean if a field has been set.
func (o *BulkEnvelopeStatus) HasTotalSetSize() bool {
	if o != nil && !IsNil(o.TotalSetSize) {
		return true
	}

	return false
}

// SetTotalSetSize gets a reference to the given string and assigns it to the TotalSetSize field.
func (o *BulkEnvelopeStatus) SetTotalSetSize(v string) {
	o.TotalSetSize = &v
}

func (o BulkEnvelopeStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkEnvelopeStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BatchId) {
		toSerialize["batchId"] = o.BatchId
	}
	if !IsNil(o.BatchSize) {
		toSerialize["batchSize"] = o.BatchSize
	}
	if !IsNil(o.BulkEnvelopes) {
		toSerialize["bulkEnvelopes"] = o.BulkEnvelopes
	}
	if !IsNil(o.BulkEnvelopesBatchUri) {
		toSerialize["bulkEnvelopesBatchUri"] = o.BulkEnvelopesBatchUri
	}
	if !IsNil(o.EndPosition) {
		toSerialize["endPosition"] = o.EndPosition
	}
	if !IsNil(o.Failed) {
		toSerialize["failed"] = o.Failed
	}
	if !IsNil(o.NextUri) {
		toSerialize["nextUri"] = o.NextUri
	}
	if !IsNil(o.PreviousUri) {
		toSerialize["previousUri"] = o.PreviousUri
	}
	if !IsNil(o.Queued) {
		toSerialize["queued"] = o.Queued
	}
	if !IsNil(o.ResultSetSize) {
		toSerialize["resultSetSize"] = o.ResultSetSize
	}
	if !IsNil(o.Sent) {
		toSerialize["sent"] = o.Sent
	}
	if !IsNil(o.StartPosition) {
		toSerialize["startPosition"] = o.StartPosition
	}
	if !IsNil(o.SubmittedDate) {
		toSerialize["submittedDate"] = o.SubmittedDate
	}
	if !IsNil(o.TotalSetSize) {
		toSerialize["totalSetSize"] = o.TotalSetSize
	}
	return toSerialize, nil
}

type NullableBulkEnvelopeStatus struct {
	value *BulkEnvelopeStatus
	isSet bool
}

func (v NullableBulkEnvelopeStatus) Get() *BulkEnvelopeStatus {
	return v.value
}

func (v *NullableBulkEnvelopeStatus) Set(val *BulkEnvelopeStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkEnvelopeStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkEnvelopeStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkEnvelopeStatus(val *BulkEnvelopeStatus) *NullableBulkEnvelopeStatus {
	return &NullableBulkEnvelopeStatus{value: val, isSet: true}
}

func (v NullableBulkEnvelopeStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkEnvelopeStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


