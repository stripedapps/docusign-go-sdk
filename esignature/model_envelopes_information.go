/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EnvelopesInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvelopesInformation{}

// EnvelopesInformation Result set for the Envelopes: listStatusChanges method
type EnvelopesInformation struct {
	// Reserved for DocuSign.
	ContinuationToken *string `json:"continuationToken,omitempty"`
	// The last index position in the result set. 
	EndPosition *string `json:"endPosition,omitempty"`
	// Array of envelope information.
	Envelopes []Envelope `json:"envelopes,omitempty"`
	// 
	EnvelopeSearchSource *string `json:"envelopeSearchSource,omitempty"`
	// Array of envelope statuses and transaction IDs in the result set.
	EnvelopeTransactionStatuses []EnvelopeTransactionStatus `json:"envelopeTransactionStatuses,omitempty"`
	// A list of folder objects.
	Folders []Folder `json:"folders,omitempty"`
	// The last time that a query was performed.
	LastQueriedDateTime *string `json:"lastQueriedDateTime,omitempty"`
	// The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. 
	NextUri *string `json:"nextUri,omitempty"`
	// The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. 
	PreviousUri *string `json:"previousUri,omitempty"`
	// The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.
	ResultSetSize *string `json:"resultSetSize,omitempty"`
	// The starting index position of the current result set.
	StartPosition *string `json:"startPosition,omitempty"`
	// The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.
	TotalSetSize *string `json:"totalSetSize,omitempty"`
}

// NewEnvelopesInformation instantiates a new EnvelopesInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvelopesInformation() *EnvelopesInformation {
	this := EnvelopesInformation{}
	return &this
}

// NewEnvelopesInformationWithDefaults instantiates a new EnvelopesInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvelopesInformationWithDefaults() *EnvelopesInformation {
	this := EnvelopesInformation{}
	return &this
}

// GetContinuationToken returns the ContinuationToken field value if set, zero value otherwise.
func (o *EnvelopesInformation) GetContinuationToken() string {
	if o == nil || IsNil(o.ContinuationToken) {
		var ret string
		return ret
	}
	return *o.ContinuationToken
}

// GetContinuationTokenOk returns a tuple with the ContinuationToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvelopesInformation) GetContinuationTokenOk() (*string, bool) {
	if o == nil || IsNil(o.ContinuationToken) {
		return nil, false
	}
	return o.ContinuationToken, true
}

// HasContinuationToken returns a boolean if a field has been set.
func (o *EnvelopesInformation) HasContinuationToken() bool {
	if o != nil && !IsNil(o.ContinuationToken) {
		return true
	}

	return false
}

// SetContinuationToken gets a reference to the given string and assigns it to the ContinuationToken field.
func (o *EnvelopesInformation) SetContinuationToken(v string) {
	o.ContinuationToken = &v
}

// GetEndPosition returns the EndPosition field value if set, zero value otherwise.
func (o *EnvelopesInformation) GetEndPosition() string {
	if o == nil || IsNil(o.EndPosition) {
		var ret string
		return ret
	}
	return *o.EndPosition
}

// GetEndPositionOk returns a tuple with the EndPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvelopesInformation) GetEndPositionOk() (*string, bool) {
	if o == nil || IsNil(o.EndPosition) {
		return nil, false
	}
	return o.EndPosition, true
}

// HasEndPosition returns a boolean if a field has been set.
func (o *EnvelopesInformation) HasEndPosition() bool {
	if o != nil && !IsNil(o.EndPosition) {
		return true
	}

	return false
}

// SetEndPosition gets a reference to the given string and assigns it to the EndPosition field.
func (o *EnvelopesInformation) SetEndPosition(v string) {
	o.EndPosition = &v
}

// GetEnvelopes returns the Envelopes field value if set, zero value otherwise.
func (o *EnvelopesInformation) GetEnvelopes() []Envelope {
	if o == nil || IsNil(o.Envelopes) {
		var ret []Envelope
		return ret
	}
	return o.Envelopes
}

// GetEnvelopesOk returns a tuple with the Envelopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvelopesInformation) GetEnvelopesOk() ([]Envelope, bool) {
	if o == nil || IsNil(o.Envelopes) {
		return nil, false
	}
	return o.Envelopes, true
}

// HasEnvelopes returns a boolean if a field has been set.
func (o *EnvelopesInformation) HasEnvelopes() bool {
	if o != nil && !IsNil(o.Envelopes) {
		return true
	}

	return false
}

// SetEnvelopes gets a reference to the given []Envelope and assigns it to the Envelopes field.
func (o *EnvelopesInformation) SetEnvelopes(v []Envelope) {
	o.Envelopes = v
}

// GetEnvelopeSearchSource returns the EnvelopeSearchSource field value if set, zero value otherwise.
func (o *EnvelopesInformation) GetEnvelopeSearchSource() string {
	if o == nil || IsNil(o.EnvelopeSearchSource) {
		var ret string
		return ret
	}
	return *o.EnvelopeSearchSource
}

// GetEnvelopeSearchSourceOk returns a tuple with the EnvelopeSearchSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvelopesInformation) GetEnvelopeSearchSourceOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeSearchSource) {
		return nil, false
	}
	return o.EnvelopeSearchSource, true
}

// HasEnvelopeSearchSource returns a boolean if a field has been set.
func (o *EnvelopesInformation) HasEnvelopeSearchSource() bool {
	if o != nil && !IsNil(o.EnvelopeSearchSource) {
		return true
	}

	return false
}

// SetEnvelopeSearchSource gets a reference to the given string and assigns it to the EnvelopeSearchSource field.
func (o *EnvelopesInformation) SetEnvelopeSearchSource(v string) {
	o.EnvelopeSearchSource = &v
}

// GetEnvelopeTransactionStatuses returns the EnvelopeTransactionStatuses field value if set, zero value otherwise.
func (o *EnvelopesInformation) GetEnvelopeTransactionStatuses() []EnvelopeTransactionStatus {
	if o == nil || IsNil(o.EnvelopeTransactionStatuses) {
		var ret []EnvelopeTransactionStatus
		return ret
	}
	return o.EnvelopeTransactionStatuses
}

// GetEnvelopeTransactionStatusesOk returns a tuple with the EnvelopeTransactionStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvelopesInformation) GetEnvelopeTransactionStatusesOk() ([]EnvelopeTransactionStatus, bool) {
	if o == nil || IsNil(o.EnvelopeTransactionStatuses) {
		return nil, false
	}
	return o.EnvelopeTransactionStatuses, true
}

// HasEnvelopeTransactionStatuses returns a boolean if a field has been set.
func (o *EnvelopesInformation) HasEnvelopeTransactionStatuses() bool {
	if o != nil && !IsNil(o.EnvelopeTransactionStatuses) {
		return true
	}

	return false
}

// SetEnvelopeTransactionStatuses gets a reference to the given []EnvelopeTransactionStatus and assigns it to the EnvelopeTransactionStatuses field.
func (o *EnvelopesInformation) SetEnvelopeTransactionStatuses(v []EnvelopeTransactionStatus) {
	o.EnvelopeTransactionStatuses = v
}

// GetFolders returns the Folders field value if set, zero value otherwise.
func (o *EnvelopesInformation) GetFolders() []Folder {
	if o == nil || IsNil(o.Folders) {
		var ret []Folder
		return ret
	}
	return o.Folders
}

// GetFoldersOk returns a tuple with the Folders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvelopesInformation) GetFoldersOk() ([]Folder, bool) {
	if o == nil || IsNil(o.Folders) {
		return nil, false
	}
	return o.Folders, true
}

// HasFolders returns a boolean if a field has been set.
func (o *EnvelopesInformation) HasFolders() bool {
	if o != nil && !IsNil(o.Folders) {
		return true
	}

	return false
}

// SetFolders gets a reference to the given []Folder and assigns it to the Folders field.
func (o *EnvelopesInformation) SetFolders(v []Folder) {
	o.Folders = v
}

// GetLastQueriedDateTime returns the LastQueriedDateTime field value if set, zero value otherwise.
func (o *EnvelopesInformation) GetLastQueriedDateTime() string {
	if o == nil || IsNil(o.LastQueriedDateTime) {
		var ret string
		return ret
	}
	return *o.LastQueriedDateTime
}

// GetLastQueriedDateTimeOk returns a tuple with the LastQueriedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvelopesInformation) GetLastQueriedDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastQueriedDateTime) {
		return nil, false
	}
	return o.LastQueriedDateTime, true
}

// HasLastQueriedDateTime returns a boolean if a field has been set.
func (o *EnvelopesInformation) HasLastQueriedDateTime() bool {
	if o != nil && !IsNil(o.LastQueriedDateTime) {
		return true
	}

	return false
}

// SetLastQueriedDateTime gets a reference to the given string and assigns it to the LastQueriedDateTime field.
func (o *EnvelopesInformation) SetLastQueriedDateTime(v string) {
	o.LastQueriedDateTime = &v
}

// GetNextUri returns the NextUri field value if set, zero value otherwise.
func (o *EnvelopesInformation) GetNextUri() string {
	if o == nil || IsNil(o.NextUri) {
		var ret string
		return ret
	}
	return *o.NextUri
}

// GetNextUriOk returns a tuple with the NextUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvelopesInformation) GetNextUriOk() (*string, bool) {
	if o == nil || IsNil(o.NextUri) {
		return nil, false
	}
	return o.NextUri, true
}

// HasNextUri returns a boolean if a field has been set.
func (o *EnvelopesInformation) HasNextUri() bool {
	if o != nil && !IsNil(o.NextUri) {
		return true
	}

	return false
}

// SetNextUri gets a reference to the given string and assigns it to the NextUri field.
func (o *EnvelopesInformation) SetNextUri(v string) {
	o.NextUri = &v
}

// GetPreviousUri returns the PreviousUri field value if set, zero value otherwise.
func (o *EnvelopesInformation) GetPreviousUri() string {
	if o == nil || IsNil(o.PreviousUri) {
		var ret string
		return ret
	}
	return *o.PreviousUri
}

// GetPreviousUriOk returns a tuple with the PreviousUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvelopesInformation) GetPreviousUriOk() (*string, bool) {
	if o == nil || IsNil(o.PreviousUri) {
		return nil, false
	}
	return o.PreviousUri, true
}

// HasPreviousUri returns a boolean if a field has been set.
func (o *EnvelopesInformation) HasPreviousUri() bool {
	if o != nil && !IsNil(o.PreviousUri) {
		return true
	}

	return false
}

// SetPreviousUri gets a reference to the given string and assigns it to the PreviousUri field.
func (o *EnvelopesInformation) SetPreviousUri(v string) {
	o.PreviousUri = &v
}

// GetResultSetSize returns the ResultSetSize field value if set, zero value otherwise.
func (o *EnvelopesInformation) GetResultSetSize() string {
	if o == nil || IsNil(o.ResultSetSize) {
		var ret string
		return ret
	}
	return *o.ResultSetSize
}

// GetResultSetSizeOk returns a tuple with the ResultSetSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvelopesInformation) GetResultSetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.ResultSetSize) {
		return nil, false
	}
	return o.ResultSetSize, true
}

// HasResultSetSize returns a boolean if a field has been set.
func (o *EnvelopesInformation) HasResultSetSize() bool {
	if o != nil && !IsNil(o.ResultSetSize) {
		return true
	}

	return false
}

// SetResultSetSize gets a reference to the given string and assigns it to the ResultSetSize field.
func (o *EnvelopesInformation) SetResultSetSize(v string) {
	o.ResultSetSize = &v
}

// GetStartPosition returns the StartPosition field value if set, zero value otherwise.
func (o *EnvelopesInformation) GetStartPosition() string {
	if o == nil || IsNil(o.StartPosition) {
		var ret string
		return ret
	}
	return *o.StartPosition
}

// GetStartPositionOk returns a tuple with the StartPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvelopesInformation) GetStartPositionOk() (*string, bool) {
	if o == nil || IsNil(o.StartPosition) {
		return nil, false
	}
	return o.StartPosition, true
}

// HasStartPosition returns a boolean if a field has been set.
func (o *EnvelopesInformation) HasStartPosition() bool {
	if o != nil && !IsNil(o.StartPosition) {
		return true
	}

	return false
}

// SetStartPosition gets a reference to the given string and assigns it to the StartPosition field.
func (o *EnvelopesInformation) SetStartPosition(v string) {
	o.StartPosition = &v
}

// GetTotalSetSize returns the TotalSetSize field value if set, zero value otherwise.
func (o *EnvelopesInformation) GetTotalSetSize() string {
	if o == nil || IsNil(o.TotalSetSize) {
		var ret string
		return ret
	}
	return *o.TotalSetSize
}

// GetTotalSetSizeOk returns a tuple with the TotalSetSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvelopesInformation) GetTotalSetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.TotalSetSize) {
		return nil, false
	}
	return o.TotalSetSize, true
}

// HasTotalSetSize returns a boolean if a field has been set.
func (o *EnvelopesInformation) HasTotalSetSize() bool {
	if o != nil && !IsNil(o.TotalSetSize) {
		return true
	}

	return false
}

// SetTotalSetSize gets a reference to the given string and assigns it to the TotalSetSize field.
func (o *EnvelopesInformation) SetTotalSetSize(v string) {
	o.TotalSetSize = &v
}

func (o EnvelopesInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvelopesInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContinuationToken) {
		toSerialize["continuationToken"] = o.ContinuationToken
	}
	if !IsNil(o.EndPosition) {
		toSerialize["endPosition"] = o.EndPosition
	}
	if !IsNil(o.Envelopes) {
		toSerialize["envelopes"] = o.Envelopes
	}
	if !IsNil(o.EnvelopeSearchSource) {
		toSerialize["envelopeSearchSource"] = o.EnvelopeSearchSource
	}
	if !IsNil(o.EnvelopeTransactionStatuses) {
		toSerialize["envelopeTransactionStatuses"] = o.EnvelopeTransactionStatuses
	}
	if !IsNil(o.Folders) {
		toSerialize["folders"] = o.Folders
	}
	if !IsNil(o.LastQueriedDateTime) {
		toSerialize["lastQueriedDateTime"] = o.LastQueriedDateTime
	}
	if !IsNil(o.NextUri) {
		toSerialize["nextUri"] = o.NextUri
	}
	if !IsNil(o.PreviousUri) {
		toSerialize["previousUri"] = o.PreviousUri
	}
	if !IsNil(o.ResultSetSize) {
		toSerialize["resultSetSize"] = o.ResultSetSize
	}
	if !IsNil(o.StartPosition) {
		toSerialize["startPosition"] = o.StartPosition
	}
	if !IsNil(o.TotalSetSize) {
		toSerialize["totalSetSize"] = o.TotalSetSize
	}
	return toSerialize, nil
}

type NullableEnvelopesInformation struct {
	value *EnvelopesInformation
	isSet bool
}

func (v NullableEnvelopesInformation) Get() *EnvelopesInformation {
	return v.value
}

func (v *NullableEnvelopesInformation) Set(val *EnvelopesInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvelopesInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvelopesInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvelopesInformation(val *EnvelopesInformation) *NullableEnvelopesInformation {
	return &NullableEnvelopesInformation{value: val, isSet: true}
}

func (v NullableEnvelopesInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvelopesInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


