/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaymentProcessorInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentProcessorInformation{}

// PaymentProcessorInformation 
type PaymentProcessorInformation struct {
	Address *AddressInformation `json:"address,omitempty"`
	// The ID of the billing agreement.
	BillingAgreementId *string `json:"billingAgreementId,omitempty"`
	// The email address associated with the payment processor.
	Email *string `json:"email,omitempty"`
}

// NewPaymentProcessorInformation instantiates a new PaymentProcessorInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentProcessorInformation() *PaymentProcessorInformation {
	this := PaymentProcessorInformation{}
	return &this
}

// NewPaymentProcessorInformationWithDefaults instantiates a new PaymentProcessorInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentProcessorInformationWithDefaults() *PaymentProcessorInformation {
	this := PaymentProcessorInformation{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *PaymentProcessorInformation) GetAddress() AddressInformation {
	if o == nil || IsNil(o.Address) {
		var ret AddressInformation
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentProcessorInformation) GetAddressOk() (*AddressInformation, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *PaymentProcessorInformation) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given AddressInformation and assigns it to the Address field.
func (o *PaymentProcessorInformation) SetAddress(v AddressInformation) {
	o.Address = &v
}

// GetBillingAgreementId returns the BillingAgreementId field value if set, zero value otherwise.
func (o *PaymentProcessorInformation) GetBillingAgreementId() string {
	if o == nil || IsNil(o.BillingAgreementId) {
		var ret string
		return ret
	}
	return *o.BillingAgreementId
}

// GetBillingAgreementIdOk returns a tuple with the BillingAgreementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentProcessorInformation) GetBillingAgreementIdOk() (*string, bool) {
	if o == nil || IsNil(o.BillingAgreementId) {
		return nil, false
	}
	return o.BillingAgreementId, true
}

// HasBillingAgreementId returns a boolean if a field has been set.
func (o *PaymentProcessorInformation) HasBillingAgreementId() bool {
	if o != nil && !IsNil(o.BillingAgreementId) {
		return true
	}

	return false
}

// SetBillingAgreementId gets a reference to the given string and assigns it to the BillingAgreementId field.
func (o *PaymentProcessorInformation) SetBillingAgreementId(v string) {
	o.BillingAgreementId = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *PaymentProcessorInformation) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentProcessorInformation) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PaymentProcessorInformation) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *PaymentProcessorInformation) SetEmail(v string) {
	o.Email = &v
}

func (o PaymentProcessorInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentProcessorInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.BillingAgreementId) {
		toSerialize["billingAgreementId"] = o.BillingAgreementId
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	return toSerialize, nil
}

type NullablePaymentProcessorInformation struct {
	value *PaymentProcessorInformation
	isSet bool
}

func (v NullablePaymentProcessorInformation) Get() *PaymentProcessorInformation {
	return v.value
}

func (v *NullablePaymentProcessorInformation) Set(val *PaymentProcessorInformation) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentProcessorInformation) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentProcessorInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentProcessorInformation(val *PaymentProcessorInformation) *NullablePaymentProcessorInformation {
	return &NullablePaymentProcessorInformation{value: val, isSet: true}
}

func (v NullablePaymentProcessorInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentProcessorInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


