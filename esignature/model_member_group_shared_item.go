/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MemberGroupSharedItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberGroupSharedItem{}

// MemberGroupSharedItem Information about items shared among groups.
type MemberGroupSharedItem struct {
	ErrorDetails *ErrorDetails `json:"errorDetails,omitempty"`
	Group *Group `json:"group,omitempty"`
	// How the item is shared. One of:   - `not_shared`: The item is not shared.  - `shared_to`: The item is shared.
	Shared *string `json:"shared,omitempty"`
}

// NewMemberGroupSharedItem instantiates a new MemberGroupSharedItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberGroupSharedItem() *MemberGroupSharedItem {
	this := MemberGroupSharedItem{}
	return &this
}

// NewMemberGroupSharedItemWithDefaults instantiates a new MemberGroupSharedItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberGroupSharedItemWithDefaults() *MemberGroupSharedItem {
	this := MemberGroupSharedItem{}
	return &this
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *MemberGroupSharedItem) GetErrorDetails() ErrorDetails {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret ErrorDetails
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberGroupSharedItem) GetErrorDetailsOk() (*ErrorDetails, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *MemberGroupSharedItem) HasErrorDetails() bool {
	if o != nil && !IsNil(o.ErrorDetails) {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given ErrorDetails and assigns it to the ErrorDetails field.
func (o *MemberGroupSharedItem) SetErrorDetails(v ErrorDetails) {
	o.ErrorDetails = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *MemberGroupSharedItem) GetGroup() Group {
	if o == nil || IsNil(o.Group) {
		var ret Group
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberGroupSharedItem) GetGroupOk() (*Group, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *MemberGroupSharedItem) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given Group and assigns it to the Group field.
func (o *MemberGroupSharedItem) SetGroup(v Group) {
	o.Group = &v
}

// GetShared returns the Shared field value if set, zero value otherwise.
func (o *MemberGroupSharedItem) GetShared() string {
	if o == nil || IsNil(o.Shared) {
		var ret string
		return ret
	}
	return *o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberGroupSharedItem) GetSharedOk() (*string, bool) {
	if o == nil || IsNil(o.Shared) {
		return nil, false
	}
	return o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *MemberGroupSharedItem) HasShared() bool {
	if o != nil && !IsNil(o.Shared) {
		return true
	}

	return false
}

// SetShared gets a reference to the given string and assigns it to the Shared field.
func (o *MemberGroupSharedItem) SetShared(v string) {
	o.Shared = &v
}

func (o MemberGroupSharedItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberGroupSharedItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorDetails) {
		toSerialize["errorDetails"] = o.ErrorDetails
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.Shared) {
		toSerialize["shared"] = o.Shared
	}
	return toSerialize, nil
}

type NullableMemberGroupSharedItem struct {
	value *MemberGroupSharedItem
	isSet bool
}

func (v NullableMemberGroupSharedItem) Get() *MemberGroupSharedItem {
	return v.value
}

func (v *NullableMemberGroupSharedItem) Set(val *MemberGroupSharedItem) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberGroupSharedItem) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberGroupSharedItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberGroupSharedItem(val *MemberGroupSharedItem) *NullableMemberGroupSharedItem {
	return &NullableMemberGroupSharedItem{value: val, isSet: true}
}

func (v NullableMemberGroupSharedItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberGroupSharedItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


