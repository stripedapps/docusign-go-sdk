/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserAuthorizationsDeleteResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserAuthorizationsDeleteResponse{}

// UserAuthorizationsDeleteResponse 
type UserAuthorizationsDeleteResponse struct {
	// 
	Results []UserAuthorizationIdWithStatus `json:"results,omitempty"`
}

// NewUserAuthorizationsDeleteResponse instantiates a new UserAuthorizationsDeleteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAuthorizationsDeleteResponse() *UserAuthorizationsDeleteResponse {
	this := UserAuthorizationsDeleteResponse{}
	return &this
}

// NewUserAuthorizationsDeleteResponseWithDefaults instantiates a new UserAuthorizationsDeleteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAuthorizationsDeleteResponseWithDefaults() *UserAuthorizationsDeleteResponse {
	this := UserAuthorizationsDeleteResponse{}
	return &this
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *UserAuthorizationsDeleteResponse) GetResults() []UserAuthorizationIdWithStatus {
	if o == nil || IsNil(o.Results) {
		var ret []UserAuthorizationIdWithStatus
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAuthorizationsDeleteResponse) GetResultsOk() ([]UserAuthorizationIdWithStatus, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *UserAuthorizationsDeleteResponse) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []UserAuthorizationIdWithStatus and assigns it to the Results field.
func (o *UserAuthorizationsDeleteResponse) SetResults(v []UserAuthorizationIdWithStatus) {
	o.Results = v
}

func (o UserAuthorizationsDeleteResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserAuthorizationsDeleteResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	return toSerialize, nil
}

type NullableUserAuthorizationsDeleteResponse struct {
	value *UserAuthorizationsDeleteResponse
	isSet bool
}

func (v NullableUserAuthorizationsDeleteResponse) Get() *UserAuthorizationsDeleteResponse {
	return v.value
}

func (v *NullableUserAuthorizationsDeleteResponse) Set(val *UserAuthorizationsDeleteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAuthorizationsDeleteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAuthorizationsDeleteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAuthorizationsDeleteResponse(val *UserAuthorizationsDeleteResponse) *NullableUserAuthorizationsDeleteResponse {
	return &NullableUserAuthorizationsDeleteResponse{value: val, isSet: true}
}

func (v NullableUserAuthorizationsDeleteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAuthorizationsDeleteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


