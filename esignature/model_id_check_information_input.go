/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IdCheckInformationInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdCheckInformationInput{}

// IdCheckInformationInput A complex element that contains input information related to a recipient ID check.
type IdCheckInformationInput struct {
	AddressInformationInput *AddressInformationInput `json:"addressInformationInput,omitempty"`
	DobInformationInput *DobInformationInput `json:"dobInformationInput,omitempty"`
	Ssn4InformationInput *Ssn4InformationInput `json:"ssn4InformationInput,omitempty"`
	Ssn9InformationInput *Ssn9InformationInput `json:"ssn9InformationInput,omitempty"`
}

// NewIdCheckInformationInput instantiates a new IdCheckInformationInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdCheckInformationInput() *IdCheckInformationInput {
	this := IdCheckInformationInput{}
	return &this
}

// NewIdCheckInformationInputWithDefaults instantiates a new IdCheckInformationInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdCheckInformationInputWithDefaults() *IdCheckInformationInput {
	this := IdCheckInformationInput{}
	return &this
}

// GetAddressInformationInput returns the AddressInformationInput field value if set, zero value otherwise.
func (o *IdCheckInformationInput) GetAddressInformationInput() AddressInformationInput {
	if o == nil || IsNil(o.AddressInformationInput) {
		var ret AddressInformationInput
		return ret
	}
	return *o.AddressInformationInput
}

// GetAddressInformationInputOk returns a tuple with the AddressInformationInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdCheckInformationInput) GetAddressInformationInputOk() (*AddressInformationInput, bool) {
	if o == nil || IsNil(o.AddressInformationInput) {
		return nil, false
	}
	return o.AddressInformationInput, true
}

// HasAddressInformationInput returns a boolean if a field has been set.
func (o *IdCheckInformationInput) HasAddressInformationInput() bool {
	if o != nil && !IsNil(o.AddressInformationInput) {
		return true
	}

	return false
}

// SetAddressInformationInput gets a reference to the given AddressInformationInput and assigns it to the AddressInformationInput field.
func (o *IdCheckInformationInput) SetAddressInformationInput(v AddressInformationInput) {
	o.AddressInformationInput = &v
}

// GetDobInformationInput returns the DobInformationInput field value if set, zero value otherwise.
func (o *IdCheckInformationInput) GetDobInformationInput() DobInformationInput {
	if o == nil || IsNil(o.DobInformationInput) {
		var ret DobInformationInput
		return ret
	}
	return *o.DobInformationInput
}

// GetDobInformationInputOk returns a tuple with the DobInformationInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdCheckInformationInput) GetDobInformationInputOk() (*DobInformationInput, bool) {
	if o == nil || IsNil(o.DobInformationInput) {
		return nil, false
	}
	return o.DobInformationInput, true
}

// HasDobInformationInput returns a boolean if a field has been set.
func (o *IdCheckInformationInput) HasDobInformationInput() bool {
	if o != nil && !IsNil(o.DobInformationInput) {
		return true
	}

	return false
}

// SetDobInformationInput gets a reference to the given DobInformationInput and assigns it to the DobInformationInput field.
func (o *IdCheckInformationInput) SetDobInformationInput(v DobInformationInput) {
	o.DobInformationInput = &v
}

// GetSsn4InformationInput returns the Ssn4InformationInput field value if set, zero value otherwise.
func (o *IdCheckInformationInput) GetSsn4InformationInput() Ssn4InformationInput {
	if o == nil || IsNil(o.Ssn4InformationInput) {
		var ret Ssn4InformationInput
		return ret
	}
	return *o.Ssn4InformationInput
}

// GetSsn4InformationInputOk returns a tuple with the Ssn4InformationInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdCheckInformationInput) GetSsn4InformationInputOk() (*Ssn4InformationInput, bool) {
	if o == nil || IsNil(o.Ssn4InformationInput) {
		return nil, false
	}
	return o.Ssn4InformationInput, true
}

// HasSsn4InformationInput returns a boolean if a field has been set.
func (o *IdCheckInformationInput) HasSsn4InformationInput() bool {
	if o != nil && !IsNil(o.Ssn4InformationInput) {
		return true
	}

	return false
}

// SetSsn4InformationInput gets a reference to the given Ssn4InformationInput and assigns it to the Ssn4InformationInput field.
func (o *IdCheckInformationInput) SetSsn4InformationInput(v Ssn4InformationInput) {
	o.Ssn4InformationInput = &v
}

// GetSsn9InformationInput returns the Ssn9InformationInput field value if set, zero value otherwise.
func (o *IdCheckInformationInput) GetSsn9InformationInput() Ssn9InformationInput {
	if o == nil || IsNil(o.Ssn9InformationInput) {
		var ret Ssn9InformationInput
		return ret
	}
	return *o.Ssn9InformationInput
}

// GetSsn9InformationInputOk returns a tuple with the Ssn9InformationInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdCheckInformationInput) GetSsn9InformationInputOk() (*Ssn9InformationInput, bool) {
	if o == nil || IsNil(o.Ssn9InformationInput) {
		return nil, false
	}
	return o.Ssn9InformationInput, true
}

// HasSsn9InformationInput returns a boolean if a field has been set.
func (o *IdCheckInformationInput) HasSsn9InformationInput() bool {
	if o != nil && !IsNil(o.Ssn9InformationInput) {
		return true
	}

	return false
}

// SetSsn9InformationInput gets a reference to the given Ssn9InformationInput and assigns it to the Ssn9InformationInput field.
func (o *IdCheckInformationInput) SetSsn9InformationInput(v Ssn9InformationInput) {
	o.Ssn9InformationInput = &v
}

func (o IdCheckInformationInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdCheckInformationInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddressInformationInput) {
		toSerialize["addressInformationInput"] = o.AddressInformationInput
	}
	if !IsNil(o.DobInformationInput) {
		toSerialize["dobInformationInput"] = o.DobInformationInput
	}
	if !IsNil(o.Ssn4InformationInput) {
		toSerialize["ssn4InformationInput"] = o.Ssn4InformationInput
	}
	if !IsNil(o.Ssn9InformationInput) {
		toSerialize["ssn9InformationInput"] = o.Ssn9InformationInput
	}
	return toSerialize, nil
}

type NullableIdCheckInformationInput struct {
	value *IdCheckInformationInput
	isSet bool
}

func (v NullableIdCheckInformationInput) Get() *IdCheckInformationInput {
	return v.value
}

func (v *NullableIdCheckInformationInput) Set(val *IdCheckInformationInput) {
	v.value = val
	v.isSet = true
}

func (v NullableIdCheckInformationInput) IsSet() bool {
	return v.isSet
}

func (v *NullableIdCheckInformationInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdCheckInformationInput(val *IdCheckInformationInput) *NullableIdCheckInformationInput {
	return &NullableIdCheckInformationInput{value: val, isSet: true}
}

func (v NullableIdCheckInformationInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdCheckInformationInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


