/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DowngradePlanUpdateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DowngradePlanUpdateResponse{}

// DowngradePlanUpdateResponse 
type DowngradePlanUpdateResponse struct {
	// The type of payment method used for the account. Valid values are:  - `credit_card` - 
	AccountPaymentMethod *string `json:"accountPaymentMethod,omitempty"`
	// 
	DiscountApplied *string `json:"discountApplied,omitempty"`
	// 
	DowngradeEffectiveDate *string `json:"downgradeEffectiveDate,omitempty"`
	// 
	DowngradePaymentCycle *string `json:"downgradePaymentCycle,omitempty"`
	// 
	DowngradePlanId *string `json:"downgradePlanId,omitempty"`
	// 
	DowngradePlanName *string `json:"downgradePlanName,omitempty"`
	// 
	DowngradeRequestStatus *string `json:"downgradeRequestStatus,omitempty"`
	// 
	Message *string `json:"message,omitempty"`
	// The Product ID from the AppStore.
	ProductId *string `json:"productId,omitempty"`
	// 
	PromoCode *string `json:"promoCode,omitempty"`
	// 
	SaleDiscount *string `json:"saleDiscount,omitempty"`
	// Reserved for DocuSign.
	SaleDiscountPeriods *string `json:"saleDiscountPeriods,omitempty"`
	// 
	SaleDiscountType *string `json:"saleDiscountType,omitempty"`
}

// NewDowngradePlanUpdateResponse instantiates a new DowngradePlanUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDowngradePlanUpdateResponse() *DowngradePlanUpdateResponse {
	this := DowngradePlanUpdateResponse{}
	return &this
}

// NewDowngradePlanUpdateResponseWithDefaults instantiates a new DowngradePlanUpdateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDowngradePlanUpdateResponseWithDefaults() *DowngradePlanUpdateResponse {
	this := DowngradePlanUpdateResponse{}
	return &this
}

// GetAccountPaymentMethod returns the AccountPaymentMethod field value if set, zero value otherwise.
func (o *DowngradePlanUpdateResponse) GetAccountPaymentMethod() string {
	if o == nil || IsNil(o.AccountPaymentMethod) {
		var ret string
		return ret
	}
	return *o.AccountPaymentMethod
}

// GetAccountPaymentMethodOk returns a tuple with the AccountPaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DowngradePlanUpdateResponse) GetAccountPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.AccountPaymentMethod) {
		return nil, false
	}
	return o.AccountPaymentMethod, true
}

// HasAccountPaymentMethod returns a boolean if a field has been set.
func (o *DowngradePlanUpdateResponse) HasAccountPaymentMethod() bool {
	if o != nil && !IsNil(o.AccountPaymentMethod) {
		return true
	}

	return false
}

// SetAccountPaymentMethod gets a reference to the given string and assigns it to the AccountPaymentMethod field.
func (o *DowngradePlanUpdateResponse) SetAccountPaymentMethod(v string) {
	o.AccountPaymentMethod = &v
}

// GetDiscountApplied returns the DiscountApplied field value if set, zero value otherwise.
func (o *DowngradePlanUpdateResponse) GetDiscountApplied() string {
	if o == nil || IsNil(o.DiscountApplied) {
		var ret string
		return ret
	}
	return *o.DiscountApplied
}

// GetDiscountAppliedOk returns a tuple with the DiscountApplied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DowngradePlanUpdateResponse) GetDiscountAppliedOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountApplied) {
		return nil, false
	}
	return o.DiscountApplied, true
}

// HasDiscountApplied returns a boolean if a field has been set.
func (o *DowngradePlanUpdateResponse) HasDiscountApplied() bool {
	if o != nil && !IsNil(o.DiscountApplied) {
		return true
	}

	return false
}

// SetDiscountApplied gets a reference to the given string and assigns it to the DiscountApplied field.
func (o *DowngradePlanUpdateResponse) SetDiscountApplied(v string) {
	o.DiscountApplied = &v
}

// GetDowngradeEffectiveDate returns the DowngradeEffectiveDate field value if set, zero value otherwise.
func (o *DowngradePlanUpdateResponse) GetDowngradeEffectiveDate() string {
	if o == nil || IsNil(o.DowngradeEffectiveDate) {
		var ret string
		return ret
	}
	return *o.DowngradeEffectiveDate
}

// GetDowngradeEffectiveDateOk returns a tuple with the DowngradeEffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DowngradePlanUpdateResponse) GetDowngradeEffectiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.DowngradeEffectiveDate) {
		return nil, false
	}
	return o.DowngradeEffectiveDate, true
}

// HasDowngradeEffectiveDate returns a boolean if a field has been set.
func (o *DowngradePlanUpdateResponse) HasDowngradeEffectiveDate() bool {
	if o != nil && !IsNil(o.DowngradeEffectiveDate) {
		return true
	}

	return false
}

// SetDowngradeEffectiveDate gets a reference to the given string and assigns it to the DowngradeEffectiveDate field.
func (o *DowngradePlanUpdateResponse) SetDowngradeEffectiveDate(v string) {
	o.DowngradeEffectiveDate = &v
}

// GetDowngradePaymentCycle returns the DowngradePaymentCycle field value if set, zero value otherwise.
func (o *DowngradePlanUpdateResponse) GetDowngradePaymentCycle() string {
	if o == nil || IsNil(o.DowngradePaymentCycle) {
		var ret string
		return ret
	}
	return *o.DowngradePaymentCycle
}

// GetDowngradePaymentCycleOk returns a tuple with the DowngradePaymentCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DowngradePlanUpdateResponse) GetDowngradePaymentCycleOk() (*string, bool) {
	if o == nil || IsNil(o.DowngradePaymentCycle) {
		return nil, false
	}
	return o.DowngradePaymentCycle, true
}

// HasDowngradePaymentCycle returns a boolean if a field has been set.
func (o *DowngradePlanUpdateResponse) HasDowngradePaymentCycle() bool {
	if o != nil && !IsNil(o.DowngradePaymentCycle) {
		return true
	}

	return false
}

// SetDowngradePaymentCycle gets a reference to the given string and assigns it to the DowngradePaymentCycle field.
func (o *DowngradePlanUpdateResponse) SetDowngradePaymentCycle(v string) {
	o.DowngradePaymentCycle = &v
}

// GetDowngradePlanId returns the DowngradePlanId field value if set, zero value otherwise.
func (o *DowngradePlanUpdateResponse) GetDowngradePlanId() string {
	if o == nil || IsNil(o.DowngradePlanId) {
		var ret string
		return ret
	}
	return *o.DowngradePlanId
}

// GetDowngradePlanIdOk returns a tuple with the DowngradePlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DowngradePlanUpdateResponse) GetDowngradePlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.DowngradePlanId) {
		return nil, false
	}
	return o.DowngradePlanId, true
}

// HasDowngradePlanId returns a boolean if a field has been set.
func (o *DowngradePlanUpdateResponse) HasDowngradePlanId() bool {
	if o != nil && !IsNil(o.DowngradePlanId) {
		return true
	}

	return false
}

// SetDowngradePlanId gets a reference to the given string and assigns it to the DowngradePlanId field.
func (o *DowngradePlanUpdateResponse) SetDowngradePlanId(v string) {
	o.DowngradePlanId = &v
}

// GetDowngradePlanName returns the DowngradePlanName field value if set, zero value otherwise.
func (o *DowngradePlanUpdateResponse) GetDowngradePlanName() string {
	if o == nil || IsNil(o.DowngradePlanName) {
		var ret string
		return ret
	}
	return *o.DowngradePlanName
}

// GetDowngradePlanNameOk returns a tuple with the DowngradePlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DowngradePlanUpdateResponse) GetDowngradePlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.DowngradePlanName) {
		return nil, false
	}
	return o.DowngradePlanName, true
}

// HasDowngradePlanName returns a boolean if a field has been set.
func (o *DowngradePlanUpdateResponse) HasDowngradePlanName() bool {
	if o != nil && !IsNil(o.DowngradePlanName) {
		return true
	}

	return false
}

// SetDowngradePlanName gets a reference to the given string and assigns it to the DowngradePlanName field.
func (o *DowngradePlanUpdateResponse) SetDowngradePlanName(v string) {
	o.DowngradePlanName = &v
}

// GetDowngradeRequestStatus returns the DowngradeRequestStatus field value if set, zero value otherwise.
func (o *DowngradePlanUpdateResponse) GetDowngradeRequestStatus() string {
	if o == nil || IsNil(o.DowngradeRequestStatus) {
		var ret string
		return ret
	}
	return *o.DowngradeRequestStatus
}

// GetDowngradeRequestStatusOk returns a tuple with the DowngradeRequestStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DowngradePlanUpdateResponse) GetDowngradeRequestStatusOk() (*string, bool) {
	if o == nil || IsNil(o.DowngradeRequestStatus) {
		return nil, false
	}
	return o.DowngradeRequestStatus, true
}

// HasDowngradeRequestStatus returns a boolean if a field has been set.
func (o *DowngradePlanUpdateResponse) HasDowngradeRequestStatus() bool {
	if o != nil && !IsNil(o.DowngradeRequestStatus) {
		return true
	}

	return false
}

// SetDowngradeRequestStatus gets a reference to the given string and assigns it to the DowngradeRequestStatus field.
func (o *DowngradePlanUpdateResponse) SetDowngradeRequestStatus(v string) {
	o.DowngradeRequestStatus = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *DowngradePlanUpdateResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DowngradePlanUpdateResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *DowngradePlanUpdateResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *DowngradePlanUpdateResponse) SetMessage(v string) {
	o.Message = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *DowngradePlanUpdateResponse) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DowngradePlanUpdateResponse) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *DowngradePlanUpdateResponse) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *DowngradePlanUpdateResponse) SetProductId(v string) {
	o.ProductId = &v
}

// GetPromoCode returns the PromoCode field value if set, zero value otherwise.
func (o *DowngradePlanUpdateResponse) GetPromoCode() string {
	if o == nil || IsNil(o.PromoCode) {
		var ret string
		return ret
	}
	return *o.PromoCode
}

// GetPromoCodeOk returns a tuple with the PromoCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DowngradePlanUpdateResponse) GetPromoCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PromoCode) {
		return nil, false
	}
	return o.PromoCode, true
}

// HasPromoCode returns a boolean if a field has been set.
func (o *DowngradePlanUpdateResponse) HasPromoCode() bool {
	if o != nil && !IsNil(o.PromoCode) {
		return true
	}

	return false
}

// SetPromoCode gets a reference to the given string and assigns it to the PromoCode field.
func (o *DowngradePlanUpdateResponse) SetPromoCode(v string) {
	o.PromoCode = &v
}

// GetSaleDiscount returns the SaleDiscount field value if set, zero value otherwise.
func (o *DowngradePlanUpdateResponse) GetSaleDiscount() string {
	if o == nil || IsNil(o.SaleDiscount) {
		var ret string
		return ret
	}
	return *o.SaleDiscount
}

// GetSaleDiscountOk returns a tuple with the SaleDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DowngradePlanUpdateResponse) GetSaleDiscountOk() (*string, bool) {
	if o == nil || IsNil(o.SaleDiscount) {
		return nil, false
	}
	return o.SaleDiscount, true
}

// HasSaleDiscount returns a boolean if a field has been set.
func (o *DowngradePlanUpdateResponse) HasSaleDiscount() bool {
	if o != nil && !IsNil(o.SaleDiscount) {
		return true
	}

	return false
}

// SetSaleDiscount gets a reference to the given string and assigns it to the SaleDiscount field.
func (o *DowngradePlanUpdateResponse) SetSaleDiscount(v string) {
	o.SaleDiscount = &v
}

// GetSaleDiscountPeriods returns the SaleDiscountPeriods field value if set, zero value otherwise.
func (o *DowngradePlanUpdateResponse) GetSaleDiscountPeriods() string {
	if o == nil || IsNil(o.SaleDiscountPeriods) {
		var ret string
		return ret
	}
	return *o.SaleDiscountPeriods
}

// GetSaleDiscountPeriodsOk returns a tuple with the SaleDiscountPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DowngradePlanUpdateResponse) GetSaleDiscountPeriodsOk() (*string, bool) {
	if o == nil || IsNil(o.SaleDiscountPeriods) {
		return nil, false
	}
	return o.SaleDiscountPeriods, true
}

// HasSaleDiscountPeriods returns a boolean if a field has been set.
func (o *DowngradePlanUpdateResponse) HasSaleDiscountPeriods() bool {
	if o != nil && !IsNil(o.SaleDiscountPeriods) {
		return true
	}

	return false
}

// SetSaleDiscountPeriods gets a reference to the given string and assigns it to the SaleDiscountPeriods field.
func (o *DowngradePlanUpdateResponse) SetSaleDiscountPeriods(v string) {
	o.SaleDiscountPeriods = &v
}

// GetSaleDiscountType returns the SaleDiscountType field value if set, zero value otherwise.
func (o *DowngradePlanUpdateResponse) GetSaleDiscountType() string {
	if o == nil || IsNil(o.SaleDiscountType) {
		var ret string
		return ret
	}
	return *o.SaleDiscountType
}

// GetSaleDiscountTypeOk returns a tuple with the SaleDiscountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DowngradePlanUpdateResponse) GetSaleDiscountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SaleDiscountType) {
		return nil, false
	}
	return o.SaleDiscountType, true
}

// HasSaleDiscountType returns a boolean if a field has been set.
func (o *DowngradePlanUpdateResponse) HasSaleDiscountType() bool {
	if o != nil && !IsNil(o.SaleDiscountType) {
		return true
	}

	return false
}

// SetSaleDiscountType gets a reference to the given string and assigns it to the SaleDiscountType field.
func (o *DowngradePlanUpdateResponse) SetSaleDiscountType(v string) {
	o.SaleDiscountType = &v
}

func (o DowngradePlanUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DowngradePlanUpdateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountPaymentMethod) {
		toSerialize["accountPaymentMethod"] = o.AccountPaymentMethod
	}
	if !IsNil(o.DiscountApplied) {
		toSerialize["discountApplied"] = o.DiscountApplied
	}
	if !IsNil(o.DowngradeEffectiveDate) {
		toSerialize["downgradeEffectiveDate"] = o.DowngradeEffectiveDate
	}
	if !IsNil(o.DowngradePaymentCycle) {
		toSerialize["downgradePaymentCycle"] = o.DowngradePaymentCycle
	}
	if !IsNil(o.DowngradePlanId) {
		toSerialize["downgradePlanId"] = o.DowngradePlanId
	}
	if !IsNil(o.DowngradePlanName) {
		toSerialize["downgradePlanName"] = o.DowngradePlanName
	}
	if !IsNil(o.DowngradeRequestStatus) {
		toSerialize["downgradeRequestStatus"] = o.DowngradeRequestStatus
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	if !IsNil(o.PromoCode) {
		toSerialize["promoCode"] = o.PromoCode
	}
	if !IsNil(o.SaleDiscount) {
		toSerialize["saleDiscount"] = o.SaleDiscount
	}
	if !IsNil(o.SaleDiscountPeriods) {
		toSerialize["saleDiscountPeriods"] = o.SaleDiscountPeriods
	}
	if !IsNil(o.SaleDiscountType) {
		toSerialize["saleDiscountType"] = o.SaleDiscountType
	}
	return toSerialize, nil
}

type NullableDowngradePlanUpdateResponse struct {
	value *DowngradePlanUpdateResponse
	isSet bool
}

func (v NullableDowngradePlanUpdateResponse) Get() *DowngradePlanUpdateResponse {
	return v.value
}

func (v *NullableDowngradePlanUpdateResponse) Set(val *DowngradePlanUpdateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDowngradePlanUpdateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDowngradePlanUpdateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDowngradePlanUpdateResponse(val *DowngradePlanUpdateResponse) *NullableDowngradePlanUpdateResponse {
	return &NullableDowngradePlanUpdateResponse{value: val, isSet: true}
}

func (v NullableDowngradePlanUpdateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDowngradePlanUpdateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


