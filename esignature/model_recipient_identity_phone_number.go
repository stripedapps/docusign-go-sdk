/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RecipientIdentityPhoneNumber type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecipientIdentityPhoneNumber{}

// RecipientIdentityPhoneNumber 
type RecipientIdentityPhoneNumber struct {
	// The numeric country calling code for the phone number. For example, the country calling code for the US and Canada is 1. For the UK, the country calling code is 44.  Do not include the + symbol.
	CountryCode *string `json:"countryCode,omitempty"`
	// 
	CountryCodeLock *string `json:"countryCodeLock,omitempty"`
	CountryCodeMetadata *PropertyMetadata `json:"countryCodeMetadata,omitempty"`
	// The telephone extension, if any.
	Extension *string `json:"extension,omitempty"`
	ExtensionMetadata *PropertyMetadata `json:"extensionMetadata,omitempty"`
	// The telephone number. Use only the digits `0`-`9`. Remove any non-numeric characters.  Do not include the `countryCode`. For US, Canada, and other [North American Numbering Plan](https://en.wikipedia.org/wiki/North_American_Numbering_Plan) countries, do not include a leading `1` or `0`.
	Number *string `json:"number,omitempty"`
	NumberMetadata *PropertyMetadata `json:"numberMetadata,omitempty"`
}

// NewRecipientIdentityPhoneNumber instantiates a new RecipientIdentityPhoneNumber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecipientIdentityPhoneNumber() *RecipientIdentityPhoneNumber {
	this := RecipientIdentityPhoneNumber{}
	return &this
}

// NewRecipientIdentityPhoneNumberWithDefaults instantiates a new RecipientIdentityPhoneNumber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecipientIdentityPhoneNumberWithDefaults() *RecipientIdentityPhoneNumber {
	this := RecipientIdentityPhoneNumber{}
	return &this
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *RecipientIdentityPhoneNumber) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientIdentityPhoneNumber) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *RecipientIdentityPhoneNumber) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *RecipientIdentityPhoneNumber) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCountryCodeLock returns the CountryCodeLock field value if set, zero value otherwise.
func (o *RecipientIdentityPhoneNumber) GetCountryCodeLock() string {
	if o == nil || IsNil(o.CountryCodeLock) {
		var ret string
		return ret
	}
	return *o.CountryCodeLock
}

// GetCountryCodeLockOk returns a tuple with the CountryCodeLock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientIdentityPhoneNumber) GetCountryCodeLockOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCodeLock) {
		return nil, false
	}
	return o.CountryCodeLock, true
}

// HasCountryCodeLock returns a boolean if a field has been set.
func (o *RecipientIdentityPhoneNumber) HasCountryCodeLock() bool {
	if o != nil && !IsNil(o.CountryCodeLock) {
		return true
	}

	return false
}

// SetCountryCodeLock gets a reference to the given string and assigns it to the CountryCodeLock field.
func (o *RecipientIdentityPhoneNumber) SetCountryCodeLock(v string) {
	o.CountryCodeLock = &v
}

// GetCountryCodeMetadata returns the CountryCodeMetadata field value if set, zero value otherwise.
func (o *RecipientIdentityPhoneNumber) GetCountryCodeMetadata() PropertyMetadata {
	if o == nil || IsNil(o.CountryCodeMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.CountryCodeMetadata
}

// GetCountryCodeMetadataOk returns a tuple with the CountryCodeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientIdentityPhoneNumber) GetCountryCodeMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.CountryCodeMetadata) {
		return nil, false
	}
	return o.CountryCodeMetadata, true
}

// HasCountryCodeMetadata returns a boolean if a field has been set.
func (o *RecipientIdentityPhoneNumber) HasCountryCodeMetadata() bool {
	if o != nil && !IsNil(o.CountryCodeMetadata) {
		return true
	}

	return false
}

// SetCountryCodeMetadata gets a reference to the given PropertyMetadata and assigns it to the CountryCodeMetadata field.
func (o *RecipientIdentityPhoneNumber) SetCountryCodeMetadata(v PropertyMetadata) {
	o.CountryCodeMetadata = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *RecipientIdentityPhoneNumber) GetExtension() string {
	if o == nil || IsNil(o.Extension) {
		var ret string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientIdentityPhoneNumber) GetExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.Extension) {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *RecipientIdentityPhoneNumber) HasExtension() bool {
	if o != nil && !IsNil(o.Extension) {
		return true
	}

	return false
}

// SetExtension gets a reference to the given string and assigns it to the Extension field.
func (o *RecipientIdentityPhoneNumber) SetExtension(v string) {
	o.Extension = &v
}

// GetExtensionMetadata returns the ExtensionMetadata field value if set, zero value otherwise.
func (o *RecipientIdentityPhoneNumber) GetExtensionMetadata() PropertyMetadata {
	if o == nil || IsNil(o.ExtensionMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.ExtensionMetadata
}

// GetExtensionMetadataOk returns a tuple with the ExtensionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientIdentityPhoneNumber) GetExtensionMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.ExtensionMetadata) {
		return nil, false
	}
	return o.ExtensionMetadata, true
}

// HasExtensionMetadata returns a boolean if a field has been set.
func (o *RecipientIdentityPhoneNumber) HasExtensionMetadata() bool {
	if o != nil && !IsNil(o.ExtensionMetadata) {
		return true
	}

	return false
}

// SetExtensionMetadata gets a reference to the given PropertyMetadata and assigns it to the ExtensionMetadata field.
func (o *RecipientIdentityPhoneNumber) SetExtensionMetadata(v PropertyMetadata) {
	o.ExtensionMetadata = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *RecipientIdentityPhoneNumber) GetNumber() string {
	if o == nil || IsNil(o.Number) {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientIdentityPhoneNumber) GetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *RecipientIdentityPhoneNumber) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *RecipientIdentityPhoneNumber) SetNumber(v string) {
	o.Number = &v
}

// GetNumberMetadata returns the NumberMetadata field value if set, zero value otherwise.
func (o *RecipientIdentityPhoneNumber) GetNumberMetadata() PropertyMetadata {
	if o == nil || IsNil(o.NumberMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.NumberMetadata
}

// GetNumberMetadataOk returns a tuple with the NumberMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientIdentityPhoneNumber) GetNumberMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.NumberMetadata) {
		return nil, false
	}
	return o.NumberMetadata, true
}

// HasNumberMetadata returns a boolean if a field has been set.
func (o *RecipientIdentityPhoneNumber) HasNumberMetadata() bool {
	if o != nil && !IsNil(o.NumberMetadata) {
		return true
	}

	return false
}

// SetNumberMetadata gets a reference to the given PropertyMetadata and assigns it to the NumberMetadata field.
func (o *RecipientIdentityPhoneNumber) SetNumberMetadata(v PropertyMetadata) {
	o.NumberMetadata = &v
}

func (o RecipientIdentityPhoneNumber) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecipientIdentityPhoneNumber) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CountryCode) {
		toSerialize["countryCode"] = o.CountryCode
	}
	if !IsNil(o.CountryCodeLock) {
		toSerialize["countryCodeLock"] = o.CountryCodeLock
	}
	if !IsNil(o.CountryCodeMetadata) {
		toSerialize["countryCodeMetadata"] = o.CountryCodeMetadata
	}
	if !IsNil(o.Extension) {
		toSerialize["extension"] = o.Extension
	}
	if !IsNil(o.ExtensionMetadata) {
		toSerialize["extensionMetadata"] = o.ExtensionMetadata
	}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.NumberMetadata) {
		toSerialize["numberMetadata"] = o.NumberMetadata
	}
	return toSerialize, nil
}

type NullableRecipientIdentityPhoneNumber struct {
	value *RecipientIdentityPhoneNumber
	isSet bool
}

func (v NullableRecipientIdentityPhoneNumber) Get() *RecipientIdentityPhoneNumber {
	return v.value
}

func (v *NullableRecipientIdentityPhoneNumber) Set(val *RecipientIdentityPhoneNumber) {
	v.value = val
	v.isSet = true
}

func (v NullableRecipientIdentityPhoneNumber) IsSet() bool {
	return v.isSet
}

func (v *NullableRecipientIdentityPhoneNumber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecipientIdentityPhoneNumber(val *RecipientIdentityPhoneNumber) *NullableRecipientIdentityPhoneNumber {
	return &NullableRecipientIdentityPhoneNumber{value: val, isSet: true}
}

func (v NullableRecipientIdentityPhoneNumber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecipientIdentityPhoneNumber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


