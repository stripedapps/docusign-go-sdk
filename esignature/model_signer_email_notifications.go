/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SignerEmailNotifications type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignerEmailNotifications{}

// SignerEmailNotifications An array of email notifications that specifies the email the user receives when they are a recipient. When the specific email notification is set to true, the user receives those types of email notifications from DocuSign. The user inherits the default account email notification settings when the user is created. 
type SignerEmailNotifications struct {
	// When **true,** the user receives agent notification emails.
	AgentNotification *string `json:"agentNotification,omitempty"`
	// When **true,** the user receives notifications of carbon copy deliveries.
	CarbonCopyNotification *string `json:"carbonCopyNotification,omitempty"`
	// When **true,** the user receives notifications of certified deliveries.
	CertifiedDeliveryNotification *string `json:"certifiedDeliveryNotification,omitempty"`
	// When **true,** the user receives only comments that mention their own user name.
	CommentsOnlyPrivateAndMention *string `json:"commentsOnlyPrivateAndMention,omitempty"`
	// When **true,** the user receives all comments.
	CommentsReceiveAll *string `json:"commentsReceiveAll,omitempty"`
	// When **true,** the user receives notification that document markup has been activated.
	DocumentMarkupActivation *string `json:"documentMarkupActivation,omitempty"`
	// When **true,** the user receives notification that the envelope has been activated.
	EnvelopeActivation *string `json:"envelopeActivation,omitempty"`
	// When **true,** the user receives an email notification when the envelope has been completed.
	EnvelopeComplete *string `json:"envelopeComplete,omitempty"`
	// When **true,** the user receives notification that the envelope has been corrected.
	EnvelopeCorrected *string `json:"envelopeCorrected,omitempty"`
	// When **true,** the user receives notification that the envelope has been declined.
	EnvelopeDeclined *string `json:"envelopeDeclined,omitempty"`
	// When **true,** the user receives notification that the envelope has been voided.
	EnvelopeVoided *string `json:"envelopeVoided,omitempty"`
	// Reserved for DocuSign.
	FaxReceived *string `json:"faxReceived,omitempty"`
	// When **true,** the user receives an email notification if offline signing failed.
	OfflineSigningFailed *string `json:"offlineSigningFailed,omitempty"`
	// When **true,** the user receives an email notification when a document purge occurs.
	PurgeDocuments *string `json:"purgeDocuments,omitempty"`
	// When **true,** the user receives notification that the envelope has been reassigned.
	ReassignedSigner *string `json:"reassignedSigner,omitempty"`
	// When **true,** the user receives notification that he or she is a member of the signing group.
	WhenSigningGroupMember *string `json:"whenSigningGroupMember,omitempty"`
}

// NewSignerEmailNotifications instantiates a new SignerEmailNotifications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignerEmailNotifications() *SignerEmailNotifications {
	this := SignerEmailNotifications{}
	return &this
}

// NewSignerEmailNotificationsWithDefaults instantiates a new SignerEmailNotifications object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignerEmailNotificationsWithDefaults() *SignerEmailNotifications {
	this := SignerEmailNotifications{}
	return &this
}

// GetAgentNotification returns the AgentNotification field value if set, zero value otherwise.
func (o *SignerEmailNotifications) GetAgentNotification() string {
	if o == nil || IsNil(o.AgentNotification) {
		var ret string
		return ret
	}
	return *o.AgentNotification
}

// GetAgentNotificationOk returns a tuple with the AgentNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerEmailNotifications) GetAgentNotificationOk() (*string, bool) {
	if o == nil || IsNil(o.AgentNotification) {
		return nil, false
	}
	return o.AgentNotification, true
}

// HasAgentNotification returns a boolean if a field has been set.
func (o *SignerEmailNotifications) HasAgentNotification() bool {
	if o != nil && !IsNil(o.AgentNotification) {
		return true
	}

	return false
}

// SetAgentNotification gets a reference to the given string and assigns it to the AgentNotification field.
func (o *SignerEmailNotifications) SetAgentNotification(v string) {
	o.AgentNotification = &v
}

// GetCarbonCopyNotification returns the CarbonCopyNotification field value if set, zero value otherwise.
func (o *SignerEmailNotifications) GetCarbonCopyNotification() string {
	if o == nil || IsNil(o.CarbonCopyNotification) {
		var ret string
		return ret
	}
	return *o.CarbonCopyNotification
}

// GetCarbonCopyNotificationOk returns a tuple with the CarbonCopyNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerEmailNotifications) GetCarbonCopyNotificationOk() (*string, bool) {
	if o == nil || IsNil(o.CarbonCopyNotification) {
		return nil, false
	}
	return o.CarbonCopyNotification, true
}

// HasCarbonCopyNotification returns a boolean if a field has been set.
func (o *SignerEmailNotifications) HasCarbonCopyNotification() bool {
	if o != nil && !IsNil(o.CarbonCopyNotification) {
		return true
	}

	return false
}

// SetCarbonCopyNotification gets a reference to the given string and assigns it to the CarbonCopyNotification field.
func (o *SignerEmailNotifications) SetCarbonCopyNotification(v string) {
	o.CarbonCopyNotification = &v
}

// GetCertifiedDeliveryNotification returns the CertifiedDeliveryNotification field value if set, zero value otherwise.
func (o *SignerEmailNotifications) GetCertifiedDeliveryNotification() string {
	if o == nil || IsNil(o.CertifiedDeliveryNotification) {
		var ret string
		return ret
	}
	return *o.CertifiedDeliveryNotification
}

// GetCertifiedDeliveryNotificationOk returns a tuple with the CertifiedDeliveryNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerEmailNotifications) GetCertifiedDeliveryNotificationOk() (*string, bool) {
	if o == nil || IsNil(o.CertifiedDeliveryNotification) {
		return nil, false
	}
	return o.CertifiedDeliveryNotification, true
}

// HasCertifiedDeliveryNotification returns a boolean if a field has been set.
func (o *SignerEmailNotifications) HasCertifiedDeliveryNotification() bool {
	if o != nil && !IsNil(o.CertifiedDeliveryNotification) {
		return true
	}

	return false
}

// SetCertifiedDeliveryNotification gets a reference to the given string and assigns it to the CertifiedDeliveryNotification field.
func (o *SignerEmailNotifications) SetCertifiedDeliveryNotification(v string) {
	o.CertifiedDeliveryNotification = &v
}

// GetCommentsOnlyPrivateAndMention returns the CommentsOnlyPrivateAndMention field value if set, zero value otherwise.
func (o *SignerEmailNotifications) GetCommentsOnlyPrivateAndMention() string {
	if o == nil || IsNil(o.CommentsOnlyPrivateAndMention) {
		var ret string
		return ret
	}
	return *o.CommentsOnlyPrivateAndMention
}

// GetCommentsOnlyPrivateAndMentionOk returns a tuple with the CommentsOnlyPrivateAndMention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerEmailNotifications) GetCommentsOnlyPrivateAndMentionOk() (*string, bool) {
	if o == nil || IsNil(o.CommentsOnlyPrivateAndMention) {
		return nil, false
	}
	return o.CommentsOnlyPrivateAndMention, true
}

// HasCommentsOnlyPrivateAndMention returns a boolean if a field has been set.
func (o *SignerEmailNotifications) HasCommentsOnlyPrivateAndMention() bool {
	if o != nil && !IsNil(o.CommentsOnlyPrivateAndMention) {
		return true
	}

	return false
}

// SetCommentsOnlyPrivateAndMention gets a reference to the given string and assigns it to the CommentsOnlyPrivateAndMention field.
func (o *SignerEmailNotifications) SetCommentsOnlyPrivateAndMention(v string) {
	o.CommentsOnlyPrivateAndMention = &v
}

// GetCommentsReceiveAll returns the CommentsReceiveAll field value if set, zero value otherwise.
func (o *SignerEmailNotifications) GetCommentsReceiveAll() string {
	if o == nil || IsNil(o.CommentsReceiveAll) {
		var ret string
		return ret
	}
	return *o.CommentsReceiveAll
}

// GetCommentsReceiveAllOk returns a tuple with the CommentsReceiveAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerEmailNotifications) GetCommentsReceiveAllOk() (*string, bool) {
	if o == nil || IsNil(o.CommentsReceiveAll) {
		return nil, false
	}
	return o.CommentsReceiveAll, true
}

// HasCommentsReceiveAll returns a boolean if a field has been set.
func (o *SignerEmailNotifications) HasCommentsReceiveAll() bool {
	if o != nil && !IsNil(o.CommentsReceiveAll) {
		return true
	}

	return false
}

// SetCommentsReceiveAll gets a reference to the given string and assigns it to the CommentsReceiveAll field.
func (o *SignerEmailNotifications) SetCommentsReceiveAll(v string) {
	o.CommentsReceiveAll = &v
}

// GetDocumentMarkupActivation returns the DocumentMarkupActivation field value if set, zero value otherwise.
func (o *SignerEmailNotifications) GetDocumentMarkupActivation() string {
	if o == nil || IsNil(o.DocumentMarkupActivation) {
		var ret string
		return ret
	}
	return *o.DocumentMarkupActivation
}

// GetDocumentMarkupActivationOk returns a tuple with the DocumentMarkupActivation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerEmailNotifications) GetDocumentMarkupActivationOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentMarkupActivation) {
		return nil, false
	}
	return o.DocumentMarkupActivation, true
}

// HasDocumentMarkupActivation returns a boolean if a field has been set.
func (o *SignerEmailNotifications) HasDocumentMarkupActivation() bool {
	if o != nil && !IsNil(o.DocumentMarkupActivation) {
		return true
	}

	return false
}

// SetDocumentMarkupActivation gets a reference to the given string and assigns it to the DocumentMarkupActivation field.
func (o *SignerEmailNotifications) SetDocumentMarkupActivation(v string) {
	o.DocumentMarkupActivation = &v
}

// GetEnvelopeActivation returns the EnvelopeActivation field value if set, zero value otherwise.
func (o *SignerEmailNotifications) GetEnvelopeActivation() string {
	if o == nil || IsNil(o.EnvelopeActivation) {
		var ret string
		return ret
	}
	return *o.EnvelopeActivation
}

// GetEnvelopeActivationOk returns a tuple with the EnvelopeActivation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerEmailNotifications) GetEnvelopeActivationOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeActivation) {
		return nil, false
	}
	return o.EnvelopeActivation, true
}

// HasEnvelopeActivation returns a boolean if a field has been set.
func (o *SignerEmailNotifications) HasEnvelopeActivation() bool {
	if o != nil && !IsNil(o.EnvelopeActivation) {
		return true
	}

	return false
}

// SetEnvelopeActivation gets a reference to the given string and assigns it to the EnvelopeActivation field.
func (o *SignerEmailNotifications) SetEnvelopeActivation(v string) {
	o.EnvelopeActivation = &v
}

// GetEnvelopeComplete returns the EnvelopeComplete field value if set, zero value otherwise.
func (o *SignerEmailNotifications) GetEnvelopeComplete() string {
	if o == nil || IsNil(o.EnvelopeComplete) {
		var ret string
		return ret
	}
	return *o.EnvelopeComplete
}

// GetEnvelopeCompleteOk returns a tuple with the EnvelopeComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerEmailNotifications) GetEnvelopeCompleteOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeComplete) {
		return nil, false
	}
	return o.EnvelopeComplete, true
}

// HasEnvelopeComplete returns a boolean if a field has been set.
func (o *SignerEmailNotifications) HasEnvelopeComplete() bool {
	if o != nil && !IsNil(o.EnvelopeComplete) {
		return true
	}

	return false
}

// SetEnvelopeComplete gets a reference to the given string and assigns it to the EnvelopeComplete field.
func (o *SignerEmailNotifications) SetEnvelopeComplete(v string) {
	o.EnvelopeComplete = &v
}

// GetEnvelopeCorrected returns the EnvelopeCorrected field value if set, zero value otherwise.
func (o *SignerEmailNotifications) GetEnvelopeCorrected() string {
	if o == nil || IsNil(o.EnvelopeCorrected) {
		var ret string
		return ret
	}
	return *o.EnvelopeCorrected
}

// GetEnvelopeCorrectedOk returns a tuple with the EnvelopeCorrected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerEmailNotifications) GetEnvelopeCorrectedOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeCorrected) {
		return nil, false
	}
	return o.EnvelopeCorrected, true
}

// HasEnvelopeCorrected returns a boolean if a field has been set.
func (o *SignerEmailNotifications) HasEnvelopeCorrected() bool {
	if o != nil && !IsNil(o.EnvelopeCorrected) {
		return true
	}

	return false
}

// SetEnvelopeCorrected gets a reference to the given string and assigns it to the EnvelopeCorrected field.
func (o *SignerEmailNotifications) SetEnvelopeCorrected(v string) {
	o.EnvelopeCorrected = &v
}

// GetEnvelopeDeclined returns the EnvelopeDeclined field value if set, zero value otherwise.
func (o *SignerEmailNotifications) GetEnvelopeDeclined() string {
	if o == nil || IsNil(o.EnvelopeDeclined) {
		var ret string
		return ret
	}
	return *o.EnvelopeDeclined
}

// GetEnvelopeDeclinedOk returns a tuple with the EnvelopeDeclined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerEmailNotifications) GetEnvelopeDeclinedOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeDeclined) {
		return nil, false
	}
	return o.EnvelopeDeclined, true
}

// HasEnvelopeDeclined returns a boolean if a field has been set.
func (o *SignerEmailNotifications) HasEnvelopeDeclined() bool {
	if o != nil && !IsNil(o.EnvelopeDeclined) {
		return true
	}

	return false
}

// SetEnvelopeDeclined gets a reference to the given string and assigns it to the EnvelopeDeclined field.
func (o *SignerEmailNotifications) SetEnvelopeDeclined(v string) {
	o.EnvelopeDeclined = &v
}

// GetEnvelopeVoided returns the EnvelopeVoided field value if set, zero value otherwise.
func (o *SignerEmailNotifications) GetEnvelopeVoided() string {
	if o == nil || IsNil(o.EnvelopeVoided) {
		var ret string
		return ret
	}
	return *o.EnvelopeVoided
}

// GetEnvelopeVoidedOk returns a tuple with the EnvelopeVoided field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerEmailNotifications) GetEnvelopeVoidedOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeVoided) {
		return nil, false
	}
	return o.EnvelopeVoided, true
}

// HasEnvelopeVoided returns a boolean if a field has been set.
func (o *SignerEmailNotifications) HasEnvelopeVoided() bool {
	if o != nil && !IsNil(o.EnvelopeVoided) {
		return true
	}

	return false
}

// SetEnvelopeVoided gets a reference to the given string and assigns it to the EnvelopeVoided field.
func (o *SignerEmailNotifications) SetEnvelopeVoided(v string) {
	o.EnvelopeVoided = &v
}

// GetFaxReceived returns the FaxReceived field value if set, zero value otherwise.
func (o *SignerEmailNotifications) GetFaxReceived() string {
	if o == nil || IsNil(o.FaxReceived) {
		var ret string
		return ret
	}
	return *o.FaxReceived
}

// GetFaxReceivedOk returns a tuple with the FaxReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerEmailNotifications) GetFaxReceivedOk() (*string, bool) {
	if o == nil || IsNil(o.FaxReceived) {
		return nil, false
	}
	return o.FaxReceived, true
}

// HasFaxReceived returns a boolean if a field has been set.
func (o *SignerEmailNotifications) HasFaxReceived() bool {
	if o != nil && !IsNil(o.FaxReceived) {
		return true
	}

	return false
}

// SetFaxReceived gets a reference to the given string and assigns it to the FaxReceived field.
func (o *SignerEmailNotifications) SetFaxReceived(v string) {
	o.FaxReceived = &v
}

// GetOfflineSigningFailed returns the OfflineSigningFailed field value if set, zero value otherwise.
func (o *SignerEmailNotifications) GetOfflineSigningFailed() string {
	if o == nil || IsNil(o.OfflineSigningFailed) {
		var ret string
		return ret
	}
	return *o.OfflineSigningFailed
}

// GetOfflineSigningFailedOk returns a tuple with the OfflineSigningFailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerEmailNotifications) GetOfflineSigningFailedOk() (*string, bool) {
	if o == nil || IsNil(o.OfflineSigningFailed) {
		return nil, false
	}
	return o.OfflineSigningFailed, true
}

// HasOfflineSigningFailed returns a boolean if a field has been set.
func (o *SignerEmailNotifications) HasOfflineSigningFailed() bool {
	if o != nil && !IsNil(o.OfflineSigningFailed) {
		return true
	}

	return false
}

// SetOfflineSigningFailed gets a reference to the given string and assigns it to the OfflineSigningFailed field.
func (o *SignerEmailNotifications) SetOfflineSigningFailed(v string) {
	o.OfflineSigningFailed = &v
}

// GetPurgeDocuments returns the PurgeDocuments field value if set, zero value otherwise.
func (o *SignerEmailNotifications) GetPurgeDocuments() string {
	if o == nil || IsNil(o.PurgeDocuments) {
		var ret string
		return ret
	}
	return *o.PurgeDocuments
}

// GetPurgeDocumentsOk returns a tuple with the PurgeDocuments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerEmailNotifications) GetPurgeDocumentsOk() (*string, bool) {
	if o == nil || IsNil(o.PurgeDocuments) {
		return nil, false
	}
	return o.PurgeDocuments, true
}

// HasPurgeDocuments returns a boolean if a field has been set.
func (o *SignerEmailNotifications) HasPurgeDocuments() bool {
	if o != nil && !IsNil(o.PurgeDocuments) {
		return true
	}

	return false
}

// SetPurgeDocuments gets a reference to the given string and assigns it to the PurgeDocuments field.
func (o *SignerEmailNotifications) SetPurgeDocuments(v string) {
	o.PurgeDocuments = &v
}

// GetReassignedSigner returns the ReassignedSigner field value if set, zero value otherwise.
func (o *SignerEmailNotifications) GetReassignedSigner() string {
	if o == nil || IsNil(o.ReassignedSigner) {
		var ret string
		return ret
	}
	return *o.ReassignedSigner
}

// GetReassignedSignerOk returns a tuple with the ReassignedSigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerEmailNotifications) GetReassignedSignerOk() (*string, bool) {
	if o == nil || IsNil(o.ReassignedSigner) {
		return nil, false
	}
	return o.ReassignedSigner, true
}

// HasReassignedSigner returns a boolean if a field has been set.
func (o *SignerEmailNotifications) HasReassignedSigner() bool {
	if o != nil && !IsNil(o.ReassignedSigner) {
		return true
	}

	return false
}

// SetReassignedSigner gets a reference to the given string and assigns it to the ReassignedSigner field.
func (o *SignerEmailNotifications) SetReassignedSigner(v string) {
	o.ReassignedSigner = &v
}

// GetWhenSigningGroupMember returns the WhenSigningGroupMember field value if set, zero value otherwise.
func (o *SignerEmailNotifications) GetWhenSigningGroupMember() string {
	if o == nil || IsNil(o.WhenSigningGroupMember) {
		var ret string
		return ret
	}
	return *o.WhenSigningGroupMember
}

// GetWhenSigningGroupMemberOk returns a tuple with the WhenSigningGroupMember field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerEmailNotifications) GetWhenSigningGroupMemberOk() (*string, bool) {
	if o == nil || IsNil(o.WhenSigningGroupMember) {
		return nil, false
	}
	return o.WhenSigningGroupMember, true
}

// HasWhenSigningGroupMember returns a boolean if a field has been set.
func (o *SignerEmailNotifications) HasWhenSigningGroupMember() bool {
	if o != nil && !IsNil(o.WhenSigningGroupMember) {
		return true
	}

	return false
}

// SetWhenSigningGroupMember gets a reference to the given string and assigns it to the WhenSigningGroupMember field.
func (o *SignerEmailNotifications) SetWhenSigningGroupMember(v string) {
	o.WhenSigningGroupMember = &v
}

func (o SignerEmailNotifications) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignerEmailNotifications) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AgentNotification) {
		toSerialize["agentNotification"] = o.AgentNotification
	}
	if !IsNil(o.CarbonCopyNotification) {
		toSerialize["carbonCopyNotification"] = o.CarbonCopyNotification
	}
	if !IsNil(o.CertifiedDeliveryNotification) {
		toSerialize["certifiedDeliveryNotification"] = o.CertifiedDeliveryNotification
	}
	if !IsNil(o.CommentsOnlyPrivateAndMention) {
		toSerialize["commentsOnlyPrivateAndMention"] = o.CommentsOnlyPrivateAndMention
	}
	if !IsNil(o.CommentsReceiveAll) {
		toSerialize["commentsReceiveAll"] = o.CommentsReceiveAll
	}
	if !IsNil(o.DocumentMarkupActivation) {
		toSerialize["documentMarkupActivation"] = o.DocumentMarkupActivation
	}
	if !IsNil(o.EnvelopeActivation) {
		toSerialize["envelopeActivation"] = o.EnvelopeActivation
	}
	if !IsNil(o.EnvelopeComplete) {
		toSerialize["envelopeComplete"] = o.EnvelopeComplete
	}
	if !IsNil(o.EnvelopeCorrected) {
		toSerialize["envelopeCorrected"] = o.EnvelopeCorrected
	}
	if !IsNil(o.EnvelopeDeclined) {
		toSerialize["envelopeDeclined"] = o.EnvelopeDeclined
	}
	if !IsNil(o.EnvelopeVoided) {
		toSerialize["envelopeVoided"] = o.EnvelopeVoided
	}
	if !IsNil(o.FaxReceived) {
		toSerialize["faxReceived"] = o.FaxReceived
	}
	if !IsNil(o.OfflineSigningFailed) {
		toSerialize["offlineSigningFailed"] = o.OfflineSigningFailed
	}
	if !IsNil(o.PurgeDocuments) {
		toSerialize["purgeDocuments"] = o.PurgeDocuments
	}
	if !IsNil(o.ReassignedSigner) {
		toSerialize["reassignedSigner"] = o.ReassignedSigner
	}
	if !IsNil(o.WhenSigningGroupMember) {
		toSerialize["whenSigningGroupMember"] = o.WhenSigningGroupMember
	}
	return toSerialize, nil
}

type NullableSignerEmailNotifications struct {
	value *SignerEmailNotifications
	isSet bool
}

func (v NullableSignerEmailNotifications) Get() *SignerEmailNotifications {
	return v.value
}

func (v *NullableSignerEmailNotifications) Set(val *SignerEmailNotifications) {
	v.value = val
	v.isSet = true
}

func (v NullableSignerEmailNotifications) IsSet() bool {
	return v.isSet
}

func (v *NullableSignerEmailNotifications) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignerEmailNotifications(val *SignerEmailNotifications) *NullableSignerEmailNotifications {
	return &NullableSignerEmailNotifications{value: val, isSet: true}
}

func (v NullableSignerEmailNotifications) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignerEmailNotifications) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


