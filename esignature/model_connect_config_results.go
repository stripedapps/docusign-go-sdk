/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConnectConfigResults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectConfigResults{}

// ConnectConfigResults This object contains the results of a ConnectConfigurations::GET method.
type ConnectConfigResults struct {
	// An array of DocuSign Connect configurations.
	Configurations []ConnectCustomConfiguration `json:"configurations,omitempty"`
	// The number of results.
	TotalRecords *string `json:"totalRecords,omitempty"`
}

// NewConnectConfigResults instantiates a new ConnectConfigResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectConfigResults() *ConnectConfigResults {
	this := ConnectConfigResults{}
	return &this
}

// NewConnectConfigResultsWithDefaults instantiates a new ConnectConfigResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectConfigResultsWithDefaults() *ConnectConfigResults {
	this := ConnectConfigResults{}
	return &this
}

// GetConfigurations returns the Configurations field value if set, zero value otherwise.
func (o *ConnectConfigResults) GetConfigurations() []ConnectCustomConfiguration {
	if o == nil || IsNil(o.Configurations) {
		var ret []ConnectCustomConfiguration
		return ret
	}
	return o.Configurations
}

// GetConfigurationsOk returns a tuple with the Configurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectConfigResults) GetConfigurationsOk() ([]ConnectCustomConfiguration, bool) {
	if o == nil || IsNil(o.Configurations) {
		return nil, false
	}
	return o.Configurations, true
}

// HasConfigurations returns a boolean if a field has been set.
func (o *ConnectConfigResults) HasConfigurations() bool {
	if o != nil && !IsNil(o.Configurations) {
		return true
	}

	return false
}

// SetConfigurations gets a reference to the given []ConnectCustomConfiguration and assigns it to the Configurations field.
func (o *ConnectConfigResults) SetConfigurations(v []ConnectCustomConfiguration) {
	o.Configurations = v
}

// GetTotalRecords returns the TotalRecords field value if set, zero value otherwise.
func (o *ConnectConfigResults) GetTotalRecords() string {
	if o == nil || IsNil(o.TotalRecords) {
		var ret string
		return ret
	}
	return *o.TotalRecords
}

// GetTotalRecordsOk returns a tuple with the TotalRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectConfigResults) GetTotalRecordsOk() (*string, bool) {
	if o == nil || IsNil(o.TotalRecords) {
		return nil, false
	}
	return o.TotalRecords, true
}

// HasTotalRecords returns a boolean if a field has been set.
func (o *ConnectConfigResults) HasTotalRecords() bool {
	if o != nil && !IsNil(o.TotalRecords) {
		return true
	}

	return false
}

// SetTotalRecords gets a reference to the given string and assigns it to the TotalRecords field.
func (o *ConnectConfigResults) SetTotalRecords(v string) {
	o.TotalRecords = &v
}

func (o ConnectConfigResults) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectConfigResults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Configurations) {
		toSerialize["configurations"] = o.Configurations
	}
	if !IsNil(o.TotalRecords) {
		toSerialize["totalRecords"] = o.TotalRecords
	}
	return toSerialize, nil
}

type NullableConnectConfigResults struct {
	value *ConnectConfigResults
	isSet bool
}

func (v NullableConnectConfigResults) Get() *ConnectConfigResults {
	return v.value
}

func (v *NullableConnectConfigResults) Set(val *ConnectConfigResults) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectConfigResults) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectConfigResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectConfigResults(val *ConnectConfigResults) *NullableConnectConfigResults {
	return &NullableConnectConfigResults{value: val, isSet: true}
}

func (v NullableConnectConfigResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectConfigResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


