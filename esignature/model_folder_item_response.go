/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FolderItemResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FolderItemResponse{}

// FolderItemResponse Results from a folder item request.
type FolderItemResponse struct {
	// The last index position in the result set. 
	EndPosition *string `json:"endPosition,omitempty"`
	// A list of the envelopes in the specified folder or folders. 
	FolderItems []FolderItemV2 `json:"folderItems,omitempty"`
	// The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. 
	NextUri *string `json:"nextUri,omitempty"`
	// The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. 
	PreviousUri *string `json:"previousUri,omitempty"`
	// The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.
	ResultSetSize *string `json:"resultSetSize,omitempty"`
	// The starting index position of the current result set.
	StartPosition *string `json:"startPosition,omitempty"`
	// The total number of items in the result.
	TotalRows *string `json:"totalRows,omitempty"`
}

// NewFolderItemResponse instantiates a new FolderItemResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFolderItemResponse() *FolderItemResponse {
	this := FolderItemResponse{}
	return &this
}

// NewFolderItemResponseWithDefaults instantiates a new FolderItemResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFolderItemResponseWithDefaults() *FolderItemResponse {
	this := FolderItemResponse{}
	return &this
}

// GetEndPosition returns the EndPosition field value if set, zero value otherwise.
func (o *FolderItemResponse) GetEndPosition() string {
	if o == nil || IsNil(o.EndPosition) {
		var ret string
		return ret
	}
	return *o.EndPosition
}

// GetEndPositionOk returns a tuple with the EndPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolderItemResponse) GetEndPositionOk() (*string, bool) {
	if o == nil || IsNil(o.EndPosition) {
		return nil, false
	}
	return o.EndPosition, true
}

// HasEndPosition returns a boolean if a field has been set.
func (o *FolderItemResponse) HasEndPosition() bool {
	if o != nil && !IsNil(o.EndPosition) {
		return true
	}

	return false
}

// SetEndPosition gets a reference to the given string and assigns it to the EndPosition field.
func (o *FolderItemResponse) SetEndPosition(v string) {
	o.EndPosition = &v
}

// GetFolderItems returns the FolderItems field value if set, zero value otherwise.
func (o *FolderItemResponse) GetFolderItems() []FolderItemV2 {
	if o == nil || IsNil(o.FolderItems) {
		var ret []FolderItemV2
		return ret
	}
	return o.FolderItems
}

// GetFolderItemsOk returns a tuple with the FolderItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolderItemResponse) GetFolderItemsOk() ([]FolderItemV2, bool) {
	if o == nil || IsNil(o.FolderItems) {
		return nil, false
	}
	return o.FolderItems, true
}

// HasFolderItems returns a boolean if a field has been set.
func (o *FolderItemResponse) HasFolderItems() bool {
	if o != nil && !IsNil(o.FolderItems) {
		return true
	}

	return false
}

// SetFolderItems gets a reference to the given []FolderItemV2 and assigns it to the FolderItems field.
func (o *FolderItemResponse) SetFolderItems(v []FolderItemV2) {
	o.FolderItems = v
}

// GetNextUri returns the NextUri field value if set, zero value otherwise.
func (o *FolderItemResponse) GetNextUri() string {
	if o == nil || IsNil(o.NextUri) {
		var ret string
		return ret
	}
	return *o.NextUri
}

// GetNextUriOk returns a tuple with the NextUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolderItemResponse) GetNextUriOk() (*string, bool) {
	if o == nil || IsNil(o.NextUri) {
		return nil, false
	}
	return o.NextUri, true
}

// HasNextUri returns a boolean if a field has been set.
func (o *FolderItemResponse) HasNextUri() bool {
	if o != nil && !IsNil(o.NextUri) {
		return true
	}

	return false
}

// SetNextUri gets a reference to the given string and assigns it to the NextUri field.
func (o *FolderItemResponse) SetNextUri(v string) {
	o.NextUri = &v
}

// GetPreviousUri returns the PreviousUri field value if set, zero value otherwise.
func (o *FolderItemResponse) GetPreviousUri() string {
	if o == nil || IsNil(o.PreviousUri) {
		var ret string
		return ret
	}
	return *o.PreviousUri
}

// GetPreviousUriOk returns a tuple with the PreviousUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolderItemResponse) GetPreviousUriOk() (*string, bool) {
	if o == nil || IsNil(o.PreviousUri) {
		return nil, false
	}
	return o.PreviousUri, true
}

// HasPreviousUri returns a boolean if a field has been set.
func (o *FolderItemResponse) HasPreviousUri() bool {
	if o != nil && !IsNil(o.PreviousUri) {
		return true
	}

	return false
}

// SetPreviousUri gets a reference to the given string and assigns it to the PreviousUri field.
func (o *FolderItemResponse) SetPreviousUri(v string) {
	o.PreviousUri = &v
}

// GetResultSetSize returns the ResultSetSize field value if set, zero value otherwise.
func (o *FolderItemResponse) GetResultSetSize() string {
	if o == nil || IsNil(o.ResultSetSize) {
		var ret string
		return ret
	}
	return *o.ResultSetSize
}

// GetResultSetSizeOk returns a tuple with the ResultSetSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolderItemResponse) GetResultSetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.ResultSetSize) {
		return nil, false
	}
	return o.ResultSetSize, true
}

// HasResultSetSize returns a boolean if a field has been set.
func (o *FolderItemResponse) HasResultSetSize() bool {
	if o != nil && !IsNil(o.ResultSetSize) {
		return true
	}

	return false
}

// SetResultSetSize gets a reference to the given string and assigns it to the ResultSetSize field.
func (o *FolderItemResponse) SetResultSetSize(v string) {
	o.ResultSetSize = &v
}

// GetStartPosition returns the StartPosition field value if set, zero value otherwise.
func (o *FolderItemResponse) GetStartPosition() string {
	if o == nil || IsNil(o.StartPosition) {
		var ret string
		return ret
	}
	return *o.StartPosition
}

// GetStartPositionOk returns a tuple with the StartPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolderItemResponse) GetStartPositionOk() (*string, bool) {
	if o == nil || IsNil(o.StartPosition) {
		return nil, false
	}
	return o.StartPosition, true
}

// HasStartPosition returns a boolean if a field has been set.
func (o *FolderItemResponse) HasStartPosition() bool {
	if o != nil && !IsNil(o.StartPosition) {
		return true
	}

	return false
}

// SetStartPosition gets a reference to the given string and assigns it to the StartPosition field.
func (o *FolderItemResponse) SetStartPosition(v string) {
	o.StartPosition = &v
}

// GetTotalRows returns the TotalRows field value if set, zero value otherwise.
func (o *FolderItemResponse) GetTotalRows() string {
	if o == nil || IsNil(o.TotalRows) {
		var ret string
		return ret
	}
	return *o.TotalRows
}

// GetTotalRowsOk returns a tuple with the TotalRows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolderItemResponse) GetTotalRowsOk() (*string, bool) {
	if o == nil || IsNil(o.TotalRows) {
		return nil, false
	}
	return o.TotalRows, true
}

// HasTotalRows returns a boolean if a field has been set.
func (o *FolderItemResponse) HasTotalRows() bool {
	if o != nil && !IsNil(o.TotalRows) {
		return true
	}

	return false
}

// SetTotalRows gets a reference to the given string and assigns it to the TotalRows field.
func (o *FolderItemResponse) SetTotalRows(v string) {
	o.TotalRows = &v
}

func (o FolderItemResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FolderItemResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndPosition) {
		toSerialize["endPosition"] = o.EndPosition
	}
	if !IsNil(o.FolderItems) {
		toSerialize["folderItems"] = o.FolderItems
	}
	if !IsNil(o.NextUri) {
		toSerialize["nextUri"] = o.NextUri
	}
	if !IsNil(o.PreviousUri) {
		toSerialize["previousUri"] = o.PreviousUri
	}
	if !IsNil(o.ResultSetSize) {
		toSerialize["resultSetSize"] = o.ResultSetSize
	}
	if !IsNil(o.StartPosition) {
		toSerialize["startPosition"] = o.StartPosition
	}
	if !IsNil(o.TotalRows) {
		toSerialize["totalRows"] = o.TotalRows
	}
	return toSerialize, nil
}

type NullableFolderItemResponse struct {
	value *FolderItemResponse
	isSet bool
}

func (v NullableFolderItemResponse) Get() *FolderItemResponse {
	return v.value
}

func (v *NullableFolderItemResponse) Set(val *FolderItemResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFolderItemResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFolderItemResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFolderItemResponse(val *FolderItemResponse) *NullableFolderItemResponse {
	return &NullableFolderItemResponse{value: val, isSet: true}
}

func (v NullableFolderItemResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFolderItemResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


