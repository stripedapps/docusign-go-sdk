/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Workspaces type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Workspaces{}

// Workspaces A DocuSign workspace is a collaboration area for sharing files and data.
type Workspaces struct {
	// The ID of the account to bill.
	BillableAccountId *string `json:"billableAccountId,omitempty"`
	CallerInformation *WorkspaceUser `json:"callerInformation,omitempty"`
	// The UTC DateTime when the workspace user authorization was created.
	Created *string `json:"created,omitempty"`
	CreatedByInformation *WorkspaceUser `json:"createdByInformation,omitempty"`
	// Utc date and time the comment was last updated (can only be done by creator.)
	LastModified *string `json:"lastModified,omitempty"`
	LastModifiedByInformation *WorkspaceUser `json:"lastModifiedByInformation,omitempty"`
	Settings *WorkspaceSettings `json:"settings,omitempty"`
	// The status of the workspace. Valid values are:  - `active` - `closed`
	Status *string `json:"status,omitempty"`
	// The relative URL for accessing the workspace.
	WorkspaceBaseUrl *string `json:"workspaceBaseUrl,omitempty"`
	// Text describing the purpose of the workspace.
	WorkspaceDescription *string `json:"workspaceDescription,omitempty"`
	// The ID of the workspace, always populated.
	WorkspaceId *string `json:"workspaceId,omitempty"`
	// The name of the workspace.
	WorkspaceName *string `json:"workspaceName,omitempty"`
	// The relative URI for accessing the workspace.
	WorkspaceUri *string `json:"workspaceUri,omitempty"`
}

// NewWorkspaces instantiates a new Workspaces object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaces() *Workspaces {
	this := Workspaces{}
	return &this
}

// NewWorkspacesWithDefaults instantiates a new Workspaces object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspacesWithDefaults() *Workspaces {
	this := Workspaces{}
	return &this
}

// GetBillableAccountId returns the BillableAccountId field value if set, zero value otherwise.
func (o *Workspaces) GetBillableAccountId() string {
	if o == nil || IsNil(o.BillableAccountId) {
		var ret string
		return ret
	}
	return *o.BillableAccountId
}

// GetBillableAccountIdOk returns a tuple with the BillableAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workspaces) GetBillableAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.BillableAccountId) {
		return nil, false
	}
	return o.BillableAccountId, true
}

// HasBillableAccountId returns a boolean if a field has been set.
func (o *Workspaces) HasBillableAccountId() bool {
	if o != nil && !IsNil(o.BillableAccountId) {
		return true
	}

	return false
}

// SetBillableAccountId gets a reference to the given string and assigns it to the BillableAccountId field.
func (o *Workspaces) SetBillableAccountId(v string) {
	o.BillableAccountId = &v
}

// GetCallerInformation returns the CallerInformation field value if set, zero value otherwise.
func (o *Workspaces) GetCallerInformation() WorkspaceUser {
	if o == nil || IsNil(o.CallerInformation) {
		var ret WorkspaceUser
		return ret
	}
	return *o.CallerInformation
}

// GetCallerInformationOk returns a tuple with the CallerInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workspaces) GetCallerInformationOk() (*WorkspaceUser, bool) {
	if o == nil || IsNil(o.CallerInformation) {
		return nil, false
	}
	return o.CallerInformation, true
}

// HasCallerInformation returns a boolean if a field has been set.
func (o *Workspaces) HasCallerInformation() bool {
	if o != nil && !IsNil(o.CallerInformation) {
		return true
	}

	return false
}

// SetCallerInformation gets a reference to the given WorkspaceUser and assigns it to the CallerInformation field.
func (o *Workspaces) SetCallerInformation(v WorkspaceUser) {
	o.CallerInformation = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *Workspaces) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workspaces) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Workspaces) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *Workspaces) SetCreated(v string) {
	o.Created = &v
}

// GetCreatedByInformation returns the CreatedByInformation field value if set, zero value otherwise.
func (o *Workspaces) GetCreatedByInformation() WorkspaceUser {
	if o == nil || IsNil(o.CreatedByInformation) {
		var ret WorkspaceUser
		return ret
	}
	return *o.CreatedByInformation
}

// GetCreatedByInformationOk returns a tuple with the CreatedByInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workspaces) GetCreatedByInformationOk() (*WorkspaceUser, bool) {
	if o == nil || IsNil(o.CreatedByInformation) {
		return nil, false
	}
	return o.CreatedByInformation, true
}

// HasCreatedByInformation returns a boolean if a field has been set.
func (o *Workspaces) HasCreatedByInformation() bool {
	if o != nil && !IsNil(o.CreatedByInformation) {
		return true
	}

	return false
}

// SetCreatedByInformation gets a reference to the given WorkspaceUser and assigns it to the CreatedByInformation field.
func (o *Workspaces) SetCreatedByInformation(v WorkspaceUser) {
	o.CreatedByInformation = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *Workspaces) GetLastModified() string {
	if o == nil || IsNil(o.LastModified) {
		var ret string
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workspaces) GetLastModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *Workspaces) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given string and assigns it to the LastModified field.
func (o *Workspaces) SetLastModified(v string) {
	o.LastModified = &v
}

// GetLastModifiedByInformation returns the LastModifiedByInformation field value if set, zero value otherwise.
func (o *Workspaces) GetLastModifiedByInformation() WorkspaceUser {
	if o == nil || IsNil(o.LastModifiedByInformation) {
		var ret WorkspaceUser
		return ret
	}
	return *o.LastModifiedByInformation
}

// GetLastModifiedByInformationOk returns a tuple with the LastModifiedByInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workspaces) GetLastModifiedByInformationOk() (*WorkspaceUser, bool) {
	if o == nil || IsNil(o.LastModifiedByInformation) {
		return nil, false
	}
	return o.LastModifiedByInformation, true
}

// HasLastModifiedByInformation returns a boolean if a field has been set.
func (o *Workspaces) HasLastModifiedByInformation() bool {
	if o != nil && !IsNil(o.LastModifiedByInformation) {
		return true
	}

	return false
}

// SetLastModifiedByInformation gets a reference to the given WorkspaceUser and assigns it to the LastModifiedByInformation field.
func (o *Workspaces) SetLastModifiedByInformation(v WorkspaceUser) {
	o.LastModifiedByInformation = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *Workspaces) GetSettings() WorkspaceSettings {
	if o == nil || IsNil(o.Settings) {
		var ret WorkspaceSettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workspaces) GetSettingsOk() (*WorkspaceSettings, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *Workspaces) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given WorkspaceSettings and assigns it to the Settings field.
func (o *Workspaces) SetSettings(v WorkspaceSettings) {
	o.Settings = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Workspaces) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workspaces) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Workspaces) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Workspaces) SetStatus(v string) {
	o.Status = &v
}

// GetWorkspaceBaseUrl returns the WorkspaceBaseUrl field value if set, zero value otherwise.
func (o *Workspaces) GetWorkspaceBaseUrl() string {
	if o == nil || IsNil(o.WorkspaceBaseUrl) {
		var ret string
		return ret
	}
	return *o.WorkspaceBaseUrl
}

// GetWorkspaceBaseUrlOk returns a tuple with the WorkspaceBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workspaces) GetWorkspaceBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceBaseUrl) {
		return nil, false
	}
	return o.WorkspaceBaseUrl, true
}

// HasWorkspaceBaseUrl returns a boolean if a field has been set.
func (o *Workspaces) HasWorkspaceBaseUrl() bool {
	if o != nil && !IsNil(o.WorkspaceBaseUrl) {
		return true
	}

	return false
}

// SetWorkspaceBaseUrl gets a reference to the given string and assigns it to the WorkspaceBaseUrl field.
func (o *Workspaces) SetWorkspaceBaseUrl(v string) {
	o.WorkspaceBaseUrl = &v
}

// GetWorkspaceDescription returns the WorkspaceDescription field value if set, zero value otherwise.
func (o *Workspaces) GetWorkspaceDescription() string {
	if o == nil || IsNil(o.WorkspaceDescription) {
		var ret string
		return ret
	}
	return *o.WorkspaceDescription
}

// GetWorkspaceDescriptionOk returns a tuple with the WorkspaceDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workspaces) GetWorkspaceDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceDescription) {
		return nil, false
	}
	return o.WorkspaceDescription, true
}

// HasWorkspaceDescription returns a boolean if a field has been set.
func (o *Workspaces) HasWorkspaceDescription() bool {
	if o != nil && !IsNil(o.WorkspaceDescription) {
		return true
	}

	return false
}

// SetWorkspaceDescription gets a reference to the given string and assigns it to the WorkspaceDescription field.
func (o *Workspaces) SetWorkspaceDescription(v string) {
	o.WorkspaceDescription = &v
}

// GetWorkspaceId returns the WorkspaceId field value if set, zero value otherwise.
func (o *Workspaces) GetWorkspaceId() string {
	if o == nil || IsNil(o.WorkspaceId) {
		var ret string
		return ret
	}
	return *o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workspaces) GetWorkspaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceId) {
		return nil, false
	}
	return o.WorkspaceId, true
}

// HasWorkspaceId returns a boolean if a field has been set.
func (o *Workspaces) HasWorkspaceId() bool {
	if o != nil && !IsNil(o.WorkspaceId) {
		return true
	}

	return false
}

// SetWorkspaceId gets a reference to the given string and assigns it to the WorkspaceId field.
func (o *Workspaces) SetWorkspaceId(v string) {
	o.WorkspaceId = &v
}

// GetWorkspaceName returns the WorkspaceName field value if set, zero value otherwise.
func (o *Workspaces) GetWorkspaceName() string {
	if o == nil || IsNil(o.WorkspaceName) {
		var ret string
		return ret
	}
	return *o.WorkspaceName
}

// GetWorkspaceNameOk returns a tuple with the WorkspaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workspaces) GetWorkspaceNameOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceName) {
		return nil, false
	}
	return o.WorkspaceName, true
}

// HasWorkspaceName returns a boolean if a field has been set.
func (o *Workspaces) HasWorkspaceName() bool {
	if o != nil && !IsNil(o.WorkspaceName) {
		return true
	}

	return false
}

// SetWorkspaceName gets a reference to the given string and assigns it to the WorkspaceName field.
func (o *Workspaces) SetWorkspaceName(v string) {
	o.WorkspaceName = &v
}

// GetWorkspaceUri returns the WorkspaceUri field value if set, zero value otherwise.
func (o *Workspaces) GetWorkspaceUri() string {
	if o == nil || IsNil(o.WorkspaceUri) {
		var ret string
		return ret
	}
	return *o.WorkspaceUri
}

// GetWorkspaceUriOk returns a tuple with the WorkspaceUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workspaces) GetWorkspaceUriOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceUri) {
		return nil, false
	}
	return o.WorkspaceUri, true
}

// HasWorkspaceUri returns a boolean if a field has been set.
func (o *Workspaces) HasWorkspaceUri() bool {
	if o != nil && !IsNil(o.WorkspaceUri) {
		return true
	}

	return false
}

// SetWorkspaceUri gets a reference to the given string and assigns it to the WorkspaceUri field.
func (o *Workspaces) SetWorkspaceUri(v string) {
	o.WorkspaceUri = &v
}

func (o Workspaces) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Workspaces) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillableAccountId) {
		toSerialize["billableAccountId"] = o.BillableAccountId
	}
	if !IsNil(o.CallerInformation) {
		toSerialize["callerInformation"] = o.CallerInformation
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedByInformation) {
		toSerialize["createdByInformation"] = o.CreatedByInformation
	}
	if !IsNil(o.LastModified) {
		toSerialize["lastModified"] = o.LastModified
	}
	if !IsNil(o.LastModifiedByInformation) {
		toSerialize["lastModifiedByInformation"] = o.LastModifiedByInformation
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.WorkspaceBaseUrl) {
		toSerialize["workspaceBaseUrl"] = o.WorkspaceBaseUrl
	}
	if !IsNil(o.WorkspaceDescription) {
		toSerialize["workspaceDescription"] = o.WorkspaceDescription
	}
	if !IsNil(o.WorkspaceId) {
		toSerialize["workspaceId"] = o.WorkspaceId
	}
	if !IsNil(o.WorkspaceName) {
		toSerialize["workspaceName"] = o.WorkspaceName
	}
	if !IsNil(o.WorkspaceUri) {
		toSerialize["workspaceUri"] = o.WorkspaceUri
	}
	return toSerialize, nil
}

type NullableWorkspaces struct {
	value *Workspaces
	isSet bool
}

func (v NullableWorkspaces) Get() *Workspaces {
	return v.value
}

func (v *NullableWorkspaces) Set(val *Workspaces) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaces) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaces) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaces(val *Workspaces) *NullableWorkspaces {
	return &NullableWorkspaces{value: val, isSet: true}
}

func (v NullableWorkspaces) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaces) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


