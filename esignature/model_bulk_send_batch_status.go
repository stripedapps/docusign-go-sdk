/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BulkSendBatchStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkSendBatchStatus{}

// BulkSendBatchStatus Result of `getBulkSendBatchStatus`
type BulkSendBatchStatus struct {
	// 
	Action *string `json:"action,omitempty"`
	// 
	ActionStatus *string `json:"actionStatus,omitempty"`
	// The batch ID.
	BatchId *string `json:"batchId,omitempty"`
	// The batch name.
	BatchName *string `json:"batchName,omitempty"`
	// The number of of bulk envelopes submitted in the current batch 
	BatchSize *string `json:"batchSize,omitempty"`
	// An array of error statuses.
	BulkErrors []BulkSendErrorStatus `json:"bulkErrors,omitempty"`
	// The ID of the draft envelope or template that was used to create the batch. 
	EnvelopeIdOrTemplateId *string `json:"envelopeIdOrTemplateId,omitempty"`
	EnvelopesInfo *BulkSendEnvelopesInfo `json:"envelopesInfo,omitempty"`
	// The URI to get all envelopes sent in the batch. 
	EnvelopesUri *string `json:"envelopesUri,omitempty"`
	// The number of envelopes that failed to process or send. 
	Failed *string `json:"failed,omitempty"`
	// The ID of the mailing list used to create the batch.
	MailingListId *string `json:"mailingListId,omitempty"`
	// 
	MailingListName *string `json:"mailingListName,omitempty"`
	// 
	OwnerUserId *string `json:"ownerUserId,omitempty"`
	// The number of envelopes waiting in pending queue 
	Queued *string `json:"queued,omitempty"`
	// 
	ResendsRemaining *string `json:"resendsRemaining,omitempty"`
	// The ID of the sender.
	SenderUserId *string `json:"senderUserId,omitempty"`
	// The number of envelopes sent successfully.
	Sent *string `json:"sent,omitempty"`
	// The timestamp of  when the batch was submitted in ISO 8601 format.  
	SubmittedDate *string `json:"submittedDate,omitempty"`
}

// NewBulkSendBatchStatus instantiates a new BulkSendBatchStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkSendBatchStatus() *BulkSendBatchStatus {
	this := BulkSendBatchStatus{}
	return &this
}

// NewBulkSendBatchStatusWithDefaults instantiates a new BulkSendBatchStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkSendBatchStatusWithDefaults() *BulkSendBatchStatus {
	this := BulkSendBatchStatus{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *BulkSendBatchStatus) SetAction(v string) {
	o.Action = &v
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *BulkSendBatchStatus) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetBatchId returns the BatchId field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetBatchId() string {
	if o == nil || IsNil(o.BatchId) {
		var ret string
		return ret
	}
	return *o.BatchId
}

// GetBatchIdOk returns a tuple with the BatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetBatchIdOk() (*string, bool) {
	if o == nil || IsNil(o.BatchId) {
		return nil, false
	}
	return o.BatchId, true
}

// HasBatchId returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasBatchId() bool {
	if o != nil && !IsNil(o.BatchId) {
		return true
	}

	return false
}

// SetBatchId gets a reference to the given string and assigns it to the BatchId field.
func (o *BulkSendBatchStatus) SetBatchId(v string) {
	o.BatchId = &v
}

// GetBatchName returns the BatchName field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetBatchName() string {
	if o == nil || IsNil(o.BatchName) {
		var ret string
		return ret
	}
	return *o.BatchName
}

// GetBatchNameOk returns a tuple with the BatchName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetBatchNameOk() (*string, bool) {
	if o == nil || IsNil(o.BatchName) {
		return nil, false
	}
	return o.BatchName, true
}

// HasBatchName returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasBatchName() bool {
	if o != nil && !IsNil(o.BatchName) {
		return true
	}

	return false
}

// SetBatchName gets a reference to the given string and assigns it to the BatchName field.
func (o *BulkSendBatchStatus) SetBatchName(v string) {
	o.BatchName = &v
}

// GetBatchSize returns the BatchSize field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetBatchSize() string {
	if o == nil || IsNil(o.BatchSize) {
		var ret string
		return ret
	}
	return *o.BatchSize
}

// GetBatchSizeOk returns a tuple with the BatchSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetBatchSizeOk() (*string, bool) {
	if o == nil || IsNil(o.BatchSize) {
		return nil, false
	}
	return o.BatchSize, true
}

// HasBatchSize returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasBatchSize() bool {
	if o != nil && !IsNil(o.BatchSize) {
		return true
	}

	return false
}

// SetBatchSize gets a reference to the given string and assigns it to the BatchSize field.
func (o *BulkSendBatchStatus) SetBatchSize(v string) {
	o.BatchSize = &v
}

// GetBulkErrors returns the BulkErrors field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetBulkErrors() []BulkSendErrorStatus {
	if o == nil || IsNil(o.BulkErrors) {
		var ret []BulkSendErrorStatus
		return ret
	}
	return o.BulkErrors
}

// GetBulkErrorsOk returns a tuple with the BulkErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetBulkErrorsOk() ([]BulkSendErrorStatus, bool) {
	if o == nil || IsNil(o.BulkErrors) {
		return nil, false
	}
	return o.BulkErrors, true
}

// HasBulkErrors returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasBulkErrors() bool {
	if o != nil && !IsNil(o.BulkErrors) {
		return true
	}

	return false
}

// SetBulkErrors gets a reference to the given []BulkSendErrorStatus and assigns it to the BulkErrors field.
func (o *BulkSendBatchStatus) SetBulkErrors(v []BulkSendErrorStatus) {
	o.BulkErrors = v
}

// GetEnvelopeIdOrTemplateId returns the EnvelopeIdOrTemplateId field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetEnvelopeIdOrTemplateId() string {
	if o == nil || IsNil(o.EnvelopeIdOrTemplateId) {
		var ret string
		return ret
	}
	return *o.EnvelopeIdOrTemplateId
}

// GetEnvelopeIdOrTemplateIdOk returns a tuple with the EnvelopeIdOrTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetEnvelopeIdOrTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeIdOrTemplateId) {
		return nil, false
	}
	return o.EnvelopeIdOrTemplateId, true
}

// HasEnvelopeIdOrTemplateId returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasEnvelopeIdOrTemplateId() bool {
	if o != nil && !IsNil(o.EnvelopeIdOrTemplateId) {
		return true
	}

	return false
}

// SetEnvelopeIdOrTemplateId gets a reference to the given string and assigns it to the EnvelopeIdOrTemplateId field.
func (o *BulkSendBatchStatus) SetEnvelopeIdOrTemplateId(v string) {
	o.EnvelopeIdOrTemplateId = &v
}

// GetEnvelopesInfo returns the EnvelopesInfo field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetEnvelopesInfo() BulkSendEnvelopesInfo {
	if o == nil || IsNil(o.EnvelopesInfo) {
		var ret BulkSendEnvelopesInfo
		return ret
	}
	return *o.EnvelopesInfo
}

// GetEnvelopesInfoOk returns a tuple with the EnvelopesInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetEnvelopesInfoOk() (*BulkSendEnvelopesInfo, bool) {
	if o == nil || IsNil(o.EnvelopesInfo) {
		return nil, false
	}
	return o.EnvelopesInfo, true
}

// HasEnvelopesInfo returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasEnvelopesInfo() bool {
	if o != nil && !IsNil(o.EnvelopesInfo) {
		return true
	}

	return false
}

// SetEnvelopesInfo gets a reference to the given BulkSendEnvelopesInfo and assigns it to the EnvelopesInfo field.
func (o *BulkSendBatchStatus) SetEnvelopesInfo(v BulkSendEnvelopesInfo) {
	o.EnvelopesInfo = &v
}

// GetEnvelopesUri returns the EnvelopesUri field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetEnvelopesUri() string {
	if o == nil || IsNil(o.EnvelopesUri) {
		var ret string
		return ret
	}
	return *o.EnvelopesUri
}

// GetEnvelopesUriOk returns a tuple with the EnvelopesUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetEnvelopesUriOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopesUri) {
		return nil, false
	}
	return o.EnvelopesUri, true
}

// HasEnvelopesUri returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasEnvelopesUri() bool {
	if o != nil && !IsNil(o.EnvelopesUri) {
		return true
	}

	return false
}

// SetEnvelopesUri gets a reference to the given string and assigns it to the EnvelopesUri field.
func (o *BulkSendBatchStatus) SetEnvelopesUri(v string) {
	o.EnvelopesUri = &v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetFailed() string {
	if o == nil || IsNil(o.Failed) {
		var ret string
		return ret
	}
	return *o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetFailedOk() (*string, bool) {
	if o == nil || IsNil(o.Failed) {
		return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasFailed() bool {
	if o != nil && !IsNil(o.Failed) {
		return true
	}

	return false
}

// SetFailed gets a reference to the given string and assigns it to the Failed field.
func (o *BulkSendBatchStatus) SetFailed(v string) {
	o.Failed = &v
}

// GetMailingListId returns the MailingListId field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetMailingListId() string {
	if o == nil || IsNil(o.MailingListId) {
		var ret string
		return ret
	}
	return *o.MailingListId
}

// GetMailingListIdOk returns a tuple with the MailingListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetMailingListIdOk() (*string, bool) {
	if o == nil || IsNil(o.MailingListId) {
		return nil, false
	}
	return o.MailingListId, true
}

// HasMailingListId returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasMailingListId() bool {
	if o != nil && !IsNil(o.MailingListId) {
		return true
	}

	return false
}

// SetMailingListId gets a reference to the given string and assigns it to the MailingListId field.
func (o *BulkSendBatchStatus) SetMailingListId(v string) {
	o.MailingListId = &v
}

// GetMailingListName returns the MailingListName field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetMailingListName() string {
	if o == nil || IsNil(o.MailingListName) {
		var ret string
		return ret
	}
	return *o.MailingListName
}

// GetMailingListNameOk returns a tuple with the MailingListName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetMailingListNameOk() (*string, bool) {
	if o == nil || IsNil(o.MailingListName) {
		return nil, false
	}
	return o.MailingListName, true
}

// HasMailingListName returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasMailingListName() bool {
	if o != nil && !IsNil(o.MailingListName) {
		return true
	}

	return false
}

// SetMailingListName gets a reference to the given string and assigns it to the MailingListName field.
func (o *BulkSendBatchStatus) SetMailingListName(v string) {
	o.MailingListName = &v
}

// GetOwnerUserId returns the OwnerUserId field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetOwnerUserId() string {
	if o == nil || IsNil(o.OwnerUserId) {
		var ret string
		return ret
	}
	return *o.OwnerUserId
}

// GetOwnerUserIdOk returns a tuple with the OwnerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetOwnerUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerUserId) {
		return nil, false
	}
	return o.OwnerUserId, true
}

// HasOwnerUserId returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasOwnerUserId() bool {
	if o != nil && !IsNil(o.OwnerUserId) {
		return true
	}

	return false
}

// SetOwnerUserId gets a reference to the given string and assigns it to the OwnerUserId field.
func (o *BulkSendBatchStatus) SetOwnerUserId(v string) {
	o.OwnerUserId = &v
}

// GetQueued returns the Queued field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetQueued() string {
	if o == nil || IsNil(o.Queued) {
		var ret string
		return ret
	}
	return *o.Queued
}

// GetQueuedOk returns a tuple with the Queued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetQueuedOk() (*string, bool) {
	if o == nil || IsNil(o.Queued) {
		return nil, false
	}
	return o.Queued, true
}

// HasQueued returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasQueued() bool {
	if o != nil && !IsNil(o.Queued) {
		return true
	}

	return false
}

// SetQueued gets a reference to the given string and assigns it to the Queued field.
func (o *BulkSendBatchStatus) SetQueued(v string) {
	o.Queued = &v
}

// GetResendsRemaining returns the ResendsRemaining field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetResendsRemaining() string {
	if o == nil || IsNil(o.ResendsRemaining) {
		var ret string
		return ret
	}
	return *o.ResendsRemaining
}

// GetResendsRemainingOk returns a tuple with the ResendsRemaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetResendsRemainingOk() (*string, bool) {
	if o == nil || IsNil(o.ResendsRemaining) {
		return nil, false
	}
	return o.ResendsRemaining, true
}

// HasResendsRemaining returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasResendsRemaining() bool {
	if o != nil && !IsNil(o.ResendsRemaining) {
		return true
	}

	return false
}

// SetResendsRemaining gets a reference to the given string and assigns it to the ResendsRemaining field.
func (o *BulkSendBatchStatus) SetResendsRemaining(v string) {
	o.ResendsRemaining = &v
}

// GetSenderUserId returns the SenderUserId field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetSenderUserId() string {
	if o == nil || IsNil(o.SenderUserId) {
		var ret string
		return ret
	}
	return *o.SenderUserId
}

// GetSenderUserIdOk returns a tuple with the SenderUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetSenderUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.SenderUserId) {
		return nil, false
	}
	return o.SenderUserId, true
}

// HasSenderUserId returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasSenderUserId() bool {
	if o != nil && !IsNil(o.SenderUserId) {
		return true
	}

	return false
}

// SetSenderUserId gets a reference to the given string and assigns it to the SenderUserId field.
func (o *BulkSendBatchStatus) SetSenderUserId(v string) {
	o.SenderUserId = &v
}

// GetSent returns the Sent field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetSent() string {
	if o == nil || IsNil(o.Sent) {
		var ret string
		return ret
	}
	return *o.Sent
}

// GetSentOk returns a tuple with the Sent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetSentOk() (*string, bool) {
	if o == nil || IsNil(o.Sent) {
		return nil, false
	}
	return o.Sent, true
}

// HasSent returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasSent() bool {
	if o != nil && !IsNil(o.Sent) {
		return true
	}

	return false
}

// SetSent gets a reference to the given string and assigns it to the Sent field.
func (o *BulkSendBatchStatus) SetSent(v string) {
	o.Sent = &v
}

// GetSubmittedDate returns the SubmittedDate field value if set, zero value otherwise.
func (o *BulkSendBatchStatus) GetSubmittedDate() string {
	if o == nil || IsNil(o.SubmittedDate) {
		var ret string
		return ret
	}
	return *o.SubmittedDate
}

// GetSubmittedDateOk returns a tuple with the SubmittedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchStatus) GetSubmittedDateOk() (*string, bool) {
	if o == nil || IsNil(o.SubmittedDate) {
		return nil, false
	}
	return o.SubmittedDate, true
}

// HasSubmittedDate returns a boolean if a field has been set.
func (o *BulkSendBatchStatus) HasSubmittedDate() bool {
	if o != nil && !IsNil(o.SubmittedDate) {
		return true
	}

	return false
}

// SetSubmittedDate gets a reference to the given string and assigns it to the SubmittedDate field.
func (o *BulkSendBatchStatus) SetSubmittedDate(v string) {
	o.SubmittedDate = &v
}

func (o BulkSendBatchStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkSendBatchStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.ActionStatus) {
		toSerialize["actionStatus"] = o.ActionStatus
	}
	if !IsNil(o.BatchId) {
		toSerialize["batchId"] = o.BatchId
	}
	if !IsNil(o.BatchName) {
		toSerialize["batchName"] = o.BatchName
	}
	if !IsNil(o.BatchSize) {
		toSerialize["batchSize"] = o.BatchSize
	}
	if !IsNil(o.BulkErrors) {
		toSerialize["bulkErrors"] = o.BulkErrors
	}
	if !IsNil(o.EnvelopeIdOrTemplateId) {
		toSerialize["envelopeIdOrTemplateId"] = o.EnvelopeIdOrTemplateId
	}
	if !IsNil(o.EnvelopesInfo) {
		toSerialize["envelopesInfo"] = o.EnvelopesInfo
	}
	if !IsNil(o.EnvelopesUri) {
		toSerialize["envelopesUri"] = o.EnvelopesUri
	}
	if !IsNil(o.Failed) {
		toSerialize["failed"] = o.Failed
	}
	if !IsNil(o.MailingListId) {
		toSerialize["mailingListId"] = o.MailingListId
	}
	if !IsNil(o.MailingListName) {
		toSerialize["mailingListName"] = o.MailingListName
	}
	if !IsNil(o.OwnerUserId) {
		toSerialize["ownerUserId"] = o.OwnerUserId
	}
	if !IsNil(o.Queued) {
		toSerialize["queued"] = o.Queued
	}
	if !IsNil(o.ResendsRemaining) {
		toSerialize["resendsRemaining"] = o.ResendsRemaining
	}
	if !IsNil(o.SenderUserId) {
		toSerialize["senderUserId"] = o.SenderUserId
	}
	if !IsNil(o.Sent) {
		toSerialize["sent"] = o.Sent
	}
	if !IsNil(o.SubmittedDate) {
		toSerialize["submittedDate"] = o.SubmittedDate
	}
	return toSerialize, nil
}

type NullableBulkSendBatchStatus struct {
	value *BulkSendBatchStatus
	isSet bool
}

func (v NullableBulkSendBatchStatus) Get() *BulkSendBatchStatus {
	return v.value
}

func (v *NullableBulkSendBatchStatus) Set(val *BulkSendBatchStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkSendBatchStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkSendBatchStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkSendBatchStatus(val *BulkSendBatchStatus) *NullableBulkSendBatchStatus {
	return &NullableBulkSendBatchStatus{value: val, isSet: true}
}

func (v NullableBulkSendBatchStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkSendBatchStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


