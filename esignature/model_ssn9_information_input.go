/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Ssn9InformationInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Ssn9InformationInput{}

// Ssn9InformationInput 
type Ssn9InformationInput struct {
	// Specifies the display level for the recipient. Valid values are: * `ReadOnly` * `Editable` * `DoNotDisplay`
	DisplayLevelCode *string `json:"displayLevelCode,omitempty"`
	// The recipient's full Social Security Number (SSN).
	Ssn9 *string `json:"ssn9,omitempty"`
}

// NewSsn9InformationInput instantiates a new Ssn9InformationInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSsn9InformationInput() *Ssn9InformationInput {
	this := Ssn9InformationInput{}
	return &this
}

// NewSsn9InformationInputWithDefaults instantiates a new Ssn9InformationInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSsn9InformationInputWithDefaults() *Ssn9InformationInput {
	this := Ssn9InformationInput{}
	return &this
}

// GetDisplayLevelCode returns the DisplayLevelCode field value if set, zero value otherwise.
func (o *Ssn9InformationInput) GetDisplayLevelCode() string {
	if o == nil || IsNil(o.DisplayLevelCode) {
		var ret string
		return ret
	}
	return *o.DisplayLevelCode
}

// GetDisplayLevelCodeOk returns a tuple with the DisplayLevelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ssn9InformationInput) GetDisplayLevelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayLevelCode) {
		return nil, false
	}
	return o.DisplayLevelCode, true
}

// HasDisplayLevelCode returns a boolean if a field has been set.
func (o *Ssn9InformationInput) HasDisplayLevelCode() bool {
	if o != nil && !IsNil(o.DisplayLevelCode) {
		return true
	}

	return false
}

// SetDisplayLevelCode gets a reference to the given string and assigns it to the DisplayLevelCode field.
func (o *Ssn9InformationInput) SetDisplayLevelCode(v string) {
	o.DisplayLevelCode = &v
}

// GetSsn9 returns the Ssn9 field value if set, zero value otherwise.
func (o *Ssn9InformationInput) GetSsn9() string {
	if o == nil || IsNil(o.Ssn9) {
		var ret string
		return ret
	}
	return *o.Ssn9
}

// GetSsn9Ok returns a tuple with the Ssn9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ssn9InformationInput) GetSsn9Ok() (*string, bool) {
	if o == nil || IsNil(o.Ssn9) {
		return nil, false
	}
	return o.Ssn9, true
}

// HasSsn9 returns a boolean if a field has been set.
func (o *Ssn9InformationInput) HasSsn9() bool {
	if o != nil && !IsNil(o.Ssn9) {
		return true
	}

	return false
}

// SetSsn9 gets a reference to the given string and assigns it to the Ssn9 field.
func (o *Ssn9InformationInput) SetSsn9(v string) {
	o.Ssn9 = &v
}

func (o Ssn9InformationInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Ssn9InformationInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayLevelCode) {
		toSerialize["displayLevelCode"] = o.DisplayLevelCode
	}
	if !IsNil(o.Ssn9) {
		toSerialize["ssn9"] = o.Ssn9
	}
	return toSerialize, nil
}

type NullableSsn9InformationInput struct {
	value *Ssn9InformationInput
	isSet bool
}

func (v NullableSsn9InformationInput) Get() *Ssn9InformationInput {
	return v.value
}

func (v *NullableSsn9InformationInput) Set(val *Ssn9InformationInput) {
	v.value = val
	v.isSet = true
}

func (v NullableSsn9InformationInput) IsSet() bool {
	return v.isSet
}

func (v *NullableSsn9InformationInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSsn9InformationInput(val *Ssn9InformationInput) *NullableSsn9InformationInput {
	return &NullableSsn9InformationInput{value: val, isSet: true}
}

func (v NullableSsn9InformationInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSsn9InformationInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


