/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserAccountManagementGranularInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserAccountManagementGranularInformation{}

// UserAccountManagementGranularInformation Describes which account management capabilities a user has.
type UserAccountManagementGranularInformation struct {
	// **True** if the user can manage account security settings.
	CanManageAccountSecuritySettings *string `json:"canManageAccountSecuritySettings,omitempty"`
	CanManageAccountSecuritySettingsMetadata *SettingsMetadata `json:"canManageAccountSecuritySettingsMetadata,omitempty"`
	// **True** if the user can manage account settings.
	CanManageAccountSettings *string `json:"canManageAccountSettings,omitempty"`
	CanManageAccountSettingsMetadata *SettingsMetadata `json:"canManageAccountSettingsMetadata,omitempty"`
	// **True** if the user can manage administrators.
	CanManageAdmins *string `json:"canManageAdmins,omitempty"`
	CanManageAdminsMetadata *SettingsMetadata `json:"canManageAdminsMetadata,omitempty"`
	// 
	CanManageConnect *string `json:"canManageConnect,omitempty"`
	CanManageConnectMetadata *SettingsMetadata `json:"canManageConnectMetadata,omitempty"`
	// 
	CanManageDocumentRetention *string `json:"canManageDocumentRetention,omitempty"`
	CanManageDocumentRetentionMetadata *SettingsMetadata `json:"canManageDocumentRetentionMetadata,omitempty"`
	// 
	CanManageEnvelopeTransfer *string `json:"canManageEnvelopeTransfer,omitempty"`
	CanManageEnvelopeTransferMetadata *SettingsMetadata `json:"canManageEnvelopeTransferMetadata,omitempty"`
	// 
	CanManageGroupsButNotUsers *string `json:"canManageGroupsButNotUsers,omitempty"`
	CanManageGroupsButNotUsersMetadata *SettingsMetadata `json:"canManageGroupsButNotUsersMetadata,omitempty"`
	// 
	CanManageJointAgreements *string `json:"canManageJointAgreements,omitempty"`
	CanManageJointAgreementsMetadata *SettingsMetadata `json:"canManageJointAgreementsMetadata,omitempty"`
	// **True** if the user can manage reporting.
	CanManageReporting *string `json:"canManageReporting,omitempty"`
	CanManageReportingMetadata *SettingsMetadata `json:"canManageReportingMetadata,omitempty"`
	// **True** if the user can manage sharing.
	CanManageSharing *string `json:"canManageSharing,omitempty"`
	CanManageSharingMetadata *SettingsMetadata `json:"canManageSharingMetadata,omitempty"`
	// **True** if the user can manage signing groups.
	CanManageSigningGroups *string `json:"canManageSigningGroups,omitempty"`
	CanManageSigningGroupsMetadata *SettingsMetadata `json:"canManageSigningGroupsMetadata,omitempty"`
	// 
	CanManageStamps *string `json:"canManageStamps,omitempty"`
	CanManageStampsMetadata *SettingsMetadata `json:"canManageStampsMetadata,omitempty"`
	// **True** if the user can manage users.
	CanManageUsers *string `json:"canManageUsers,omitempty"`
	CanManageUsersMetadata *SettingsMetadata `json:"canManageUsersMetadata,omitempty"`
	// 
	CanViewUsers *string `json:"canViewUsers,omitempty"`
}

// NewUserAccountManagementGranularInformation instantiates a new UserAccountManagementGranularInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAccountManagementGranularInformation() *UserAccountManagementGranularInformation {
	this := UserAccountManagementGranularInformation{}
	return &this
}

// NewUserAccountManagementGranularInformationWithDefaults instantiates a new UserAccountManagementGranularInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAccountManagementGranularInformationWithDefaults() *UserAccountManagementGranularInformation {
	this := UserAccountManagementGranularInformation{}
	return &this
}

// GetCanManageAccountSecuritySettings returns the CanManageAccountSecuritySettings field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageAccountSecuritySettings() string {
	if o == nil || IsNil(o.CanManageAccountSecuritySettings) {
		var ret string
		return ret
	}
	return *o.CanManageAccountSecuritySettings
}

// GetCanManageAccountSecuritySettingsOk returns a tuple with the CanManageAccountSecuritySettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageAccountSecuritySettingsOk() (*string, bool) {
	if o == nil || IsNil(o.CanManageAccountSecuritySettings) {
		return nil, false
	}
	return o.CanManageAccountSecuritySettings, true
}

// HasCanManageAccountSecuritySettings returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageAccountSecuritySettings() bool {
	if o != nil && !IsNil(o.CanManageAccountSecuritySettings) {
		return true
	}

	return false
}

// SetCanManageAccountSecuritySettings gets a reference to the given string and assigns it to the CanManageAccountSecuritySettings field.
func (o *UserAccountManagementGranularInformation) SetCanManageAccountSecuritySettings(v string) {
	o.CanManageAccountSecuritySettings = &v
}

// GetCanManageAccountSecuritySettingsMetadata returns the CanManageAccountSecuritySettingsMetadata field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageAccountSecuritySettingsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanManageAccountSecuritySettingsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanManageAccountSecuritySettingsMetadata
}

// GetCanManageAccountSecuritySettingsMetadataOk returns a tuple with the CanManageAccountSecuritySettingsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageAccountSecuritySettingsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanManageAccountSecuritySettingsMetadata) {
		return nil, false
	}
	return o.CanManageAccountSecuritySettingsMetadata, true
}

// HasCanManageAccountSecuritySettingsMetadata returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageAccountSecuritySettingsMetadata() bool {
	if o != nil && !IsNil(o.CanManageAccountSecuritySettingsMetadata) {
		return true
	}

	return false
}

// SetCanManageAccountSecuritySettingsMetadata gets a reference to the given SettingsMetadata and assigns it to the CanManageAccountSecuritySettingsMetadata field.
func (o *UserAccountManagementGranularInformation) SetCanManageAccountSecuritySettingsMetadata(v SettingsMetadata) {
	o.CanManageAccountSecuritySettingsMetadata = &v
}

// GetCanManageAccountSettings returns the CanManageAccountSettings field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageAccountSettings() string {
	if o == nil || IsNil(o.CanManageAccountSettings) {
		var ret string
		return ret
	}
	return *o.CanManageAccountSettings
}

// GetCanManageAccountSettingsOk returns a tuple with the CanManageAccountSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageAccountSettingsOk() (*string, bool) {
	if o == nil || IsNil(o.CanManageAccountSettings) {
		return nil, false
	}
	return o.CanManageAccountSettings, true
}

// HasCanManageAccountSettings returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageAccountSettings() bool {
	if o != nil && !IsNil(o.CanManageAccountSettings) {
		return true
	}

	return false
}

// SetCanManageAccountSettings gets a reference to the given string and assigns it to the CanManageAccountSettings field.
func (o *UserAccountManagementGranularInformation) SetCanManageAccountSettings(v string) {
	o.CanManageAccountSettings = &v
}

// GetCanManageAccountSettingsMetadata returns the CanManageAccountSettingsMetadata field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageAccountSettingsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanManageAccountSettingsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanManageAccountSettingsMetadata
}

// GetCanManageAccountSettingsMetadataOk returns a tuple with the CanManageAccountSettingsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageAccountSettingsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanManageAccountSettingsMetadata) {
		return nil, false
	}
	return o.CanManageAccountSettingsMetadata, true
}

// HasCanManageAccountSettingsMetadata returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageAccountSettingsMetadata() bool {
	if o != nil && !IsNil(o.CanManageAccountSettingsMetadata) {
		return true
	}

	return false
}

// SetCanManageAccountSettingsMetadata gets a reference to the given SettingsMetadata and assigns it to the CanManageAccountSettingsMetadata field.
func (o *UserAccountManagementGranularInformation) SetCanManageAccountSettingsMetadata(v SettingsMetadata) {
	o.CanManageAccountSettingsMetadata = &v
}

// GetCanManageAdmins returns the CanManageAdmins field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageAdmins() string {
	if o == nil || IsNil(o.CanManageAdmins) {
		var ret string
		return ret
	}
	return *o.CanManageAdmins
}

// GetCanManageAdminsOk returns a tuple with the CanManageAdmins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageAdminsOk() (*string, bool) {
	if o == nil || IsNil(o.CanManageAdmins) {
		return nil, false
	}
	return o.CanManageAdmins, true
}

// HasCanManageAdmins returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageAdmins() bool {
	if o != nil && !IsNil(o.CanManageAdmins) {
		return true
	}

	return false
}

// SetCanManageAdmins gets a reference to the given string and assigns it to the CanManageAdmins field.
func (o *UserAccountManagementGranularInformation) SetCanManageAdmins(v string) {
	o.CanManageAdmins = &v
}

// GetCanManageAdminsMetadata returns the CanManageAdminsMetadata field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageAdminsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanManageAdminsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanManageAdminsMetadata
}

// GetCanManageAdminsMetadataOk returns a tuple with the CanManageAdminsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageAdminsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanManageAdminsMetadata) {
		return nil, false
	}
	return o.CanManageAdminsMetadata, true
}

// HasCanManageAdminsMetadata returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageAdminsMetadata() bool {
	if o != nil && !IsNil(o.CanManageAdminsMetadata) {
		return true
	}

	return false
}

// SetCanManageAdminsMetadata gets a reference to the given SettingsMetadata and assigns it to the CanManageAdminsMetadata field.
func (o *UserAccountManagementGranularInformation) SetCanManageAdminsMetadata(v SettingsMetadata) {
	o.CanManageAdminsMetadata = &v
}

// GetCanManageConnect returns the CanManageConnect field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageConnect() string {
	if o == nil || IsNil(o.CanManageConnect) {
		var ret string
		return ret
	}
	return *o.CanManageConnect
}

// GetCanManageConnectOk returns a tuple with the CanManageConnect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageConnectOk() (*string, bool) {
	if o == nil || IsNil(o.CanManageConnect) {
		return nil, false
	}
	return o.CanManageConnect, true
}

// HasCanManageConnect returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageConnect() bool {
	if o != nil && !IsNil(o.CanManageConnect) {
		return true
	}

	return false
}

// SetCanManageConnect gets a reference to the given string and assigns it to the CanManageConnect field.
func (o *UserAccountManagementGranularInformation) SetCanManageConnect(v string) {
	o.CanManageConnect = &v
}

// GetCanManageConnectMetadata returns the CanManageConnectMetadata field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageConnectMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanManageConnectMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanManageConnectMetadata
}

// GetCanManageConnectMetadataOk returns a tuple with the CanManageConnectMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageConnectMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanManageConnectMetadata) {
		return nil, false
	}
	return o.CanManageConnectMetadata, true
}

// HasCanManageConnectMetadata returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageConnectMetadata() bool {
	if o != nil && !IsNil(o.CanManageConnectMetadata) {
		return true
	}

	return false
}

// SetCanManageConnectMetadata gets a reference to the given SettingsMetadata and assigns it to the CanManageConnectMetadata field.
func (o *UserAccountManagementGranularInformation) SetCanManageConnectMetadata(v SettingsMetadata) {
	o.CanManageConnectMetadata = &v
}

// GetCanManageDocumentRetention returns the CanManageDocumentRetention field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageDocumentRetention() string {
	if o == nil || IsNil(o.CanManageDocumentRetention) {
		var ret string
		return ret
	}
	return *o.CanManageDocumentRetention
}

// GetCanManageDocumentRetentionOk returns a tuple with the CanManageDocumentRetention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageDocumentRetentionOk() (*string, bool) {
	if o == nil || IsNil(o.CanManageDocumentRetention) {
		return nil, false
	}
	return o.CanManageDocumentRetention, true
}

// HasCanManageDocumentRetention returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageDocumentRetention() bool {
	if o != nil && !IsNil(o.CanManageDocumentRetention) {
		return true
	}

	return false
}

// SetCanManageDocumentRetention gets a reference to the given string and assigns it to the CanManageDocumentRetention field.
func (o *UserAccountManagementGranularInformation) SetCanManageDocumentRetention(v string) {
	o.CanManageDocumentRetention = &v
}

// GetCanManageDocumentRetentionMetadata returns the CanManageDocumentRetentionMetadata field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageDocumentRetentionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanManageDocumentRetentionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanManageDocumentRetentionMetadata
}

// GetCanManageDocumentRetentionMetadataOk returns a tuple with the CanManageDocumentRetentionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageDocumentRetentionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanManageDocumentRetentionMetadata) {
		return nil, false
	}
	return o.CanManageDocumentRetentionMetadata, true
}

// HasCanManageDocumentRetentionMetadata returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageDocumentRetentionMetadata() bool {
	if o != nil && !IsNil(o.CanManageDocumentRetentionMetadata) {
		return true
	}

	return false
}

// SetCanManageDocumentRetentionMetadata gets a reference to the given SettingsMetadata and assigns it to the CanManageDocumentRetentionMetadata field.
func (o *UserAccountManagementGranularInformation) SetCanManageDocumentRetentionMetadata(v SettingsMetadata) {
	o.CanManageDocumentRetentionMetadata = &v
}

// GetCanManageEnvelopeTransfer returns the CanManageEnvelopeTransfer field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageEnvelopeTransfer() string {
	if o == nil || IsNil(o.CanManageEnvelopeTransfer) {
		var ret string
		return ret
	}
	return *o.CanManageEnvelopeTransfer
}

// GetCanManageEnvelopeTransferOk returns a tuple with the CanManageEnvelopeTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageEnvelopeTransferOk() (*string, bool) {
	if o == nil || IsNil(o.CanManageEnvelopeTransfer) {
		return nil, false
	}
	return o.CanManageEnvelopeTransfer, true
}

// HasCanManageEnvelopeTransfer returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageEnvelopeTransfer() bool {
	if o != nil && !IsNil(o.CanManageEnvelopeTransfer) {
		return true
	}

	return false
}

// SetCanManageEnvelopeTransfer gets a reference to the given string and assigns it to the CanManageEnvelopeTransfer field.
func (o *UserAccountManagementGranularInformation) SetCanManageEnvelopeTransfer(v string) {
	o.CanManageEnvelopeTransfer = &v
}

// GetCanManageEnvelopeTransferMetadata returns the CanManageEnvelopeTransferMetadata field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageEnvelopeTransferMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanManageEnvelopeTransferMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanManageEnvelopeTransferMetadata
}

// GetCanManageEnvelopeTransferMetadataOk returns a tuple with the CanManageEnvelopeTransferMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageEnvelopeTransferMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanManageEnvelopeTransferMetadata) {
		return nil, false
	}
	return o.CanManageEnvelopeTransferMetadata, true
}

// HasCanManageEnvelopeTransferMetadata returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageEnvelopeTransferMetadata() bool {
	if o != nil && !IsNil(o.CanManageEnvelopeTransferMetadata) {
		return true
	}

	return false
}

// SetCanManageEnvelopeTransferMetadata gets a reference to the given SettingsMetadata and assigns it to the CanManageEnvelopeTransferMetadata field.
func (o *UserAccountManagementGranularInformation) SetCanManageEnvelopeTransferMetadata(v SettingsMetadata) {
	o.CanManageEnvelopeTransferMetadata = &v
}

// GetCanManageGroupsButNotUsers returns the CanManageGroupsButNotUsers field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageGroupsButNotUsers() string {
	if o == nil || IsNil(o.CanManageGroupsButNotUsers) {
		var ret string
		return ret
	}
	return *o.CanManageGroupsButNotUsers
}

// GetCanManageGroupsButNotUsersOk returns a tuple with the CanManageGroupsButNotUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageGroupsButNotUsersOk() (*string, bool) {
	if o == nil || IsNil(o.CanManageGroupsButNotUsers) {
		return nil, false
	}
	return o.CanManageGroupsButNotUsers, true
}

// HasCanManageGroupsButNotUsers returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageGroupsButNotUsers() bool {
	if o != nil && !IsNil(o.CanManageGroupsButNotUsers) {
		return true
	}

	return false
}

// SetCanManageGroupsButNotUsers gets a reference to the given string and assigns it to the CanManageGroupsButNotUsers field.
func (o *UserAccountManagementGranularInformation) SetCanManageGroupsButNotUsers(v string) {
	o.CanManageGroupsButNotUsers = &v
}

// GetCanManageGroupsButNotUsersMetadata returns the CanManageGroupsButNotUsersMetadata field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageGroupsButNotUsersMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanManageGroupsButNotUsersMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanManageGroupsButNotUsersMetadata
}

// GetCanManageGroupsButNotUsersMetadataOk returns a tuple with the CanManageGroupsButNotUsersMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageGroupsButNotUsersMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanManageGroupsButNotUsersMetadata) {
		return nil, false
	}
	return o.CanManageGroupsButNotUsersMetadata, true
}

// HasCanManageGroupsButNotUsersMetadata returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageGroupsButNotUsersMetadata() bool {
	if o != nil && !IsNil(o.CanManageGroupsButNotUsersMetadata) {
		return true
	}

	return false
}

// SetCanManageGroupsButNotUsersMetadata gets a reference to the given SettingsMetadata and assigns it to the CanManageGroupsButNotUsersMetadata field.
func (o *UserAccountManagementGranularInformation) SetCanManageGroupsButNotUsersMetadata(v SettingsMetadata) {
	o.CanManageGroupsButNotUsersMetadata = &v
}

// GetCanManageJointAgreements returns the CanManageJointAgreements field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageJointAgreements() string {
	if o == nil || IsNil(o.CanManageJointAgreements) {
		var ret string
		return ret
	}
	return *o.CanManageJointAgreements
}

// GetCanManageJointAgreementsOk returns a tuple with the CanManageJointAgreements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageJointAgreementsOk() (*string, bool) {
	if o == nil || IsNil(o.CanManageJointAgreements) {
		return nil, false
	}
	return o.CanManageJointAgreements, true
}

// HasCanManageJointAgreements returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageJointAgreements() bool {
	if o != nil && !IsNil(o.CanManageJointAgreements) {
		return true
	}

	return false
}

// SetCanManageJointAgreements gets a reference to the given string and assigns it to the CanManageJointAgreements field.
func (o *UserAccountManagementGranularInformation) SetCanManageJointAgreements(v string) {
	o.CanManageJointAgreements = &v
}

// GetCanManageJointAgreementsMetadata returns the CanManageJointAgreementsMetadata field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageJointAgreementsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanManageJointAgreementsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanManageJointAgreementsMetadata
}

// GetCanManageJointAgreementsMetadataOk returns a tuple with the CanManageJointAgreementsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageJointAgreementsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanManageJointAgreementsMetadata) {
		return nil, false
	}
	return o.CanManageJointAgreementsMetadata, true
}

// HasCanManageJointAgreementsMetadata returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageJointAgreementsMetadata() bool {
	if o != nil && !IsNil(o.CanManageJointAgreementsMetadata) {
		return true
	}

	return false
}

// SetCanManageJointAgreementsMetadata gets a reference to the given SettingsMetadata and assigns it to the CanManageJointAgreementsMetadata field.
func (o *UserAccountManagementGranularInformation) SetCanManageJointAgreementsMetadata(v SettingsMetadata) {
	o.CanManageJointAgreementsMetadata = &v
}

// GetCanManageReporting returns the CanManageReporting field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageReporting() string {
	if o == nil || IsNil(o.CanManageReporting) {
		var ret string
		return ret
	}
	return *o.CanManageReporting
}

// GetCanManageReportingOk returns a tuple with the CanManageReporting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageReportingOk() (*string, bool) {
	if o == nil || IsNil(o.CanManageReporting) {
		return nil, false
	}
	return o.CanManageReporting, true
}

// HasCanManageReporting returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageReporting() bool {
	if o != nil && !IsNil(o.CanManageReporting) {
		return true
	}

	return false
}

// SetCanManageReporting gets a reference to the given string and assigns it to the CanManageReporting field.
func (o *UserAccountManagementGranularInformation) SetCanManageReporting(v string) {
	o.CanManageReporting = &v
}

// GetCanManageReportingMetadata returns the CanManageReportingMetadata field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageReportingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanManageReportingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanManageReportingMetadata
}

// GetCanManageReportingMetadataOk returns a tuple with the CanManageReportingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageReportingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanManageReportingMetadata) {
		return nil, false
	}
	return o.CanManageReportingMetadata, true
}

// HasCanManageReportingMetadata returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageReportingMetadata() bool {
	if o != nil && !IsNil(o.CanManageReportingMetadata) {
		return true
	}

	return false
}

// SetCanManageReportingMetadata gets a reference to the given SettingsMetadata and assigns it to the CanManageReportingMetadata field.
func (o *UserAccountManagementGranularInformation) SetCanManageReportingMetadata(v SettingsMetadata) {
	o.CanManageReportingMetadata = &v
}

// GetCanManageSharing returns the CanManageSharing field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageSharing() string {
	if o == nil || IsNil(o.CanManageSharing) {
		var ret string
		return ret
	}
	return *o.CanManageSharing
}

// GetCanManageSharingOk returns a tuple with the CanManageSharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageSharingOk() (*string, bool) {
	if o == nil || IsNil(o.CanManageSharing) {
		return nil, false
	}
	return o.CanManageSharing, true
}

// HasCanManageSharing returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageSharing() bool {
	if o != nil && !IsNil(o.CanManageSharing) {
		return true
	}

	return false
}

// SetCanManageSharing gets a reference to the given string and assigns it to the CanManageSharing field.
func (o *UserAccountManagementGranularInformation) SetCanManageSharing(v string) {
	o.CanManageSharing = &v
}

// GetCanManageSharingMetadata returns the CanManageSharingMetadata field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageSharingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanManageSharingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanManageSharingMetadata
}

// GetCanManageSharingMetadataOk returns a tuple with the CanManageSharingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageSharingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanManageSharingMetadata) {
		return nil, false
	}
	return o.CanManageSharingMetadata, true
}

// HasCanManageSharingMetadata returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageSharingMetadata() bool {
	if o != nil && !IsNil(o.CanManageSharingMetadata) {
		return true
	}

	return false
}

// SetCanManageSharingMetadata gets a reference to the given SettingsMetadata and assigns it to the CanManageSharingMetadata field.
func (o *UserAccountManagementGranularInformation) SetCanManageSharingMetadata(v SettingsMetadata) {
	o.CanManageSharingMetadata = &v
}

// GetCanManageSigningGroups returns the CanManageSigningGroups field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageSigningGroups() string {
	if o == nil || IsNil(o.CanManageSigningGroups) {
		var ret string
		return ret
	}
	return *o.CanManageSigningGroups
}

// GetCanManageSigningGroupsOk returns a tuple with the CanManageSigningGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageSigningGroupsOk() (*string, bool) {
	if o == nil || IsNil(o.CanManageSigningGroups) {
		return nil, false
	}
	return o.CanManageSigningGroups, true
}

// HasCanManageSigningGroups returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageSigningGroups() bool {
	if o != nil && !IsNil(o.CanManageSigningGroups) {
		return true
	}

	return false
}

// SetCanManageSigningGroups gets a reference to the given string and assigns it to the CanManageSigningGroups field.
func (o *UserAccountManagementGranularInformation) SetCanManageSigningGroups(v string) {
	o.CanManageSigningGroups = &v
}

// GetCanManageSigningGroupsMetadata returns the CanManageSigningGroupsMetadata field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageSigningGroupsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanManageSigningGroupsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanManageSigningGroupsMetadata
}

// GetCanManageSigningGroupsMetadataOk returns a tuple with the CanManageSigningGroupsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageSigningGroupsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanManageSigningGroupsMetadata) {
		return nil, false
	}
	return o.CanManageSigningGroupsMetadata, true
}

// HasCanManageSigningGroupsMetadata returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageSigningGroupsMetadata() bool {
	if o != nil && !IsNil(o.CanManageSigningGroupsMetadata) {
		return true
	}

	return false
}

// SetCanManageSigningGroupsMetadata gets a reference to the given SettingsMetadata and assigns it to the CanManageSigningGroupsMetadata field.
func (o *UserAccountManagementGranularInformation) SetCanManageSigningGroupsMetadata(v SettingsMetadata) {
	o.CanManageSigningGroupsMetadata = &v
}

// GetCanManageStamps returns the CanManageStamps field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageStamps() string {
	if o == nil || IsNil(o.CanManageStamps) {
		var ret string
		return ret
	}
	return *o.CanManageStamps
}

// GetCanManageStampsOk returns a tuple with the CanManageStamps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageStampsOk() (*string, bool) {
	if o == nil || IsNil(o.CanManageStamps) {
		return nil, false
	}
	return o.CanManageStamps, true
}

// HasCanManageStamps returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageStamps() bool {
	if o != nil && !IsNil(o.CanManageStamps) {
		return true
	}

	return false
}

// SetCanManageStamps gets a reference to the given string and assigns it to the CanManageStamps field.
func (o *UserAccountManagementGranularInformation) SetCanManageStamps(v string) {
	o.CanManageStamps = &v
}

// GetCanManageStampsMetadata returns the CanManageStampsMetadata field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageStampsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanManageStampsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanManageStampsMetadata
}

// GetCanManageStampsMetadataOk returns a tuple with the CanManageStampsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageStampsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanManageStampsMetadata) {
		return nil, false
	}
	return o.CanManageStampsMetadata, true
}

// HasCanManageStampsMetadata returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageStampsMetadata() bool {
	if o != nil && !IsNil(o.CanManageStampsMetadata) {
		return true
	}

	return false
}

// SetCanManageStampsMetadata gets a reference to the given SettingsMetadata and assigns it to the CanManageStampsMetadata field.
func (o *UserAccountManagementGranularInformation) SetCanManageStampsMetadata(v SettingsMetadata) {
	o.CanManageStampsMetadata = &v
}

// GetCanManageUsers returns the CanManageUsers field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageUsers() string {
	if o == nil || IsNil(o.CanManageUsers) {
		var ret string
		return ret
	}
	return *o.CanManageUsers
}

// GetCanManageUsersOk returns a tuple with the CanManageUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageUsersOk() (*string, bool) {
	if o == nil || IsNil(o.CanManageUsers) {
		return nil, false
	}
	return o.CanManageUsers, true
}

// HasCanManageUsers returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageUsers() bool {
	if o != nil && !IsNil(o.CanManageUsers) {
		return true
	}

	return false
}

// SetCanManageUsers gets a reference to the given string and assigns it to the CanManageUsers field.
func (o *UserAccountManagementGranularInformation) SetCanManageUsers(v string) {
	o.CanManageUsers = &v
}

// GetCanManageUsersMetadata returns the CanManageUsersMetadata field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanManageUsersMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanManageUsersMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanManageUsersMetadata
}

// GetCanManageUsersMetadataOk returns a tuple with the CanManageUsersMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanManageUsersMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanManageUsersMetadata) {
		return nil, false
	}
	return o.CanManageUsersMetadata, true
}

// HasCanManageUsersMetadata returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanManageUsersMetadata() bool {
	if o != nil && !IsNil(o.CanManageUsersMetadata) {
		return true
	}

	return false
}

// SetCanManageUsersMetadata gets a reference to the given SettingsMetadata and assigns it to the CanManageUsersMetadata field.
func (o *UserAccountManagementGranularInformation) SetCanManageUsersMetadata(v SettingsMetadata) {
	o.CanManageUsersMetadata = &v
}

// GetCanViewUsers returns the CanViewUsers field value if set, zero value otherwise.
func (o *UserAccountManagementGranularInformation) GetCanViewUsers() string {
	if o == nil || IsNil(o.CanViewUsers) {
		var ret string
		return ret
	}
	return *o.CanViewUsers
}

// GetCanViewUsersOk returns a tuple with the CanViewUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAccountManagementGranularInformation) GetCanViewUsersOk() (*string, bool) {
	if o == nil || IsNil(o.CanViewUsers) {
		return nil, false
	}
	return o.CanViewUsers, true
}

// HasCanViewUsers returns a boolean if a field has been set.
func (o *UserAccountManagementGranularInformation) HasCanViewUsers() bool {
	if o != nil && !IsNil(o.CanViewUsers) {
		return true
	}

	return false
}

// SetCanViewUsers gets a reference to the given string and assigns it to the CanViewUsers field.
func (o *UserAccountManagementGranularInformation) SetCanViewUsers(v string) {
	o.CanViewUsers = &v
}

func (o UserAccountManagementGranularInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserAccountManagementGranularInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CanManageAccountSecuritySettings) {
		toSerialize["canManageAccountSecuritySettings"] = o.CanManageAccountSecuritySettings
	}
	if !IsNil(o.CanManageAccountSecuritySettingsMetadata) {
		toSerialize["canManageAccountSecuritySettingsMetadata"] = o.CanManageAccountSecuritySettingsMetadata
	}
	if !IsNil(o.CanManageAccountSettings) {
		toSerialize["canManageAccountSettings"] = o.CanManageAccountSettings
	}
	if !IsNil(o.CanManageAccountSettingsMetadata) {
		toSerialize["canManageAccountSettingsMetadata"] = o.CanManageAccountSettingsMetadata
	}
	if !IsNil(o.CanManageAdmins) {
		toSerialize["canManageAdmins"] = o.CanManageAdmins
	}
	if !IsNil(o.CanManageAdminsMetadata) {
		toSerialize["canManageAdminsMetadata"] = o.CanManageAdminsMetadata
	}
	if !IsNil(o.CanManageConnect) {
		toSerialize["canManageConnect"] = o.CanManageConnect
	}
	if !IsNil(o.CanManageConnectMetadata) {
		toSerialize["canManageConnectMetadata"] = o.CanManageConnectMetadata
	}
	if !IsNil(o.CanManageDocumentRetention) {
		toSerialize["canManageDocumentRetention"] = o.CanManageDocumentRetention
	}
	if !IsNil(o.CanManageDocumentRetentionMetadata) {
		toSerialize["canManageDocumentRetentionMetadata"] = o.CanManageDocumentRetentionMetadata
	}
	if !IsNil(o.CanManageEnvelopeTransfer) {
		toSerialize["canManageEnvelopeTransfer"] = o.CanManageEnvelopeTransfer
	}
	if !IsNil(o.CanManageEnvelopeTransferMetadata) {
		toSerialize["canManageEnvelopeTransferMetadata"] = o.CanManageEnvelopeTransferMetadata
	}
	if !IsNil(o.CanManageGroupsButNotUsers) {
		toSerialize["canManageGroupsButNotUsers"] = o.CanManageGroupsButNotUsers
	}
	if !IsNil(o.CanManageGroupsButNotUsersMetadata) {
		toSerialize["canManageGroupsButNotUsersMetadata"] = o.CanManageGroupsButNotUsersMetadata
	}
	if !IsNil(o.CanManageJointAgreements) {
		toSerialize["canManageJointAgreements"] = o.CanManageJointAgreements
	}
	if !IsNil(o.CanManageJointAgreementsMetadata) {
		toSerialize["canManageJointAgreementsMetadata"] = o.CanManageJointAgreementsMetadata
	}
	if !IsNil(o.CanManageReporting) {
		toSerialize["canManageReporting"] = o.CanManageReporting
	}
	if !IsNil(o.CanManageReportingMetadata) {
		toSerialize["canManageReportingMetadata"] = o.CanManageReportingMetadata
	}
	if !IsNil(o.CanManageSharing) {
		toSerialize["canManageSharing"] = o.CanManageSharing
	}
	if !IsNil(o.CanManageSharingMetadata) {
		toSerialize["canManageSharingMetadata"] = o.CanManageSharingMetadata
	}
	if !IsNil(o.CanManageSigningGroups) {
		toSerialize["canManageSigningGroups"] = o.CanManageSigningGroups
	}
	if !IsNil(o.CanManageSigningGroupsMetadata) {
		toSerialize["canManageSigningGroupsMetadata"] = o.CanManageSigningGroupsMetadata
	}
	if !IsNil(o.CanManageStamps) {
		toSerialize["canManageStamps"] = o.CanManageStamps
	}
	if !IsNil(o.CanManageStampsMetadata) {
		toSerialize["canManageStampsMetadata"] = o.CanManageStampsMetadata
	}
	if !IsNil(o.CanManageUsers) {
		toSerialize["canManageUsers"] = o.CanManageUsers
	}
	if !IsNil(o.CanManageUsersMetadata) {
		toSerialize["canManageUsersMetadata"] = o.CanManageUsersMetadata
	}
	if !IsNil(o.CanViewUsers) {
		toSerialize["canViewUsers"] = o.CanViewUsers
	}
	return toSerialize, nil
}

type NullableUserAccountManagementGranularInformation struct {
	value *UserAccountManagementGranularInformation
	isSet bool
}

func (v NullableUserAccountManagementGranularInformation) Get() *UserAccountManagementGranularInformation {
	return v.value
}

func (v *NullableUserAccountManagementGranularInformation) Set(val *UserAccountManagementGranularInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAccountManagementGranularInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAccountManagementGranularInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAccountManagementGranularInformation(val *UserAccountManagementGranularInformation) *NullableUserAccountManagementGranularInformation {
	return &NullableUserAccountManagementGranularInformation{value: val, isSet: true}
}

func (v NullableUserAccountManagementGranularInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAccountManagementGranularInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


