/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RecipientPreviewRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecipientPreviewRequest{}

// RecipientPreviewRequest This request object contains the information necessary to create a recipient preview.
type RecipientPreviewRequest struct {
	// A unique identifier of the authentication event executed by the client application.
	AssertionId *string `json:"assertionId,omitempty"`
	// A sender-generated value that indicates the date and time that the signer was authenticated.
	AuthenticationInstant *string `json:"authenticationInstant,omitempty"`
	// Required. Choose a value that most closely matches the technique your application used to authenticate the recipient / signer.   Choose a value from this list:  * Biometric  * Email * HTTPBasicAuth * Kerberos * KnowledgeBasedAuth * None * PaperDocuments * Password * RSASecureID * SingleSignOn_CASiteminder * SingleSignOn_InfoCard * SingleSignOn_MicrosoftActiveDirectory * SingleSignOn_Other * SingleSignOn_Passport * SingleSignOn_SAML * Smartcard * SSLMutualAuth * X509Certificate  This information is included in the Certificate of Completion.
	AuthenticationMethod *string `json:"authenticationMethod,omitempty"`
	ClientURLs *RecipientTokenClientURLs `json:"clientURLs,omitempty"`
	// Only used if `pingUrl` is specified. This is the interval, in seconds, between pings on the `pingUrl`.  The default is `300` seconds. Valid values are 60-1200 seconds.
	PingFrequency *string `json:"pingFrequency,omitempty"`
	// The client URL that the DocuSign Signing experience should ping to indicate to the client that Signing is active. An HTTP GET call is executed against the client. The response from the client is ignored. The intent is for the client to reset its session timer when the request is received.
	PingUrl *string `json:"pingUrl,omitempty"`
	// A local reference used to map recipients to other objects, such as specific document tabs.  A `recipientId` must be either an integer or a GUID, and the `recipientId` must be unique within an envelope.  For example, many envelopes assign the first recipient a `recipientId` of `1`. 
	RecipientId *string `json:"recipientId,omitempty"`
	// This property is not supported.
	ReturnUrl *string `json:"returnUrl,omitempty"`
	// The domain in which the user authenticated.
	SecurityDomain *string `json:"securityDomain,omitempty"`
	// Specifies whether a browser should be allowed to render a page in a frame or IFrame. Setting this property ensures that your content is not embedded into unauthorized pages or frames.  Valid values are:  - `deny`: The page cannot be displayed in a frame. - `same_origin`: The page can only be displayed in a frame on the same origin as the page itself. - `allow_from`: The page can only be displayed in a frame on the origin specified by the `xFrameOptionsAllowFromUrl` property.
	XFrameOptions *string `json:"xFrameOptions,omitempty"`
	// When the value of `xFrameOptions` is `allow_from`, this property specifies the origin on which the page is allowed to display in a frame. If the value of `xFrameOptions` is `allow_from`, you must include a value for this property.
	XFrameOptionsAllowFromUrl *string `json:"xFrameOptionsAllowFromUrl,omitempty"`
}

// NewRecipientPreviewRequest instantiates a new RecipientPreviewRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecipientPreviewRequest() *RecipientPreviewRequest {
	this := RecipientPreviewRequest{}
	return &this
}

// NewRecipientPreviewRequestWithDefaults instantiates a new RecipientPreviewRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecipientPreviewRequestWithDefaults() *RecipientPreviewRequest {
	this := RecipientPreviewRequest{}
	return &this
}

// GetAssertionId returns the AssertionId field value if set, zero value otherwise.
func (o *RecipientPreviewRequest) GetAssertionId() string {
	if o == nil || IsNil(o.AssertionId) {
		var ret string
		return ret
	}
	return *o.AssertionId
}

// GetAssertionIdOk returns a tuple with the AssertionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientPreviewRequest) GetAssertionIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssertionId) {
		return nil, false
	}
	return o.AssertionId, true
}

// HasAssertionId returns a boolean if a field has been set.
func (o *RecipientPreviewRequest) HasAssertionId() bool {
	if o != nil && !IsNil(o.AssertionId) {
		return true
	}

	return false
}

// SetAssertionId gets a reference to the given string and assigns it to the AssertionId field.
func (o *RecipientPreviewRequest) SetAssertionId(v string) {
	o.AssertionId = &v
}

// GetAuthenticationInstant returns the AuthenticationInstant field value if set, zero value otherwise.
func (o *RecipientPreviewRequest) GetAuthenticationInstant() string {
	if o == nil || IsNil(o.AuthenticationInstant) {
		var ret string
		return ret
	}
	return *o.AuthenticationInstant
}

// GetAuthenticationInstantOk returns a tuple with the AuthenticationInstant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientPreviewRequest) GetAuthenticationInstantOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationInstant) {
		return nil, false
	}
	return o.AuthenticationInstant, true
}

// HasAuthenticationInstant returns a boolean if a field has been set.
func (o *RecipientPreviewRequest) HasAuthenticationInstant() bool {
	if o != nil && !IsNil(o.AuthenticationInstant) {
		return true
	}

	return false
}

// SetAuthenticationInstant gets a reference to the given string and assigns it to the AuthenticationInstant field.
func (o *RecipientPreviewRequest) SetAuthenticationInstant(v string) {
	o.AuthenticationInstant = &v
}

// GetAuthenticationMethod returns the AuthenticationMethod field value if set, zero value otherwise.
func (o *RecipientPreviewRequest) GetAuthenticationMethod() string {
	if o == nil || IsNil(o.AuthenticationMethod) {
		var ret string
		return ret
	}
	return *o.AuthenticationMethod
}

// GetAuthenticationMethodOk returns a tuple with the AuthenticationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientPreviewRequest) GetAuthenticationMethodOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationMethod) {
		return nil, false
	}
	return o.AuthenticationMethod, true
}

// HasAuthenticationMethod returns a boolean if a field has been set.
func (o *RecipientPreviewRequest) HasAuthenticationMethod() bool {
	if o != nil && !IsNil(o.AuthenticationMethod) {
		return true
	}

	return false
}

// SetAuthenticationMethod gets a reference to the given string and assigns it to the AuthenticationMethod field.
func (o *RecipientPreviewRequest) SetAuthenticationMethod(v string) {
	o.AuthenticationMethod = &v
}

// GetClientURLs returns the ClientURLs field value if set, zero value otherwise.
func (o *RecipientPreviewRequest) GetClientURLs() RecipientTokenClientURLs {
	if o == nil || IsNil(o.ClientURLs) {
		var ret RecipientTokenClientURLs
		return ret
	}
	return *o.ClientURLs
}

// GetClientURLsOk returns a tuple with the ClientURLs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientPreviewRequest) GetClientURLsOk() (*RecipientTokenClientURLs, bool) {
	if o == nil || IsNil(o.ClientURLs) {
		return nil, false
	}
	return o.ClientURLs, true
}

// HasClientURLs returns a boolean if a field has been set.
func (o *RecipientPreviewRequest) HasClientURLs() bool {
	if o != nil && !IsNil(o.ClientURLs) {
		return true
	}

	return false
}

// SetClientURLs gets a reference to the given RecipientTokenClientURLs and assigns it to the ClientURLs field.
func (o *RecipientPreviewRequest) SetClientURLs(v RecipientTokenClientURLs) {
	o.ClientURLs = &v
}

// GetPingFrequency returns the PingFrequency field value if set, zero value otherwise.
func (o *RecipientPreviewRequest) GetPingFrequency() string {
	if o == nil || IsNil(o.PingFrequency) {
		var ret string
		return ret
	}
	return *o.PingFrequency
}

// GetPingFrequencyOk returns a tuple with the PingFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientPreviewRequest) GetPingFrequencyOk() (*string, bool) {
	if o == nil || IsNil(o.PingFrequency) {
		return nil, false
	}
	return o.PingFrequency, true
}

// HasPingFrequency returns a boolean if a field has been set.
func (o *RecipientPreviewRequest) HasPingFrequency() bool {
	if o != nil && !IsNil(o.PingFrequency) {
		return true
	}

	return false
}

// SetPingFrequency gets a reference to the given string and assigns it to the PingFrequency field.
func (o *RecipientPreviewRequest) SetPingFrequency(v string) {
	o.PingFrequency = &v
}

// GetPingUrl returns the PingUrl field value if set, zero value otherwise.
func (o *RecipientPreviewRequest) GetPingUrl() string {
	if o == nil || IsNil(o.PingUrl) {
		var ret string
		return ret
	}
	return *o.PingUrl
}

// GetPingUrlOk returns a tuple with the PingUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientPreviewRequest) GetPingUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PingUrl) {
		return nil, false
	}
	return o.PingUrl, true
}

// HasPingUrl returns a boolean if a field has been set.
func (o *RecipientPreviewRequest) HasPingUrl() bool {
	if o != nil && !IsNil(o.PingUrl) {
		return true
	}

	return false
}

// SetPingUrl gets a reference to the given string and assigns it to the PingUrl field.
func (o *RecipientPreviewRequest) SetPingUrl(v string) {
	o.PingUrl = &v
}

// GetRecipientId returns the RecipientId field value if set, zero value otherwise.
func (o *RecipientPreviewRequest) GetRecipientId() string {
	if o == nil || IsNil(o.RecipientId) {
		var ret string
		return ret
	}
	return *o.RecipientId
}

// GetRecipientIdOk returns a tuple with the RecipientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientPreviewRequest) GetRecipientIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientId) {
		return nil, false
	}
	return o.RecipientId, true
}

// HasRecipientId returns a boolean if a field has been set.
func (o *RecipientPreviewRequest) HasRecipientId() bool {
	if o != nil && !IsNil(o.RecipientId) {
		return true
	}

	return false
}

// SetRecipientId gets a reference to the given string and assigns it to the RecipientId field.
func (o *RecipientPreviewRequest) SetRecipientId(v string) {
	o.RecipientId = &v
}

// GetReturnUrl returns the ReturnUrl field value if set, zero value otherwise.
func (o *RecipientPreviewRequest) GetReturnUrl() string {
	if o == nil || IsNil(o.ReturnUrl) {
		var ret string
		return ret
	}
	return *o.ReturnUrl
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientPreviewRequest) GetReturnUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnUrl) {
		return nil, false
	}
	return o.ReturnUrl, true
}

// HasReturnUrl returns a boolean if a field has been set.
func (o *RecipientPreviewRequest) HasReturnUrl() bool {
	if o != nil && !IsNil(o.ReturnUrl) {
		return true
	}

	return false
}

// SetReturnUrl gets a reference to the given string and assigns it to the ReturnUrl field.
func (o *RecipientPreviewRequest) SetReturnUrl(v string) {
	o.ReturnUrl = &v
}

// GetSecurityDomain returns the SecurityDomain field value if set, zero value otherwise.
func (o *RecipientPreviewRequest) GetSecurityDomain() string {
	if o == nil || IsNil(o.SecurityDomain) {
		var ret string
		return ret
	}
	return *o.SecurityDomain
}

// GetSecurityDomainOk returns a tuple with the SecurityDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientPreviewRequest) GetSecurityDomainOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityDomain) {
		return nil, false
	}
	return o.SecurityDomain, true
}

// HasSecurityDomain returns a boolean if a field has been set.
func (o *RecipientPreviewRequest) HasSecurityDomain() bool {
	if o != nil && !IsNil(o.SecurityDomain) {
		return true
	}

	return false
}

// SetSecurityDomain gets a reference to the given string and assigns it to the SecurityDomain field.
func (o *RecipientPreviewRequest) SetSecurityDomain(v string) {
	o.SecurityDomain = &v
}

// GetXFrameOptions returns the XFrameOptions field value if set, zero value otherwise.
func (o *RecipientPreviewRequest) GetXFrameOptions() string {
	if o == nil || IsNil(o.XFrameOptions) {
		var ret string
		return ret
	}
	return *o.XFrameOptions
}

// GetXFrameOptionsOk returns a tuple with the XFrameOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientPreviewRequest) GetXFrameOptionsOk() (*string, bool) {
	if o == nil || IsNil(o.XFrameOptions) {
		return nil, false
	}
	return o.XFrameOptions, true
}

// HasXFrameOptions returns a boolean if a field has been set.
func (o *RecipientPreviewRequest) HasXFrameOptions() bool {
	if o != nil && !IsNil(o.XFrameOptions) {
		return true
	}

	return false
}

// SetXFrameOptions gets a reference to the given string and assigns it to the XFrameOptions field.
func (o *RecipientPreviewRequest) SetXFrameOptions(v string) {
	o.XFrameOptions = &v
}

// GetXFrameOptionsAllowFromUrl returns the XFrameOptionsAllowFromUrl field value if set, zero value otherwise.
func (o *RecipientPreviewRequest) GetXFrameOptionsAllowFromUrl() string {
	if o == nil || IsNil(o.XFrameOptionsAllowFromUrl) {
		var ret string
		return ret
	}
	return *o.XFrameOptionsAllowFromUrl
}

// GetXFrameOptionsAllowFromUrlOk returns a tuple with the XFrameOptionsAllowFromUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientPreviewRequest) GetXFrameOptionsAllowFromUrlOk() (*string, bool) {
	if o == nil || IsNil(o.XFrameOptionsAllowFromUrl) {
		return nil, false
	}
	return o.XFrameOptionsAllowFromUrl, true
}

// HasXFrameOptionsAllowFromUrl returns a boolean if a field has been set.
func (o *RecipientPreviewRequest) HasXFrameOptionsAllowFromUrl() bool {
	if o != nil && !IsNil(o.XFrameOptionsAllowFromUrl) {
		return true
	}

	return false
}

// SetXFrameOptionsAllowFromUrl gets a reference to the given string and assigns it to the XFrameOptionsAllowFromUrl field.
func (o *RecipientPreviewRequest) SetXFrameOptionsAllowFromUrl(v string) {
	o.XFrameOptionsAllowFromUrl = &v
}

func (o RecipientPreviewRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecipientPreviewRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssertionId) {
		toSerialize["assertionId"] = o.AssertionId
	}
	if !IsNil(o.AuthenticationInstant) {
		toSerialize["authenticationInstant"] = o.AuthenticationInstant
	}
	if !IsNil(o.AuthenticationMethod) {
		toSerialize["authenticationMethod"] = o.AuthenticationMethod
	}
	if !IsNil(o.ClientURLs) {
		toSerialize["clientURLs"] = o.ClientURLs
	}
	if !IsNil(o.PingFrequency) {
		toSerialize["pingFrequency"] = o.PingFrequency
	}
	if !IsNil(o.PingUrl) {
		toSerialize["pingUrl"] = o.PingUrl
	}
	if !IsNil(o.RecipientId) {
		toSerialize["recipientId"] = o.RecipientId
	}
	if !IsNil(o.ReturnUrl) {
		toSerialize["returnUrl"] = o.ReturnUrl
	}
	if !IsNil(o.SecurityDomain) {
		toSerialize["securityDomain"] = o.SecurityDomain
	}
	if !IsNil(o.XFrameOptions) {
		toSerialize["xFrameOptions"] = o.XFrameOptions
	}
	if !IsNil(o.XFrameOptionsAllowFromUrl) {
		toSerialize["xFrameOptionsAllowFromUrl"] = o.XFrameOptionsAllowFromUrl
	}
	return toSerialize, nil
}

type NullableRecipientPreviewRequest struct {
	value *RecipientPreviewRequest
	isSet bool
}

func (v NullableRecipientPreviewRequest) Get() *RecipientPreviewRequest {
	return v.value
}

func (v *NullableRecipientPreviewRequest) Set(val *RecipientPreviewRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRecipientPreviewRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRecipientPreviewRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecipientPreviewRequest(val *RecipientPreviewRequest) *NullableRecipientPreviewRequest {
	return &NullableRecipientPreviewRequest{value: val, isSet: true}
}

func (v NullableRecipientPreviewRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecipientPreviewRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


