/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AccountPasswordLockoutDurationMinutes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountPasswordLockoutDurationMinutes{}

// AccountPasswordLockoutDurationMinutes 
type AccountPasswordLockoutDurationMinutes struct {
	// 
	MaximumMinutes *string `json:"maximumMinutes,omitempty"`
	// 
	MinimumMinutes *string `json:"minimumMinutes,omitempty"`
}

// NewAccountPasswordLockoutDurationMinutes instantiates a new AccountPasswordLockoutDurationMinutes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountPasswordLockoutDurationMinutes() *AccountPasswordLockoutDurationMinutes {
	this := AccountPasswordLockoutDurationMinutes{}
	return &this
}

// NewAccountPasswordLockoutDurationMinutesWithDefaults instantiates a new AccountPasswordLockoutDurationMinutes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountPasswordLockoutDurationMinutesWithDefaults() *AccountPasswordLockoutDurationMinutes {
	this := AccountPasswordLockoutDurationMinutes{}
	return &this
}

// GetMaximumMinutes returns the MaximumMinutes field value if set, zero value otherwise.
func (o *AccountPasswordLockoutDurationMinutes) GetMaximumMinutes() string {
	if o == nil || IsNil(o.MaximumMinutes) {
		var ret string
		return ret
	}
	return *o.MaximumMinutes
}

// GetMaximumMinutesOk returns a tuple with the MaximumMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountPasswordLockoutDurationMinutes) GetMaximumMinutesOk() (*string, bool) {
	if o == nil || IsNil(o.MaximumMinutes) {
		return nil, false
	}
	return o.MaximumMinutes, true
}

// HasMaximumMinutes returns a boolean if a field has been set.
func (o *AccountPasswordLockoutDurationMinutes) HasMaximumMinutes() bool {
	if o != nil && !IsNil(o.MaximumMinutes) {
		return true
	}

	return false
}

// SetMaximumMinutes gets a reference to the given string and assigns it to the MaximumMinutes field.
func (o *AccountPasswordLockoutDurationMinutes) SetMaximumMinutes(v string) {
	o.MaximumMinutes = &v
}

// GetMinimumMinutes returns the MinimumMinutes field value if set, zero value otherwise.
func (o *AccountPasswordLockoutDurationMinutes) GetMinimumMinutes() string {
	if o == nil || IsNil(o.MinimumMinutes) {
		var ret string
		return ret
	}
	return *o.MinimumMinutes
}

// GetMinimumMinutesOk returns a tuple with the MinimumMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountPasswordLockoutDurationMinutes) GetMinimumMinutesOk() (*string, bool) {
	if o == nil || IsNil(o.MinimumMinutes) {
		return nil, false
	}
	return o.MinimumMinutes, true
}

// HasMinimumMinutes returns a boolean if a field has been set.
func (o *AccountPasswordLockoutDurationMinutes) HasMinimumMinutes() bool {
	if o != nil && !IsNil(o.MinimumMinutes) {
		return true
	}

	return false
}

// SetMinimumMinutes gets a reference to the given string and assigns it to the MinimumMinutes field.
func (o *AccountPasswordLockoutDurationMinutes) SetMinimumMinutes(v string) {
	o.MinimumMinutes = &v
}

func (o AccountPasswordLockoutDurationMinutes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountPasswordLockoutDurationMinutes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaximumMinutes) {
		toSerialize["maximumMinutes"] = o.MaximumMinutes
	}
	if !IsNil(o.MinimumMinutes) {
		toSerialize["minimumMinutes"] = o.MinimumMinutes
	}
	return toSerialize, nil
}

type NullableAccountPasswordLockoutDurationMinutes struct {
	value *AccountPasswordLockoutDurationMinutes
	isSet bool
}

func (v NullableAccountPasswordLockoutDurationMinutes) Get() *AccountPasswordLockoutDurationMinutes {
	return v.value
}

func (v *NullableAccountPasswordLockoutDurationMinutes) Set(val *AccountPasswordLockoutDurationMinutes) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountPasswordLockoutDurationMinutes) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountPasswordLockoutDurationMinutes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountPasswordLockoutDurationMinutes(val *AccountPasswordLockoutDurationMinutes) *NullableAccountPasswordLockoutDurationMinutes {
	return &NullableAccountPasswordLockoutDurationMinutes{value: val, isSet: true}
}

func (v NullableAccountPasswordLockoutDurationMinutes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountPasswordLockoutDurationMinutes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


