/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BrandResourcesList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BrandResourcesList{}

// BrandResourcesList 
type BrandResourcesList struct {
	// A list of resources that the brand uses.
	ResourcesContentTypes []BrandResources `json:"resourcesContentTypes,omitempty"`
}

// NewBrandResourcesList instantiates a new BrandResourcesList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrandResourcesList() *BrandResourcesList {
	this := BrandResourcesList{}
	return &this
}

// NewBrandResourcesListWithDefaults instantiates a new BrandResourcesList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrandResourcesListWithDefaults() *BrandResourcesList {
	this := BrandResourcesList{}
	return &this
}

// GetResourcesContentTypes returns the ResourcesContentTypes field value if set, zero value otherwise.
func (o *BrandResourcesList) GetResourcesContentTypes() []BrandResources {
	if o == nil || IsNil(o.ResourcesContentTypes) {
		var ret []BrandResources
		return ret
	}
	return o.ResourcesContentTypes
}

// GetResourcesContentTypesOk returns a tuple with the ResourcesContentTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandResourcesList) GetResourcesContentTypesOk() ([]BrandResources, bool) {
	if o == nil || IsNil(o.ResourcesContentTypes) {
		return nil, false
	}
	return o.ResourcesContentTypes, true
}

// HasResourcesContentTypes returns a boolean if a field has been set.
func (o *BrandResourcesList) HasResourcesContentTypes() bool {
	if o != nil && !IsNil(o.ResourcesContentTypes) {
		return true
	}

	return false
}

// SetResourcesContentTypes gets a reference to the given []BrandResources and assigns it to the ResourcesContentTypes field.
func (o *BrandResourcesList) SetResourcesContentTypes(v []BrandResources) {
	o.ResourcesContentTypes = v
}

func (o BrandResourcesList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BrandResourcesList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ResourcesContentTypes) {
		toSerialize["resourcesContentTypes"] = o.ResourcesContentTypes
	}
	return toSerialize, nil
}

type NullableBrandResourcesList struct {
	value *BrandResourcesList
	isSet bool
}

func (v NullableBrandResourcesList) Get() *BrandResourcesList {
	return v.value
}

func (v *NullableBrandResourcesList) Set(val *BrandResourcesList) {
	v.value = val
	v.isSet = true
}

func (v NullableBrandResourcesList) IsSet() bool {
	return v.isSet
}

func (v *NullableBrandResourcesList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrandResourcesList(val *BrandResourcesList) *NullableBrandResourcesList {
	return &NullableBrandResourcesList{value: val, isSet: true}
}

func (v NullableBrandResourcesList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrandResourcesList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


