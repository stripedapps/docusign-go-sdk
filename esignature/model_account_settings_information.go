/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AccountSettingsInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountSettingsInformation{}

// AccountSettingsInformation Contains account settings information. Used in requests to set property values. Used in responses to report property values.
type AccountSettingsInformation struct {
	AccessCodeFormat *AccessCodeFormat `json:"accessCodeFormat,omitempty"`
	// UTC date/time format for the account.
	AccountDateTimeFormat *string `json:"accountDateTimeFormat,omitempty"`
	AccountDateTimeFormatMetadata *SettingsMetadata `json:"accountDateTimeFormatMetadata,omitempty"`
	// 
	AccountDefaultLanguage *string `json:"accountDefaultLanguage,omitempty"`
	AccountDefaultLanguageMetadata *SettingsMetadata `json:"accountDefaultLanguageMetadata,omitempty"`
	// The name on the account.
	AccountName *string `json:"accountName,omitempty"`
	AccountNameMetadata *SettingsMetadata `json:"accountNameMetadata,omitempty"`
	AccountNotification *AccountNotification `json:"accountNotification,omitempty"`
	AccountUISettings *AccountUISettings `json:"accountUISettings,omitempty"`
	// When **true,** [Signature Adoption Configuration](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=dsz1583277358168.html) is enabled.   **Note:** Only Admin users can change this setting.
	AdoptSigConfig *string `json:"adoptSigConfig,omitempty"`
	AdoptSigConfigMetadata *SettingsMetadata `json:"adoptSigConfigMetadata,omitempty"`
	// When **true,** the Advanced Correction feature is enabled for this account.
	AdvancedCorrect *string `json:"advancedCorrect,omitempty"`
	AdvancedCorrectMetadata *SettingsMetadata `json:"advancedCorrectMetadata,omitempty"`
	// 
	AdvancedSearchEnableTabField *string `json:"advancedSearchEnableTabField,omitempty"`
	AdvancedSearchEnableTabFieldMetadata *SettingsMetadata `json:"advancedSearchEnableTabFieldMetadata,omitempty"`
	// 
	AdvancedSearchEnableTemplateIdField *string `json:"advancedSearchEnableTemplateIdField,omitempty"`
	AdvancedSearchEnableTemplateIdFieldMetadata *SettingsMetadata `json:"advancedSearchEnableTemplateIdFieldMetadata,omitempty"`
	// 
	AdvancedSearchEnableTemplateNameField *string `json:"advancedSearchEnableTemplateNameField,omitempty"`
	AdvancedSearchEnableTemplateNameFieldMetadata *SettingsMetadata `json:"advancedSearchEnableTemplateNameFieldMetadata,omitempty"`
	// When **true,** the configured [Access Code Format](/docs/esign-rest-api/reference/accounts/accounts/get/#accessCodeFormat) page is enabled for account administrators.  **Note:** Only Admin users can change this setting.
	AllowAccessCodeFormat *string `json:"allowAccessCodeFormat,omitempty"`
	AllowAccessCodeFormatMetadata *SettingsMetadata `json:"allowAccessCodeFormatMetadata,omitempty"`
	// When **true,** the account can be managed on a per-user basis.  **Note:** Only Admin users can change this setting.
	AllowAccountManagementGranular *string `json:"allowAccountManagementGranular,omitempty"`
	AllowAccountManagementGranularMetadata *SettingsMetadata `json:"allowAccountManagementGranularMetadata,omitempty"`
	// Boolean that specifies whether member names can be changed in the account.
	AllowAccountMemberNameChange *string `json:"allowAccountMemberNameChange,omitempty"`
	AllowAccountMemberNameChangeMetadata *SettingsMetadata `json:"allowAccountMemberNameChangeMetadata,omitempty"`
	// 
	AllowACE *string `json:"allowACE,omitempty"`
	AllowACEMetadata *SettingsMetadata `json:"allowACEMetadata,omitempty"`
	// When **true,** [Conditional Routing](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=aqm1578456487908.html) is enabled for the account as part of DocuSign's Advanced Recipient Routing feature.
	AllowAdvancedRecipientRoutingConditional *string `json:"allowAdvancedRecipientRoutingConditional,omitempty"`
	AllowAdvancedRecipientRoutingConditionalMetadata *SettingsMetadata `json:"allowAdvancedRecipientRoutingConditionalMetadata,omitempty"`
	//   When **true,** an agent recipient can change the email addresses of recipients later in the signing order. 
	AllowAgentNameEmailEdit *string `json:"allowAgentNameEmailEdit,omitempty"`
	AllowAgentNameEmailEditMetadata *SettingsMetadata `json:"allowAgentNameEmailEditMetadata,omitempty"`
	// 
	AllowAgreementActions *string `json:"allowAgreementActions,omitempty"`
	AllowAgreementActionsMetadata *SettingsMetadata `json:"allowAgreementActionsMetadata,omitempty"`
	// 
	AllowAgreementOrchestrations *string `json:"allowAgreementOrchestrations,omitempty"`
	AllowAgreementOrchestrationsMetadata *SettingsMetadata `json:"allowAgreementOrchestrationsMetadata,omitempty"`
	//   When **true,** auto-navigation can be enabled for this account. 
	AllowAutoNavSettings *string `json:"allowAutoNavSettings,omitempty"`
	AllowAutoNavSettingsMetadata *SettingsMetadata `json:"allowAutoNavSettingsMetadata,omitempty"`
	//  When **true,** auto-tagging is enabled for the account.
	AllowAutoTagging *string `json:"allowAutoTagging,omitempty"`
	AllowAutoTaggingMetadata *SettingsMetadata `json:"allowAutoTaggingMetadata,omitempty"`
	// When **true,** bulk send functionality is enabled for the account.  **Note:** Only Admin users can change this setting.
	AllowBulkSend *string `json:"allowBulkSend,omitempty"`
	AllowBulkSendMetadata *SettingsMetadata `json:"allowBulkSendMetadata,omitempty"`
	// When **true,** indicates that the customer can withdraw their consent to the consumer disclosure when they decline to sign documents. If these recipients sign documents sent to them from your account in the future, they will be required to agree to the terms in the disclosure. The default value is **false.** **Note:** Only Admin users can change this setting.
	AllowCDWithdraw *string `json:"allowCDWithdraw,omitempty"`
	AllowCDWithdrawMetadata *SettingsMetadata `json:"allowCDWithdrawMetadata,omitempty"`
	// Boolean that specifies whether a Connect configuration can use HTTP listeners.
	AllowConnectHttpListenerConfigs *string `json:"allowConnectHttpListenerConfigs,omitempty"`
	// 
	AllowConnectIdentityVerificationUI *string `json:"AllowConnectIdentityVerificationUI,omitempty"`
	// 
	AllowConnectOAuthUI *string `json:"allowConnectOAuthUI,omitempty"`
	// Reserved for DocuSign.
	AllowConnectSendFinishLater *string `json:"allowConnectSendFinishLater,omitempty"`
	AllowConnectSendFinishLaterMetadata *SettingsMetadata `json:"allowConnectSendFinishLaterMetadata,omitempty"`
	// 
	AllowConnectUnifiedPayloadUI *string `json:"allowConnectUnifiedPayloadUI,omitempty"`
	// When **true,** the account has the ability to change the [Consumer Disclosure](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=aqg1583277336549.html) setting. 
	AllowConsumerDisclosureOverride *string `json:"allowConsumerDisclosureOverride,omitempty"`
	AllowConsumerDisclosureOverrideMetadata *SettingsMetadata `json:"allowConsumerDisclosureOverrideMetadata,omitempty"`
	// When **true,** senders can download form data from the envelopes that they send.  **Note:** Only Admin users can change this setting. 
	AllowDataDownload *string `json:"allowDataDownload,omitempty"`
	AllowDataDownloadMetadata *SettingsMetadata `json:"allowDataDownloadMetadata,omitempty"`
	// \"true\" if the account has permission to use the scheduled sending feature to send envelopes at a specified datetime in the future, \"false\" otherwise.
	AllowDelayedRouting *string `json:"allowDelayedRouting,omitempty"`
	AllowDelayedRoutingMetadata *SettingsMetadata `json:"allowDelayedRoutingMetadata,omitempty"`
	// 
	AllowDelegatedSigning *string `json:"allowDelegatedSigning,omitempty"`
	AllowDelegatedSigningMetadata *SettingsMetadata `json:"allowDelegatedSigningMetadata,omitempty"`
	// 
	AllowDocGenDocuments *string `json:"allowDocGenDocuments,omitempty"`
	AllowDocGenDocumentsMetadata *SettingsMetadata `json:"allowDocGenDocumentsMetadata,omitempty"`
	// Boolean that specifies whether disclosure documents can be included in envelopes.
	AllowDocumentDisclosures *string `json:"allowDocumentDisclosures,omitempty"`
	AllowDocumentDisclosuresMetadata *SettingsMetadata `json:"allowDocumentDisclosuresMetadata,omitempty"`
	// Boolean that specifies whether notifications can include the envelope's signed document.
	AllowDocumentsOnSignedEnvelopes *string `json:"allowDocumentsOnSignedEnvelopes,omitempty"`
	AllowDocumentsOnSignedEnvelopesMetadata *SettingsMetadata `json:"allowDocumentsOnSignedEnvelopesMetadata,omitempty"`
	// When **true,** the [Document Visibility](https://support.docusign.com/guides/ndse-user-guide-document-visibility) feature is enabled for the account. 
	AllowDocumentVisibility *string `json:"allowDocumentVisibility,omitempty"`
	AllowDocumentVisibilityMetadata *SettingsMetadata `json:"allowDocumentVisibilityMetadata,omitempty"`
	// 
	AllowEditingEnvelopesOnBehalfOfOthers *string `json:"allowEditingEnvelopesOnBehalfOfOthers,omitempty"`
	AllowEditingEnvelopesOnBehalfOfOthersMetadata *SettingsMetadata `json:"allowEditingEnvelopesOnBehalfOfOthersMetadata,omitempty"`
	// When **true,** [eHanko stamps](https://support.docusign.com/s/document-item?bundleId=jux1643235969954&topicId=dys1578456666697.html) are enabled. 
	AllowEHankoStamps *string `json:"allowEHankoStamps,omitempty"`
	AllowEHankoStampsMetadata *SettingsMetadata `json:"allowEHankoStampsMetadata,omitempty"`
	// Specifies whether eNote eOriginal integration is enabled. 
	AllowENoteEOriginal *string `json:"allowENoteEOriginal,omitempty"`
	AllowENoteEOriginalMetadata *SettingsMetadata `json:"allowENoteEOriginalMetadata,omitempty"`
	// When **true,** the envelope correction feature is enabled.  **Note:** Only Admin users can change this setting. 
	AllowEnvelopeCorrect *string `json:"allowEnvelopeCorrect,omitempty"`
	AllowEnvelopeCorrectMetadata *SettingsMetadata `json:"allowEnvelopeCorrectMetadata,omitempty"`
	// Specifies whether the account is able to manage rules that [transfer ownership](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=xqx1583277378404.html) of envelopes within the same account.    
	AllowEnvelopeCustodyTransfer *string `json:"allowEnvelopeCustodyTransfer,omitempty"`
	AllowEnvelopeCustodyTransferMetadata *SettingsMetadata `json:"allowEnvelopeCustodyTransferMetadata,omitempty"`
	// Specifies whether [envelope custom fields](https://support.docusign.com/s/document-item?bundleId=jux1643235969954&topicId=mns1578456285568.html) are enabled. 
	AllowEnvelopeCustomFields *string `json:"allowEnvelopeCustomFields,omitempty"`
	AllowEnvelopeCustomFieldsMetadata *SettingsMetadata `json:"allowEnvelopeCustomFieldsMetadata,omitempty"`
	// When **true,** envelope publishing reporting is enabled.  **Note:** Only Admin users can change this setting. 
	AllowEnvelopePublishReporting *string `json:"allowEnvelopePublishReporting,omitempty"`
	AllowEnvelopePublishReportingMetadata *SettingsMetadata `json:"allowEnvelopePublishReportingMetadata,omitempty"`
	// Specifies whether the account has access to reports. 
	AllowEnvelopeReporting *string `json:"allowEnvelopeReporting,omitempty"`
	AllowEnvelopeReportingMetadata *SettingsMetadata `json:"allowEnvelopeReportingMetadata,omitempty"`
	// If the account plan does not include calculated fields, this setting allows an account to use them.  
	AllowExpression *string `json:"allowExpression,omitempty"`
	AllowExpressionMetadata *SettingsMetadata `json:"allowExpressionMetadata,omitempty"`
	// When **true,** signers are required to use Express Digital Signatures.  **Note:** Only Admin users can change this setting. 
	AllowExpressSignerCertificate *string `json:"allowExpressSignerCertificate,omitempty"`
	AllowExpressSignerCertificateMetadata *SettingsMetadata `json:"allowExpressSignerCertificateMetadata,omitempty"`
	// Boolean that specifies whether resource files can be used for extended sending.
	AllowExtendedSendingResourceFile *string `json:"allowExtendedSendingResourceFile,omitempty"`
	AllowExtendedSendingResourceFileMetadata *SettingsMetadata `json:"allowExtendedSendingResourceFileMetadata,omitempty"`
	// 
	AllowExternalLinkedAccounts *string `json:"allowExternalLinkedAccounts,omitempty"`
	AllowExternalLinkedAccountsMetadata *SettingsMetadata `json:"allowExternalLinkedAccountsMetadata,omitempty"`
	// When **true,** the account can configure and use signature pads for their recipients.  **Note:** Only Admin users can change this setting. 
	AllowExternalSignaturePad *string `json:"allowExternalSignaturePad,omitempty"`
	AllowExternalSignaturePadMetadata *SettingsMetadata `json:"allowExternalSignaturePadMetadata,omitempty"`
	// 
	AllowIDVForEUQualifiedSignatures *string `json:"allowIDVForEUQualifiedSignatures,omitempty"`
	AllowIDVForEUQualifiedSignaturesMetadata *SettingsMetadata `json:"allowIDVForEUQualifiedSignaturesMetadata,omitempty"`
	// When **true,** IDV Level 1 is allowed. The default value is **false.**
	AllowIDVLevel1 *string `json:"allowIDVLevel1,omitempty"`
	AllowIDVLevel1Metadata *SettingsMetadata `json:"allowIDVLevel1Metadata,omitempty"`
	// 
	AllowIDVLevel1Trial *string `json:"allowIDVLevel1Trial,omitempty"`
	AllowIDVLevel1TrialMetadata *SettingsMetadata `json:"allowIDVLevel1TrialMetadata,omitempty"`
	// 
	AllowIDVLevel2 *string `json:"allowIDVLevel2,omitempty"`
	AllowIDVLevel2Metadata *SettingsMetadata `json:"allowIDVLevel2Metadata,omitempty"`
	// 
	AllowIDVLevel3 *string `json:"allowIDVLevel3,omitempty"`
	AllowIDVLevel3Metadata *SettingsMetadata `json:"allowIDVLevel3Metadata,omitempty"`
	// 
	AllowIDVPlatform *string `json:"allowIDVPlatform,omitempty"`
	AllowIDVPlatformMetadata *SettingsMetadata `json:"allowIDVPlatformMetadata,omitempty"`
	// When **true,** the account administrator can enable in-person signing.  **Note:** Only SysAdmin users can change this setting.  
	AllowInPerson *string `json:"allowInPerson,omitempty"`
	// Account-level flag that determines the ability to perform In-Person Electronic Notary (IPEN) actions. 
	AllowInPersonElectronicNotary *string `json:"allowInPersonElectronicNotary,omitempty"`
	AllowInPersonElectronicNotaryMetadata *SettingsMetadata `json:"allowInPersonElectronicNotaryMetadata,omitempty"`
	AllowInPersonMetadata *SettingsMetadata `json:"allowInPersonMetadata,omitempty"`
	// When **true,** [Managed Stamps](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=cex1583277417267.html) are enabled.
	AllowManagedStamps *string `json:"allowManagedStamps,omitempty"`
	AllowManagedStampsMetadata *SettingsMetadata `json:"allowManagedStampsMetadata,omitempty"`
	// 
	AllowManagingEnvelopesOnBehalfOfOthers *string `json:"allowManagingEnvelopesOnBehalfOfOthers,omitempty"`
	AllowManagingEnvelopesOnBehalfOfOthersMetadata *SettingsMetadata `json:"allowManagingEnvelopesOnBehalfOfOthersMetadata,omitempty"`
	// When **true,** the Document Markup feature is enabled.  **Note:**  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level. 
	AllowMarkup *string `json:"allowMarkup,omitempty"`
	AllowMarkupMetadata *SettingsMetadata `json:"allowMarkupMetadata,omitempty"`
	// When **true,** account users can set their own [time zone settings](https://support.docusign.com/s/articles/How-do-I-modify-time-zone-settings-for-my-account).  **Note:** Only Admin users can change this setting. 
	AllowMemberTimeZone *string `json:"allowMemberTimeZone,omitempty"`
	AllowMemberTimeZoneMetadata *SettingsMetadata `json:"allowMemberTimeZoneMetadata,omitempty"`
	// When **true,** the account can use [merge fields](https://support.docusign.com/s/document-item?bundleId=evk1581360654067&topicId=ipy1581360621906.html) with DocuSign for Salesforce. 
	AllowMergeFields *string `json:"allowMergeFields,omitempty"`
	AllowMergeFieldsMetadata *SettingsMetadata `json:"allowMergeFieldsMetadata,omitempty"`
	// Specifies whether the account supports multiple brands. 
	AllowMultipleBrandProfiles *string `json:"allowMultipleBrandProfiles,omitempty"`
	AllowMultipleBrandProfilesMetadata *SettingsMetadata `json:"allowMultipleBrandProfilesMetadata,omitempty"`
	// When **true,** recipients can upload multiple signer attachments with a single attachment.  **Note:** Only Admin users can change this setting.
	AllowMultipleSignerAttachments *string `json:"allowMultipleSignerAttachments,omitempty"`
	AllowMultipleSignerAttachmentsMetadata *SettingsMetadata `json:"allowMultipleSignerAttachmentsMetadata,omitempty"`
	// Specifies whether users can use international numbers for phone authentication. 
	AllowNonUSPhoneAuth *string `json:"allowNonUSPhoneAuth,omitempty"`
	AllowNonUSPhoneAuthMetadata *SettingsMetadata `json:"allowNonUSPhoneAuthMetadata,omitempty"`
	// 
	AllowOcrOfEnvelopeDocuments *string `json:"allowOcrOfEnvelopeDocuments,omitempty"`
	AllowOcrOfEnvelopeDocumentsMetadata *SettingsMetadata `json:"allowOcrOfEnvelopeDocumentsMetadata,omitempty"`
	// When **true,** [offline signing](https://support.docusign.com/articles/Offline-access-with-the-DocuSign-Mobile-App-for-iOS-iPad-iPhone-iPod-Touch) is enabled for the account.  **Note:** Only Admin users can change this setting.
	AllowOfflineSigning *string `json:"allowOfflineSigning,omitempty"`
	AllowOfflineSigningMetadata *SettingsMetadata `json:"allowOfflineSigningMetadata,omitempty"`
	// When **true,** senders can use OpenTrust signer certificates.  **Note:** Only Admin users can change this setting.
	AllowOpenTrustSignerCertificate *string `json:"allowOpenTrustSignerCertificate,omitempty"`
	AllowOpenTrustSignerCertificateMetadata *SettingsMetadata `json:"allowOpenTrustSignerCertificateMetadata,omitempty"`
	// 
	AllowOrganizationDocusignMonitor *string `json:"allowOrganizationDocusignMonitor,omitempty"`
	// 
	AllowOrganizationDocusignMonitorFree *string `json:"allowOrganizationDocusignMonitorFree,omitempty"`
	AllowOrganizationDocusignMonitorFreeMetadata *SettingsMetadata `json:"allowOrganizationDocusignMonitorFreeMetadata,omitempty"`
	AllowOrganizationDocusignMonitorMetadata *SettingsMetadata `json:"allowOrganizationDocusignMonitorMetadata,omitempty"`
	// 
	AllowOrganizationDomainUserManagement *string `json:"allowOrganizationDomainUserManagement,omitempty"`
	AllowOrganizationDomainUserManagementMetadata *SettingsMetadata `json:"allowOrganizationDomainUserManagementMetadata,omitempty"`
	// Boolean that specifies whether [DocuSign Admin](/docs/admin-api/) is enabled for the account.
	AllowOrganizations *string `json:"allowOrganizations,omitempty"`
	AllowOrganizationsMetadata *SettingsMetadata `json:"allowOrganizationsMetadata,omitempty"`
	// 
	AllowOrganizationSsoManagement *string `json:"allowOrganizationSsoManagement,omitempty"`
	AllowOrganizationSsoManagementMetadata *SettingsMetadata `json:"allowOrganizationSsoManagementMetadata,omitempty"`
	// Organization-level flag that determines the ability to perform In-Person Electronic Notary (IPEN) actions. 
	AllowOrganizationToUseInPersonElectronicNotary *string `json:"allowOrganizationToUseInPersonElectronicNotary,omitempty"`
	AllowOrganizationToUseInPersonElectronicNotaryMetadata *SettingsMetadata `json:"allowOrganizationToUseInPersonElectronicNotaryMetadata,omitempty"`
	// 
	AllowOrganizationToUseRemoteNotary *string `json:"allowOrganizationToUseRemoteNotary,omitempty"`
	AllowOrganizationToUseRemoteNotaryMetadata *SettingsMetadata `json:"allowOrganizationToUseRemoteNotaryMetadata,omitempty"`
	// Org level flag that determines the availability to perform Third Party Notary (3PN) actions.
	AllowOrganizationToUseThirdPartyElectronicNotary *string `json:"allowOrganizationToUseThirdPartyElectronicNotary,omitempty"`
	AllowOrganizationToUseThirdPartyElectronicNotaryMetadata *SettingsMetadata `json:"allowOrganizationToUseThirdPartyElectronicNotaryMetadata,omitempty"`
	// 
	AllowParticipantRecipientType *string `json:"allowParticipantRecipientType,omitempty"`
	AllowParticipantRecipientTypeMetadata *SettingsMetadata `json:"allowParticipantRecipientTypeMetadata,omitempty"`
	// When **true,** payment processing is enabled for the account.  **Note:** Only Admin users can change this setting.
	AllowPaymentProcessing *string `json:"allowPaymentProcessing,omitempty"`
	AllowPaymentProcessingMetadata *SettingsMetadata `json:"allowPaymentProcessingMetadata,omitempty"`
	// 
	AllowPerformanceAnalytics *string `json:"allowPerformanceAnalytics,omitempty"`
	AllowPerformanceAnalyticsMetadata *SettingsMetadata `json:"allowPerformanceAnalyticsMetadata,omitempty"`
	// Boolean that specifies whether phone authentication is enabled for the account.
	AllowPhoneAuthentication *string `json:"allowPhoneAuthentication,omitempty"`
	AllowPhoneAuthenticationMetadata *SettingsMetadata `json:"allowPhoneAuthenticationMetadata,omitempty"`
	// Boolean that specifies whether users can override phone authentication.
	AllowPhoneAuthOverride *string `json:"allowPhoneAuthOverride,omitempty"`
	AllowPhoneAuthOverrideMetadata *SettingsMetadata `json:"allowPhoneAuthOverrideMetadata,omitempty"`
	// Reserved for DocuSign. This property returns the value **false** when listing account settings. This property is read-only.
	AllowPrivateSigningGroups *string `json:"allowPrivateSigningGroups,omitempty"`
	AllowPrivateSigningGroupsMetadata *SettingsMetadata `json:"allowPrivateSigningGroupsMetadata,omitempty"`
	// 
	AllowRecipientConnect *string `json:"allowRecipientConnect,omitempty"`
	AllowRecipientConnectMetadata *SettingsMetadata `json:"allowRecipientConnectMetadata,omitempty"`
	// When **true,** an account administrator can to turn on reminders and expiration defaults for the account.  **Note:** Only Admin users can change this setting. 
	AllowReminders *string `json:"allowReminders,omitempty"`
	AllowRemindersMetadata *SettingsMetadata `json:"allowRemindersMetadata,omitempty"`
	// 
	AllowRemoteNotary *string `json:"allowRemoteNotary,omitempty"`
	AllowRemoteNotaryMetadata *SettingsMetadata `json:"allowRemoteNotaryMetadata,omitempty"`
	// When **true,** resource files can be uploaded in branding. 
	AllowResourceFileBranding *string `json:"allowResourceFileBranding,omitempty"`
	AllowResourceFileBrandingMetadata *SettingsMetadata `json:"allowResourceFileBrandingMetadata,omitempty"`
	// When **true,** account administrators can specify that signers are required to use SAFE-BioPharma digital signatures.  **Note:** Only Admin users can change this setting. 
	AllowSafeBioPharmaSignerCertificate *string `json:"allowSafeBioPharmaSignerCertificate,omitempty"`
	AllowSafeBioPharmaSignerCertificateMetadata *SettingsMetadata `json:"allowSafeBioPharmaSignerCertificateMetadata,omitempty"`
	// \"true\" if the account has permission to use the scheduled sending feature to send envelopes at a specified datetime in the future, \"false\" otherwise.
	AllowScheduledSending *string `json:"allowScheduledSending,omitempty"`
	AllowScheduledSendingMetadata *SettingsMetadata `json:"allowScheduledSendingMetadata,omitempty"`
	// Boolean that specifies whether a DocuSign Signature Appliance can be used with the account.
	AllowSecurityAppliance *string `json:"allowSecurityAppliance,omitempty"`
	AllowSecurityApplianceMetadata *SettingsMetadata `json:"allowSecurityApplianceMetadata,omitempty"`
	// 
	AllowSendingEnvelopesOnBehalfOfOthers *string `json:"allowSendingEnvelopesOnBehalfOfOthers,omitempty"`
	AllowSendingEnvelopesOnBehalfOfOthersMetadata *SettingsMetadata `json:"allowSendingEnvelopesOnBehalfOfOthersMetadata,omitempty"`
	// When **true,** the account admin can enable the Send to Certified Delivery feature on the account. 
	AllowSendToCertifiedDelivery *string `json:"allowSendToCertifiedDelivery,omitempty"`
	AllowSendToCertifiedDeliveryMetadata *SettingsMetadata `json:"allowSendToCertifiedDeliveryMetadata,omitempty"`
	// When **true,** the account admin can enable the Send to Intermediary feature on the account. 
	AllowSendToIntermediary *string `json:"allowSendToIntermediary,omitempty"`
	AllowSendToIntermediaryMetadata *SettingsMetadata `json:"allowSendToIntermediaryMetadata,omitempty"`
	// When **true,** the account can use templates. 
	AllowServerTemplates *string `json:"allowServerTemplates,omitempty"`
	AllowServerTemplatesMetadata *SettingsMetadata `json:"allowServerTemplatesMetadata,omitempty"`
	// 
	AllowSetEmbeddedRecipientStartURL *string `json:"allowSetEmbeddedRecipientStartURL,omitempty"`
	AllowSetEmbeddedRecipientStartURLMetadata *SettingsMetadata `json:"allowSetEmbeddedRecipientStartURLMetadata,omitempty"`
	// When **true,** shared tabs are enabled for the account.  **Note:** Only Admin users can change this setting. 
	AllowSharedTabs *string `json:"allowSharedTabs,omitempty"`
	AllowSharedTabsMetadata *SettingsMetadata `json:"allowSharedTabsMetadata,omitempty"`
	// When **true,** Signature Stamps are enabled.  **Note:** Only Admin users can change this setting.
	AllowSignatureStamps *string `json:"allowSignatureStamps,omitempty"`
	AllowSignatureStampsMetadata *SettingsMetadata `json:"allowSignatureStampsMetadata,omitempty"`
	// When **true,** recipients can sign documents from the home page.  **Note:** Only Admin users can change this setting.
	AllowSignDocumentFromHomePage *string `json:"allowSignDocumentFromHomePage,omitempty"`
	AllowSignDocumentFromHomePageMetadata *SettingsMetadata `json:"allowSignDocumentFromHomePageMetadata,omitempty"`
	// When **true,** the recipient of an envelope sent from this account can reassign it to another person.  **Note:** Only Admin users can change this setting. 
	AllowSignerReassign *string `json:"allowSignerReassign,omitempty"`
	AllowSignerReassignMetadata *SettingsMetadata `json:"allowSignerReassignMetadata,omitempty"`
	// When **true,** an account administrator can override the ability of an envelope recipient to reassign it to another person.  **Note:** Only Admin users can change this setting.
	AllowSignerReassignOverride *string `json:"allowSignerReassignOverride,omitempty"`
	AllowSignerReassignOverrideMetadata *SettingsMetadata `json:"allowSignerReassignOverrideMetadata,omitempty"`
	// Boolean that specifies whether Signing and App Extensions are allowed.
	AllowSigningExtensions *string `json:"allowSigningExtensions,omitempty"`
	AllowSigningExtensionsMetadata *SettingsMetadata `json:"allowSigningExtensionsMetadata,omitempty"`
	// When **true,** the account allows signing groups. This setting is only shown in responses that list account settings. This property is read-only.
	AllowSigningGroups *string `json:"allowSigningGroups,omitempty"`
	AllowSigningGroupsMetadata *SettingsMetadata `json:"allowSigningGroupsMetadata,omitempty"`
	// 
	AllowSigningInsights *string `json:"allowSigningInsights,omitempty"`
	AllowSigningInsightsMetadata *SettingsMetadata `json:"allowSigningInsightsMetadata,omitempty"`
	// Boolean that specifies whether the account supports radio buttons on tabs [Radio CustomTabType](/docs/esign-soap-api/reference/sending-group/tab/).
	AllowSigningRadioDeselect *string `json:"allowSigningRadioDeselect,omitempty"`
	AllowSigningRadioDeselectMetadata *SettingsMetadata `json:"allowSigningRadioDeselectMetadata,omitempty"`
	// When **true,** the account administrator can enable the Sign Now feature. 
	AllowSignNow *string `json:"allowSignNow,omitempty"`
	// Metadata that indicates whether the `allowSignNow` property is editable. 
	AllowSignNowMetadata *string `json:"allowSignNowMetadata,omitempty"`
	// 
	AllowSMSDelivery *string `json:"allowSMSDelivery,omitempty"`
	AllowSMSDeliveryMetadata *SettingsMetadata `json:"allowSMSDeliveryMetadata,omitempty"`
	// Deprecated.
	AllowSocialIdLogin *string `json:"allowSocialIdLogin,omitempty"`
	AllowSocialIdLoginMetadata *SettingsMetadata `json:"allowSocialIdLoginMetadata,omitempty"`
	// When **true,** this user can include supplemental documents.
	AllowSupplementalDocuments *string `json:"allowSupplementalDocuments,omitempty"`
	AllowSupplementalDocumentsMetadata *SettingsMetadata `json:"allowSupplementalDocumentsMetadata,omitempty"`
	// Account level flag that determines the availability to perform Third Party Notary (3PN) actions.
	AllowThirdPartyElectronicNotary *string `json:"allowThirdPartyElectronicNotary,omitempty"`
	AllowThirdPartyElectronicNotaryMetadata *SettingsMetadata `json:"allowThirdPartyElectronicNotaryMetadata,omitempty"`
	// 
	AllowTransactionsWorkspace *string `json:"allowTransactionsWorkspace,omitempty"`
	AllowTransactionsWorkspaceMetadata *SettingsMetadata `json:"allowTransactionsWorkspaceMetadata,omitempty"`
	// 
	AllowTransactionsWorkspaceOriginal *string `json:"allowTransactionsWorkspaceOriginal,omitempty"`
	AllowTransactionsWorkspaceOriginalMetadata *SettingsMetadata `json:"allowTransactionsWorkspaceOriginalMetadata,omitempty"`
	// 
	AllowUsersToAccessDirectory *string `json:"allowUsersToAccessDirectory,omitempty"`
	AllowUsersToAccessDirectoryMetadata *SettingsMetadata `json:"allowUsersToAccessDirectoryMetadata,omitempty"`
	// 
	AllowValueInsights *string `json:"allowValueInsights,omitempty"`
	AllowValueInsightsMetadata *SettingsMetadata `json:"allowValueInsightsMetadata,omitempty"`
	// 
	AllowWebForms *string `json:"allowWebForms,omitempty"`
	AllowWebFormsMetadata *SettingsMetadata `json:"allowWebFormsMetadata,omitempty"`
	// 
	AllowWhatsAppDelivery *string `json:"allowWhatsAppDelivery,omitempty"`
	AllowWhatsAppDeliveryMetadata *SettingsMetadata `json:"allowWhatsAppDeliveryMetadata,omitempty"`
	// This property determines how template anchor tabs are applied.  Valid values are:  - `document`: Anchor tabs are applied only to the document that you specify.  - `envelope`: Anchor tabs are applied to all of the documents in the envelope associated with the template.  **Note:** When you are using the `anchorPopulationScope` property with a Composite Template, the value `document` is supported only with a single server template and a single inline template.  
	AnchorPopulationScope *string `json:"anchorPopulationScope,omitempty"`
	AnchorPopulationScopeMetadata *SettingsMetadata `json:"anchorPopulationScopeMetadata,omitempty"`
	// Reserved for DocuSign. 
	AnchorTagVersionedPlacementEnabled *string `json:"anchorTagVersionedPlacementEnabled,omitempty"`
	AnchorTagVersionedPlacementMetadataEnabled *SettingsMetadata `json:"anchorTagVersionedPlacementMetadataEnabled,omitempty"`
	// When **true,** envelope documents are included as a PDF file attachment to \"signing completed\" emails.  **Note:** Only SysAdmin users can change this setting.
	AttachCompletedEnvelope *string `json:"attachCompletedEnvelope,omitempty"`
	AttachCompletedEnvelopeMetadata *SettingsMetadata `json:"attachCompletedEnvelopeMetadata,omitempty"`
	// Sets when authentication checks are applied for recipient envelope access. This setting only applies to the following ID checks:   - Phone Authentication - SMS Authentication - Knowledge-Based ID  This setting takes one of the following options:   - `initial_access`: The authentication check always applies the first time a recipient accesses the documents. Recipients are not asked to authenticate again when they access the documents from the same browser on the same device. If the recipient attempts to access the documents from a different browser or a different device, the recipient must pass authentication again. Once authenticated, that recipient is not challenged again on the new device or browser. The ability for a recipient to skip authentication for documents is limited to documents sent from the same sending account. - `each_access`: Authentication checks apply every time a recipient attempts to access the envelope. However, you can configure the Authentication Expiration setting to allow recipients to skip authentication when they have recently passed authentication by setting a variable time frame.  **Note:** Only Admin users can change this setting. 
	AuthenticationCheck *string `json:"authenticationCheck,omitempty"`
	AuthenticationCheckMetadata *SettingsMetadata `json:"authenticationCheckMetadata,omitempty"`
	// Specifies how auto-navigation works. Valid values are:  - `off` - `required_fields` - `required_and_blank_fields` - `all_fields` - `page_then_required_fields` - `page_then_required_and_blank_fields` - `page_then_all_fields` 
	AutoNavRule *string `json:"autoNavRule,omitempty"`
	AutoNavRuleMetadata *SettingsMetadata `json:"autoNavRuleMetadata,omitempty"`
	// Boolean that specifies whether to automatically provision a user membership in the account for accountless recipients. (Also known as Just-in-Time provisioning.)
	AutoProvisionSignerAccount *string `json:"autoProvisionSignerAccount,omitempty"`
	AutoProvisionSignerAccountMetadata *SettingsMetadata `json:"autoProvisionSignerAccountMetadata,omitempty"`
	// Boolean that specifies whether BCC for Email Archive is enabled for the account. BCC for Email Archive allows you to set up an archive email address so that a BCC copy of an envelope is sent only to that address.
	BccEmailArchive *string `json:"bccEmailArchive,omitempty"`
	BccEmailArchiveMetadata *SettingsMetadata `json:"bccEmailArchiveMetadata,omitempty"`
	// Reserved for DocuSign. 
	BetaSwitchConfiguration *string `json:"betaSwitchConfiguration,omitempty"`
	BetaSwitchConfigurationMetadata *SettingsMetadata `json:"betaSwitchConfigurationMetadata,omitempty"`
	BillingAddress *AddressInformation `json:"billingAddress,omitempty"`
	BillingAddressMetadata *SettingsMetadata `json:"billingAddressMetadata,omitempty"`
	// When **true,** this user can use the bulk send feature for the account.
	BulkSend *string `json:"bulkSend,omitempty"`
	// 
	BulkSendActionResendLimit *string `json:"bulkSendActionResendLimit,omitempty"`
	// 
	BulkSendMaxCopiesInBatch *string `json:"bulkSendMaxCopiesInBatch,omitempty"`
	// 
	BulkSendMaxUnprocessedEnvelopesCount *string `json:"bulkSendMaxUnprocessedEnvelopesCount,omitempty"`
	BulkSendMetadata *SettingsMetadata `json:"bulkSendMetadata,omitempty"`
	// When **true,** account administrators can self-brand their sending console through the DocuSign console.
	CanSelfBrandSend *string `json:"canSelfBrandSend,omitempty"`
	CanSelfBrandSendMetadata *SettingsMetadata `json:"canSelfBrandSendMetadata,omitempty"`
	// When **true,** account administrators can self-brand their signing console through the DocuSign console.
	CanSelfBrandSign *string `json:"canSelfBrandSign,omitempty"`
	CanSelfBrandSignMetadata *SettingsMetadata `json:"canSelfBrandSignMetadata,omitempty"`
	// 
	CanUseSalesforceOAuth *string `json:"canUseSalesforceOAuth,omitempty"`
	CanUseSalesforceOAuthMetadata *SettingsMetadata `json:"canUseSalesforceOAuthMetadata,omitempty"`
	// Reserved for DocuSign.
	CaptureVoiceRecording *string `json:"captureVoiceRecording,omitempty"`
	CaptureVoiceRecordingMetadata *SettingsMetadata `json:"captureVoiceRecordingMetadata,omitempty"`
	// 
	Cfr21SimplifiedSigningEnabled *string `json:"cfr21SimplifiedSigningEnabled,omitempty"`
	Cfr21SimplifiedSigningEnabledMetadata *SettingsMetadata `json:"cfr21SimplifiedSigningEnabledMetadata,omitempty"`
	// Boolean that specifies whether to use a shorter/wider format when generating the CFR Part 11 signature image.
	CfrUseWideImage *string `json:"cfrUseWideImage,omitempty"`
	CfrUseWideImageMetadata *SettingsMetadata `json:"cfrUseWideImageMetadata,omitempty"`
	// 
	CheckForMultipleAdminsOnAccount *string `json:"checkForMultipleAdminsOnAccount,omitempty"`
	CheckForMultipleAdminsOnAccountMetadata *SettingsMetadata `json:"checkForMultipleAdminsOnAccountMetadata,omitempty"`
	// Boolean that specifies whether the signers of the envelopes from this account use a signature with a DocuSign chrome around it or not.
	ChromeSignatureEnabled *string `json:"chromeSignatureEnabled,omitempty"`
	ChromeSignatureEnabledMetadata *SettingsMetadata `json:"chromeSignatureEnabledMetadata,omitempty"`
	// When **true,** the text of comments is included in email notifications when a comment is posted.  **Note:**  If the envelope requires additional recipient authentication, comment text is not included.
	CommentEmailShowMessageText *string `json:"commentEmailShowMessageText,omitempty"`
	CommentEmailShowMessageTextMetadata *SettingsMetadata `json:"commentEmailShowMessageTextMetadata,omitempty"`
	// When **true** and comments are enabled for the account, senders can disable comments for an envelope through the **Advanced Options** menu that appears during the sending process.
	CommentsAllowEnvelopeOverride *string `json:"commentsAllowEnvelopeOverride,omitempty"`
	CommentsAllowEnvelopeOverrideMetadata *SettingsMetadata `json:"commentsAllowEnvelopeOverrideMetadata,omitempty"`
	// When **true,** conditional fields can be used in documents.  **Note:** Only Admin users can change this setting.
	ConditionalFieldsEnabled *string `json:"conditionalFieldsEnabled,omitempty"`
	ConditionalFieldsEnabledMetadata *SettingsMetadata `json:"conditionalFieldsEnabledMetadata,omitempty"`
	// Speficies how often to display the consumer disclosure.  Valid values are:  - `once`: Per account, the supplemental document is displayed once only per `userId`.  - `always`: Per envelope, the supplemental document is displayed once only per `userId`.  - `each_access`: Per envelope, the supplemental document is displayed once only per `recipientId`. 
	ConsumerDisclosureFrequency *string `json:"consumerDisclosureFrequency,omitempty"`
	ConsumerDisclosureFrequencyMetadata *SettingsMetadata `json:"consumerDisclosureFrequencyMetadata,omitempty"`
	// Boolean that specifies whether to enable PDF form fields to get converted to DocuSign secure fields when the document is added or uploaded to an envelope.
	ConvertPdfFields *string `json:"convertPdfFields,omitempty"`
	ConvertPdfFieldsMetadata *SettingsMetadata `json:"convertPdfFieldsMetadata,omitempty"`
	// Specifies how data is shared for tabs with the same tabLabel. Valid values are:  - `document`: Tabs in a document with the same label populate with the same data. - `envelope`: Tabs in all documents in the envelope with the same label populate with the same data. - `notset`:   Use the global account setting.  This setting applies to the following tab types:  - Check box - Company - Data field - Drop-down list - Full name - Formula - Note - Title  **Note:** Only Admin users can change this setting. Changing this setting affects envelopes that have been sent but not completed.
	DataPopulationScope *string `json:"dataPopulationScope,omitempty"`
	DataPopulationScopeMetadata *SettingsMetadata `json:"dataPopulationScopeMetadata,omitempty"`
	// 
	DefaultToAdvancedEnvelopesFilterForm *string `json:"defaultToAdvancedEnvelopesFilterForm,omitempty"`
	DefaultToAdvancedEnvelopesFilterFormMetadata *SettingsMetadata `json:"defaultToAdvancedEnvelopesFilterFormMetadata,omitempty"`
	// 
	DisableAutoTemplateMatching *string `json:"disableAutoTemplateMatching,omitempty"`
	DisableAutoTemplateMatchingMetadata *SettingsMetadata `json:"disableAutoTemplateMatchingMetadata,omitempty"`
	// When **true,** the mobile app distributor key is prevented from connecting for account users.
	DisableMobileApp *string `json:"disableMobileApp,omitempty"`
	DisableMobileAppMetadata *SettingsMetadata `json:"disableMobileAppMetadata,omitempty"`
	// When **true,** push notifications are disabled for the account.  **Note:** Only Admin users can change this setting.
	DisableMobilePushNotifications *string `json:"disableMobilePushNotifications,omitempty"`
	DisableMobilePushNotificationsMetadata *SettingsMetadata `json:"disableMobilePushNotificationsMetadata,omitempty"`
	// When **true,** sending from a mobile application is disabled.  **Note:** Only Admin users can change this setting.
	DisableMobileSending *string `json:"disableMobileSending,omitempty"`
	DisableMobileSendingMetadata *SettingsMetadata `json:"disableMobileSendingMetadata,omitempty"`
	// When **true,** account users cannot be logged into multiple sessions at the same time.  **Note:** Only Admin users can change this setting.
	DisableMultipleSessions *string `json:"disableMultipleSessions,omitempty"`
	DisableMultipleSessionsMetadata *SettingsMetadata `json:"disableMultipleSessionsMetadata,omitempty"`
	DisablePurgeNotificationsForSenderMetadata *SettingsMetadata `json:"disablePurgeNotificationsForSenderMetadata,omitempty"`
	// When **true,** signers cannot view certificates of completion.
	DisableSignerCertView *string `json:"disableSignerCertView,omitempty"`
	DisableSignerCertViewMetadata *SettingsMetadata `json:"disableSignerCertViewMetadata,omitempty"`
	// When **true,** signers cannot view envelope history.
	DisableSignerHistoryView *string `json:"disableSignerHistoryView,omitempty"`
	DisableSignerHistoryViewMetadata *SettingsMetadata `json:"disableSignerHistoryViewMetadata,omitempty"`
	// When **true,** the **Select Style** option is hidden from signers and they must draw their signature instead. 
	DisableStyleSignature *string `json:"disableStyleSignature,omitempty"`
	DisableStyleSignatureMetadata *SettingsMetadata `json:"disableStyleSignatureMetadata,omitempty"`
	// When **true,** signers cannot upload custom image files of their signature and initials.  **Note:** Only Admin users can change this setting.
	DisableUploadSignature *string `json:"disableUploadSignature,omitempty"`
	DisableUploadSignatureMetadata *SettingsMetadata `json:"disableUploadSignatureMetadata,omitempty"`
	// When **true,** the User Sharing feature is disabled for the account.
	DisableUserSharing *string `json:"disableUserSharing,omitempty"`
	DisableUserSharingMetadata *SettingsMetadata `json:"disableUserSharingMetadata,omitempty"`
	// Boolean that specifies whether to display a Beta switch for your app.
	DisplayBetaSwitch *string `json:"displayBetaSwitch,omitempty"`
	DisplayBetaSwitchMetadata *SettingsMetadata `json:"displayBetaSwitchMetadata,omitempty"`
	// Sets the account document upload restriction for non-account administrators. Valid values are:  - `no_restrictions`: There are no restrictions on the type of documents that can be uploaded. - `allow_pdf_only`: Non-administrators can only upload PDF files. - `no_upload`: Non-administrators cannot upload files.  **Note:** Only Admin users can change this setting. 
	DocumentConversionRestrictions *string `json:"documentConversionRestrictions,omitempty"`
	DocumentConversionRestrictionsMetadata *SettingsMetadata `json:"documentConversionRestrictionsMetadata,omitempty"`
	// Sets a document retention period, which controls the number of days that DocuSign retains documents after they have reached a completed,declined, or voided state. When document retention is enabled for the account, the default value is `356` days.
	DocumentRetention *string `json:"documentRetention,omitempty"`
	DocumentRetentionMetadata *SettingsMetadata `json:"documentRetentionMetadata,omitempty"`
	// When **true** and `documentRetention` is set, document fields and metadata are also purged after the document retention period ends. The default value is **false.**  **Note:** Only Admins can change this setting.
	DocumentRetentionPurgeTabs *string `json:"documentRetentionPurgeTabs,omitempty"`
	// Configures the Document Visibility feature for the account. Valid values are:  - `Off`: Document Visibility is not active for the account. - `MustSignToViewUnlessSenderAccount`: Document Visibility is enabled for all envelopes sent from the account. Any member of the sending account can view all of the documents in an envelope. - `MustSignToViewUnlessSender`: Document Visibility is enabled for all envelopes sent from the account. Only the sender can view all of the documents in an envelope. - `SenderCanSetMustSignToViewUnlessSenderAccount`: The sender has the option to enable Document Visibility for an envelope. When enabled for an envelope, all of the documents within it are still visible to any member of the sending account. Vd- `SenderCanSetMustSignToViewUnlessSender`: The sender has the option to enable Document Visibility for an envelope. When enabled for an envelope, all of the documents in the envelope are visible only to the sender.  **Note:** For this configuration to take effect, `allowDocumentVisibility` must be set to **true.**
	DocumentVisibility *string `json:"documentVisibility,omitempty"`
	DocumentVisibilityMetadata *SettingsMetadata `json:"documentVisibilityMetadata,omitempty"`
	// 
	DraftEnvelopeRetention *string `json:"draftEnvelopeRetention,omitempty"`
	DraftEnvelopeRetentionMetadata *SettingsMetadata `json:"draftEnvelopeRetentionMetadata,omitempty"`
	// 
	DssEnableProvisioningPenConfigurationRadminOption *string `json:"dss_EnableProvisioningPenConfiguration_RadminOption,omitempty"`
	// 
	DssSIGN28411EnableLeavePagePromptRadminOption *string `json:"dss_SIGN_28411_EnableLeavePagePrompt_RadminOption,omitempty"`
	// 
	DssSIGN29182SlideUpBarRadminOption *string `json:"dss_SIGN_29182_SlideUpBar_RadminOption,omitempty"`
	// Specifies the version of the email templates used in an account. If new signing is selected in a member's Admin page, the user is updated to the newest version (1.1), the minimum version of email supported for the account.
	EmailTemplateVersion *string `json:"emailTemplateVersion,omitempty"`
	EmailTemplateVersionMetadata *SettingsMetadata `json:"emailTemplateVersionMetadata,omitempty"`
	// When **true,** enables Access Code Generator on the account.
	EnableAccessCodeGenerator *string `json:"enableAccessCodeGenerator,omitempty"`
	EnableAccessCodeGeneratorMetadata *SettingsMetadata `json:"enableAccessCodeGeneratorMetadata,omitempty"`
	// 
	EnableAccountWideSearch *string `json:"enableAccountWideSearch,omitempty"`
	EnableAccountWideSearchMetadata *SettingsMetadata `json:"enableAccountWideSearchMetadata,omitempty"`
	// 
	EnableAdmHealthcare *string `json:"enableAdmHealthcare,omitempty"`
	EnableAdmHealthcareMetadata *SettingsMetadata `json:"enableAdmHealthcareMetadata,omitempty"`
	// 
	EnableAdvancedEnvelopesSearch *string `json:"enableAdvancedEnvelopesSearch,omitempty"`
	EnableAdvancedEnvelopesSearchMetadata *SettingsMetadata `json:"enableAdvancedEnvelopesSearchMetadata,omitempty"`
	// When **true,** enables Advanced Payments for the account.
	EnableAdvancedPayments *string `json:"enableAdvancedPayments,omitempty"`
	EnableAdvancedPaymentsMetadata *SettingsMetadata `json:"enableAdvancedPaymentsMetadata,omitempty"`
	// When **true,** enables advanced PowerForms for the account.
	EnableAdvancedPowerForms *string `json:"enableAdvancedPowerForms,omitempty"`
	EnableAdvancedPowerFormsMetadata *SettingsMetadata `json:"enableAdvancedPowerFormsMetadata,omitempty"`
	// 
	EnableAgreementActionsForCLM *string `json:"enableAgreementActionsForCLM,omitempty"`
	EnableAgreementActionsForCLMMetadata *SettingsMetadata `json:"enableAgreementActionsForCLMMetadata,omitempty"`
	// 
	EnableAgreementActionsForESign *string `json:"enableAgreementActionsForESign,omitempty"`
	EnableAgreementActionsForESignMetadata *SettingsMetadata `json:"enableAgreementActionsForESignMetadata,omitempty"`
	// When **true,** enables the account to set the AutoNav rule setting, which enables a sender to override the auto-navigation setting per envelope.  **Note:** To change this setting, you must be a SysAdmin user or `EnableAutoNavByDSAdmin must be set.
	EnableAutoNav *string `json:"enableAutoNav,omitempty"`
	EnableAutoNavMetadata *SettingsMetadata `json:"enableAutoNavMetadata,omitempty"`
	// 
	EnableBccDummyLink *string `json:"enableBccDummyLink,omitempty"`
	EnableBccDummyLinkMetadata *SettingsMetadata `json:"enableBccDummyLinkMetadata,omitempty"`
	// When **true,** calculated fields are enabled for the account.   **Note:** This setting can be changed only by Admin users, and only if the account-level setting `allowExpression` is set to **true.**
	EnableCalculatedFields *string `json:"enableCalculatedFields,omitempty"`
	EnableCalculatedFieldsMetadata *SettingsMetadata `json:"enableCalculatedFieldsMetadata,omitempty"`
	// 
	EnableClickPlus *string `json:"enableClickPlus,omitempty"`
	// 
	EnableClickPlusConditionalContent *string `json:"enableClickPlusConditionalContent,omitempty"`
	EnableClickPlusConditionalContentMetaData *SettingsMetadata `json:"enableClickPlusConditionalContentMetaData,omitempty"`
	// 
	EnableClickPlusCustomFields *string `json:"enableClickPlusCustomFields,omitempty"`
	EnableClickPlusCustomFieldsMetaData *SettingsMetadata `json:"enableClickPlusCustomFieldsMetaData,omitempty"`
	// 
	EnableClickPlusCustomStyle *string `json:"enableClickPlusCustomStyle,omitempty"`
	EnableClickPlusCustomStyleMetaData *SettingsMetadata `json:"enableClickPlusCustomStyleMetaData,omitempty"`
	// 
	EnableClickPlusDynamicContent *string `json:"enableClickPlusDynamicContent,omitempty"`
	EnableClickPlusDynamicContentMetaData *SettingsMetadata `json:"enableClickPlusDynamicContentMetaData,omitempty"`
	EnableClickPlusMetaData *SettingsMetadata `json:"enableClickPlusMetaData,omitempty"`
	// Boolean that specifies whether clickwraps are enabled in your app. A [clickwrap](/docs/click-api/click101/) is an iframe that you embed in your own website or app.
	EnableClickwraps *string `json:"enableClickwraps,omitempty"`
	EnableClickwrapsMetadata *SettingsMetadata `json:"enableClickwrapsMetadata,omitempty"`
	// 
	EnableCombinedPDFDownloadForSBS *string `json:"enableCombinedPDFDownloadForSBS,omitempty"`
	// 
	EnableCommentsHistoryDownloadInSigning *string `json:"enableCommentsHistoryDownloadInSigning,omitempty"`
	EnableCommentsHistoryDownloadInSigningMetadata *SettingsMetadata `json:"enableCommentsHistoryDownloadInSigningMetadata,omitempty"`
	// 
	EnableContactSuggestions *string `json:"enableContactSuggestions,omitempty"`
	EnableContactSuggestionsMetadata *SettingsMetadata `json:"enableContactSuggestionsMetadata,omitempty"`
	// When **true,** enables customer satisfaction metric tracking for the account.
	EnableCustomerSatisfactionMetricTracking *string `json:"enableCustomerSatisfactionMetricTracking,omitempty"`
	EnableCustomerSatisfactionMetricTrackingMetadata *SettingsMetadata `json:"enableCustomerSatisfactionMetricTrackingMetadata,omitempty"`
	// 
	EnableDSigEUAdvancedPens *string `json:"enableDSigEUAdvancedPens,omitempty"`
	EnableDSigEUAdvancedPensMetadata *SettingsMetadata `json:"enableDSigEUAdvancedPensMetadata,omitempty"`
	// 
	EnableDSigExpressPens *string `json:"enableDSigExpressPens,omitempty"`
	EnableDSigExpressPensMetadata *SettingsMetadata `json:"enableDSigExpressPensMetadata,omitempty"`
	// 
	EnableDSigIDCheckForAESPens *string `json:"enableDSigIDCheckForAESPens,omitempty"`
	EnableDSigIDCheckForAESPensMetadata *SettingsMetadata `json:"enableDSigIDCheckForAESPensMetadata,omitempty"`
	// 
	EnableDSigIDCheckInPersonForQESPens *string `json:"enableDSigIDCheckInPersonForQESPens,omitempty"`
	EnableDSigIDCheckInPersonForQESPensMetadata *SettingsMetadata `json:"enableDSigIDCheckInPersonForQESPensMetadata,omitempty"`
	// 
	EnableDSigIDCheckRemoteForQESPens *string `json:"enableDSigIDCheckRemoteForQESPens,omitempty"`
	EnableDSigIDCheckRemoteForQESPensMetadata *SettingsMetadata `json:"enableDSigIDCheckRemoteForQESPensMetadata,omitempty"`
	// 
	EnableDSigIDVerificationPens *string `json:"enableDSigIDVerificationPens,omitempty"`
	EnableDSigIDVerificationPensMetadata *SettingsMetadata `json:"enableDSigIDVerificationPensMetadata,omitempty"`
	// 
	EnableDSigIDVerificationPremierPens *string `json:"enableDSigIDVerificationPremierPens,omitempty"`
	EnableDSigIDVerificationPremierPensMetadata *SettingsMetadata `json:"enableDSigIDVerificationPremierPensMetadata,omitempty"`
	// Reserved for DocuSign.
	EnableDSPro *string `json:"enableDSPro,omitempty"`
	EnableDSProMetadata *SettingsMetadata `json:"enableDSProMetadata,omitempty"`
	EnableEnforceTlsEmailsSettingMetadata *SettingsMetadata `json:"enableEnforceTlsEmailsSettingMetadata,omitempty"`
	// When **true,** enables the account administrator to control envelope stamping for an account (stamping the `envelopeId` in the document margins).  **Note:** This setting can be changed only by Admin users, and only if the account-level setting `enableEnvelopeStampingByDSAdmin` is set to **true.**
	EnableEnvelopeStampingByAccountAdmin *string `json:"enableEnvelopeStampingByAccountAdmin,omitempty"`
	EnableEnvelopeStampingByAccountAdminMetadata *SettingsMetadata `json:"enableEnvelopeStampingByAccountAdminMetadata,omitempty"`
	// When **true,** enables the DocuSign administrator to control envelope stamping for an account (placement of the `envelopeId`).
	EnableEnvelopeStampingByDSAdmin *string `json:"enableEnvelopeStampingByDSAdmin,omitempty"`
	EnableEnvelopeStampingByDSAdminMetadata *SettingsMetadata `json:"enableEnvelopeStampingByDSAdminMetadata,omitempty"`
	// 
	EnableESignAPIHourlyLimitManagement *string `json:"enableESignAPIHourlyLimitManagement,omitempty"`
	EnableESignAPIHourlyLimitManagementMetadata *SettingsMetadata `json:"enableESignAPIHourlyLimitManagementMetadata,omitempty"`
	// 
	EnableEsignCommunities *string `json:"enableEsignCommunities,omitempty"`
	EnableEsignCommunitiesMetadata *SettingsMetadata `json:"enableEsignCommunitiesMetadata,omitempty"`
	// 
	EnableIDFxAccountlessSMSAuthForPart11 *string `json:"enableIDFxAccountlessSMSAuthForPart11,omitempty"`
	EnableIDFxAccountlessSMSAuthForPart11Metadata *SettingsMetadata `json:"enableIDFxAccountlessSMSAuthForPart11Metadata,omitempty"`
	// 
	EnableIDFxIntuitKBA *string `json:"enableIDFxIntuitKBA,omitempty"`
	EnableIDFxIntuitKBAMetadata *SettingsMetadata `json:"enableIDFxIntuitKBAMetadata,omitempty"`
	// 
	EnableIDFxPhoneAuthentication *string `json:"enableIDFxPhoneAuthentication,omitempty"`
	EnableIDFxPhoneAuthenticationMetadata *SettingsMetadata `json:"enableIDFxPhoneAuthenticationMetadata,omitempty"`
	// 
	EnableIdfxPhoneAuthSignatureAuthStatus *string `json:"enableIdfxPhoneAuthSignatureAuthStatus,omitempty"`
	EnableIdfxPhoneAuthSignatureAuthStatusMetadata *SettingsMetadata `json:"enableIdfxPhoneAuthSignatureAuthStatusMetadata,omitempty"`
	// 
	EnableInboxBrowseViewsPoweredByElasticSearch *string `json:"enableInboxBrowseViewsPoweredByElasticSearch,omitempty"`
	EnableInboxBrowseViewsPoweredByElasticSearchMetadata *SettingsMetadata `json:"enableInboxBrowseViewsPoweredByElasticSearchMetadata,omitempty"`
	// 
	EnableInboxRelevanceSort *string `json:"enableInboxRelevanceSort,omitempty"`
	// 
	EnableInboxRelevanceSortForRecentAccounts *string `json:"enableInboxRelevanceSortForRecentAccounts,omitempty"`
	EnableInboxRelevanceSortForRecentAccountsMetadata *SettingsMetadata `json:"enableInboxRelevanceSortForRecentAccountsMetadata,omitempty"`
	EnableInboxRelevanceSortMetadata *SettingsMetadata `json:"enableInboxRelevanceSortMetadata,omitempty"`
	// 
	EnableInBrowserEditor *string `json:"enableInBrowserEditor,omitempty"`
	EnableInBrowserEditorMetadata *SettingsMetadata `json:"enableInBrowserEditorMetadata,omitempty"`
	// 
	EnableKeyTermsSuggestionsByDocumentType *string `json:"enableKeyTermsSuggestionsByDocumentType,omitempty"`
	EnableKeyTermsSuggestionsByDocumentTypeMetadata *SettingsMetadata `json:"enableKeyTermsSuggestionsByDocumentTypeMetadata,omitempty"`
	EnableParticipantRecipientSettingMetadata *SettingsMetadata `json:"enableParticipantRecipientSettingMetadata,omitempty"`
	// When **true,** payment processing is enabled for this account.  **Note:** This setting can be changed only by Admin users, and only if the account-level setting `allowPaymentProcessing` is set.
	EnablePaymentProcessing *string `json:"enablePaymentProcessing,omitempty"`
	EnablePaymentProcessingMetadata *SettingsMetadata `json:"enablePaymentProcessingMetadata,omitempty"`
	// 
	EnablePDFAConversion *string `json:"enablePDFAConversion,omitempty"`
	EnablePDFAConversionMetadata *SettingsMetadata `json:"enablePDFAConversionMetadata,omitempty"`
	// When **true,** enables PowerForms for the account.  **Note:** Only SysAdmin users can change this setting.
	EnablePowerForm *string `json:"enablePowerForm,omitempty"`
	// When **true,** enables direct PowerForms for an account. Direct PowerForms are in-session PowerForms.  **Note:** Only Admin users can change this setting.
	EnablePowerFormDirect *string `json:"enablePowerFormDirect,omitempty"`
	EnablePowerFormDirectMetadata *SettingsMetadata `json:"enablePowerFormDirectMetadata,omitempty"`
	EnablePowerFormMetadata *SettingsMetadata `json:"enablePowerFormMetadata,omitempty"`
	// Reserved for DocuSign.
	EnableRecipientDomainValidation *string `json:"enableRecipientDomainValidation,omitempty"`
	EnableRecipientDomainValidationMetadata *SettingsMetadata `json:"enableRecipientDomainValidationMetadata,omitempty"`
	// 
	EnableRecipientMayProvidePhoneNumber *string `json:"enableRecipientMayProvidePhoneNumber,omitempty"`
	EnableRecipientMayProvidePhoneNumberMetadata *SettingsMetadata `json:"enableRecipientMayProvidePhoneNumberMetadata,omitempty"`
	// Enables direct links to envelopes in reports for administrators in the following scopes: - `NoEnvelopes` - `AllEnvelopes` - `OnlyOwnEnvelopes`
	EnableReportLinks *string `json:"enableReportLinks,omitempty"`
	EnableReportLinksMetadata *SettingsMetadata `json:"enableReportLinksMetadata,omitempty"`
	// When **true,** the account can use the `requireSignOnPaper` option.  **Note:** Only Admin users can change this setting. 
	EnableRequireSignOnPaper *string `json:"enableRequireSignOnPaper,omitempty"`
	EnableRequireSignOnPaperMetadata *SettingsMetadata `json:"enableRequireSignOnPaperMetadata,omitempty"`
	// When **true,** account administrators can reserve a web domain and users. Domains are organization-specific reserved internet domains, such as `@exampledomain.com`. You can define policy settings for users of each reserved domain within your organization, export lists of domain users for audit purposes, and manage domain users.  - Domains may be claimed by an organization. - When a domain is claimed by an organization, all users within that domain are added to the organization, even if they have trial or free accounts. - You can set domain controls for all users of the domain. - You can export information about your organization’s users that are associated with your reserved domains.  **Note:** Only SysAdmin users can change this setting.
	EnableReservedDomain *string `json:"enableReservedDomain,omitempty"`
	EnableReservedDomainMetadata *SettingsMetadata `json:"enableReservedDomainMetadata,omitempty"`
	// When **true,** enables responsive signing.
	EnableResponsiveSigning *string `json:"enableResponsiveSigning,omitempty"`
	EnableResponsiveSigningMetadata *SettingsMetadata `json:"enableResponsiveSigningMetadata,omitempty"`
	// When **true,** scheduled releases are enabled. The default value is **false.**
	EnableScheduledRelease *string `json:"enableScheduledRelease,omitempty"`
	EnableScheduledReleaseMetadata *SettingsMetadata `json:"enableScheduledReleaseMetadata,omitempty"`
	// 
	EnableSearch *string `json:"enableSearch,omitempty"`
	EnableSearchMetadata *SettingsMetadata `json:"enableSearchMetadata,omitempty"`
	// 
	EnableSearchServiceAzureUri *string `json:"enableSearchServiceAzureUri,omitempty"`
	EnableSearchServiceAzureUriMetadata *SettingsMetadata `json:"enableSearchServiceAzureUriMetadata,omitempty"`
	// 
	EnableSearchSiteSpecificApi *string `json:"enableSearchSiteSpecificApi,omitempty"`
	EnableSearchSiteSpecificApiMetadata *SettingsMetadata `json:"enableSearchSiteSpecificApiMetadata,omitempty"`
	// 
	EnableSearchUI *string `json:"enableSearchUI,omitempty"`
	EnableSearchUIMetadata *SettingsMetadata `json:"enableSearchUIMetadata,omitempty"`
	// When **true,** enables fonts to be set on tags for the account.
	EnableSendingTagsFontSettings *string `json:"enableSendingTagsFontSettings,omitempty"`
	EnableSendingTagsFontSettingsMetadata *SettingsMetadata `json:"enableSendingTagsFontSettingsMetadata,omitempty"`
	// When **true,** this account can use the Agent recipient type.  **Note:** Only SysAdmin users can change this setting. 
	EnableSendToAgent *string `json:"enableSendToAgent,omitempty"`
	EnableSendToAgentMetadata *SettingsMetadata `json:"enableSendToAgentMetadata,omitempty"`
	// When **true,** this account can use the Intermediary recipient type.  **Note:** Only Admin users can change this setting, and only if `allowSendToIntermediary` is set. 
	EnableSendToIntermediary *string `json:"enableSendToIntermediary,omitempty"`
	EnableSendToIntermediaryMetadata *SettingsMetadata `json:"enableSendToIntermediaryMetadata,omitempty"`
	// When **true,** this account can use the Editor recipient type.  **Note:** Only Admin users can change this setting. 
	EnableSendToManage *string `json:"enableSendToManage,omitempty"`
	EnableSendToManageMetadata *SettingsMetadata `json:"enableSendToManageMetadata,omitempty"`
	// When **true,** the account can define the routing order of recipients for envelopes sent by using the eSignature API.  **Note:** Only SysAdmin users can change this setting.
	EnableSequentialSigningAPI *string `json:"enableSequentialSigningAPI,omitempty"`
	EnableSequentialSigningAPIMetadata *SettingsMetadata `json:"enableSequentialSigningAPIMetadata,omitempty"`
	// When **true,** the account can define the routing order of recipients for envelopes sent by using the DocuSign application.  **Note:** Only SysAdmin users can change this setting. 
	EnableSequentialSigningUI *string `json:"enableSequentialSigningUI,omitempty"`
	EnableSequentialSigningUIMetadata *SettingsMetadata `json:"enableSequentialSigningUIMetadata,omitempty"`
	// When **true,** users can use the signing attachments feature to request attachments from signers.  **Note:** Only Admin users can change this setting.
	EnableSignerAttachments *string `json:"enableSignerAttachments,omitempty"`
	EnableSignerAttachmentsMetadata *SettingsMetadata `json:"enableSignerAttachmentsMetadata,omitempty"`
	// When **true,** enables comments for the account so that signers and recipients can make and respond to comments in documents belonging to the envelopes that they are sent.
	EnableSigningExtensionComments *string `json:"enableSigningExtensionComments,omitempty"`
	EnableSigningExtensionCommentsMetadata *SettingsMetadata `json:"enableSigningExtensionCommentsMetadata,omitempty"`
	// When **true,** enables conversation functionality.
	EnableSigningExtensionConversations *string `json:"enableSigningExtensionConversations,omitempty"`
	EnableSigningExtensionConversationsMetadata *SettingsMetadata `json:"enableSigningExtensionConversationsMetadata,omitempty"`
	// When **true,** switches Signing Order to On by default for new envelopes.
	EnableSigningOrderSettingsForAccount *string `json:"enableSigningOrderSettingsForAccount,omitempty"`
	EnableSigningOrderSettingsForAccountMetadata *SettingsMetadata `json:"enableSigningOrderSettingsForAccountMetadata,omitempty"`
	// When **true,** a sender can allow signers to use the sign on paper option.  **Note:** Only Admin users can change this setting. 
	EnableSignOnPaper *string `json:"enableSignOnPaper,omitempty"`
	EnableSignOnPaperMetadata *SettingsMetadata `json:"enableSignOnPaperMetadata,omitempty"`
	// When **true,** a user can override the default default account setting for the Sign on Paper option, which specifies whether signers can sign documents on paper as an option to signing electronically.  **Note:** Only Admin users can change this setting.
	EnableSignOnPaperOverride *string `json:"enableSignOnPaperOverride,omitempty"`
	EnableSignOnPaperOverrideMetadata *SettingsMetadata `json:"enableSignOnPaperOverrideMetadata,omitempty"`
	// When **true,** Sign with Notary functionality is enabled for the account.  **Note:** Only Admin users can change this setting.
	EnableSignWithNotary *string `json:"enableSignWithNotary,omitempty"`
	EnableSignWithNotaryMetadata *SettingsMetadata `json:"enableSignWithNotaryMetadata,omitempty"`
	// When **true,** blockchain-based [Smart Contracts](https://www.docusign.com/products/blockchain) are enabled. The default value is **false.**
	EnableSmartContracts *string `json:"enableSmartContracts,omitempty"`
	EnableSmartContractsMetadata *SettingsMetadata `json:"enableSmartContractsMetadata,omitempty"`
	// When **true,** the account can use SMS authentication.  **Note:** Only Admin users can change this setting. 
	EnableSMSAuthentication *string `json:"enableSMSAuthentication,omitempty"`
	EnableSMSAuthenticationMetadata *SettingsMetadata `json:"enableSMSAuthenticationMetadata,omitempty"`
	// 
	EnableSMSDeliveryAdditionalNotification *string `json:"enableSMSDeliveryAdditionalNotification,omitempty"`
	EnableSMSDeliveryAdditionalNotificationMetadata *SettingsMetadata `json:"enableSMSDeliveryAdditionalNotificationMetadata,omitempty"`
	// 
	EnableSMSDeliveryPrimary *string `json:"enableSMSDeliveryPrimary,omitempty"`
	// Deprecated.
	EnableSocialIdLogin *string `json:"enableSocialIdLogin,omitempty"`
	EnableSocialIdLoginMetadata *SettingsMetadata `json:"enableSocialIdLoginMetadata,omitempty"`
	// When **true,** enables strikethrough formatting in documents.
	EnableStrikeThrough *string `json:"enableStrikeThrough,omitempty"`
	EnableStrikeThroughMetadata *SettingsMetadata `json:"enableStrikeThroughMetadata,omitempty"`
	// Reserved for DocuSign.
	EnableTransactionPoint *string `json:"enableTransactionPoint,omitempty"`
	EnableTransactionPointMetadata *SettingsMetadata `json:"enableTransactionPointMetadata,omitempty"`
	// When **true,** Vaulting is enabled for the account.
	EnableVaulting *string `json:"enableVaulting,omitempty"`
	EnableVaultingMetadata *SettingsMetadata `json:"enableVaultingMetadata,omitempty"`
	// 
	EnableWebFormsSeparateUserPermissions *string `json:"enableWebFormsSeparateUserPermissions,omitempty"`
	EnableWebFormsSeparateUserPermissionsMetadata *SettingsMetadata `json:"enableWebFormsSeparateUserPermissionsMetadata,omitempty"`
	// Reserved for DocuSign.
	EnableWitnessing *string `json:"enableWitnessing,omitempty"`
	EnableWitnessingMetadata *SettingsMetadata `json:"enableWitnessingMetadata,omitempty"`
	// When **true,** the template name must be unique.
	EnforceTemplateNameUniqueness *string `json:"enforceTemplateNameUniqueness,omitempty"`
	EnforceTemplateNameUniquenessMetadata *SettingsMetadata `json:"enforceTemplateNameUniquenessMetadata,omitempty"`
	// 
	EnforceTlsEmails *string `json:"enforceTlsEmails,omitempty"`
	EnforceTlsEmailsMetadata *SettingsMetadata `json:"enforceTlsEmailsMetadata,omitempty"`
	// Shows the envelope integration rule for the account, which indicates whether custom admins can enable Connect for their accounts. Enumeration values are:   - `not_allowed` - `full`   **Note:** Only SysAdmin users can change this setting.                                                                                 
	EnvelopeIntegrationAllowed *string `json:"envelopeIntegrationAllowed,omitempty"`
	EnvelopeIntegrationAllowedMetadata *SettingsMetadata `json:"envelopeIntegrationAllowedMetadata,omitempty"`
	// When **true,** enables Connect for an account. Note that Connect integration requires additional configuration that must be set up for it to take effect; this switch is only the on/off control for the account.  **Note:** Only Admin users can change this setting, and only when `envelopeIntegrationAllowed` is set.
	EnvelopeIntegrationEnabled *string `json:"envelopeIntegrationEnabled,omitempty"`
	EnvelopeIntegrationEnabledMetadata *SettingsMetadata `json:"envelopeIntegrationEnabledMetadata,omitempty"`
	// 
	EnvelopeLimitsTotalDocumentSizeAllowedInMB *string `json:"EnvelopeLimitsTotalDocumentSizeAllowedInMB,omitempty"`
	// 
	EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled *string `json:"EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled,omitempty"`
	EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata *SettingsMetadata `json:"EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata,omitempty"`
	EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata *SettingsMetadata `json:"EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata,omitempty"`
	// 
	EnvelopeSearchMode *string `json:"envelopeSearchMode,omitempty"`
	EnvelopeSearchModeMetadata *SettingsMetadata `json:"envelopeSearchModeMetadata,omitempty"`
	// When **true,** envelopes sent by this account automatically have the envelope ID stamped in the document margins, unless the sender selects not to have the documents stamped.
	EnvelopeStampingDefaultValue *string `json:"envelopeStampingDefaultValue,omitempty"`
	EnvelopeStampingDefaultValueMetadata *SettingsMetadata `json:"envelopeStampingDefaultValueMetadata,omitempty"`
	// 
	ExitPrompt *string `json:"exitPrompt,omitempty"`
	ExitPromptMetadata *SettingsMetadata `json:"exitPromptMetadata,omitempty"`
	// Boolean that specifies whether a member of an account can express send (without tags) or must send with tags on documents.
	ExpressSend *string `json:"expressSend,omitempty"`
	// Boolean that specifies whether a member of an account can send templates without the tags being stripped out, even when the account is configured to let its users express send only (they cannot use the tagger).
	ExpressSendAllowTabs *string `json:"expressSendAllowTabs,omitempty"`
	ExpressSendAllowTabsMetadata *SettingsMetadata `json:"expressSendAllowTabsMetadata,omitempty"`
	ExpressSendMetadata *SettingsMetadata `json:"expressSendMetadata,omitempty"`
	ExternalDocumentSources *ExternalDocumentSources `json:"externalDocumentSources,omitempty"`
	// Specifies the signature pad type. Valid values are:  - `none` - `topaz` - `e_padv9` - `e_pad_integrisign` - `topaz_sigplusextlite`  **Note:** Only Admin users can change this setting. 
	ExternalSignaturePadType *string `json:"externalSignaturePadType,omitempty"`
	ExternalSignaturePadTypeMetadata *SettingsMetadata `json:"externalSignaturePadTypeMetadata,omitempty"`
	// When **true,** fax delivery to recipients is allowed for the account.  **Note:** Only Admin users can change this setting.
	FaxOutEnabled *string `json:"faxOutEnabled,omitempty"`
	FaxOutEnabledMetadata *SettingsMetadata `json:"faxOutEnabledMetadata,omitempty"`
	// 
	FinishReminder *string `json:"finishReminder,omitempty"`
	FinishReminderMetadata *SettingsMetadata `json:"finishReminderMetadata,omitempty"`
	// When **true,** HTML used to implement [Guided Forms](https://www.docusign.com/products/guided-forms) is enabled for the account.
	GuidedFormsHtmlAllowed *string `json:"guidedFormsHtmlAllowed,omitempty"`
	GuidedFormsHtmlAllowedMetadata *SettingsMetadata `json:"guidedFormsHtmlAllowedMetadata,omitempty"`
	// 
	GuidedFormsHtmlConversionPolicy *string `json:"guidedFormsHtmlConversionPolicy,omitempty"`
	GuidedFormsHtmlConversionPolicyMetadata *SettingsMetadata `json:"guidedFormsHtmlConversionPolicyMetadata,omitempty"`
	// 
	HasRecipientConnectClaimedDomain *string `json:"hasRecipientConnectClaimedDomain,omitempty"`
	// Boolean that specifies whether to hide the account address in the Certificate of Completion.
	HideAccountAddressInCoC *string `json:"hideAccountAddressInCoC,omitempty"`
	HideAccountAddressInCoCMetadata *SettingsMetadata `json:"hideAccountAddressInCoCMetadata,omitempty"`
	// Boolean that specifies whether to hide the pricing functionality for an account.
	HidePricing *string `json:"hidePricing,omitempty"`
	HidePricingMetadata *SettingsMetadata `json:"hidePricingMetadata,omitempty"`
	// A list of ID check configuration objects.
	IdCheckConfigurations []IdCheckConfiguration `json:"idCheckConfigurations,omitempty"`
	// Determines when a user's authentication with the account expires. Valid values are:  - `always`: Users are required to authenticate each time. - `variable`: If the authentication for a user is valid and falls within the value for the `idCheckExpireDays` property, the user is not required to authenticate again.  **Note:** Only Admin users can change this setting.
	IdCheckExpire *string `json:"idCheckExpire,omitempty"`
	// The number of days before user authentication credentials expire. A value of `0` specifies that users must re-authenticate for each new session.  **Note:** Only Admin users can change this setting.
	IdCheckExpireDays *string `json:"idCheckExpireDays,omitempty"`
	IdCheckExpireDaysMetadata *SettingsMetadata `json:"idCheckExpireDaysMetadata,omitempty"`
	IdCheckExpireMetadata *SettingsMetadata `json:"idCheckExpireMetadata,omitempty"`
	// The number of minutes before user authentication credentials expire.
	IdCheckExpireMinutes *string `json:"idCheckExpireMinutes,omitempty"`
	IdCheckExpireMinutesMetadata *SettingsMetadata `json:"idCheckExpireMinutesMetadata,omitempty"`
	// Indicates if authentication is configured for the account. Valid values are:  - `always`: Authentication checks are performed on every envelope. - `never`: Authentication checks are not performed on any envelopes. - `optional`: Authentication is configurable per envelope.  **Note:** Only Admin users can change this setting.
	IdCheckRequired *string `json:"idCheckRequired,omitempty"`
	IdCheckRequiredMetadata *SettingsMetadata `json:"idCheckRequiredMetadata,omitempty"`
	// Specifies the ID Verification workflow applied on an envelope by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/) method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address).
	IdentityVerification []AccountIdentityVerificationWorkflow `json:"identityVerification,omitempty"`
	IdentityVerificationMetadata *SettingsMetadata `json:"identityVerificationMetadata,omitempty"`
	// 
	IdfxKBAAuthenticationOverride *string `json:"idfxKBAAuthenticationOverride,omitempty"`
	IdfxKBAAuthenticationOverrideMetadata *SettingsMetadata `json:"idfxKBAAuthenticationOverrideMetadata,omitempty"`
	// 
	IdfxPhoneAuthenticationOverride *string `json:"idfxPhoneAuthenticationOverride,omitempty"`
	IdfxPhoneAuthenticationOverrideMetadata *SettingsMetadata `json:"idfxPhoneAuthenticationOverrideMetadata,omitempty"`
	// Reserved for DocuSign.
	IgnoreErrorIfAnchorTabNotFound *string `json:"ignoreErrorIfAnchorTabNotFound,omitempty"`
	IgnoreErrorIfAnchorTabNotFoundMetadataEnabled *SettingsMetadata `json:"ignoreErrorIfAnchorTabNotFoundMetadataEnabled,omitempty"`
	// A text field containing the question that an in-person signing host uses to collect personal information from the recipient. The recipient's response to this question is saved and can be viewed in the certificate associated with the envelope.  **Note:** Only Admin users can change this setting.
	InPersonIDCheckQuestion *string `json:"inPersonIDCheckQuestion,omitempty"`
	InPersonIDCheckQuestionMetadata *SettingsMetadata `json:"inPersonIDCheckQuestionMetadata,omitempty"`
	// When **true,** in-person signing is enabled for the account.
	InPersonSigningEnabled *string `json:"inPersonSigningEnabled,omitempty"`
	InPersonSigningEnabledMetadata *SettingsMetadata `json:"inPersonSigningEnabledMetadata,omitempty"`
	// When **true,** the account can send in-session (embedded) envelopes.  **Note:** Only Admin users can change this setting.
	InSessionEnabled *string `json:"inSessionEnabled,omitempty"`
	InSessionEnabledMetadata *SettingsMetadata `json:"inSessionEnabledMetadata,omitempty"`
	// When **true,** emails are not sent to the in-session (embedded) recipients on an envelope.  **Note:** Only Admin users can change this setting.
	InSessionSuppressEmails *string `json:"inSessionSuppressEmails,omitempty"`
	InSessionSuppressEmailsMetadata *SettingsMetadata `json:"inSessionSuppressEmailsMetadata,omitempty"`
	// 
	IsConnectDocumentFieldsEnabled *string `json:"isConnectDocumentFieldsEnabled,omitempty"`
	// 
	LinkedExternalPrimaryAccounts []LinkedExternalPrimaryAccount `json:"linkedExternalPrimaryAccounts,omitempty"`
	// The maximum number of signing groups allowed on the account. The default value is `50`. This setting is only shown in responses that list account settings.  **Note:** Only SysAdmin users can change this setting.
	MaximumSigningGroups *string `json:"maximumSigningGroups,omitempty"`
	MaximumSigningGroupsMetadata *SettingsMetadata `json:"maximumSigningGroupsMetadata,omitempty"`
	// The maximum number of users per signing group. The default value is `50`. This setting is only shown in responses that list account settings.  **Note:** Only SysAdmin users can change this setting.
	MaximumUsersPerSigningGroup *string `json:"maximumUsersPerSigningGroup,omitempty"`
	MaximumUsersPerSigningGroupMetadata *SettingsMetadata `json:"maximumUsersPerSigningGroupMetadata,omitempty"`
	// The maximum number of custom stamps.
	MaxNumberOfCustomStamps *string `json:"maxNumberOfCustomStamps,omitempty"`
	// 
	MergeMixedModeResults *string `json:"mergeMixedModeResults,omitempty"`
	MergeMixedModeResultsMetadata *SettingsMetadata `json:"mergeMixedModeResultsMetadata,omitempty"`
	// The number of minutes of inactivity before a mobile user is automatically logged out of the system. Valid values are `1` to `120` minutes. The default value is `20` minutes.  **Note:** Only Admin users can change this setting.
	MobileSessionTimeout *string `json:"mobileSessionTimeout,omitempty"`
	MobileSessionTimeoutMetadata *SettingsMetadata `json:"mobileSessionTimeoutMetadata,omitempty"`
	// The number of active custom stamps associated with the account. DocuSign calculates this number automatically. This property is only visible to the DocuSign account manager.
	NumberOfActiveCustomStamps *string `json:"numberOfActiveCustomStamps,omitempty"`
	// Boolean that specifies whether to opt in for Signing v02 on Mobile Devices functionality.
	OptInMobileSigningV02 *string `json:"optInMobileSigningV02,omitempty"`
	OptInMobileSigningV02Metadata *SettingsMetadata `json:"optInMobileSigningV02Metadata,omitempty"`
	// 
	OptInUniversalSignatures *string `json:"optInUniversalSignatures,omitempty"`
	// Boolean that allows envelope senders to opt out of the recipient signing auto-navigation feature and opt out of updating tab font color.
	OptOutAutoNavTextAndTabColorUpdates *string `json:"optOutAutoNavTextAndTabColorUpdates,omitempty"`
	OptOutAutoNavTextAndTabColorUpdatesMetadata *SettingsMetadata `json:"optOutAutoNavTextAndTabColorUpdatesMetadata,omitempty"`
	// Boolean that specifies whether to allow envelope senders to opt out of using the new platform seal.
	OptOutNewPlatformSeal *string `json:"optOutNewPlatformSeal,omitempty"`
	OptOutNewPlatformSealPlatformMetadata *SettingsMetadata `json:"optOutNewPlatformSealPlatformMetadata,omitempty"`
	// 
	PdfMaxChunkedUploadPartSize *string `json:"pdfMaxChunkedUploadPartSize,omitempty"`
	PdfMaxChunkedUploadPartSizeMetadata *SettingsMetadata `json:"pdfMaxChunkedUploadPartSizeMetadata,omitempty"`
	// 
	PdfMaxChunkedUploadTotalSize *string `json:"pdfMaxChunkedUploadTotalSize,omitempty"`
	PdfMaxChunkedUploadTotalSizeMetadata *SettingsMetadata `json:"pdfMaxChunkedUploadTotalSizeMetadata,omitempty"`
	// 
	PdfMaxIndividualUploadSize *string `json:"pdfMaxIndividualUploadSize,omitempty"`
	PdfMaxIndividualUploadSizeMetadata *SettingsMetadata `json:"pdfMaxIndividualUploadSizeMetadata,omitempty"`
	// When **true,** senders can allow recipients to provide a phone number for the Phone Authentication process.  **Note:** Only Admin users can change this setting.
	PhoneAuthRecipientMayProvidePhoneNumber *string `json:"phoneAuthRecipientMayProvidePhoneNumber,omitempty"`
	PhoneAuthRecipientMayProvidePhoneNumberMetadata *SettingsMetadata `json:"phoneAuthRecipientMayProvidePhoneNumberMetadata,omitempty"`
	// The policy for adding a digital certificate to downloaded, printed, and emailed documents.   Possible values are:   - `no_sign` - `no_sign_allow_user_override` - `yes_sign` (Specifies that PDF files downloaded from the platform are signed.)  **Note:** Only Admin users can change this setting. 
	PkiSignDownloadedPDFDocs *string `json:"pkiSignDownloadedPDFDocs,omitempty"`
	PkiSignDownloadedPDFDocsMetadata *SettingsMetadata `json:"pkiSignDownloadedPDFDocsMetadata,omitempty"`
	// 
	ReadOnlyMode *string `json:"readOnlyMode,omitempty"`
	ReadOnlyModeMetadata *SettingsMetadata `json:"readOnlyModeMetadata,omitempty"`
	// When **true,** recipients receiving envelopes from this account can sign offline.  **Note:** Only Admin users can change this setting. 
	RecipientsCanSignOffline *string `json:"recipientsCanSignOffline,omitempty"`
	RecipientsCanSignOfflineMetadata *SettingsMetadata `json:"recipientsCanSignOfflineMetadata,omitempty"`
	// When **true,** recipients receiving envelopes from this account can override auto-navigation functionality.  **Note:** Only Admin users can change this setting. 
	RecipientSigningAutoNavigationControl *string `json:"recipientSigningAutoNavigationControl,omitempty"`
	RecipientSigningAutoNavigationControlMetadata *SettingsMetadata `json:"recipientSigningAutoNavigationControlMetadata,omitempty"`
	// When **true,** recipients are required to use a 21 CFR part 11-compliant signing experience.  **Note:** Only Admin users can change this setting. 
	Require21CFRpt11Compliance *string `json:"require21CFRpt11Compliance,omitempty"`
	Require21CFRpt11ComplianceMetadata *SettingsMetadata `json:"require21CFRpt11ComplianceMetadata,omitempty"`
	// When **true,** signers who decline to sign an envelope sent from this account are required to provide a reason for declining.  **Note:** Only Admin users can change this setting. 
	RequireDeclineReason *string `json:"requireDeclineReason,omitempty"`
	RequireDeclineReasonMetadata *SettingsMetadata `json:"requireDeclineReasonMetadata,omitempty"`
	// When **true,** the account requires external management of users.  **Note:** Only Admin users can change this setting. 
	RequireExternalUserManagement *string `json:"requireExternalUserManagement,omitempty"`
	RequireExternalUserManagementMetadata *SettingsMetadata `json:"requireExternalUserManagementMetadata,omitempty"`
	// Sets the Digital Signature certificate requirements for sending envelopes. Valid values are:  - `none`: A Digital Signature certificate is not required. - `docusign_express`: Signers must use a DocuSign Express certificate. - `docusign_personal`: Signers must use a DocuSign personal certificate. - `safe` - `open_trust`: Signers must use an OpenTrust certificate. 
	RequireSignerCertificateType *string `json:"requireSignerCertificateType,omitempty"`
	RequireSignerCertificateTypeMetadata *SettingsMetadata `json:"requireSignerCertificateTypeMetadata,omitempty"`
	// The RSA account name.  **Note:** Only Admin users can change this setting. Modifying this value may disrupt your ID Check capability. Ensure you have the correct value before changing it. 
	RsaVeridAccountName *string `json:"rsaVeridAccountName,omitempty"`
	// The password for the RSA account.   **Note:** Only Admin users can change this setting. Modifying this value may disrupt your ID Check capability. Ensure you have the correct value before changing it. 
	RsaVeridPassword *string `json:"rsaVeridPassword,omitempty"`
	// The RSA rule set used with the account.  **Note:** Only Admin users can change this setting. Modifying this value may disrupt your ID Check capability. Ensure you have the correct value before changing it. 
	RsaVeridRuleset *string `json:"rsaVeridRuleset,omitempty"`
	// The user ID for the RSA account.  **Note:** Only Admin users can change this setting. Modifying this value may disrupt your ID Check capability. Ensure you have the correct value before changing it. 
	RsaVeridUserId *string `json:"rsaVeridUserId,omitempty"`
	// 
	SbsTransactionLevel *string `json:"sbsTransactionLevel,omitempty"`
	// Sets how self-signed documents are presented to the email recipients. Valid values are:  - `include_pdf`: A PDF of the completed document is attached to the email. - `include_link`: A secure link to the self-signed documents is included    in the email.  **Note:** Only Admin users can change this setting. 
	SelfSignedRecipientEmailDocument *string `json:"selfSignedRecipientEmailDocument,omitempty"`
	SelfSignedRecipientEmailDocumentMetadata *SettingsMetadata `json:"selfSignedRecipientEmailDocumentMetadata,omitempty"`
	// When **true,** the `selfSignedRecipientEmailDocument` user setting can be set for an individual user. The user setting overrides the account setting.  **Note:** Only Admin users can change this account setting. 
	SelfSignedRecipientEmailDocumentUserOverride *string `json:"selfSignedRecipientEmailDocumentUserOverride,omitempty"`
	SelfSignedRecipientEmailDocumentUserOverrideMetadata *SettingsMetadata `json:"selfSignedRecipientEmailDocumentUserOverrideMetadata,omitempty"`
	// When **true,** a signer can draw their signature in each location where a sign or initial tab exists. This functionality is typically used for mobile signing.  **Note:** Only Admin users can change this setting. 
	SenderCanSignInEachLocation *string `json:"senderCanSignInEachLocation,omitempty"`
	SenderCanSignInEachLocationMetadata *SettingsMetadata `json:"senderCanSignInEachLocationMetadata,omitempty"`
	// When **true,** a sender who is also a recipient of an envelope must follow the authentication requirements for the envelope.  **Note:** Only Admin users can change this setting. 
	SenderMustAuthenticateSigning *string `json:"senderMustAuthenticateSigning,omitempty"`
	SenderMustAuthenticateSigningMetadata *SettingsMetadata `json:"senderMustAuthenticateSigningMetadata,omitempty"`
	// The account-wide default font color to use for the content of the tab.  Valid values are:  - `Black` - `BrightBlue` - `BrightRed` - `DarkGreen` - `DarkRed` - `Gold` - `Green` - `NavyBlue` - `Purple` - `White` 
	SendingTagsFontColor *string `json:"sendingTagsFontColor,omitempty"`
	SendingTagsFontColorMetadata *SettingsMetadata `json:"sendingTagsFontColorMetadata,omitempty"`
	// The account-wide default font to be used for the tab value. Supported fonts include:  - `Default` - `Arial` - `ArialNarrow` - `Calibri` - `CourierNew` - `Garamond` - `Georgia` - `Helvetica` - `LucidaConsole` - `MSGothic` - `MSMincho` - `OCR-A` - `Tahoma` - `TimesNewRoman` - `Trebuchet` - `Verdana`
	SendingTagsFontName *string `json:"sendingTagsFontName,omitempty"`
	SendingTagsFontNameMetadata *SettingsMetadata `json:"sendingTagsFontNameMetadata,omitempty"`
	// The account-wide default font size used for the information in the tab:  - `Size7` - `Size8` - `Size9` - `Size10` - `Size11` - `Size12` - `Size14` - `Size16` - `Size18` - `Size20` - `Size22` - `Size24` - `Size26` - `Size28` - `Size36` - `Size48` - `Size72`
	SendingTagsFontSize *string `json:"sendingTagsFontSize,omitempty"`
	SendingTagsFontSizeMetadata *SettingsMetadata `json:"sendingTagsFontSizeMetadata,omitempty"`
	// 
	SendLockoutRecipientNotification *string `json:"sendLockoutRecipientNotification,omitempty"`
	SendLockoutRecipientNotificationMetadata *SettingsMetadata `json:"sendLockoutRecipientNotificationMetadata,omitempty"`
	// When true, the account can use the certified deliveries recipient type. 
	SendToCertifiedDeliveryEnabled *string `json:"sendToCertifiedDeliveryEnabled,omitempty"`
	SendToCertifiedDeliveryEnabledMetadata *SettingsMetadata `json:"sendToCertifiedDeliveryEnabledMetadata,omitempty"`
	// The amount of idle activity time, in minutes, before a user is automatically logged out of the system. The minimum setting is 20 minutes and the maximum setting is 120 minutes. 
	SessionTimeout *string `json:"sessionTimeout,omitempty"`
	SessionTimeoutMetadata *SettingsMetadata `json:"sessionTimeoutMetadata,omitempty"`
	// When **true,** senders can set the email language to use for each recipient.  **Note:** Only Admin users can change this setting. 
	SetRecipEmailLang *string `json:"setRecipEmailLang,omitempty"`
	SetRecipEmailLangMetadata *SettingsMetadata `json:"setRecipEmailLangMetadata,omitempty"`
	// When **true,** setting a unique language for a recipient not only affects the email language, but also the signing language they are presented with. When **false,** only the email will be affected when the sender specifies a unique language for a recipient.  **Note:** Only Admin users can change this setting. 
	SetRecipSignLang *string `json:"setRecipSignLang,omitempty"`
	SetRecipSignLangMetadata *SettingsMetadata `json:"setRecipSignLangMetadata,omitempty"`
	// Boolean that specifies whether an account can use Shared Template Folders.
	SharedTemplateFolders *string `json:"sharedTemplateFolders,omitempty"`
	SharedTemplateFoldersMetadata *SettingsMetadata `json:"sharedTemplateFoldersMetadata,omitempty"`
	// Boolean that specifies whether complete dialogs are displayed directly within an application in embedded signing sessions.
	ShowCompleteDialogInEmbeddedSession *string `json:"showCompleteDialogInEmbeddedSession,omitempty"`
	ShowCompleteDialogInEmbeddedSessionMetadata *SettingsMetadata `json:"showCompleteDialogInEmbeddedSessionMetadata,omitempty"`
	// When **true,** Conditional Routing options display to senders during the sending experience.
	ShowConditionalRoutingOnSend *string `json:"showConditionalRoutingOnSend,omitempty"`
	ShowConditionalRoutingOnSendMetadata *SettingsMetadata `json:"showConditionalRoutingOnSendMetadata,omitempty"`
	// Boolean that specifies whether conditional field options are initially displayed (before a user makes entries).
	ShowInitialConditionalFields *string `json:"showInitialConditionalFields,omitempty"`
	ShowInitialConditionalFieldsMetadata *SettingsMetadata `json:"showInitialConditionalFieldsMetadata,omitempty"`
	// Boolean that specifies whether localized watermarks are displayed.
	ShowLocalizedWatermarks *string `json:"showLocalizedWatermarks,omitempty"`
	ShowLocalizedWatermarksMetadata *SettingsMetadata `json:"showLocalizedWatermarksMetadata,omitempty"`
	// 
	ShowMaskedFieldsWhenDownloadingDocumentAsSender *string `json:"showMaskedFieldsWhenDownloadingDocumentAsSender,omitempty"`
	ShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata *SettingsMetadata `json:"showMaskedFieldsWhenDownloadingDocumentAsSenderMetadata,omitempty"`
	// When **true,** show tutorials. 
	ShowTutorials *string `json:"showTutorials,omitempty"`
	ShowTutorialsMetadata *SettingsMetadata `json:"showTutorialsMetadata,omitempty"`
	// Names of electronic or digital signature providers that can be used.
	SignatureProviders []string `json:"signatureProviders,omitempty"`
	SignatureProvidersMetadata *SettingsMetadata `json:"signatureProvidersMetadata,omitempty"`
	// The format for the signature date. Valid values are:  - `d/M/yyyy` - `dd-MM-yy` - `dd-MMM-yy` - `dd-MM-yyyy` - `dd.MM.yyyy` - `dd-MMM-yyyy` - `dd MMMM yyyy` - `M/d/yyyy` - `MM-dd-yyyy` - `MM/dd/yyyy` - `MM/dd/yy` - `MMM-dd-yyyy` - `MMM d, yyyy` - `MMMM d, yyyy` - `yyyy-MM-dd` - `yyyy-MMM-dd` - `yyyy/MM/dd` - `yyyy MMMM d`  **Note:** Only Admin users can change this setting. 
	SignDateFormat *string `json:"signDateFormat,omitempty"`
	SignDateFormatMetadata *SettingsMetadata `json:"signDateFormatMetadata,omitempty"`
	// 
	SignDateTimeAccountLanguageOverride *string `json:"signDateTimeAccountLanguageOverride,omitempty"`
	SignDateTimeAccountLanguageOverrideMetadata *SettingsMetadata `json:"signDateTimeAccountLanguageOverrideMetadata,omitempty"`
	// 
	SignDateTimeAccountTimezoneOverride *string `json:"signDateTimeAccountTimezoneOverride,omitempty"`
	SignDateTimeAccountTimezoneOverrideMetadata *SettingsMetadata `json:"signDateTimeAccountTimezoneOverrideMetadata,omitempty"`
	// When **true,** the Certificate of Completion is included in the PDF of the envelope documents when it is downloaded.  **Note:** Only Admin users can change this setting. 
	SignerAttachCertificateToEnvelopePDF *string `json:"signerAttachCertificateToEnvelopePDF,omitempty"`
	SignerAttachCertificateToEnvelopePDFMetadata *SettingsMetadata `json:"signerAttachCertificateToEnvelopePDFMetadata,omitempty"`
	// When **true,** signer attachments are added to the parent document that contains the attachment. The default behavior creates a new document in the envelope for every signer attachment.  **Note:** Only Admin users can change this setting. 
	SignerAttachConcat *string `json:"signerAttachConcat,omitempty"`
	SignerAttachConcatMetadata *SettingsMetadata `json:"signerAttachConcatMetadata,omitempty"`
	// When **true,** a signer can create a DocuSign account after signing.  **Note:** Only Admin users can change this setting. 
	SignerCanCreateAccount *string `json:"signerCanCreateAccount,omitempty"`
	SignerCanCreateAccountMetadata *SettingsMetadata `json:"signerCanCreateAccountMetadata,omitempty"`
	// When **true,** recipients can sign on a mobile device.  **Note:** Only Admin users can change this setting. 
	SignerCanSignOnMobile *string `json:"signerCanSignOnMobile,omitempty"`
	SignerCanSignOnMobileMetadata *SettingsMetadata `json:"signerCanSignOnMobileMetadata,omitempty"`
	// When **true,** an \"envelope complete\" email is sent to an in-session (embedded) or offline signer after DocuSign processes the envelope if in-session emails are not suppressed.  **Note:** Only Admin users can change this setting. 
	SignerInSessionUseEnvelopeCompleteEmail *string `json:"signerInSessionUseEnvelopeCompleteEmail,omitempty"`
	SignerInSessionUseEnvelopeCompleteEmailMetadata *SettingsMetadata `json:"signerInSessionUseEnvelopeCompleteEmailMetadata,omitempty"`
	// Sets the login requirements for signers. Valid values are:  - `login_not_required`: Signers are not required to log in. - `login_required_if_account_holder`: If the signer has a DocuSign account,   they must log in to sign the document. - `login_required_per_session`: The sender cannot send an envelope to anyone   who does not have a DocuSign account. - `login_required_per_envelope`: The sender cannot send an envelope to anyone   who does not have a DocuSign account, and the signer must also log in for   each envelope they will sign.   **Note:** Only Admin users can change this setting. If you use Direct PowerForms or captive (embedded signers), the \"Account required\" settings are bypassed for those signers. If your workflow requires that the signer have an account, you should not use those methods. 
	SignerLoginRequirements *string `json:"signerLoginRequirements,omitempty"`
	SignerLoginRequirementsMetadata *SettingsMetadata `json:"signerLoginRequirementsMetadata,omitempty"`
	// When **true,** senders can only send an envelope to a recipient that has a DocuSign account.  **Note:** Only Account Administrators can change this setting. 
	SignerMustHaveAccount *string `json:"signerMustHaveAccount,omitempty"`
	SignerMustHaveAccountMetadata *SettingsMetadata `json:"signerMustHaveAccountMetadata,omitempty"`
	// When **true,** signers must log in to the DocuSign platform to sign an envelope.  **Note:** Only Admin users can change this setting. 
	SignerMustLoginToSign *string `json:"signerMustLoginToSign,omitempty"`
	SignerMustLoginToSignMetadata *SettingsMetadata `json:"signerMustLoginToSignMetadata,omitempty"`
	// When **true,** the initial values of all SecureFields are written to the document when it is sent.  **Note:** Only Admin users can change this setting. 
	SignerShowSecureFieldInitialValues *string `json:"signerShowSecureFieldInitialValues,omitempty"`
	SignerShowSecureFieldInitialValuesMetadata *SettingsMetadata `json:"signerShowSecureFieldInitialValuesMetadata,omitempty"`
	// The number of minutes that a signing session stays alive without any activity. 
	SigningSessionTimeout *string `json:"signingSessionTimeout,omitempty"`
	SigningSessionTimeoutMetadata *SettingsMetadata `json:"signingSessionTimeoutMetadata,omitempty"`
	// Reserved for DocuSign. 
	SigningUiVersion *string `json:"signingUiVersion,omitempty"`
	SigningUiVersionMetadata *SettingsMetadata `json:"signingUiVersionMetadata,omitempty"`
	// The format for the signature time. Valid values are:  - `none` - `HH:mm` - `h:mm` - `HH:mm:ss` - `h:mm:ss` 
	SignTimeFormat *string `json:"signTimeFormat,omitempty"`
	SignTimeFormatMetadata *SettingsMetadata `json:"signTimeFormatMetadata,omitempty"`
	// When **true,** the time shows the AM or PM indicator. 
	SignTimeShowAmPm *string `json:"signTimeShowAmPm,omitempty"`
	SignTimeShowAmPmMetadata *SettingsMetadata `json:"signTimeShowAmPmMetadata,omitempty"`
	// When **true,** simplified sending is enabled for the account. The default value is **false.**
	SimplifiedSendingEnabled *string `json:"simplifiedSendingEnabled,omitempty"`
	SimplifiedSendingEnabledMetadata *SettingsMetadata `json:"simplifiedSendingEnabledMetadata,omitempty"`
	// When **true,** single sign-on (SSO) is enabled. 
	SingleSignOnEnabled *string `json:"singleSignOnEnabled,omitempty"`
	SingleSignOnEnabledMetadata *SettingsMetadata `json:"singleSignOnEnabledMetadata,omitempty"`
	// When **true,** do not require authentication prompt for viewing completed envelopes 
	SkipAuthCompletedEnvelopes *string `json:"skipAuthCompletedEnvelopes,omitempty"`
	SkipAuthCompletedEnvelopesMetadata *SettingsMetadata `json:"skipAuthCompletedEnvelopesMetadata,omitempty"`
	// When **true,** recipients can use [social ids](https://support.docusign.com/guides/signer-authentication) when signing 
	SocialIdRecipAuth *string `json:"socialIdRecipAuth,omitempty"`
	SocialIdRecipAuthMetadata *SettingsMetadata `json:"socialIdRecipAuthMetadata,omitempty"`
	// When **true,** senders can specify the visibility of the documents in an envelope at the recipient level. 
	SpecifyDocumentVisibility *string `json:"specifyDocumentVisibility,omitempty"`
	SpecifyDocumentVisibilityMetadata *SettingsMetadata `json:"specifyDocumentVisibilityMetadata,omitempty"`
	// When **true,** when initiating correction of an in-flight envelope the sender starts in advanced correct mode. 
	StartInAdvancedCorrect *string `json:"startInAdvancedCorrect,omitempty"`
	StartInAdvancedCorrectMetadata *SettingsMetadata `json:"startInAdvancedCorrectMetadata,omitempty"`
	// When **true,** account users must accept supplemental documents when signing.
	SupplementalDocumentsMustAccept *string `json:"supplementalDocumentsMustAccept,omitempty"`
	SupplementalDocumentsMustAcceptMetadata *SettingsMetadata `json:"supplementalDocumentsMustAcceptMetadata,omitempty"`
	// When **true,** account users must both view and accept supplemental documents when signing.
	SupplementalDocumentsMustRead *string `json:"supplementalDocumentsMustRead,omitempty"`
	SupplementalDocumentsMustReadMetadata *SettingsMetadata `json:"supplementalDocumentsMustReadMetadata,omitempty"`
	// When **true,** account users must view supplemental documents when signing.
	SupplementalDocumentsMustView *string `json:"supplementalDocumentsMustView,omitempty"`
	SupplementalDocumentsMustViewMetadata *SettingsMetadata `json:"supplementalDocumentsMustViewMetadata,omitempty"`
	// Boolean that specifies whether or not API calls require a x509 cert in the header of the call.
	SuppressCertificateEnforcement *string `json:"suppressCertificateEnforcement,omitempty"`
	SuppressCertificateEnforcementMetadata *SettingsMetadata `json:"suppressCertificateEnforcementMetadata,omitempty"`
	TabAccountSettings *TabAccountSettings `json:"tabAccountSettings,omitempty"`
	// Specifies the time zone to use with the API.  Valid values are:  - `TZ_01_AfghanistanStandardTime` - `TZ_02_AlaskanStandardTime` - `TZ_03_ArabStandardTime` - `TZ_04_ArabianStandardTime` - `TZ_05_ArabicStandardTime` - `TZ_06_ArgentinaStandardTime` - `TZ_07_AtlanticStandardTime` - `TZ_08_AUS_CentralStandardTime` - `TZ_09_AUS_EasternStandardTime` - `TZ_10_AzerbaijanStandardTime` - `TZ_11_AzoresStandardTime` - `TZ_12_BangladeshStandardTime` - `TZ_13_CanadaCentralStandardTime` - `TZ_14_CapeVerdeStandardTime` - `TZ_15_CaucasusStandardTime` - `TZ_16_CentralAustraliaStandardTime` - `TZ_17_CentralAmericaStandardTime` - `TZ_18_CentralAsiaStandardTime` - `TZ_19_CentralBrazilianStandardTime` - `TZ_20_CentralEuropeStandardTime` - `TZ_21_CentralEuropeanStandardTime` - `TZ_22_CentralPacificStandardTime` - `TZ_23_CentralStandardTime` - `TZ_24_CentralStandardTimeMexico` - `TZ_25_ChinaStandardTime` - `TZ_26_DatelineStandardTime` - `TZ_27_E_AfricaStandardTime` - `TZ_28_E_AustraliaStandardTime` - `TZ_29_E_EuropeStandardTime` - `TZ_30_E_SouthAmericaStandardTime` - `TZ_31_EasternStandardTime` - `TZ_32_EgyptStandardTime` - `TZ_33_EkaterinburgStandardTime` - `TZ_34_FijiStandardTime` - `TZ_35_FLE_StandardTime` - `TZ_36_GeorgianStandardTime` - `TZ_37_GMT_StandardTime` - `TZ_38_GreenlandStandardTime` - `TZ_39_GreenwichStandardTime` - `TZ_40_GTB_StandardTime` - `TZ_41_HawaiianStandardTime` - `TZ_42_IndiaStandardTime` - `TZ_43_IranStandardTime` - `TZ_44_IsraelStandardTime` - `TZ_45_JordanStandardTime` - `TZ_46_KaliningradStandardTime` - `TZ_47_KamchatkaStandardTime` - `TZ_48_KoreaStandardTime` - `TZ_49_MagadanStandardTime` - `TZ_50_MauritiusStandardTime` - `TZ_51_MidAtlanticStandardTime` - `TZ_52_MiddleEastStandardTime` - `TZ_53_MontevideoStandardTime` - `TZ_54_MoroccoStandardTime` - `TZ_55_MountainStandardTime` - `TZ_56_MountainStandardTimeMMexico` - `TZ_57_MyanmarStandardTime` - `TZ_58_N_CentralAsiaStandardTime` - `TZ_59_NamibiaStandardTime` - `TZ_60_NepalStandardTime` - `TZ_61_NewZealandStandardTime` - `TZ_62_NewfoundlandStandardTime` - `TZ_63_NorthAsiaEastStandardTime` - `TZ_64_NorthAsiaStandardTime` - `TZ_65_PacificSAStandardTime` - `TZ_66_PacificStandardTime` - `TZ_67_PacificStandardTimeMexico` - `TZ_68_PakistanStandardTime` - `TZ_69_ParaguayStandardTime` - `TZ_70_RomanceStandardTime` - `TZ_71_RussianStandardTime` - `TZ_72_SAEasternStandardTime` - `TZ_73_SAPacificStandardTime` - `TZ_74_SAWesternStandardTime` - `TZ_75_SamoaStandardTime` - `TZ_76_SE_AsiaStandardTime` - `TZ_77_SingaporeStandardTime` - `TZ_78_SouthAfricaStandardTime` - `TZ_79_SriLankaStandardTime` - `TZ_80_SyriaStandardTime` - `TZ_81_TaipeiStandardTime` - `TZ_82_TasmaniaStandardTime` - `TZ_83_TokyoStandardTime` - `TZ_84_TongaStandardTime` - `TZ_85_TurkeyStandardTime` - `TZ_86_UlaanbaatarStandardTime` - `TZ_87_US_EasternStandardTime` - `TZ_88_USMountainStandardTime` - `TZ_89_VenezuelaStandardTime` - `TZ_90_VladivostokStandardTime` - `TZ_91_W_AustraliaStandardTime` - `TZ_92_W_CentralAfricaStandardTime` - `TZ_93_W_EuropeStandardTime` - `TZ_94_WestAsiaStandardTime` - `TZ_95_WestPacificStandardTime` - `TZ_96_YakutskStandardTime` 
	TimezoneOffsetAPI *string `json:"timezoneOffsetAPI,omitempty"`
	TimezoneOffsetAPIMetadata *SettingsMetadata `json:"timezoneOffsetAPIMetadata,omitempty"`
	// Specifies the time zone to use in the UI.  Valid values are:  - `TZ_01_AfghanistanStandardTime` - `TZ_02_AlaskanStandardTime` - `TZ_03_ArabStandardTime` - `TZ_04_ArabianStandardTime` - `TZ_05_ArabicStandardTime` - `TZ_06_ArgentinaStandardTime` - `TZ_07_AtlanticStandardTime` - `TZ_08_AUS_CentralStandardTime` - `TZ_09_AUS_EasternStandardTime` - `TZ_10_AzerbaijanStandardTime` - `TZ_11_AzoresStandardTime` - `TZ_12_BangladeshStandardTime` - `TZ_13_CanadaCentralStandardTime` - `TZ_14_CapeVerdeStandardTime` - `TZ_15_CaucasusStandardTime` - `TZ_16_CentralAustraliaStandardTime` - `TZ_17_CentralAmericaStandardTime` - `TZ_18_CentralAsiaStandardTime` - `TZ_19_CentralBrazilianStandardTime` - `TZ_20_CentralEuropeStandardTime` - `TZ_21_CentralEuropeanStandardTime` - `TZ_22_CentralPacificStandardTime` - `TZ_23_CentralStandardTime` - `TZ_24_CentralStandardTimeMexico` - `TZ_25_ChinaStandardTime` - `TZ_26_DatelineStandardTime` - `TZ_27_E_AfricaStandardTime` - `TZ_28_E_AustraliaStandardTime` - `TZ_29_E_EuropeStandardTime` - `TZ_30_E_SouthAmericaStandardTime` - `TZ_31_EasternStandardTime` - `TZ_32_EgyptStandardTime` - `TZ_33_EkaterinburgStandardTime` - `TZ_34_FijiStandardTime` - `TZ_35_FLE_StandardTime` - `TZ_36_GeorgianStandardTime` - `TZ_37_GMT_StandardTime` - `TZ_38_GreenlandStandardTime` - `TZ_39_GreenwichStandardTime` - `TZ_40_GTB_StandardTime` - `TZ_41_HawaiianStandardTime` - `TZ_42_IndiaStandardTime` - `TZ_43_IranStandardTime` - `TZ_44_IsraelStandardTime` - `TZ_45_JordanStandardTime` - `TZ_46_KaliningradStandardTime` - `TZ_47_KamchatkaStandardTime` - `TZ_48_KoreaStandardTime` - `TZ_49_MagadanStandardTime` - `TZ_50_MauritiusStandardTime` - `TZ_51_MidAtlanticStandardTime` - `TZ_52_MiddleEastStandardTime` - `TZ_53_MontevideoStandardTime` - `TZ_54_MoroccoStandardTime` - `TZ_55_MountainStandardTime` - `TZ_56_MountainStandardTimeMMexico` - `TZ_57_MyanmarStandardTime` - `TZ_58_N_CentralAsiaStandardTime` - `TZ_59_NamibiaStandardTime` - `TZ_60_NepalStandardTime` - `TZ_61_NewZealandStandardTime` - `TZ_62_NewfoundlandStandardTime` - `TZ_63_NorthAsiaEastStandardTime` - `TZ_64_NorthAsiaStandardTime` - `TZ_65_PacificSAStandardTime` - `TZ_66_PacificStandardTime` - `TZ_67_PacificStandardTimeMexico` - `TZ_68_PakistanStandardTime` - `TZ_69_ParaguayStandardTime` - `TZ_70_RomanceStandardTime` - `TZ_71_RussianStandardTime` - `TZ_72_SAEasternStandardTime` - `TZ_73_SAPacificStandardTime` - `TZ_74_SAWesternStandardTime` - `TZ_75_SamoaStandardTime` - `TZ_76_SE_AsiaStandardTime` - `TZ_77_SingaporeStandardTime` - `TZ_78_SouthAfricaStandardTime` - `TZ_79_SriLankaStandardTime` - `TZ_80_SyriaStandardTime` - `TZ_81_TaipeiStandardTime` - `TZ_82_TasmaniaStandardTime` - `TZ_83_TokyoStandardTime` - `TZ_84_TongaStandardTime` - `TZ_85_TurkeyStandardTime` - `TZ_86_UlaanbaatarStandardTime` - `TZ_87_US_EasternStandardTime` - `TZ_88_USMountainStandardTime` - `TZ_89_VenezuelaStandardTime` - `TZ_90_VladivostokStandardTime` - `TZ_91_W_AustraliaStandardTime` - `TZ_92_W_CentralAfricaStandardTime` - `TZ_93_W_EuropeStandardTime` - `TZ_94_WestAsiaStandardTime` - `TZ_95_WestPacificStandardTime` - `TZ_96_YakutskStandardTime` 
	TimezoneOffsetUI *string `json:"timezoneOffsetUI,omitempty"`
	TimezoneOffsetUIMetadata *SettingsMetadata `json:"timezoneOffsetUIMetadata,omitempty"`
	// Reserved for DocuSign. 
	UniversalSignatureOptIn *string `json:"universalSignatureOptIn,omitempty"`
	// Reserved for DocuSign. 
	UseAccountLevelEmail *string `json:"useAccountLevelEmail,omitempty"`
	UseAccountLevelEmailMetadata *SettingsMetadata `json:"useAccountLevelEmailMetadata,omitempty"`
	// When **true,** the account uses an Electronic Record and Signature Disclosure Statement.  **Note:** Only Admin users can change this setting. 
	UseConsumerDisclosure *string `json:"useConsumerDisclosure,omitempty"`
	UseConsumerDisclosureMetadata *SettingsMetadata `json:"useConsumerDisclosureMetadata,omitempty"`
	// When **true,** specifies that recipients in the same account as the sender must agree to eSign an Electronic Record and Signature Disclosure Statement.
	UseConsumerDisclosureWithinAccount *string `json:"useConsumerDisclosureWithinAccount,omitempty"`
	UseConsumerDisclosureWithinAccountMetadata *SettingsMetadata `json:"useConsumerDisclosureWithinAccountMetadata,omitempty"`
	// Reserved for DocuSign. 
	UseDerivedKeys *string `json:"useDerivedKeys,omitempty"`
	UseDerivedKeysMetadata *SettingsMetadata `json:"useDerivedKeysMetadata,omitempty"`
	// When **true,** signers are required to use Express Digital Signatures. 
	UseDocuSignExpressSignerCertificate *string `json:"useDocuSignExpressSignerCertificate,omitempty"`
	UseDocuSignExpressSignerCertificateMetadata *SettingsMetadata `json:"useDocuSignExpressSignerCertificateMetadata,omitempty"`
	// 
	UseEnvelopeSearchMixedMode *string `json:"useEnvelopeSearchMixedMode,omitempty"`
	UseEnvelopeSearchMixedModeMetadata *SettingsMetadata `json:"useEnvelopeSearchMixedModeMetadata,omitempty"`
	// 
	UseMultiAppGroupsData *string `json:"useMultiAppGroupsData,omitempty"`
	UseMultiAppGroupsDataMetadata *SettingsMetadata `json:"useMultiAppGroupsDataMetadata,omitempty"`
	// Reserved for DocuSign. 
	UseNewBlobForPdf *string `json:"useNewBlobForPdf,omitempty"`
	UseNewBlobForPdfMetadata *SettingsMetadata `json:"useNewBlobForPdfMetadata,omitempty"`
	// 
	UseNewEnvelopeSearch *string `json:"useNewEnvelopeSearch,omitempty"`
	UseNewEnvelopeSearchMetadata *SettingsMetadata `json:"useNewEnvelopeSearchMetadata,omitempty"`
	// 
	UseNewEnvelopeSearchOnlyWhenSearchingAfterDate *string `json:"useNewEnvelopeSearchOnlyWhenSearchingAfterDate,omitempty"`
	UseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata *SettingsMetadata `json:"useNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata,omitempty"`
	// 
	UseNewEnvelopeSearchOnlyWithSearchTerm *string `json:"useNewEnvelopeSearchOnlyWithSearchTerm,omitempty"`
	UseNewEnvelopeSearchOnlyWithSearchTermMetadata *SettingsMetadata `json:"useNewEnvelopeSearchOnlyWithSearchTermMetadata,omitempty"`
	// When **true,** signers are required to use SAFE digital signatures. 
	UseSAFESignerCertificates *string `json:"useSAFESignerCertificates,omitempty"`
	UseSAFESignerCertificatesMetadata *SettingsMetadata `json:"useSAFESignerCertificatesMetadata,omitempty"`
	// When **true,** the account can use the API.  **Note:** Only SysAdmin users can change this setting. 
	UsesAPI *string `json:"usesAPI,omitempty"`
	UsesAPIMetadata *SettingsMetadata `json:"usesAPIMetadata,omitempty"`
	// Boolean that specifies whether the account uses the digital signature provider platform to eSign.
	UseSignatureProviderPlatform *string `json:"useSignatureProviderPlatform,omitempty"`
	UseSignatureProviderPlatformMetadata *SettingsMetadata `json:"useSignatureProviderPlatformMetadata,omitempty"`
	// 
	UseSmartContractsV1 *string `json:"useSmartContractsV1,omitempty"`
	// Boolean that specifies whether validations on recipient email domains are allowed.
	ValidationsAllowed *string `json:"validationsAllowed,omitempty"`
	ValidationsAllowedMetadata *SettingsMetadata `json:"validationsAllowedMetadata,omitempty"`
	// Valid values are:  - `docusign` - `account` 
	ValidationsBrand *string `json:"validationsBrand,omitempty"`
	ValidationsBrandMetadata *SettingsMetadata `json:"validationsBrandMetadata,omitempty"`
	// Valid values are:  - `none` - `monthly` 
	ValidationsCadence *string `json:"validationsCadence,omitempty"`
	ValidationsCadenceMetadata *SettingsMetadata `json:"validationsCadenceMetadata,omitempty"`
	// When **true,** enables validations. 
	ValidationsEnabled *string `json:"validationsEnabled,omitempty"`
	ValidationsEnabledMetadata *SettingsMetadata `json:"validationsEnabledMetadata,omitempty"`
	// Valid values are:  - `none` - `life_sciences_part11` 
	ValidationsReport *string `json:"validationsReport,omitempty"`
	ValidationsReportMetadata *SettingsMetadata `json:"validationsReportMetadata,omitempty"`
	// When **true,** the [watermark feature](https://support.docusign.com/s/articles/How-do-I-manage-the-watermark-for-In-Process-envelopes-sent-from-my-account) is enabled for the account. 
	WaterMarkEnabled *string `json:"waterMarkEnabled,omitempty"`
	WaterMarkEnabledMetadata *SettingsMetadata `json:"waterMarkEnabledMetadata,omitempty"`
	// When **true,** sent reminders are included in the envelope history.
	WriteReminderToEnvelopeHistory *string `json:"writeReminderToEnvelopeHistory,omitempty"`
	WriteReminderToEnvelopeHistoryMetadata *SettingsMetadata `json:"writeReminderToEnvelopeHistoryMetadata,omitempty"`
	// The smallest screen allowed.
	WurflMinAllowableScreenSize *string `json:"wurflMinAllowableScreenSize,omitempty"`
	WurflMinAllowableScreenSizeMetadata *SettingsMetadata `json:"wurflMinAllowableScreenSizeMetadata,omitempty"`
}

// NewAccountSettingsInformation instantiates a new AccountSettingsInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountSettingsInformation() *AccountSettingsInformation {
	this := AccountSettingsInformation{}
	return &this
}

// NewAccountSettingsInformationWithDefaults instantiates a new AccountSettingsInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountSettingsInformationWithDefaults() *AccountSettingsInformation {
	this := AccountSettingsInformation{}
	return &this
}

// GetAccessCodeFormat returns the AccessCodeFormat field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAccessCodeFormat() AccessCodeFormat {
	if o == nil || IsNil(o.AccessCodeFormat) {
		var ret AccessCodeFormat
		return ret
	}
	return *o.AccessCodeFormat
}

// GetAccessCodeFormatOk returns a tuple with the AccessCodeFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAccessCodeFormatOk() (*AccessCodeFormat, bool) {
	if o == nil || IsNil(o.AccessCodeFormat) {
		return nil, false
	}
	return o.AccessCodeFormat, true
}

// HasAccessCodeFormat returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAccessCodeFormat() bool {
	if o != nil && !IsNil(o.AccessCodeFormat) {
		return true
	}

	return false
}

// SetAccessCodeFormat gets a reference to the given AccessCodeFormat and assigns it to the AccessCodeFormat field.
func (o *AccountSettingsInformation) SetAccessCodeFormat(v AccessCodeFormat) {
	o.AccessCodeFormat = &v
}

// GetAccountDateTimeFormat returns the AccountDateTimeFormat field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAccountDateTimeFormat() string {
	if o == nil || IsNil(o.AccountDateTimeFormat) {
		var ret string
		return ret
	}
	return *o.AccountDateTimeFormat
}

// GetAccountDateTimeFormatOk returns a tuple with the AccountDateTimeFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAccountDateTimeFormatOk() (*string, bool) {
	if o == nil || IsNil(o.AccountDateTimeFormat) {
		return nil, false
	}
	return o.AccountDateTimeFormat, true
}

// HasAccountDateTimeFormat returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAccountDateTimeFormat() bool {
	if o != nil && !IsNil(o.AccountDateTimeFormat) {
		return true
	}

	return false
}

// SetAccountDateTimeFormat gets a reference to the given string and assigns it to the AccountDateTimeFormat field.
func (o *AccountSettingsInformation) SetAccountDateTimeFormat(v string) {
	o.AccountDateTimeFormat = &v
}

// GetAccountDateTimeFormatMetadata returns the AccountDateTimeFormatMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAccountDateTimeFormatMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AccountDateTimeFormatMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AccountDateTimeFormatMetadata
}

// GetAccountDateTimeFormatMetadataOk returns a tuple with the AccountDateTimeFormatMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAccountDateTimeFormatMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AccountDateTimeFormatMetadata) {
		return nil, false
	}
	return o.AccountDateTimeFormatMetadata, true
}

// HasAccountDateTimeFormatMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAccountDateTimeFormatMetadata() bool {
	if o != nil && !IsNil(o.AccountDateTimeFormatMetadata) {
		return true
	}

	return false
}

// SetAccountDateTimeFormatMetadata gets a reference to the given SettingsMetadata and assigns it to the AccountDateTimeFormatMetadata field.
func (o *AccountSettingsInformation) SetAccountDateTimeFormatMetadata(v SettingsMetadata) {
	o.AccountDateTimeFormatMetadata = &v
}

// GetAccountDefaultLanguage returns the AccountDefaultLanguage field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAccountDefaultLanguage() string {
	if o == nil || IsNil(o.AccountDefaultLanguage) {
		var ret string
		return ret
	}
	return *o.AccountDefaultLanguage
}

// GetAccountDefaultLanguageOk returns a tuple with the AccountDefaultLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAccountDefaultLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.AccountDefaultLanguage) {
		return nil, false
	}
	return o.AccountDefaultLanguage, true
}

// HasAccountDefaultLanguage returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAccountDefaultLanguage() bool {
	if o != nil && !IsNil(o.AccountDefaultLanguage) {
		return true
	}

	return false
}

// SetAccountDefaultLanguage gets a reference to the given string and assigns it to the AccountDefaultLanguage field.
func (o *AccountSettingsInformation) SetAccountDefaultLanguage(v string) {
	o.AccountDefaultLanguage = &v
}

// GetAccountDefaultLanguageMetadata returns the AccountDefaultLanguageMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAccountDefaultLanguageMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AccountDefaultLanguageMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AccountDefaultLanguageMetadata
}

// GetAccountDefaultLanguageMetadataOk returns a tuple with the AccountDefaultLanguageMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAccountDefaultLanguageMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AccountDefaultLanguageMetadata) {
		return nil, false
	}
	return o.AccountDefaultLanguageMetadata, true
}

// HasAccountDefaultLanguageMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAccountDefaultLanguageMetadata() bool {
	if o != nil && !IsNil(o.AccountDefaultLanguageMetadata) {
		return true
	}

	return false
}

// SetAccountDefaultLanguageMetadata gets a reference to the given SettingsMetadata and assigns it to the AccountDefaultLanguageMetadata field.
func (o *AccountSettingsInformation) SetAccountDefaultLanguageMetadata(v SettingsMetadata) {
	o.AccountDefaultLanguageMetadata = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *AccountSettingsInformation) SetAccountName(v string) {
	o.AccountName = &v
}

// GetAccountNameMetadata returns the AccountNameMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAccountNameMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AccountNameMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AccountNameMetadata
}

// GetAccountNameMetadataOk returns a tuple with the AccountNameMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAccountNameMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AccountNameMetadata) {
		return nil, false
	}
	return o.AccountNameMetadata, true
}

// HasAccountNameMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAccountNameMetadata() bool {
	if o != nil && !IsNil(o.AccountNameMetadata) {
		return true
	}

	return false
}

// SetAccountNameMetadata gets a reference to the given SettingsMetadata and assigns it to the AccountNameMetadata field.
func (o *AccountSettingsInformation) SetAccountNameMetadata(v SettingsMetadata) {
	o.AccountNameMetadata = &v
}

// GetAccountNotification returns the AccountNotification field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAccountNotification() AccountNotification {
	if o == nil || IsNil(o.AccountNotification) {
		var ret AccountNotification
		return ret
	}
	return *o.AccountNotification
}

// GetAccountNotificationOk returns a tuple with the AccountNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAccountNotificationOk() (*AccountNotification, bool) {
	if o == nil || IsNil(o.AccountNotification) {
		return nil, false
	}
	return o.AccountNotification, true
}

// HasAccountNotification returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAccountNotification() bool {
	if o != nil && !IsNil(o.AccountNotification) {
		return true
	}

	return false
}

// SetAccountNotification gets a reference to the given AccountNotification and assigns it to the AccountNotification field.
func (o *AccountSettingsInformation) SetAccountNotification(v AccountNotification) {
	o.AccountNotification = &v
}

// GetAccountUISettings returns the AccountUISettings field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAccountUISettings() AccountUISettings {
	if o == nil || IsNil(o.AccountUISettings) {
		var ret AccountUISettings
		return ret
	}
	return *o.AccountUISettings
}

// GetAccountUISettingsOk returns a tuple with the AccountUISettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAccountUISettingsOk() (*AccountUISettings, bool) {
	if o == nil || IsNil(o.AccountUISettings) {
		return nil, false
	}
	return o.AccountUISettings, true
}

// HasAccountUISettings returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAccountUISettings() bool {
	if o != nil && !IsNil(o.AccountUISettings) {
		return true
	}

	return false
}

// SetAccountUISettings gets a reference to the given AccountUISettings and assigns it to the AccountUISettings field.
func (o *AccountSettingsInformation) SetAccountUISettings(v AccountUISettings) {
	o.AccountUISettings = &v
}

// GetAdoptSigConfig returns the AdoptSigConfig field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAdoptSigConfig() string {
	if o == nil || IsNil(o.AdoptSigConfig) {
		var ret string
		return ret
	}
	return *o.AdoptSigConfig
}

// GetAdoptSigConfigOk returns a tuple with the AdoptSigConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAdoptSigConfigOk() (*string, bool) {
	if o == nil || IsNil(o.AdoptSigConfig) {
		return nil, false
	}
	return o.AdoptSigConfig, true
}

// HasAdoptSigConfig returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAdoptSigConfig() bool {
	if o != nil && !IsNil(o.AdoptSigConfig) {
		return true
	}

	return false
}

// SetAdoptSigConfig gets a reference to the given string and assigns it to the AdoptSigConfig field.
func (o *AccountSettingsInformation) SetAdoptSigConfig(v string) {
	o.AdoptSigConfig = &v
}

// GetAdoptSigConfigMetadata returns the AdoptSigConfigMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAdoptSigConfigMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AdoptSigConfigMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AdoptSigConfigMetadata
}

// GetAdoptSigConfigMetadataOk returns a tuple with the AdoptSigConfigMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAdoptSigConfigMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AdoptSigConfigMetadata) {
		return nil, false
	}
	return o.AdoptSigConfigMetadata, true
}

// HasAdoptSigConfigMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAdoptSigConfigMetadata() bool {
	if o != nil && !IsNil(o.AdoptSigConfigMetadata) {
		return true
	}

	return false
}

// SetAdoptSigConfigMetadata gets a reference to the given SettingsMetadata and assigns it to the AdoptSigConfigMetadata field.
func (o *AccountSettingsInformation) SetAdoptSigConfigMetadata(v SettingsMetadata) {
	o.AdoptSigConfigMetadata = &v
}

// GetAdvancedCorrect returns the AdvancedCorrect field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAdvancedCorrect() string {
	if o == nil || IsNil(o.AdvancedCorrect) {
		var ret string
		return ret
	}
	return *o.AdvancedCorrect
}

// GetAdvancedCorrectOk returns a tuple with the AdvancedCorrect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAdvancedCorrectOk() (*string, bool) {
	if o == nil || IsNil(o.AdvancedCorrect) {
		return nil, false
	}
	return o.AdvancedCorrect, true
}

// HasAdvancedCorrect returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAdvancedCorrect() bool {
	if o != nil && !IsNil(o.AdvancedCorrect) {
		return true
	}

	return false
}

// SetAdvancedCorrect gets a reference to the given string and assigns it to the AdvancedCorrect field.
func (o *AccountSettingsInformation) SetAdvancedCorrect(v string) {
	o.AdvancedCorrect = &v
}

// GetAdvancedCorrectMetadata returns the AdvancedCorrectMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAdvancedCorrectMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AdvancedCorrectMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AdvancedCorrectMetadata
}

// GetAdvancedCorrectMetadataOk returns a tuple with the AdvancedCorrectMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAdvancedCorrectMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AdvancedCorrectMetadata) {
		return nil, false
	}
	return o.AdvancedCorrectMetadata, true
}

// HasAdvancedCorrectMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAdvancedCorrectMetadata() bool {
	if o != nil && !IsNil(o.AdvancedCorrectMetadata) {
		return true
	}

	return false
}

// SetAdvancedCorrectMetadata gets a reference to the given SettingsMetadata and assigns it to the AdvancedCorrectMetadata field.
func (o *AccountSettingsInformation) SetAdvancedCorrectMetadata(v SettingsMetadata) {
	o.AdvancedCorrectMetadata = &v
}

// GetAdvancedSearchEnableTabField returns the AdvancedSearchEnableTabField field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAdvancedSearchEnableTabField() string {
	if o == nil || IsNil(o.AdvancedSearchEnableTabField) {
		var ret string
		return ret
	}
	return *o.AdvancedSearchEnableTabField
}

// GetAdvancedSearchEnableTabFieldOk returns a tuple with the AdvancedSearchEnableTabField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAdvancedSearchEnableTabFieldOk() (*string, bool) {
	if o == nil || IsNil(o.AdvancedSearchEnableTabField) {
		return nil, false
	}
	return o.AdvancedSearchEnableTabField, true
}

// HasAdvancedSearchEnableTabField returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAdvancedSearchEnableTabField() bool {
	if o != nil && !IsNil(o.AdvancedSearchEnableTabField) {
		return true
	}

	return false
}

// SetAdvancedSearchEnableTabField gets a reference to the given string and assigns it to the AdvancedSearchEnableTabField field.
func (o *AccountSettingsInformation) SetAdvancedSearchEnableTabField(v string) {
	o.AdvancedSearchEnableTabField = &v
}

// GetAdvancedSearchEnableTabFieldMetadata returns the AdvancedSearchEnableTabFieldMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAdvancedSearchEnableTabFieldMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AdvancedSearchEnableTabFieldMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AdvancedSearchEnableTabFieldMetadata
}

// GetAdvancedSearchEnableTabFieldMetadataOk returns a tuple with the AdvancedSearchEnableTabFieldMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAdvancedSearchEnableTabFieldMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AdvancedSearchEnableTabFieldMetadata) {
		return nil, false
	}
	return o.AdvancedSearchEnableTabFieldMetadata, true
}

// HasAdvancedSearchEnableTabFieldMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAdvancedSearchEnableTabFieldMetadata() bool {
	if o != nil && !IsNil(o.AdvancedSearchEnableTabFieldMetadata) {
		return true
	}

	return false
}

// SetAdvancedSearchEnableTabFieldMetadata gets a reference to the given SettingsMetadata and assigns it to the AdvancedSearchEnableTabFieldMetadata field.
func (o *AccountSettingsInformation) SetAdvancedSearchEnableTabFieldMetadata(v SettingsMetadata) {
	o.AdvancedSearchEnableTabFieldMetadata = &v
}

// GetAdvancedSearchEnableTemplateIdField returns the AdvancedSearchEnableTemplateIdField field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAdvancedSearchEnableTemplateIdField() string {
	if o == nil || IsNil(o.AdvancedSearchEnableTemplateIdField) {
		var ret string
		return ret
	}
	return *o.AdvancedSearchEnableTemplateIdField
}

// GetAdvancedSearchEnableTemplateIdFieldOk returns a tuple with the AdvancedSearchEnableTemplateIdField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAdvancedSearchEnableTemplateIdFieldOk() (*string, bool) {
	if o == nil || IsNil(o.AdvancedSearchEnableTemplateIdField) {
		return nil, false
	}
	return o.AdvancedSearchEnableTemplateIdField, true
}

// HasAdvancedSearchEnableTemplateIdField returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAdvancedSearchEnableTemplateIdField() bool {
	if o != nil && !IsNil(o.AdvancedSearchEnableTemplateIdField) {
		return true
	}

	return false
}

// SetAdvancedSearchEnableTemplateIdField gets a reference to the given string and assigns it to the AdvancedSearchEnableTemplateIdField field.
func (o *AccountSettingsInformation) SetAdvancedSearchEnableTemplateIdField(v string) {
	o.AdvancedSearchEnableTemplateIdField = &v
}

// GetAdvancedSearchEnableTemplateIdFieldMetadata returns the AdvancedSearchEnableTemplateIdFieldMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAdvancedSearchEnableTemplateIdFieldMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AdvancedSearchEnableTemplateIdFieldMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AdvancedSearchEnableTemplateIdFieldMetadata
}

// GetAdvancedSearchEnableTemplateIdFieldMetadataOk returns a tuple with the AdvancedSearchEnableTemplateIdFieldMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAdvancedSearchEnableTemplateIdFieldMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AdvancedSearchEnableTemplateIdFieldMetadata) {
		return nil, false
	}
	return o.AdvancedSearchEnableTemplateIdFieldMetadata, true
}

// HasAdvancedSearchEnableTemplateIdFieldMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAdvancedSearchEnableTemplateIdFieldMetadata() bool {
	if o != nil && !IsNil(o.AdvancedSearchEnableTemplateIdFieldMetadata) {
		return true
	}

	return false
}

// SetAdvancedSearchEnableTemplateIdFieldMetadata gets a reference to the given SettingsMetadata and assigns it to the AdvancedSearchEnableTemplateIdFieldMetadata field.
func (o *AccountSettingsInformation) SetAdvancedSearchEnableTemplateIdFieldMetadata(v SettingsMetadata) {
	o.AdvancedSearchEnableTemplateIdFieldMetadata = &v
}

// GetAdvancedSearchEnableTemplateNameField returns the AdvancedSearchEnableTemplateNameField field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAdvancedSearchEnableTemplateNameField() string {
	if o == nil || IsNil(o.AdvancedSearchEnableTemplateNameField) {
		var ret string
		return ret
	}
	return *o.AdvancedSearchEnableTemplateNameField
}

// GetAdvancedSearchEnableTemplateNameFieldOk returns a tuple with the AdvancedSearchEnableTemplateNameField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAdvancedSearchEnableTemplateNameFieldOk() (*string, bool) {
	if o == nil || IsNil(o.AdvancedSearchEnableTemplateNameField) {
		return nil, false
	}
	return o.AdvancedSearchEnableTemplateNameField, true
}

// HasAdvancedSearchEnableTemplateNameField returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAdvancedSearchEnableTemplateNameField() bool {
	if o != nil && !IsNil(o.AdvancedSearchEnableTemplateNameField) {
		return true
	}

	return false
}

// SetAdvancedSearchEnableTemplateNameField gets a reference to the given string and assigns it to the AdvancedSearchEnableTemplateNameField field.
func (o *AccountSettingsInformation) SetAdvancedSearchEnableTemplateNameField(v string) {
	o.AdvancedSearchEnableTemplateNameField = &v
}

// GetAdvancedSearchEnableTemplateNameFieldMetadata returns the AdvancedSearchEnableTemplateNameFieldMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAdvancedSearchEnableTemplateNameFieldMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AdvancedSearchEnableTemplateNameFieldMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AdvancedSearchEnableTemplateNameFieldMetadata
}

// GetAdvancedSearchEnableTemplateNameFieldMetadataOk returns a tuple with the AdvancedSearchEnableTemplateNameFieldMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAdvancedSearchEnableTemplateNameFieldMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AdvancedSearchEnableTemplateNameFieldMetadata) {
		return nil, false
	}
	return o.AdvancedSearchEnableTemplateNameFieldMetadata, true
}

// HasAdvancedSearchEnableTemplateNameFieldMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAdvancedSearchEnableTemplateNameFieldMetadata() bool {
	if o != nil && !IsNil(o.AdvancedSearchEnableTemplateNameFieldMetadata) {
		return true
	}

	return false
}

// SetAdvancedSearchEnableTemplateNameFieldMetadata gets a reference to the given SettingsMetadata and assigns it to the AdvancedSearchEnableTemplateNameFieldMetadata field.
func (o *AccountSettingsInformation) SetAdvancedSearchEnableTemplateNameFieldMetadata(v SettingsMetadata) {
	o.AdvancedSearchEnableTemplateNameFieldMetadata = &v
}

// GetAllowAccessCodeFormat returns the AllowAccessCodeFormat field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAccessCodeFormat() string {
	if o == nil || IsNil(o.AllowAccessCodeFormat) {
		var ret string
		return ret
	}
	return *o.AllowAccessCodeFormat
}

// GetAllowAccessCodeFormatOk returns a tuple with the AllowAccessCodeFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAccessCodeFormatOk() (*string, bool) {
	if o == nil || IsNil(o.AllowAccessCodeFormat) {
		return nil, false
	}
	return o.AllowAccessCodeFormat, true
}

// HasAllowAccessCodeFormat returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAccessCodeFormat() bool {
	if o != nil && !IsNil(o.AllowAccessCodeFormat) {
		return true
	}

	return false
}

// SetAllowAccessCodeFormat gets a reference to the given string and assigns it to the AllowAccessCodeFormat field.
func (o *AccountSettingsInformation) SetAllowAccessCodeFormat(v string) {
	o.AllowAccessCodeFormat = &v
}

// GetAllowAccessCodeFormatMetadata returns the AllowAccessCodeFormatMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAccessCodeFormatMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowAccessCodeFormatMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowAccessCodeFormatMetadata
}

// GetAllowAccessCodeFormatMetadataOk returns a tuple with the AllowAccessCodeFormatMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAccessCodeFormatMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowAccessCodeFormatMetadata) {
		return nil, false
	}
	return o.AllowAccessCodeFormatMetadata, true
}

// HasAllowAccessCodeFormatMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAccessCodeFormatMetadata() bool {
	if o != nil && !IsNil(o.AllowAccessCodeFormatMetadata) {
		return true
	}

	return false
}

// SetAllowAccessCodeFormatMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowAccessCodeFormatMetadata field.
func (o *AccountSettingsInformation) SetAllowAccessCodeFormatMetadata(v SettingsMetadata) {
	o.AllowAccessCodeFormatMetadata = &v
}

// GetAllowAccountManagementGranular returns the AllowAccountManagementGranular field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAccountManagementGranular() string {
	if o == nil || IsNil(o.AllowAccountManagementGranular) {
		var ret string
		return ret
	}
	return *o.AllowAccountManagementGranular
}

// GetAllowAccountManagementGranularOk returns a tuple with the AllowAccountManagementGranular field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAccountManagementGranularOk() (*string, bool) {
	if o == nil || IsNil(o.AllowAccountManagementGranular) {
		return nil, false
	}
	return o.AllowAccountManagementGranular, true
}

// HasAllowAccountManagementGranular returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAccountManagementGranular() bool {
	if o != nil && !IsNil(o.AllowAccountManagementGranular) {
		return true
	}

	return false
}

// SetAllowAccountManagementGranular gets a reference to the given string and assigns it to the AllowAccountManagementGranular field.
func (o *AccountSettingsInformation) SetAllowAccountManagementGranular(v string) {
	o.AllowAccountManagementGranular = &v
}

// GetAllowAccountManagementGranularMetadata returns the AllowAccountManagementGranularMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAccountManagementGranularMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowAccountManagementGranularMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowAccountManagementGranularMetadata
}

// GetAllowAccountManagementGranularMetadataOk returns a tuple with the AllowAccountManagementGranularMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAccountManagementGranularMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowAccountManagementGranularMetadata) {
		return nil, false
	}
	return o.AllowAccountManagementGranularMetadata, true
}

// HasAllowAccountManagementGranularMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAccountManagementGranularMetadata() bool {
	if o != nil && !IsNil(o.AllowAccountManagementGranularMetadata) {
		return true
	}

	return false
}

// SetAllowAccountManagementGranularMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowAccountManagementGranularMetadata field.
func (o *AccountSettingsInformation) SetAllowAccountManagementGranularMetadata(v SettingsMetadata) {
	o.AllowAccountManagementGranularMetadata = &v
}

// GetAllowAccountMemberNameChange returns the AllowAccountMemberNameChange field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAccountMemberNameChange() string {
	if o == nil || IsNil(o.AllowAccountMemberNameChange) {
		var ret string
		return ret
	}
	return *o.AllowAccountMemberNameChange
}

// GetAllowAccountMemberNameChangeOk returns a tuple with the AllowAccountMemberNameChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAccountMemberNameChangeOk() (*string, bool) {
	if o == nil || IsNil(o.AllowAccountMemberNameChange) {
		return nil, false
	}
	return o.AllowAccountMemberNameChange, true
}

// HasAllowAccountMemberNameChange returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAccountMemberNameChange() bool {
	if o != nil && !IsNil(o.AllowAccountMemberNameChange) {
		return true
	}

	return false
}

// SetAllowAccountMemberNameChange gets a reference to the given string and assigns it to the AllowAccountMemberNameChange field.
func (o *AccountSettingsInformation) SetAllowAccountMemberNameChange(v string) {
	o.AllowAccountMemberNameChange = &v
}

// GetAllowAccountMemberNameChangeMetadata returns the AllowAccountMemberNameChangeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAccountMemberNameChangeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowAccountMemberNameChangeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowAccountMemberNameChangeMetadata
}

// GetAllowAccountMemberNameChangeMetadataOk returns a tuple with the AllowAccountMemberNameChangeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAccountMemberNameChangeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowAccountMemberNameChangeMetadata) {
		return nil, false
	}
	return o.AllowAccountMemberNameChangeMetadata, true
}

// HasAllowAccountMemberNameChangeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAccountMemberNameChangeMetadata() bool {
	if o != nil && !IsNil(o.AllowAccountMemberNameChangeMetadata) {
		return true
	}

	return false
}

// SetAllowAccountMemberNameChangeMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowAccountMemberNameChangeMetadata field.
func (o *AccountSettingsInformation) SetAllowAccountMemberNameChangeMetadata(v SettingsMetadata) {
	o.AllowAccountMemberNameChangeMetadata = &v
}

// GetAllowACE returns the AllowACE field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowACE() string {
	if o == nil || IsNil(o.AllowACE) {
		var ret string
		return ret
	}
	return *o.AllowACE
}

// GetAllowACEOk returns a tuple with the AllowACE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowACEOk() (*string, bool) {
	if o == nil || IsNil(o.AllowACE) {
		return nil, false
	}
	return o.AllowACE, true
}

// HasAllowACE returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowACE() bool {
	if o != nil && !IsNil(o.AllowACE) {
		return true
	}

	return false
}

// SetAllowACE gets a reference to the given string and assigns it to the AllowACE field.
func (o *AccountSettingsInformation) SetAllowACE(v string) {
	o.AllowACE = &v
}

// GetAllowACEMetadata returns the AllowACEMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowACEMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowACEMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowACEMetadata
}

// GetAllowACEMetadataOk returns a tuple with the AllowACEMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowACEMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowACEMetadata) {
		return nil, false
	}
	return o.AllowACEMetadata, true
}

// HasAllowACEMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowACEMetadata() bool {
	if o != nil && !IsNil(o.AllowACEMetadata) {
		return true
	}

	return false
}

// SetAllowACEMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowACEMetadata field.
func (o *AccountSettingsInformation) SetAllowACEMetadata(v SettingsMetadata) {
	o.AllowACEMetadata = &v
}

// GetAllowAdvancedRecipientRoutingConditional returns the AllowAdvancedRecipientRoutingConditional field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAdvancedRecipientRoutingConditional() string {
	if o == nil || IsNil(o.AllowAdvancedRecipientRoutingConditional) {
		var ret string
		return ret
	}
	return *o.AllowAdvancedRecipientRoutingConditional
}

// GetAllowAdvancedRecipientRoutingConditionalOk returns a tuple with the AllowAdvancedRecipientRoutingConditional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAdvancedRecipientRoutingConditionalOk() (*string, bool) {
	if o == nil || IsNil(o.AllowAdvancedRecipientRoutingConditional) {
		return nil, false
	}
	return o.AllowAdvancedRecipientRoutingConditional, true
}

// HasAllowAdvancedRecipientRoutingConditional returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAdvancedRecipientRoutingConditional() bool {
	if o != nil && !IsNil(o.AllowAdvancedRecipientRoutingConditional) {
		return true
	}

	return false
}

// SetAllowAdvancedRecipientRoutingConditional gets a reference to the given string and assigns it to the AllowAdvancedRecipientRoutingConditional field.
func (o *AccountSettingsInformation) SetAllowAdvancedRecipientRoutingConditional(v string) {
	o.AllowAdvancedRecipientRoutingConditional = &v
}

// GetAllowAdvancedRecipientRoutingConditionalMetadata returns the AllowAdvancedRecipientRoutingConditionalMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAdvancedRecipientRoutingConditionalMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowAdvancedRecipientRoutingConditionalMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowAdvancedRecipientRoutingConditionalMetadata
}

// GetAllowAdvancedRecipientRoutingConditionalMetadataOk returns a tuple with the AllowAdvancedRecipientRoutingConditionalMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAdvancedRecipientRoutingConditionalMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowAdvancedRecipientRoutingConditionalMetadata) {
		return nil, false
	}
	return o.AllowAdvancedRecipientRoutingConditionalMetadata, true
}

// HasAllowAdvancedRecipientRoutingConditionalMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAdvancedRecipientRoutingConditionalMetadata() bool {
	if o != nil && !IsNil(o.AllowAdvancedRecipientRoutingConditionalMetadata) {
		return true
	}

	return false
}

// SetAllowAdvancedRecipientRoutingConditionalMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowAdvancedRecipientRoutingConditionalMetadata field.
func (o *AccountSettingsInformation) SetAllowAdvancedRecipientRoutingConditionalMetadata(v SettingsMetadata) {
	o.AllowAdvancedRecipientRoutingConditionalMetadata = &v
}

// GetAllowAgentNameEmailEdit returns the AllowAgentNameEmailEdit field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAgentNameEmailEdit() string {
	if o == nil || IsNil(o.AllowAgentNameEmailEdit) {
		var ret string
		return ret
	}
	return *o.AllowAgentNameEmailEdit
}

// GetAllowAgentNameEmailEditOk returns a tuple with the AllowAgentNameEmailEdit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAgentNameEmailEditOk() (*string, bool) {
	if o == nil || IsNil(o.AllowAgentNameEmailEdit) {
		return nil, false
	}
	return o.AllowAgentNameEmailEdit, true
}

// HasAllowAgentNameEmailEdit returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAgentNameEmailEdit() bool {
	if o != nil && !IsNil(o.AllowAgentNameEmailEdit) {
		return true
	}

	return false
}

// SetAllowAgentNameEmailEdit gets a reference to the given string and assigns it to the AllowAgentNameEmailEdit field.
func (o *AccountSettingsInformation) SetAllowAgentNameEmailEdit(v string) {
	o.AllowAgentNameEmailEdit = &v
}

// GetAllowAgentNameEmailEditMetadata returns the AllowAgentNameEmailEditMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAgentNameEmailEditMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowAgentNameEmailEditMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowAgentNameEmailEditMetadata
}

// GetAllowAgentNameEmailEditMetadataOk returns a tuple with the AllowAgentNameEmailEditMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAgentNameEmailEditMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowAgentNameEmailEditMetadata) {
		return nil, false
	}
	return o.AllowAgentNameEmailEditMetadata, true
}

// HasAllowAgentNameEmailEditMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAgentNameEmailEditMetadata() bool {
	if o != nil && !IsNil(o.AllowAgentNameEmailEditMetadata) {
		return true
	}

	return false
}

// SetAllowAgentNameEmailEditMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowAgentNameEmailEditMetadata field.
func (o *AccountSettingsInformation) SetAllowAgentNameEmailEditMetadata(v SettingsMetadata) {
	o.AllowAgentNameEmailEditMetadata = &v
}

// GetAllowAgreementActions returns the AllowAgreementActions field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAgreementActions() string {
	if o == nil || IsNil(o.AllowAgreementActions) {
		var ret string
		return ret
	}
	return *o.AllowAgreementActions
}

// GetAllowAgreementActionsOk returns a tuple with the AllowAgreementActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAgreementActionsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowAgreementActions) {
		return nil, false
	}
	return o.AllowAgreementActions, true
}

// HasAllowAgreementActions returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAgreementActions() bool {
	if o != nil && !IsNil(o.AllowAgreementActions) {
		return true
	}

	return false
}

// SetAllowAgreementActions gets a reference to the given string and assigns it to the AllowAgreementActions field.
func (o *AccountSettingsInformation) SetAllowAgreementActions(v string) {
	o.AllowAgreementActions = &v
}

// GetAllowAgreementActionsMetadata returns the AllowAgreementActionsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAgreementActionsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowAgreementActionsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowAgreementActionsMetadata
}

// GetAllowAgreementActionsMetadataOk returns a tuple with the AllowAgreementActionsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAgreementActionsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowAgreementActionsMetadata) {
		return nil, false
	}
	return o.AllowAgreementActionsMetadata, true
}

// HasAllowAgreementActionsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAgreementActionsMetadata() bool {
	if o != nil && !IsNil(o.AllowAgreementActionsMetadata) {
		return true
	}

	return false
}

// SetAllowAgreementActionsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowAgreementActionsMetadata field.
func (o *AccountSettingsInformation) SetAllowAgreementActionsMetadata(v SettingsMetadata) {
	o.AllowAgreementActionsMetadata = &v
}

// GetAllowAgreementOrchestrations returns the AllowAgreementOrchestrations field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAgreementOrchestrations() string {
	if o == nil || IsNil(o.AllowAgreementOrchestrations) {
		var ret string
		return ret
	}
	return *o.AllowAgreementOrchestrations
}

// GetAllowAgreementOrchestrationsOk returns a tuple with the AllowAgreementOrchestrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAgreementOrchestrationsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowAgreementOrchestrations) {
		return nil, false
	}
	return o.AllowAgreementOrchestrations, true
}

// HasAllowAgreementOrchestrations returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAgreementOrchestrations() bool {
	if o != nil && !IsNil(o.AllowAgreementOrchestrations) {
		return true
	}

	return false
}

// SetAllowAgreementOrchestrations gets a reference to the given string and assigns it to the AllowAgreementOrchestrations field.
func (o *AccountSettingsInformation) SetAllowAgreementOrchestrations(v string) {
	o.AllowAgreementOrchestrations = &v
}

// GetAllowAgreementOrchestrationsMetadata returns the AllowAgreementOrchestrationsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAgreementOrchestrationsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowAgreementOrchestrationsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowAgreementOrchestrationsMetadata
}

// GetAllowAgreementOrchestrationsMetadataOk returns a tuple with the AllowAgreementOrchestrationsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAgreementOrchestrationsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowAgreementOrchestrationsMetadata) {
		return nil, false
	}
	return o.AllowAgreementOrchestrationsMetadata, true
}

// HasAllowAgreementOrchestrationsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAgreementOrchestrationsMetadata() bool {
	if o != nil && !IsNil(o.AllowAgreementOrchestrationsMetadata) {
		return true
	}

	return false
}

// SetAllowAgreementOrchestrationsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowAgreementOrchestrationsMetadata field.
func (o *AccountSettingsInformation) SetAllowAgreementOrchestrationsMetadata(v SettingsMetadata) {
	o.AllowAgreementOrchestrationsMetadata = &v
}

// GetAllowAutoNavSettings returns the AllowAutoNavSettings field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAutoNavSettings() string {
	if o == nil || IsNil(o.AllowAutoNavSettings) {
		var ret string
		return ret
	}
	return *o.AllowAutoNavSettings
}

// GetAllowAutoNavSettingsOk returns a tuple with the AllowAutoNavSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAutoNavSettingsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowAutoNavSettings) {
		return nil, false
	}
	return o.AllowAutoNavSettings, true
}

// HasAllowAutoNavSettings returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAutoNavSettings() bool {
	if o != nil && !IsNil(o.AllowAutoNavSettings) {
		return true
	}

	return false
}

// SetAllowAutoNavSettings gets a reference to the given string and assigns it to the AllowAutoNavSettings field.
func (o *AccountSettingsInformation) SetAllowAutoNavSettings(v string) {
	o.AllowAutoNavSettings = &v
}

// GetAllowAutoNavSettingsMetadata returns the AllowAutoNavSettingsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAutoNavSettingsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowAutoNavSettingsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowAutoNavSettingsMetadata
}

// GetAllowAutoNavSettingsMetadataOk returns a tuple with the AllowAutoNavSettingsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAutoNavSettingsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowAutoNavSettingsMetadata) {
		return nil, false
	}
	return o.AllowAutoNavSettingsMetadata, true
}

// HasAllowAutoNavSettingsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAutoNavSettingsMetadata() bool {
	if o != nil && !IsNil(o.AllowAutoNavSettingsMetadata) {
		return true
	}

	return false
}

// SetAllowAutoNavSettingsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowAutoNavSettingsMetadata field.
func (o *AccountSettingsInformation) SetAllowAutoNavSettingsMetadata(v SettingsMetadata) {
	o.AllowAutoNavSettingsMetadata = &v
}

// GetAllowAutoTagging returns the AllowAutoTagging field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAutoTagging() string {
	if o == nil || IsNil(o.AllowAutoTagging) {
		var ret string
		return ret
	}
	return *o.AllowAutoTagging
}

// GetAllowAutoTaggingOk returns a tuple with the AllowAutoTagging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAutoTaggingOk() (*string, bool) {
	if o == nil || IsNil(o.AllowAutoTagging) {
		return nil, false
	}
	return o.AllowAutoTagging, true
}

// HasAllowAutoTagging returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAutoTagging() bool {
	if o != nil && !IsNil(o.AllowAutoTagging) {
		return true
	}

	return false
}

// SetAllowAutoTagging gets a reference to the given string and assigns it to the AllowAutoTagging field.
func (o *AccountSettingsInformation) SetAllowAutoTagging(v string) {
	o.AllowAutoTagging = &v
}

// GetAllowAutoTaggingMetadata returns the AllowAutoTaggingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowAutoTaggingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowAutoTaggingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowAutoTaggingMetadata
}

// GetAllowAutoTaggingMetadataOk returns a tuple with the AllowAutoTaggingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowAutoTaggingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowAutoTaggingMetadata) {
		return nil, false
	}
	return o.AllowAutoTaggingMetadata, true
}

// HasAllowAutoTaggingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowAutoTaggingMetadata() bool {
	if o != nil && !IsNil(o.AllowAutoTaggingMetadata) {
		return true
	}

	return false
}

// SetAllowAutoTaggingMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowAutoTaggingMetadata field.
func (o *AccountSettingsInformation) SetAllowAutoTaggingMetadata(v SettingsMetadata) {
	o.AllowAutoTaggingMetadata = &v
}

// GetAllowBulkSend returns the AllowBulkSend field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowBulkSend() string {
	if o == nil || IsNil(o.AllowBulkSend) {
		var ret string
		return ret
	}
	return *o.AllowBulkSend
}

// GetAllowBulkSendOk returns a tuple with the AllowBulkSend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowBulkSendOk() (*string, bool) {
	if o == nil || IsNil(o.AllowBulkSend) {
		return nil, false
	}
	return o.AllowBulkSend, true
}

// HasAllowBulkSend returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowBulkSend() bool {
	if o != nil && !IsNil(o.AllowBulkSend) {
		return true
	}

	return false
}

// SetAllowBulkSend gets a reference to the given string and assigns it to the AllowBulkSend field.
func (o *AccountSettingsInformation) SetAllowBulkSend(v string) {
	o.AllowBulkSend = &v
}

// GetAllowBulkSendMetadata returns the AllowBulkSendMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowBulkSendMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowBulkSendMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowBulkSendMetadata
}

// GetAllowBulkSendMetadataOk returns a tuple with the AllowBulkSendMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowBulkSendMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowBulkSendMetadata) {
		return nil, false
	}
	return o.AllowBulkSendMetadata, true
}

// HasAllowBulkSendMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowBulkSendMetadata() bool {
	if o != nil && !IsNil(o.AllowBulkSendMetadata) {
		return true
	}

	return false
}

// SetAllowBulkSendMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowBulkSendMetadata field.
func (o *AccountSettingsInformation) SetAllowBulkSendMetadata(v SettingsMetadata) {
	o.AllowBulkSendMetadata = &v
}

// GetAllowCDWithdraw returns the AllowCDWithdraw field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowCDWithdraw() string {
	if o == nil || IsNil(o.AllowCDWithdraw) {
		var ret string
		return ret
	}
	return *o.AllowCDWithdraw
}

// GetAllowCDWithdrawOk returns a tuple with the AllowCDWithdraw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowCDWithdrawOk() (*string, bool) {
	if o == nil || IsNil(o.AllowCDWithdraw) {
		return nil, false
	}
	return o.AllowCDWithdraw, true
}

// HasAllowCDWithdraw returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowCDWithdraw() bool {
	if o != nil && !IsNil(o.AllowCDWithdraw) {
		return true
	}

	return false
}

// SetAllowCDWithdraw gets a reference to the given string and assigns it to the AllowCDWithdraw field.
func (o *AccountSettingsInformation) SetAllowCDWithdraw(v string) {
	o.AllowCDWithdraw = &v
}

// GetAllowCDWithdrawMetadata returns the AllowCDWithdrawMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowCDWithdrawMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowCDWithdrawMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowCDWithdrawMetadata
}

// GetAllowCDWithdrawMetadataOk returns a tuple with the AllowCDWithdrawMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowCDWithdrawMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowCDWithdrawMetadata) {
		return nil, false
	}
	return o.AllowCDWithdrawMetadata, true
}

// HasAllowCDWithdrawMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowCDWithdrawMetadata() bool {
	if o != nil && !IsNil(o.AllowCDWithdrawMetadata) {
		return true
	}

	return false
}

// SetAllowCDWithdrawMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowCDWithdrawMetadata field.
func (o *AccountSettingsInformation) SetAllowCDWithdrawMetadata(v SettingsMetadata) {
	o.AllowCDWithdrawMetadata = &v
}

// GetAllowConnectHttpListenerConfigs returns the AllowConnectHttpListenerConfigs field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowConnectHttpListenerConfigs() string {
	if o == nil || IsNil(o.AllowConnectHttpListenerConfigs) {
		var ret string
		return ret
	}
	return *o.AllowConnectHttpListenerConfigs
}

// GetAllowConnectHttpListenerConfigsOk returns a tuple with the AllowConnectHttpListenerConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowConnectHttpListenerConfigsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowConnectHttpListenerConfigs) {
		return nil, false
	}
	return o.AllowConnectHttpListenerConfigs, true
}

// HasAllowConnectHttpListenerConfigs returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowConnectHttpListenerConfigs() bool {
	if o != nil && !IsNil(o.AllowConnectHttpListenerConfigs) {
		return true
	}

	return false
}

// SetAllowConnectHttpListenerConfigs gets a reference to the given string and assigns it to the AllowConnectHttpListenerConfigs field.
func (o *AccountSettingsInformation) SetAllowConnectHttpListenerConfigs(v string) {
	o.AllowConnectHttpListenerConfigs = &v
}

// GetAllowConnectIdentityVerificationUI returns the AllowConnectIdentityVerificationUI field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowConnectIdentityVerificationUI() string {
	if o == nil || IsNil(o.AllowConnectIdentityVerificationUI) {
		var ret string
		return ret
	}
	return *o.AllowConnectIdentityVerificationUI
}

// GetAllowConnectIdentityVerificationUIOk returns a tuple with the AllowConnectIdentityVerificationUI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowConnectIdentityVerificationUIOk() (*string, bool) {
	if o == nil || IsNil(o.AllowConnectIdentityVerificationUI) {
		return nil, false
	}
	return o.AllowConnectIdentityVerificationUI, true
}

// HasAllowConnectIdentityVerificationUI returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowConnectIdentityVerificationUI() bool {
	if o != nil && !IsNil(o.AllowConnectIdentityVerificationUI) {
		return true
	}

	return false
}

// SetAllowConnectIdentityVerificationUI gets a reference to the given string and assigns it to the AllowConnectIdentityVerificationUI field.
func (o *AccountSettingsInformation) SetAllowConnectIdentityVerificationUI(v string) {
	o.AllowConnectIdentityVerificationUI = &v
}

// GetAllowConnectOAuthUI returns the AllowConnectOAuthUI field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowConnectOAuthUI() string {
	if o == nil || IsNil(o.AllowConnectOAuthUI) {
		var ret string
		return ret
	}
	return *o.AllowConnectOAuthUI
}

// GetAllowConnectOAuthUIOk returns a tuple with the AllowConnectOAuthUI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowConnectOAuthUIOk() (*string, bool) {
	if o == nil || IsNil(o.AllowConnectOAuthUI) {
		return nil, false
	}
	return o.AllowConnectOAuthUI, true
}

// HasAllowConnectOAuthUI returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowConnectOAuthUI() bool {
	if o != nil && !IsNil(o.AllowConnectOAuthUI) {
		return true
	}

	return false
}

// SetAllowConnectOAuthUI gets a reference to the given string and assigns it to the AllowConnectOAuthUI field.
func (o *AccountSettingsInformation) SetAllowConnectOAuthUI(v string) {
	o.AllowConnectOAuthUI = &v
}

// GetAllowConnectSendFinishLater returns the AllowConnectSendFinishLater field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowConnectSendFinishLater() string {
	if o == nil || IsNil(o.AllowConnectSendFinishLater) {
		var ret string
		return ret
	}
	return *o.AllowConnectSendFinishLater
}

// GetAllowConnectSendFinishLaterOk returns a tuple with the AllowConnectSendFinishLater field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowConnectSendFinishLaterOk() (*string, bool) {
	if o == nil || IsNil(o.AllowConnectSendFinishLater) {
		return nil, false
	}
	return o.AllowConnectSendFinishLater, true
}

// HasAllowConnectSendFinishLater returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowConnectSendFinishLater() bool {
	if o != nil && !IsNil(o.AllowConnectSendFinishLater) {
		return true
	}

	return false
}

// SetAllowConnectSendFinishLater gets a reference to the given string and assigns it to the AllowConnectSendFinishLater field.
func (o *AccountSettingsInformation) SetAllowConnectSendFinishLater(v string) {
	o.AllowConnectSendFinishLater = &v
}

// GetAllowConnectSendFinishLaterMetadata returns the AllowConnectSendFinishLaterMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowConnectSendFinishLaterMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowConnectSendFinishLaterMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowConnectSendFinishLaterMetadata
}

// GetAllowConnectSendFinishLaterMetadataOk returns a tuple with the AllowConnectSendFinishLaterMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowConnectSendFinishLaterMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowConnectSendFinishLaterMetadata) {
		return nil, false
	}
	return o.AllowConnectSendFinishLaterMetadata, true
}

// HasAllowConnectSendFinishLaterMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowConnectSendFinishLaterMetadata() bool {
	if o != nil && !IsNil(o.AllowConnectSendFinishLaterMetadata) {
		return true
	}

	return false
}

// SetAllowConnectSendFinishLaterMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowConnectSendFinishLaterMetadata field.
func (o *AccountSettingsInformation) SetAllowConnectSendFinishLaterMetadata(v SettingsMetadata) {
	o.AllowConnectSendFinishLaterMetadata = &v
}

// GetAllowConnectUnifiedPayloadUI returns the AllowConnectUnifiedPayloadUI field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowConnectUnifiedPayloadUI() string {
	if o == nil || IsNil(o.AllowConnectUnifiedPayloadUI) {
		var ret string
		return ret
	}
	return *o.AllowConnectUnifiedPayloadUI
}

// GetAllowConnectUnifiedPayloadUIOk returns a tuple with the AllowConnectUnifiedPayloadUI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowConnectUnifiedPayloadUIOk() (*string, bool) {
	if o == nil || IsNil(o.AllowConnectUnifiedPayloadUI) {
		return nil, false
	}
	return o.AllowConnectUnifiedPayloadUI, true
}

// HasAllowConnectUnifiedPayloadUI returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowConnectUnifiedPayloadUI() bool {
	if o != nil && !IsNil(o.AllowConnectUnifiedPayloadUI) {
		return true
	}

	return false
}

// SetAllowConnectUnifiedPayloadUI gets a reference to the given string and assigns it to the AllowConnectUnifiedPayloadUI field.
func (o *AccountSettingsInformation) SetAllowConnectUnifiedPayloadUI(v string) {
	o.AllowConnectUnifiedPayloadUI = &v
}

// GetAllowConsumerDisclosureOverride returns the AllowConsumerDisclosureOverride field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowConsumerDisclosureOverride() string {
	if o == nil || IsNil(o.AllowConsumerDisclosureOverride) {
		var ret string
		return ret
	}
	return *o.AllowConsumerDisclosureOverride
}

// GetAllowConsumerDisclosureOverrideOk returns a tuple with the AllowConsumerDisclosureOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowConsumerDisclosureOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.AllowConsumerDisclosureOverride) {
		return nil, false
	}
	return o.AllowConsumerDisclosureOverride, true
}

// HasAllowConsumerDisclosureOverride returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowConsumerDisclosureOverride() bool {
	if o != nil && !IsNil(o.AllowConsumerDisclosureOverride) {
		return true
	}

	return false
}

// SetAllowConsumerDisclosureOverride gets a reference to the given string and assigns it to the AllowConsumerDisclosureOverride field.
func (o *AccountSettingsInformation) SetAllowConsumerDisclosureOverride(v string) {
	o.AllowConsumerDisclosureOverride = &v
}

// GetAllowConsumerDisclosureOverrideMetadata returns the AllowConsumerDisclosureOverrideMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowConsumerDisclosureOverrideMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowConsumerDisclosureOverrideMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowConsumerDisclosureOverrideMetadata
}

// GetAllowConsumerDisclosureOverrideMetadataOk returns a tuple with the AllowConsumerDisclosureOverrideMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowConsumerDisclosureOverrideMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowConsumerDisclosureOverrideMetadata) {
		return nil, false
	}
	return o.AllowConsumerDisclosureOverrideMetadata, true
}

// HasAllowConsumerDisclosureOverrideMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowConsumerDisclosureOverrideMetadata() bool {
	if o != nil && !IsNil(o.AllowConsumerDisclosureOverrideMetadata) {
		return true
	}

	return false
}

// SetAllowConsumerDisclosureOverrideMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowConsumerDisclosureOverrideMetadata field.
func (o *AccountSettingsInformation) SetAllowConsumerDisclosureOverrideMetadata(v SettingsMetadata) {
	o.AllowConsumerDisclosureOverrideMetadata = &v
}

// GetAllowDataDownload returns the AllowDataDownload field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowDataDownload() string {
	if o == nil || IsNil(o.AllowDataDownload) {
		var ret string
		return ret
	}
	return *o.AllowDataDownload
}

// GetAllowDataDownloadOk returns a tuple with the AllowDataDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowDataDownloadOk() (*string, bool) {
	if o == nil || IsNil(o.AllowDataDownload) {
		return nil, false
	}
	return o.AllowDataDownload, true
}

// HasAllowDataDownload returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowDataDownload() bool {
	if o != nil && !IsNil(o.AllowDataDownload) {
		return true
	}

	return false
}

// SetAllowDataDownload gets a reference to the given string and assigns it to the AllowDataDownload field.
func (o *AccountSettingsInformation) SetAllowDataDownload(v string) {
	o.AllowDataDownload = &v
}

// GetAllowDataDownloadMetadata returns the AllowDataDownloadMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowDataDownloadMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowDataDownloadMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowDataDownloadMetadata
}

// GetAllowDataDownloadMetadataOk returns a tuple with the AllowDataDownloadMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowDataDownloadMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowDataDownloadMetadata) {
		return nil, false
	}
	return o.AllowDataDownloadMetadata, true
}

// HasAllowDataDownloadMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowDataDownloadMetadata() bool {
	if o != nil && !IsNil(o.AllowDataDownloadMetadata) {
		return true
	}

	return false
}

// SetAllowDataDownloadMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowDataDownloadMetadata field.
func (o *AccountSettingsInformation) SetAllowDataDownloadMetadata(v SettingsMetadata) {
	o.AllowDataDownloadMetadata = &v
}

// GetAllowDelayedRouting returns the AllowDelayedRouting field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowDelayedRouting() string {
	if o == nil || IsNil(o.AllowDelayedRouting) {
		var ret string
		return ret
	}
	return *o.AllowDelayedRouting
}

// GetAllowDelayedRoutingOk returns a tuple with the AllowDelayedRouting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowDelayedRoutingOk() (*string, bool) {
	if o == nil || IsNil(o.AllowDelayedRouting) {
		return nil, false
	}
	return o.AllowDelayedRouting, true
}

// HasAllowDelayedRouting returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowDelayedRouting() bool {
	if o != nil && !IsNil(o.AllowDelayedRouting) {
		return true
	}

	return false
}

// SetAllowDelayedRouting gets a reference to the given string and assigns it to the AllowDelayedRouting field.
func (o *AccountSettingsInformation) SetAllowDelayedRouting(v string) {
	o.AllowDelayedRouting = &v
}

// GetAllowDelayedRoutingMetadata returns the AllowDelayedRoutingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowDelayedRoutingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowDelayedRoutingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowDelayedRoutingMetadata
}

// GetAllowDelayedRoutingMetadataOk returns a tuple with the AllowDelayedRoutingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowDelayedRoutingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowDelayedRoutingMetadata) {
		return nil, false
	}
	return o.AllowDelayedRoutingMetadata, true
}

// HasAllowDelayedRoutingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowDelayedRoutingMetadata() bool {
	if o != nil && !IsNil(o.AllowDelayedRoutingMetadata) {
		return true
	}

	return false
}

// SetAllowDelayedRoutingMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowDelayedRoutingMetadata field.
func (o *AccountSettingsInformation) SetAllowDelayedRoutingMetadata(v SettingsMetadata) {
	o.AllowDelayedRoutingMetadata = &v
}

// GetAllowDelegatedSigning returns the AllowDelegatedSigning field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowDelegatedSigning() string {
	if o == nil || IsNil(o.AllowDelegatedSigning) {
		var ret string
		return ret
	}
	return *o.AllowDelegatedSigning
}

// GetAllowDelegatedSigningOk returns a tuple with the AllowDelegatedSigning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowDelegatedSigningOk() (*string, bool) {
	if o == nil || IsNil(o.AllowDelegatedSigning) {
		return nil, false
	}
	return o.AllowDelegatedSigning, true
}

// HasAllowDelegatedSigning returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowDelegatedSigning() bool {
	if o != nil && !IsNil(o.AllowDelegatedSigning) {
		return true
	}

	return false
}

// SetAllowDelegatedSigning gets a reference to the given string and assigns it to the AllowDelegatedSigning field.
func (o *AccountSettingsInformation) SetAllowDelegatedSigning(v string) {
	o.AllowDelegatedSigning = &v
}

// GetAllowDelegatedSigningMetadata returns the AllowDelegatedSigningMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowDelegatedSigningMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowDelegatedSigningMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowDelegatedSigningMetadata
}

// GetAllowDelegatedSigningMetadataOk returns a tuple with the AllowDelegatedSigningMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowDelegatedSigningMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowDelegatedSigningMetadata) {
		return nil, false
	}
	return o.AllowDelegatedSigningMetadata, true
}

// HasAllowDelegatedSigningMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowDelegatedSigningMetadata() bool {
	if o != nil && !IsNil(o.AllowDelegatedSigningMetadata) {
		return true
	}

	return false
}

// SetAllowDelegatedSigningMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowDelegatedSigningMetadata field.
func (o *AccountSettingsInformation) SetAllowDelegatedSigningMetadata(v SettingsMetadata) {
	o.AllowDelegatedSigningMetadata = &v
}

// GetAllowDocGenDocuments returns the AllowDocGenDocuments field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowDocGenDocuments() string {
	if o == nil || IsNil(o.AllowDocGenDocuments) {
		var ret string
		return ret
	}
	return *o.AllowDocGenDocuments
}

// GetAllowDocGenDocumentsOk returns a tuple with the AllowDocGenDocuments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowDocGenDocumentsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowDocGenDocuments) {
		return nil, false
	}
	return o.AllowDocGenDocuments, true
}

// HasAllowDocGenDocuments returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowDocGenDocuments() bool {
	if o != nil && !IsNil(o.AllowDocGenDocuments) {
		return true
	}

	return false
}

// SetAllowDocGenDocuments gets a reference to the given string and assigns it to the AllowDocGenDocuments field.
func (o *AccountSettingsInformation) SetAllowDocGenDocuments(v string) {
	o.AllowDocGenDocuments = &v
}

// GetAllowDocGenDocumentsMetadata returns the AllowDocGenDocumentsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowDocGenDocumentsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowDocGenDocumentsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowDocGenDocumentsMetadata
}

// GetAllowDocGenDocumentsMetadataOk returns a tuple with the AllowDocGenDocumentsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowDocGenDocumentsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowDocGenDocumentsMetadata) {
		return nil, false
	}
	return o.AllowDocGenDocumentsMetadata, true
}

// HasAllowDocGenDocumentsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowDocGenDocumentsMetadata() bool {
	if o != nil && !IsNil(o.AllowDocGenDocumentsMetadata) {
		return true
	}

	return false
}

// SetAllowDocGenDocumentsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowDocGenDocumentsMetadata field.
func (o *AccountSettingsInformation) SetAllowDocGenDocumentsMetadata(v SettingsMetadata) {
	o.AllowDocGenDocumentsMetadata = &v
}

// GetAllowDocumentDisclosures returns the AllowDocumentDisclosures field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowDocumentDisclosures() string {
	if o == nil || IsNil(o.AllowDocumentDisclosures) {
		var ret string
		return ret
	}
	return *o.AllowDocumentDisclosures
}

// GetAllowDocumentDisclosuresOk returns a tuple with the AllowDocumentDisclosures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowDocumentDisclosuresOk() (*string, bool) {
	if o == nil || IsNil(o.AllowDocumentDisclosures) {
		return nil, false
	}
	return o.AllowDocumentDisclosures, true
}

// HasAllowDocumentDisclosures returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowDocumentDisclosures() bool {
	if o != nil && !IsNil(o.AllowDocumentDisclosures) {
		return true
	}

	return false
}

// SetAllowDocumentDisclosures gets a reference to the given string and assigns it to the AllowDocumentDisclosures field.
func (o *AccountSettingsInformation) SetAllowDocumentDisclosures(v string) {
	o.AllowDocumentDisclosures = &v
}

// GetAllowDocumentDisclosuresMetadata returns the AllowDocumentDisclosuresMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowDocumentDisclosuresMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowDocumentDisclosuresMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowDocumentDisclosuresMetadata
}

// GetAllowDocumentDisclosuresMetadataOk returns a tuple with the AllowDocumentDisclosuresMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowDocumentDisclosuresMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowDocumentDisclosuresMetadata) {
		return nil, false
	}
	return o.AllowDocumentDisclosuresMetadata, true
}

// HasAllowDocumentDisclosuresMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowDocumentDisclosuresMetadata() bool {
	if o != nil && !IsNil(o.AllowDocumentDisclosuresMetadata) {
		return true
	}

	return false
}

// SetAllowDocumentDisclosuresMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowDocumentDisclosuresMetadata field.
func (o *AccountSettingsInformation) SetAllowDocumentDisclosuresMetadata(v SettingsMetadata) {
	o.AllowDocumentDisclosuresMetadata = &v
}

// GetAllowDocumentsOnSignedEnvelopes returns the AllowDocumentsOnSignedEnvelopes field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowDocumentsOnSignedEnvelopes() string {
	if o == nil || IsNil(o.AllowDocumentsOnSignedEnvelopes) {
		var ret string
		return ret
	}
	return *o.AllowDocumentsOnSignedEnvelopes
}

// GetAllowDocumentsOnSignedEnvelopesOk returns a tuple with the AllowDocumentsOnSignedEnvelopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowDocumentsOnSignedEnvelopesOk() (*string, bool) {
	if o == nil || IsNil(o.AllowDocumentsOnSignedEnvelopes) {
		return nil, false
	}
	return o.AllowDocumentsOnSignedEnvelopes, true
}

// HasAllowDocumentsOnSignedEnvelopes returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowDocumentsOnSignedEnvelopes() bool {
	if o != nil && !IsNil(o.AllowDocumentsOnSignedEnvelopes) {
		return true
	}

	return false
}

// SetAllowDocumentsOnSignedEnvelopes gets a reference to the given string and assigns it to the AllowDocumentsOnSignedEnvelopes field.
func (o *AccountSettingsInformation) SetAllowDocumentsOnSignedEnvelopes(v string) {
	o.AllowDocumentsOnSignedEnvelopes = &v
}

// GetAllowDocumentsOnSignedEnvelopesMetadata returns the AllowDocumentsOnSignedEnvelopesMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowDocumentsOnSignedEnvelopesMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowDocumentsOnSignedEnvelopesMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowDocumentsOnSignedEnvelopesMetadata
}

// GetAllowDocumentsOnSignedEnvelopesMetadataOk returns a tuple with the AllowDocumentsOnSignedEnvelopesMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowDocumentsOnSignedEnvelopesMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowDocumentsOnSignedEnvelopesMetadata) {
		return nil, false
	}
	return o.AllowDocumentsOnSignedEnvelopesMetadata, true
}

// HasAllowDocumentsOnSignedEnvelopesMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowDocumentsOnSignedEnvelopesMetadata() bool {
	if o != nil && !IsNil(o.AllowDocumentsOnSignedEnvelopesMetadata) {
		return true
	}

	return false
}

// SetAllowDocumentsOnSignedEnvelopesMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowDocumentsOnSignedEnvelopesMetadata field.
func (o *AccountSettingsInformation) SetAllowDocumentsOnSignedEnvelopesMetadata(v SettingsMetadata) {
	o.AllowDocumentsOnSignedEnvelopesMetadata = &v
}

// GetAllowDocumentVisibility returns the AllowDocumentVisibility field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowDocumentVisibility() string {
	if o == nil || IsNil(o.AllowDocumentVisibility) {
		var ret string
		return ret
	}
	return *o.AllowDocumentVisibility
}

// GetAllowDocumentVisibilityOk returns a tuple with the AllowDocumentVisibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowDocumentVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.AllowDocumentVisibility) {
		return nil, false
	}
	return o.AllowDocumentVisibility, true
}

// HasAllowDocumentVisibility returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowDocumentVisibility() bool {
	if o != nil && !IsNil(o.AllowDocumentVisibility) {
		return true
	}

	return false
}

// SetAllowDocumentVisibility gets a reference to the given string and assigns it to the AllowDocumentVisibility field.
func (o *AccountSettingsInformation) SetAllowDocumentVisibility(v string) {
	o.AllowDocumentVisibility = &v
}

// GetAllowDocumentVisibilityMetadata returns the AllowDocumentVisibilityMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowDocumentVisibilityMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowDocumentVisibilityMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowDocumentVisibilityMetadata
}

// GetAllowDocumentVisibilityMetadataOk returns a tuple with the AllowDocumentVisibilityMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowDocumentVisibilityMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowDocumentVisibilityMetadata) {
		return nil, false
	}
	return o.AllowDocumentVisibilityMetadata, true
}

// HasAllowDocumentVisibilityMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowDocumentVisibilityMetadata() bool {
	if o != nil && !IsNil(o.AllowDocumentVisibilityMetadata) {
		return true
	}

	return false
}

// SetAllowDocumentVisibilityMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowDocumentVisibilityMetadata field.
func (o *AccountSettingsInformation) SetAllowDocumentVisibilityMetadata(v SettingsMetadata) {
	o.AllowDocumentVisibilityMetadata = &v
}

// GetAllowEditingEnvelopesOnBehalfOfOthers returns the AllowEditingEnvelopesOnBehalfOfOthers field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowEditingEnvelopesOnBehalfOfOthers() string {
	if o == nil || IsNil(o.AllowEditingEnvelopesOnBehalfOfOthers) {
		var ret string
		return ret
	}
	return *o.AllowEditingEnvelopesOnBehalfOfOthers
}

// GetAllowEditingEnvelopesOnBehalfOfOthersOk returns a tuple with the AllowEditingEnvelopesOnBehalfOfOthers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowEditingEnvelopesOnBehalfOfOthersOk() (*string, bool) {
	if o == nil || IsNil(o.AllowEditingEnvelopesOnBehalfOfOthers) {
		return nil, false
	}
	return o.AllowEditingEnvelopesOnBehalfOfOthers, true
}

// HasAllowEditingEnvelopesOnBehalfOfOthers returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowEditingEnvelopesOnBehalfOfOthers() bool {
	if o != nil && !IsNil(o.AllowEditingEnvelopesOnBehalfOfOthers) {
		return true
	}

	return false
}

// SetAllowEditingEnvelopesOnBehalfOfOthers gets a reference to the given string and assigns it to the AllowEditingEnvelopesOnBehalfOfOthers field.
func (o *AccountSettingsInformation) SetAllowEditingEnvelopesOnBehalfOfOthers(v string) {
	o.AllowEditingEnvelopesOnBehalfOfOthers = &v
}

// GetAllowEditingEnvelopesOnBehalfOfOthersMetadata returns the AllowEditingEnvelopesOnBehalfOfOthersMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowEditingEnvelopesOnBehalfOfOthersMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowEditingEnvelopesOnBehalfOfOthersMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowEditingEnvelopesOnBehalfOfOthersMetadata
}

// GetAllowEditingEnvelopesOnBehalfOfOthersMetadataOk returns a tuple with the AllowEditingEnvelopesOnBehalfOfOthersMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowEditingEnvelopesOnBehalfOfOthersMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowEditingEnvelopesOnBehalfOfOthersMetadata) {
		return nil, false
	}
	return o.AllowEditingEnvelopesOnBehalfOfOthersMetadata, true
}

// HasAllowEditingEnvelopesOnBehalfOfOthersMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowEditingEnvelopesOnBehalfOfOthersMetadata() bool {
	if o != nil && !IsNil(o.AllowEditingEnvelopesOnBehalfOfOthersMetadata) {
		return true
	}

	return false
}

// SetAllowEditingEnvelopesOnBehalfOfOthersMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowEditingEnvelopesOnBehalfOfOthersMetadata field.
func (o *AccountSettingsInformation) SetAllowEditingEnvelopesOnBehalfOfOthersMetadata(v SettingsMetadata) {
	o.AllowEditingEnvelopesOnBehalfOfOthersMetadata = &v
}

// GetAllowEHankoStamps returns the AllowEHankoStamps field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowEHankoStamps() string {
	if o == nil || IsNil(o.AllowEHankoStamps) {
		var ret string
		return ret
	}
	return *o.AllowEHankoStamps
}

// GetAllowEHankoStampsOk returns a tuple with the AllowEHankoStamps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowEHankoStampsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowEHankoStamps) {
		return nil, false
	}
	return o.AllowEHankoStamps, true
}

// HasAllowEHankoStamps returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowEHankoStamps() bool {
	if o != nil && !IsNil(o.AllowEHankoStamps) {
		return true
	}

	return false
}

// SetAllowEHankoStamps gets a reference to the given string and assigns it to the AllowEHankoStamps field.
func (o *AccountSettingsInformation) SetAllowEHankoStamps(v string) {
	o.AllowEHankoStamps = &v
}

// GetAllowEHankoStampsMetadata returns the AllowEHankoStampsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowEHankoStampsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowEHankoStampsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowEHankoStampsMetadata
}

// GetAllowEHankoStampsMetadataOk returns a tuple with the AllowEHankoStampsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowEHankoStampsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowEHankoStampsMetadata) {
		return nil, false
	}
	return o.AllowEHankoStampsMetadata, true
}

// HasAllowEHankoStampsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowEHankoStampsMetadata() bool {
	if o != nil && !IsNil(o.AllowEHankoStampsMetadata) {
		return true
	}

	return false
}

// SetAllowEHankoStampsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowEHankoStampsMetadata field.
func (o *AccountSettingsInformation) SetAllowEHankoStampsMetadata(v SettingsMetadata) {
	o.AllowEHankoStampsMetadata = &v
}

// GetAllowENoteEOriginal returns the AllowENoteEOriginal field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowENoteEOriginal() string {
	if o == nil || IsNil(o.AllowENoteEOriginal) {
		var ret string
		return ret
	}
	return *o.AllowENoteEOriginal
}

// GetAllowENoteEOriginalOk returns a tuple with the AllowENoteEOriginal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowENoteEOriginalOk() (*string, bool) {
	if o == nil || IsNil(o.AllowENoteEOriginal) {
		return nil, false
	}
	return o.AllowENoteEOriginal, true
}

// HasAllowENoteEOriginal returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowENoteEOriginal() bool {
	if o != nil && !IsNil(o.AllowENoteEOriginal) {
		return true
	}

	return false
}

// SetAllowENoteEOriginal gets a reference to the given string and assigns it to the AllowENoteEOriginal field.
func (o *AccountSettingsInformation) SetAllowENoteEOriginal(v string) {
	o.AllowENoteEOriginal = &v
}

// GetAllowENoteEOriginalMetadata returns the AllowENoteEOriginalMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowENoteEOriginalMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowENoteEOriginalMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowENoteEOriginalMetadata
}

// GetAllowENoteEOriginalMetadataOk returns a tuple with the AllowENoteEOriginalMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowENoteEOriginalMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowENoteEOriginalMetadata) {
		return nil, false
	}
	return o.AllowENoteEOriginalMetadata, true
}

// HasAllowENoteEOriginalMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowENoteEOriginalMetadata() bool {
	if o != nil && !IsNil(o.AllowENoteEOriginalMetadata) {
		return true
	}

	return false
}

// SetAllowENoteEOriginalMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowENoteEOriginalMetadata field.
func (o *AccountSettingsInformation) SetAllowENoteEOriginalMetadata(v SettingsMetadata) {
	o.AllowENoteEOriginalMetadata = &v
}

// GetAllowEnvelopeCorrect returns the AllowEnvelopeCorrect field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowEnvelopeCorrect() string {
	if o == nil || IsNil(o.AllowEnvelopeCorrect) {
		var ret string
		return ret
	}
	return *o.AllowEnvelopeCorrect
}

// GetAllowEnvelopeCorrectOk returns a tuple with the AllowEnvelopeCorrect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowEnvelopeCorrectOk() (*string, bool) {
	if o == nil || IsNil(o.AllowEnvelopeCorrect) {
		return nil, false
	}
	return o.AllowEnvelopeCorrect, true
}

// HasAllowEnvelopeCorrect returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowEnvelopeCorrect() bool {
	if o != nil && !IsNil(o.AllowEnvelopeCorrect) {
		return true
	}

	return false
}

// SetAllowEnvelopeCorrect gets a reference to the given string and assigns it to the AllowEnvelopeCorrect field.
func (o *AccountSettingsInformation) SetAllowEnvelopeCorrect(v string) {
	o.AllowEnvelopeCorrect = &v
}

// GetAllowEnvelopeCorrectMetadata returns the AllowEnvelopeCorrectMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowEnvelopeCorrectMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowEnvelopeCorrectMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowEnvelopeCorrectMetadata
}

// GetAllowEnvelopeCorrectMetadataOk returns a tuple with the AllowEnvelopeCorrectMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowEnvelopeCorrectMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowEnvelopeCorrectMetadata) {
		return nil, false
	}
	return o.AllowEnvelopeCorrectMetadata, true
}

// HasAllowEnvelopeCorrectMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowEnvelopeCorrectMetadata() bool {
	if o != nil && !IsNil(o.AllowEnvelopeCorrectMetadata) {
		return true
	}

	return false
}

// SetAllowEnvelopeCorrectMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowEnvelopeCorrectMetadata field.
func (o *AccountSettingsInformation) SetAllowEnvelopeCorrectMetadata(v SettingsMetadata) {
	o.AllowEnvelopeCorrectMetadata = &v
}

// GetAllowEnvelopeCustodyTransfer returns the AllowEnvelopeCustodyTransfer field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowEnvelopeCustodyTransfer() string {
	if o == nil || IsNil(o.AllowEnvelopeCustodyTransfer) {
		var ret string
		return ret
	}
	return *o.AllowEnvelopeCustodyTransfer
}

// GetAllowEnvelopeCustodyTransferOk returns a tuple with the AllowEnvelopeCustodyTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowEnvelopeCustodyTransferOk() (*string, bool) {
	if o == nil || IsNil(o.AllowEnvelopeCustodyTransfer) {
		return nil, false
	}
	return o.AllowEnvelopeCustodyTransfer, true
}

// HasAllowEnvelopeCustodyTransfer returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowEnvelopeCustodyTransfer() bool {
	if o != nil && !IsNil(o.AllowEnvelopeCustodyTransfer) {
		return true
	}

	return false
}

// SetAllowEnvelopeCustodyTransfer gets a reference to the given string and assigns it to the AllowEnvelopeCustodyTransfer field.
func (o *AccountSettingsInformation) SetAllowEnvelopeCustodyTransfer(v string) {
	o.AllowEnvelopeCustodyTransfer = &v
}

// GetAllowEnvelopeCustodyTransferMetadata returns the AllowEnvelopeCustodyTransferMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowEnvelopeCustodyTransferMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowEnvelopeCustodyTransferMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowEnvelopeCustodyTransferMetadata
}

// GetAllowEnvelopeCustodyTransferMetadataOk returns a tuple with the AllowEnvelopeCustodyTransferMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowEnvelopeCustodyTransferMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowEnvelopeCustodyTransferMetadata) {
		return nil, false
	}
	return o.AllowEnvelopeCustodyTransferMetadata, true
}

// HasAllowEnvelopeCustodyTransferMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowEnvelopeCustodyTransferMetadata() bool {
	if o != nil && !IsNil(o.AllowEnvelopeCustodyTransferMetadata) {
		return true
	}

	return false
}

// SetAllowEnvelopeCustodyTransferMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowEnvelopeCustodyTransferMetadata field.
func (o *AccountSettingsInformation) SetAllowEnvelopeCustodyTransferMetadata(v SettingsMetadata) {
	o.AllowEnvelopeCustodyTransferMetadata = &v
}

// GetAllowEnvelopeCustomFields returns the AllowEnvelopeCustomFields field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowEnvelopeCustomFields() string {
	if o == nil || IsNil(o.AllowEnvelopeCustomFields) {
		var ret string
		return ret
	}
	return *o.AllowEnvelopeCustomFields
}

// GetAllowEnvelopeCustomFieldsOk returns a tuple with the AllowEnvelopeCustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowEnvelopeCustomFieldsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowEnvelopeCustomFields) {
		return nil, false
	}
	return o.AllowEnvelopeCustomFields, true
}

// HasAllowEnvelopeCustomFields returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowEnvelopeCustomFields() bool {
	if o != nil && !IsNil(o.AllowEnvelopeCustomFields) {
		return true
	}

	return false
}

// SetAllowEnvelopeCustomFields gets a reference to the given string and assigns it to the AllowEnvelopeCustomFields field.
func (o *AccountSettingsInformation) SetAllowEnvelopeCustomFields(v string) {
	o.AllowEnvelopeCustomFields = &v
}

// GetAllowEnvelopeCustomFieldsMetadata returns the AllowEnvelopeCustomFieldsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowEnvelopeCustomFieldsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowEnvelopeCustomFieldsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowEnvelopeCustomFieldsMetadata
}

// GetAllowEnvelopeCustomFieldsMetadataOk returns a tuple with the AllowEnvelopeCustomFieldsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowEnvelopeCustomFieldsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowEnvelopeCustomFieldsMetadata) {
		return nil, false
	}
	return o.AllowEnvelopeCustomFieldsMetadata, true
}

// HasAllowEnvelopeCustomFieldsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowEnvelopeCustomFieldsMetadata() bool {
	if o != nil && !IsNil(o.AllowEnvelopeCustomFieldsMetadata) {
		return true
	}

	return false
}

// SetAllowEnvelopeCustomFieldsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowEnvelopeCustomFieldsMetadata field.
func (o *AccountSettingsInformation) SetAllowEnvelopeCustomFieldsMetadata(v SettingsMetadata) {
	o.AllowEnvelopeCustomFieldsMetadata = &v
}

// GetAllowEnvelopePublishReporting returns the AllowEnvelopePublishReporting field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowEnvelopePublishReporting() string {
	if o == nil || IsNil(o.AllowEnvelopePublishReporting) {
		var ret string
		return ret
	}
	return *o.AllowEnvelopePublishReporting
}

// GetAllowEnvelopePublishReportingOk returns a tuple with the AllowEnvelopePublishReporting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowEnvelopePublishReportingOk() (*string, bool) {
	if o == nil || IsNil(o.AllowEnvelopePublishReporting) {
		return nil, false
	}
	return o.AllowEnvelopePublishReporting, true
}

// HasAllowEnvelopePublishReporting returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowEnvelopePublishReporting() bool {
	if o != nil && !IsNil(o.AllowEnvelopePublishReporting) {
		return true
	}

	return false
}

// SetAllowEnvelopePublishReporting gets a reference to the given string and assigns it to the AllowEnvelopePublishReporting field.
func (o *AccountSettingsInformation) SetAllowEnvelopePublishReporting(v string) {
	o.AllowEnvelopePublishReporting = &v
}

// GetAllowEnvelopePublishReportingMetadata returns the AllowEnvelopePublishReportingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowEnvelopePublishReportingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowEnvelopePublishReportingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowEnvelopePublishReportingMetadata
}

// GetAllowEnvelopePublishReportingMetadataOk returns a tuple with the AllowEnvelopePublishReportingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowEnvelopePublishReportingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowEnvelopePublishReportingMetadata) {
		return nil, false
	}
	return o.AllowEnvelopePublishReportingMetadata, true
}

// HasAllowEnvelopePublishReportingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowEnvelopePublishReportingMetadata() bool {
	if o != nil && !IsNil(o.AllowEnvelopePublishReportingMetadata) {
		return true
	}

	return false
}

// SetAllowEnvelopePublishReportingMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowEnvelopePublishReportingMetadata field.
func (o *AccountSettingsInformation) SetAllowEnvelopePublishReportingMetadata(v SettingsMetadata) {
	o.AllowEnvelopePublishReportingMetadata = &v
}

// GetAllowEnvelopeReporting returns the AllowEnvelopeReporting field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowEnvelopeReporting() string {
	if o == nil || IsNil(o.AllowEnvelopeReporting) {
		var ret string
		return ret
	}
	return *o.AllowEnvelopeReporting
}

// GetAllowEnvelopeReportingOk returns a tuple with the AllowEnvelopeReporting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowEnvelopeReportingOk() (*string, bool) {
	if o == nil || IsNil(o.AllowEnvelopeReporting) {
		return nil, false
	}
	return o.AllowEnvelopeReporting, true
}

// HasAllowEnvelopeReporting returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowEnvelopeReporting() bool {
	if o != nil && !IsNil(o.AllowEnvelopeReporting) {
		return true
	}

	return false
}

// SetAllowEnvelopeReporting gets a reference to the given string and assigns it to the AllowEnvelopeReporting field.
func (o *AccountSettingsInformation) SetAllowEnvelopeReporting(v string) {
	o.AllowEnvelopeReporting = &v
}

// GetAllowEnvelopeReportingMetadata returns the AllowEnvelopeReportingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowEnvelopeReportingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowEnvelopeReportingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowEnvelopeReportingMetadata
}

// GetAllowEnvelopeReportingMetadataOk returns a tuple with the AllowEnvelopeReportingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowEnvelopeReportingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowEnvelopeReportingMetadata) {
		return nil, false
	}
	return o.AllowEnvelopeReportingMetadata, true
}

// HasAllowEnvelopeReportingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowEnvelopeReportingMetadata() bool {
	if o != nil && !IsNil(o.AllowEnvelopeReportingMetadata) {
		return true
	}

	return false
}

// SetAllowEnvelopeReportingMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowEnvelopeReportingMetadata field.
func (o *AccountSettingsInformation) SetAllowEnvelopeReportingMetadata(v SettingsMetadata) {
	o.AllowEnvelopeReportingMetadata = &v
}

// GetAllowExpression returns the AllowExpression field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowExpression() string {
	if o == nil || IsNil(o.AllowExpression) {
		var ret string
		return ret
	}
	return *o.AllowExpression
}

// GetAllowExpressionOk returns a tuple with the AllowExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowExpressionOk() (*string, bool) {
	if o == nil || IsNil(o.AllowExpression) {
		return nil, false
	}
	return o.AllowExpression, true
}

// HasAllowExpression returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowExpression() bool {
	if o != nil && !IsNil(o.AllowExpression) {
		return true
	}

	return false
}

// SetAllowExpression gets a reference to the given string and assigns it to the AllowExpression field.
func (o *AccountSettingsInformation) SetAllowExpression(v string) {
	o.AllowExpression = &v
}

// GetAllowExpressionMetadata returns the AllowExpressionMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowExpressionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowExpressionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowExpressionMetadata
}

// GetAllowExpressionMetadataOk returns a tuple with the AllowExpressionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowExpressionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowExpressionMetadata) {
		return nil, false
	}
	return o.AllowExpressionMetadata, true
}

// HasAllowExpressionMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowExpressionMetadata() bool {
	if o != nil && !IsNil(o.AllowExpressionMetadata) {
		return true
	}

	return false
}

// SetAllowExpressionMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowExpressionMetadata field.
func (o *AccountSettingsInformation) SetAllowExpressionMetadata(v SettingsMetadata) {
	o.AllowExpressionMetadata = &v
}

// GetAllowExpressSignerCertificate returns the AllowExpressSignerCertificate field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowExpressSignerCertificate() string {
	if o == nil || IsNil(o.AllowExpressSignerCertificate) {
		var ret string
		return ret
	}
	return *o.AllowExpressSignerCertificate
}

// GetAllowExpressSignerCertificateOk returns a tuple with the AllowExpressSignerCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowExpressSignerCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.AllowExpressSignerCertificate) {
		return nil, false
	}
	return o.AllowExpressSignerCertificate, true
}

// HasAllowExpressSignerCertificate returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowExpressSignerCertificate() bool {
	if o != nil && !IsNil(o.AllowExpressSignerCertificate) {
		return true
	}

	return false
}

// SetAllowExpressSignerCertificate gets a reference to the given string and assigns it to the AllowExpressSignerCertificate field.
func (o *AccountSettingsInformation) SetAllowExpressSignerCertificate(v string) {
	o.AllowExpressSignerCertificate = &v
}

// GetAllowExpressSignerCertificateMetadata returns the AllowExpressSignerCertificateMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowExpressSignerCertificateMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowExpressSignerCertificateMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowExpressSignerCertificateMetadata
}

// GetAllowExpressSignerCertificateMetadataOk returns a tuple with the AllowExpressSignerCertificateMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowExpressSignerCertificateMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowExpressSignerCertificateMetadata) {
		return nil, false
	}
	return o.AllowExpressSignerCertificateMetadata, true
}

// HasAllowExpressSignerCertificateMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowExpressSignerCertificateMetadata() bool {
	if o != nil && !IsNil(o.AllowExpressSignerCertificateMetadata) {
		return true
	}

	return false
}

// SetAllowExpressSignerCertificateMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowExpressSignerCertificateMetadata field.
func (o *AccountSettingsInformation) SetAllowExpressSignerCertificateMetadata(v SettingsMetadata) {
	o.AllowExpressSignerCertificateMetadata = &v
}

// GetAllowExtendedSendingResourceFile returns the AllowExtendedSendingResourceFile field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowExtendedSendingResourceFile() string {
	if o == nil || IsNil(o.AllowExtendedSendingResourceFile) {
		var ret string
		return ret
	}
	return *o.AllowExtendedSendingResourceFile
}

// GetAllowExtendedSendingResourceFileOk returns a tuple with the AllowExtendedSendingResourceFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowExtendedSendingResourceFileOk() (*string, bool) {
	if o == nil || IsNil(o.AllowExtendedSendingResourceFile) {
		return nil, false
	}
	return o.AllowExtendedSendingResourceFile, true
}

// HasAllowExtendedSendingResourceFile returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowExtendedSendingResourceFile() bool {
	if o != nil && !IsNil(o.AllowExtendedSendingResourceFile) {
		return true
	}

	return false
}

// SetAllowExtendedSendingResourceFile gets a reference to the given string and assigns it to the AllowExtendedSendingResourceFile field.
func (o *AccountSettingsInformation) SetAllowExtendedSendingResourceFile(v string) {
	o.AllowExtendedSendingResourceFile = &v
}

// GetAllowExtendedSendingResourceFileMetadata returns the AllowExtendedSendingResourceFileMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowExtendedSendingResourceFileMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowExtendedSendingResourceFileMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowExtendedSendingResourceFileMetadata
}

// GetAllowExtendedSendingResourceFileMetadataOk returns a tuple with the AllowExtendedSendingResourceFileMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowExtendedSendingResourceFileMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowExtendedSendingResourceFileMetadata) {
		return nil, false
	}
	return o.AllowExtendedSendingResourceFileMetadata, true
}

// HasAllowExtendedSendingResourceFileMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowExtendedSendingResourceFileMetadata() bool {
	if o != nil && !IsNil(o.AllowExtendedSendingResourceFileMetadata) {
		return true
	}

	return false
}

// SetAllowExtendedSendingResourceFileMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowExtendedSendingResourceFileMetadata field.
func (o *AccountSettingsInformation) SetAllowExtendedSendingResourceFileMetadata(v SettingsMetadata) {
	o.AllowExtendedSendingResourceFileMetadata = &v
}

// GetAllowExternalLinkedAccounts returns the AllowExternalLinkedAccounts field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowExternalLinkedAccounts() string {
	if o == nil || IsNil(o.AllowExternalLinkedAccounts) {
		var ret string
		return ret
	}
	return *o.AllowExternalLinkedAccounts
}

// GetAllowExternalLinkedAccountsOk returns a tuple with the AllowExternalLinkedAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowExternalLinkedAccountsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowExternalLinkedAccounts) {
		return nil, false
	}
	return o.AllowExternalLinkedAccounts, true
}

// HasAllowExternalLinkedAccounts returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowExternalLinkedAccounts() bool {
	if o != nil && !IsNil(o.AllowExternalLinkedAccounts) {
		return true
	}

	return false
}

// SetAllowExternalLinkedAccounts gets a reference to the given string and assigns it to the AllowExternalLinkedAccounts field.
func (o *AccountSettingsInformation) SetAllowExternalLinkedAccounts(v string) {
	o.AllowExternalLinkedAccounts = &v
}

// GetAllowExternalLinkedAccountsMetadata returns the AllowExternalLinkedAccountsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowExternalLinkedAccountsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowExternalLinkedAccountsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowExternalLinkedAccountsMetadata
}

// GetAllowExternalLinkedAccountsMetadataOk returns a tuple with the AllowExternalLinkedAccountsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowExternalLinkedAccountsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowExternalLinkedAccountsMetadata) {
		return nil, false
	}
	return o.AllowExternalLinkedAccountsMetadata, true
}

// HasAllowExternalLinkedAccountsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowExternalLinkedAccountsMetadata() bool {
	if o != nil && !IsNil(o.AllowExternalLinkedAccountsMetadata) {
		return true
	}

	return false
}

// SetAllowExternalLinkedAccountsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowExternalLinkedAccountsMetadata field.
func (o *AccountSettingsInformation) SetAllowExternalLinkedAccountsMetadata(v SettingsMetadata) {
	o.AllowExternalLinkedAccountsMetadata = &v
}

// GetAllowExternalSignaturePad returns the AllowExternalSignaturePad field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowExternalSignaturePad() string {
	if o == nil || IsNil(o.AllowExternalSignaturePad) {
		var ret string
		return ret
	}
	return *o.AllowExternalSignaturePad
}

// GetAllowExternalSignaturePadOk returns a tuple with the AllowExternalSignaturePad field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowExternalSignaturePadOk() (*string, bool) {
	if o == nil || IsNil(o.AllowExternalSignaturePad) {
		return nil, false
	}
	return o.AllowExternalSignaturePad, true
}

// HasAllowExternalSignaturePad returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowExternalSignaturePad() bool {
	if o != nil && !IsNil(o.AllowExternalSignaturePad) {
		return true
	}

	return false
}

// SetAllowExternalSignaturePad gets a reference to the given string and assigns it to the AllowExternalSignaturePad field.
func (o *AccountSettingsInformation) SetAllowExternalSignaturePad(v string) {
	o.AllowExternalSignaturePad = &v
}

// GetAllowExternalSignaturePadMetadata returns the AllowExternalSignaturePadMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowExternalSignaturePadMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowExternalSignaturePadMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowExternalSignaturePadMetadata
}

// GetAllowExternalSignaturePadMetadataOk returns a tuple with the AllowExternalSignaturePadMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowExternalSignaturePadMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowExternalSignaturePadMetadata) {
		return nil, false
	}
	return o.AllowExternalSignaturePadMetadata, true
}

// HasAllowExternalSignaturePadMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowExternalSignaturePadMetadata() bool {
	if o != nil && !IsNil(o.AllowExternalSignaturePadMetadata) {
		return true
	}

	return false
}

// SetAllowExternalSignaturePadMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowExternalSignaturePadMetadata field.
func (o *AccountSettingsInformation) SetAllowExternalSignaturePadMetadata(v SettingsMetadata) {
	o.AllowExternalSignaturePadMetadata = &v
}

// GetAllowIDVForEUQualifiedSignatures returns the AllowIDVForEUQualifiedSignatures field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowIDVForEUQualifiedSignatures() string {
	if o == nil || IsNil(o.AllowIDVForEUQualifiedSignatures) {
		var ret string
		return ret
	}
	return *o.AllowIDVForEUQualifiedSignatures
}

// GetAllowIDVForEUQualifiedSignaturesOk returns a tuple with the AllowIDVForEUQualifiedSignatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowIDVForEUQualifiedSignaturesOk() (*string, bool) {
	if o == nil || IsNil(o.AllowIDVForEUQualifiedSignatures) {
		return nil, false
	}
	return o.AllowIDVForEUQualifiedSignatures, true
}

// HasAllowIDVForEUQualifiedSignatures returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowIDVForEUQualifiedSignatures() bool {
	if o != nil && !IsNil(o.AllowIDVForEUQualifiedSignatures) {
		return true
	}

	return false
}

// SetAllowIDVForEUQualifiedSignatures gets a reference to the given string and assigns it to the AllowIDVForEUQualifiedSignatures field.
func (o *AccountSettingsInformation) SetAllowIDVForEUQualifiedSignatures(v string) {
	o.AllowIDVForEUQualifiedSignatures = &v
}

// GetAllowIDVForEUQualifiedSignaturesMetadata returns the AllowIDVForEUQualifiedSignaturesMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowIDVForEUQualifiedSignaturesMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowIDVForEUQualifiedSignaturesMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowIDVForEUQualifiedSignaturesMetadata
}

// GetAllowIDVForEUQualifiedSignaturesMetadataOk returns a tuple with the AllowIDVForEUQualifiedSignaturesMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowIDVForEUQualifiedSignaturesMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowIDVForEUQualifiedSignaturesMetadata) {
		return nil, false
	}
	return o.AllowIDVForEUQualifiedSignaturesMetadata, true
}

// HasAllowIDVForEUQualifiedSignaturesMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowIDVForEUQualifiedSignaturesMetadata() bool {
	if o != nil && !IsNil(o.AllowIDVForEUQualifiedSignaturesMetadata) {
		return true
	}

	return false
}

// SetAllowIDVForEUQualifiedSignaturesMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowIDVForEUQualifiedSignaturesMetadata field.
func (o *AccountSettingsInformation) SetAllowIDVForEUQualifiedSignaturesMetadata(v SettingsMetadata) {
	o.AllowIDVForEUQualifiedSignaturesMetadata = &v
}

// GetAllowIDVLevel1 returns the AllowIDVLevel1 field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowIDVLevel1() string {
	if o == nil || IsNil(o.AllowIDVLevel1) {
		var ret string
		return ret
	}
	return *o.AllowIDVLevel1
}

// GetAllowIDVLevel1Ok returns a tuple with the AllowIDVLevel1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowIDVLevel1Ok() (*string, bool) {
	if o == nil || IsNil(o.AllowIDVLevel1) {
		return nil, false
	}
	return o.AllowIDVLevel1, true
}

// HasAllowIDVLevel1 returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowIDVLevel1() bool {
	if o != nil && !IsNil(o.AllowIDVLevel1) {
		return true
	}

	return false
}

// SetAllowIDVLevel1 gets a reference to the given string and assigns it to the AllowIDVLevel1 field.
func (o *AccountSettingsInformation) SetAllowIDVLevel1(v string) {
	o.AllowIDVLevel1 = &v
}

// GetAllowIDVLevel1Metadata returns the AllowIDVLevel1Metadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowIDVLevel1Metadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowIDVLevel1Metadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowIDVLevel1Metadata
}

// GetAllowIDVLevel1MetadataOk returns a tuple with the AllowIDVLevel1Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowIDVLevel1MetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowIDVLevel1Metadata) {
		return nil, false
	}
	return o.AllowIDVLevel1Metadata, true
}

// HasAllowIDVLevel1Metadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowIDVLevel1Metadata() bool {
	if o != nil && !IsNil(o.AllowIDVLevel1Metadata) {
		return true
	}

	return false
}

// SetAllowIDVLevel1Metadata gets a reference to the given SettingsMetadata and assigns it to the AllowIDVLevel1Metadata field.
func (o *AccountSettingsInformation) SetAllowIDVLevel1Metadata(v SettingsMetadata) {
	o.AllowIDVLevel1Metadata = &v
}

// GetAllowIDVLevel1Trial returns the AllowIDVLevel1Trial field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowIDVLevel1Trial() string {
	if o == nil || IsNil(o.AllowIDVLevel1Trial) {
		var ret string
		return ret
	}
	return *o.AllowIDVLevel1Trial
}

// GetAllowIDVLevel1TrialOk returns a tuple with the AllowIDVLevel1Trial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowIDVLevel1TrialOk() (*string, bool) {
	if o == nil || IsNil(o.AllowIDVLevel1Trial) {
		return nil, false
	}
	return o.AllowIDVLevel1Trial, true
}

// HasAllowIDVLevel1Trial returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowIDVLevel1Trial() bool {
	if o != nil && !IsNil(o.AllowIDVLevel1Trial) {
		return true
	}

	return false
}

// SetAllowIDVLevel1Trial gets a reference to the given string and assigns it to the AllowIDVLevel1Trial field.
func (o *AccountSettingsInformation) SetAllowIDVLevel1Trial(v string) {
	o.AllowIDVLevel1Trial = &v
}

// GetAllowIDVLevel1TrialMetadata returns the AllowIDVLevel1TrialMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowIDVLevel1TrialMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowIDVLevel1TrialMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowIDVLevel1TrialMetadata
}

// GetAllowIDVLevel1TrialMetadataOk returns a tuple with the AllowIDVLevel1TrialMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowIDVLevel1TrialMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowIDVLevel1TrialMetadata) {
		return nil, false
	}
	return o.AllowIDVLevel1TrialMetadata, true
}

// HasAllowIDVLevel1TrialMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowIDVLevel1TrialMetadata() bool {
	if o != nil && !IsNil(o.AllowIDVLevel1TrialMetadata) {
		return true
	}

	return false
}

// SetAllowIDVLevel1TrialMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowIDVLevel1TrialMetadata field.
func (o *AccountSettingsInformation) SetAllowIDVLevel1TrialMetadata(v SettingsMetadata) {
	o.AllowIDVLevel1TrialMetadata = &v
}

// GetAllowIDVLevel2 returns the AllowIDVLevel2 field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowIDVLevel2() string {
	if o == nil || IsNil(o.AllowIDVLevel2) {
		var ret string
		return ret
	}
	return *o.AllowIDVLevel2
}

// GetAllowIDVLevel2Ok returns a tuple with the AllowIDVLevel2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowIDVLevel2Ok() (*string, bool) {
	if o == nil || IsNil(o.AllowIDVLevel2) {
		return nil, false
	}
	return o.AllowIDVLevel2, true
}

// HasAllowIDVLevel2 returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowIDVLevel2() bool {
	if o != nil && !IsNil(o.AllowIDVLevel2) {
		return true
	}

	return false
}

// SetAllowIDVLevel2 gets a reference to the given string and assigns it to the AllowIDVLevel2 field.
func (o *AccountSettingsInformation) SetAllowIDVLevel2(v string) {
	o.AllowIDVLevel2 = &v
}

// GetAllowIDVLevel2Metadata returns the AllowIDVLevel2Metadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowIDVLevel2Metadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowIDVLevel2Metadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowIDVLevel2Metadata
}

// GetAllowIDVLevel2MetadataOk returns a tuple with the AllowIDVLevel2Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowIDVLevel2MetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowIDVLevel2Metadata) {
		return nil, false
	}
	return o.AllowIDVLevel2Metadata, true
}

// HasAllowIDVLevel2Metadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowIDVLevel2Metadata() bool {
	if o != nil && !IsNil(o.AllowIDVLevel2Metadata) {
		return true
	}

	return false
}

// SetAllowIDVLevel2Metadata gets a reference to the given SettingsMetadata and assigns it to the AllowIDVLevel2Metadata field.
func (o *AccountSettingsInformation) SetAllowIDVLevel2Metadata(v SettingsMetadata) {
	o.AllowIDVLevel2Metadata = &v
}

// GetAllowIDVLevel3 returns the AllowIDVLevel3 field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowIDVLevel3() string {
	if o == nil || IsNil(o.AllowIDVLevel3) {
		var ret string
		return ret
	}
	return *o.AllowIDVLevel3
}

// GetAllowIDVLevel3Ok returns a tuple with the AllowIDVLevel3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowIDVLevel3Ok() (*string, bool) {
	if o == nil || IsNil(o.AllowIDVLevel3) {
		return nil, false
	}
	return o.AllowIDVLevel3, true
}

// HasAllowIDVLevel3 returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowIDVLevel3() bool {
	if o != nil && !IsNil(o.AllowIDVLevel3) {
		return true
	}

	return false
}

// SetAllowIDVLevel3 gets a reference to the given string and assigns it to the AllowIDVLevel3 field.
func (o *AccountSettingsInformation) SetAllowIDVLevel3(v string) {
	o.AllowIDVLevel3 = &v
}

// GetAllowIDVLevel3Metadata returns the AllowIDVLevel3Metadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowIDVLevel3Metadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowIDVLevel3Metadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowIDVLevel3Metadata
}

// GetAllowIDVLevel3MetadataOk returns a tuple with the AllowIDVLevel3Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowIDVLevel3MetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowIDVLevel3Metadata) {
		return nil, false
	}
	return o.AllowIDVLevel3Metadata, true
}

// HasAllowIDVLevel3Metadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowIDVLevel3Metadata() bool {
	if o != nil && !IsNil(o.AllowIDVLevel3Metadata) {
		return true
	}

	return false
}

// SetAllowIDVLevel3Metadata gets a reference to the given SettingsMetadata and assigns it to the AllowIDVLevel3Metadata field.
func (o *AccountSettingsInformation) SetAllowIDVLevel3Metadata(v SettingsMetadata) {
	o.AllowIDVLevel3Metadata = &v
}

// GetAllowIDVPlatform returns the AllowIDVPlatform field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowIDVPlatform() string {
	if o == nil || IsNil(o.AllowIDVPlatform) {
		var ret string
		return ret
	}
	return *o.AllowIDVPlatform
}

// GetAllowIDVPlatformOk returns a tuple with the AllowIDVPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowIDVPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.AllowIDVPlatform) {
		return nil, false
	}
	return o.AllowIDVPlatform, true
}

// HasAllowIDVPlatform returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowIDVPlatform() bool {
	if o != nil && !IsNil(o.AllowIDVPlatform) {
		return true
	}

	return false
}

// SetAllowIDVPlatform gets a reference to the given string and assigns it to the AllowIDVPlatform field.
func (o *AccountSettingsInformation) SetAllowIDVPlatform(v string) {
	o.AllowIDVPlatform = &v
}

// GetAllowIDVPlatformMetadata returns the AllowIDVPlatformMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowIDVPlatformMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowIDVPlatformMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowIDVPlatformMetadata
}

// GetAllowIDVPlatformMetadataOk returns a tuple with the AllowIDVPlatformMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowIDVPlatformMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowIDVPlatformMetadata) {
		return nil, false
	}
	return o.AllowIDVPlatformMetadata, true
}

// HasAllowIDVPlatformMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowIDVPlatformMetadata() bool {
	if o != nil && !IsNil(o.AllowIDVPlatformMetadata) {
		return true
	}

	return false
}

// SetAllowIDVPlatformMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowIDVPlatformMetadata field.
func (o *AccountSettingsInformation) SetAllowIDVPlatformMetadata(v SettingsMetadata) {
	o.AllowIDVPlatformMetadata = &v
}

// GetAllowInPerson returns the AllowInPerson field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowInPerson() string {
	if o == nil || IsNil(o.AllowInPerson) {
		var ret string
		return ret
	}
	return *o.AllowInPerson
}

// GetAllowInPersonOk returns a tuple with the AllowInPerson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowInPersonOk() (*string, bool) {
	if o == nil || IsNil(o.AllowInPerson) {
		return nil, false
	}
	return o.AllowInPerson, true
}

// HasAllowInPerson returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowInPerson() bool {
	if o != nil && !IsNil(o.AllowInPerson) {
		return true
	}

	return false
}

// SetAllowInPerson gets a reference to the given string and assigns it to the AllowInPerson field.
func (o *AccountSettingsInformation) SetAllowInPerson(v string) {
	o.AllowInPerson = &v
}

// GetAllowInPersonElectronicNotary returns the AllowInPersonElectronicNotary field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowInPersonElectronicNotary() string {
	if o == nil || IsNil(o.AllowInPersonElectronicNotary) {
		var ret string
		return ret
	}
	return *o.AllowInPersonElectronicNotary
}

// GetAllowInPersonElectronicNotaryOk returns a tuple with the AllowInPersonElectronicNotary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowInPersonElectronicNotaryOk() (*string, bool) {
	if o == nil || IsNil(o.AllowInPersonElectronicNotary) {
		return nil, false
	}
	return o.AllowInPersonElectronicNotary, true
}

// HasAllowInPersonElectronicNotary returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowInPersonElectronicNotary() bool {
	if o != nil && !IsNil(o.AllowInPersonElectronicNotary) {
		return true
	}

	return false
}

// SetAllowInPersonElectronicNotary gets a reference to the given string and assigns it to the AllowInPersonElectronicNotary field.
func (o *AccountSettingsInformation) SetAllowInPersonElectronicNotary(v string) {
	o.AllowInPersonElectronicNotary = &v
}

// GetAllowInPersonElectronicNotaryMetadata returns the AllowInPersonElectronicNotaryMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowInPersonElectronicNotaryMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowInPersonElectronicNotaryMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowInPersonElectronicNotaryMetadata
}

// GetAllowInPersonElectronicNotaryMetadataOk returns a tuple with the AllowInPersonElectronicNotaryMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowInPersonElectronicNotaryMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowInPersonElectronicNotaryMetadata) {
		return nil, false
	}
	return o.AllowInPersonElectronicNotaryMetadata, true
}

// HasAllowInPersonElectronicNotaryMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowInPersonElectronicNotaryMetadata() bool {
	if o != nil && !IsNil(o.AllowInPersonElectronicNotaryMetadata) {
		return true
	}

	return false
}

// SetAllowInPersonElectronicNotaryMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowInPersonElectronicNotaryMetadata field.
func (o *AccountSettingsInformation) SetAllowInPersonElectronicNotaryMetadata(v SettingsMetadata) {
	o.AllowInPersonElectronicNotaryMetadata = &v
}

// GetAllowInPersonMetadata returns the AllowInPersonMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowInPersonMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowInPersonMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowInPersonMetadata
}

// GetAllowInPersonMetadataOk returns a tuple with the AllowInPersonMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowInPersonMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowInPersonMetadata) {
		return nil, false
	}
	return o.AllowInPersonMetadata, true
}

// HasAllowInPersonMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowInPersonMetadata() bool {
	if o != nil && !IsNil(o.AllowInPersonMetadata) {
		return true
	}

	return false
}

// SetAllowInPersonMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowInPersonMetadata field.
func (o *AccountSettingsInformation) SetAllowInPersonMetadata(v SettingsMetadata) {
	o.AllowInPersonMetadata = &v
}

// GetAllowManagedStamps returns the AllowManagedStamps field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowManagedStamps() string {
	if o == nil || IsNil(o.AllowManagedStamps) {
		var ret string
		return ret
	}
	return *o.AllowManagedStamps
}

// GetAllowManagedStampsOk returns a tuple with the AllowManagedStamps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowManagedStampsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowManagedStamps) {
		return nil, false
	}
	return o.AllowManagedStamps, true
}

// HasAllowManagedStamps returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowManagedStamps() bool {
	if o != nil && !IsNil(o.AllowManagedStamps) {
		return true
	}

	return false
}

// SetAllowManagedStamps gets a reference to the given string and assigns it to the AllowManagedStamps field.
func (o *AccountSettingsInformation) SetAllowManagedStamps(v string) {
	o.AllowManagedStamps = &v
}

// GetAllowManagedStampsMetadata returns the AllowManagedStampsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowManagedStampsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowManagedStampsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowManagedStampsMetadata
}

// GetAllowManagedStampsMetadataOk returns a tuple with the AllowManagedStampsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowManagedStampsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowManagedStampsMetadata) {
		return nil, false
	}
	return o.AllowManagedStampsMetadata, true
}

// HasAllowManagedStampsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowManagedStampsMetadata() bool {
	if o != nil && !IsNil(o.AllowManagedStampsMetadata) {
		return true
	}

	return false
}

// SetAllowManagedStampsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowManagedStampsMetadata field.
func (o *AccountSettingsInformation) SetAllowManagedStampsMetadata(v SettingsMetadata) {
	o.AllowManagedStampsMetadata = &v
}

// GetAllowManagingEnvelopesOnBehalfOfOthers returns the AllowManagingEnvelopesOnBehalfOfOthers field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowManagingEnvelopesOnBehalfOfOthers() string {
	if o == nil || IsNil(o.AllowManagingEnvelopesOnBehalfOfOthers) {
		var ret string
		return ret
	}
	return *o.AllowManagingEnvelopesOnBehalfOfOthers
}

// GetAllowManagingEnvelopesOnBehalfOfOthersOk returns a tuple with the AllowManagingEnvelopesOnBehalfOfOthers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowManagingEnvelopesOnBehalfOfOthersOk() (*string, bool) {
	if o == nil || IsNil(o.AllowManagingEnvelopesOnBehalfOfOthers) {
		return nil, false
	}
	return o.AllowManagingEnvelopesOnBehalfOfOthers, true
}

// HasAllowManagingEnvelopesOnBehalfOfOthers returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowManagingEnvelopesOnBehalfOfOthers() bool {
	if o != nil && !IsNil(o.AllowManagingEnvelopesOnBehalfOfOthers) {
		return true
	}

	return false
}

// SetAllowManagingEnvelopesOnBehalfOfOthers gets a reference to the given string and assigns it to the AllowManagingEnvelopesOnBehalfOfOthers field.
func (o *AccountSettingsInformation) SetAllowManagingEnvelopesOnBehalfOfOthers(v string) {
	o.AllowManagingEnvelopesOnBehalfOfOthers = &v
}

// GetAllowManagingEnvelopesOnBehalfOfOthersMetadata returns the AllowManagingEnvelopesOnBehalfOfOthersMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowManagingEnvelopesOnBehalfOfOthersMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowManagingEnvelopesOnBehalfOfOthersMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowManagingEnvelopesOnBehalfOfOthersMetadata
}

// GetAllowManagingEnvelopesOnBehalfOfOthersMetadataOk returns a tuple with the AllowManagingEnvelopesOnBehalfOfOthersMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowManagingEnvelopesOnBehalfOfOthersMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowManagingEnvelopesOnBehalfOfOthersMetadata) {
		return nil, false
	}
	return o.AllowManagingEnvelopesOnBehalfOfOthersMetadata, true
}

// HasAllowManagingEnvelopesOnBehalfOfOthersMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowManagingEnvelopesOnBehalfOfOthersMetadata() bool {
	if o != nil && !IsNil(o.AllowManagingEnvelopesOnBehalfOfOthersMetadata) {
		return true
	}

	return false
}

// SetAllowManagingEnvelopesOnBehalfOfOthersMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowManagingEnvelopesOnBehalfOfOthersMetadata field.
func (o *AccountSettingsInformation) SetAllowManagingEnvelopesOnBehalfOfOthersMetadata(v SettingsMetadata) {
	o.AllowManagingEnvelopesOnBehalfOfOthersMetadata = &v
}

// GetAllowMarkup returns the AllowMarkup field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowMarkup() string {
	if o == nil || IsNil(o.AllowMarkup) {
		var ret string
		return ret
	}
	return *o.AllowMarkup
}

// GetAllowMarkupOk returns a tuple with the AllowMarkup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowMarkupOk() (*string, bool) {
	if o == nil || IsNil(o.AllowMarkup) {
		return nil, false
	}
	return o.AllowMarkup, true
}

// HasAllowMarkup returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowMarkup() bool {
	if o != nil && !IsNil(o.AllowMarkup) {
		return true
	}

	return false
}

// SetAllowMarkup gets a reference to the given string and assigns it to the AllowMarkup field.
func (o *AccountSettingsInformation) SetAllowMarkup(v string) {
	o.AllowMarkup = &v
}

// GetAllowMarkupMetadata returns the AllowMarkupMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowMarkupMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowMarkupMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowMarkupMetadata
}

// GetAllowMarkupMetadataOk returns a tuple with the AllowMarkupMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowMarkupMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowMarkupMetadata) {
		return nil, false
	}
	return o.AllowMarkupMetadata, true
}

// HasAllowMarkupMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowMarkupMetadata() bool {
	if o != nil && !IsNil(o.AllowMarkupMetadata) {
		return true
	}

	return false
}

// SetAllowMarkupMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowMarkupMetadata field.
func (o *AccountSettingsInformation) SetAllowMarkupMetadata(v SettingsMetadata) {
	o.AllowMarkupMetadata = &v
}

// GetAllowMemberTimeZone returns the AllowMemberTimeZone field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowMemberTimeZone() string {
	if o == nil || IsNil(o.AllowMemberTimeZone) {
		var ret string
		return ret
	}
	return *o.AllowMemberTimeZone
}

// GetAllowMemberTimeZoneOk returns a tuple with the AllowMemberTimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowMemberTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.AllowMemberTimeZone) {
		return nil, false
	}
	return o.AllowMemberTimeZone, true
}

// HasAllowMemberTimeZone returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowMemberTimeZone() bool {
	if o != nil && !IsNil(o.AllowMemberTimeZone) {
		return true
	}

	return false
}

// SetAllowMemberTimeZone gets a reference to the given string and assigns it to the AllowMemberTimeZone field.
func (o *AccountSettingsInformation) SetAllowMemberTimeZone(v string) {
	o.AllowMemberTimeZone = &v
}

// GetAllowMemberTimeZoneMetadata returns the AllowMemberTimeZoneMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowMemberTimeZoneMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowMemberTimeZoneMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowMemberTimeZoneMetadata
}

// GetAllowMemberTimeZoneMetadataOk returns a tuple with the AllowMemberTimeZoneMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowMemberTimeZoneMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowMemberTimeZoneMetadata) {
		return nil, false
	}
	return o.AllowMemberTimeZoneMetadata, true
}

// HasAllowMemberTimeZoneMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowMemberTimeZoneMetadata() bool {
	if o != nil && !IsNil(o.AllowMemberTimeZoneMetadata) {
		return true
	}

	return false
}

// SetAllowMemberTimeZoneMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowMemberTimeZoneMetadata field.
func (o *AccountSettingsInformation) SetAllowMemberTimeZoneMetadata(v SettingsMetadata) {
	o.AllowMemberTimeZoneMetadata = &v
}

// GetAllowMergeFields returns the AllowMergeFields field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowMergeFields() string {
	if o == nil || IsNil(o.AllowMergeFields) {
		var ret string
		return ret
	}
	return *o.AllowMergeFields
}

// GetAllowMergeFieldsOk returns a tuple with the AllowMergeFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowMergeFieldsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowMergeFields) {
		return nil, false
	}
	return o.AllowMergeFields, true
}

// HasAllowMergeFields returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowMergeFields() bool {
	if o != nil && !IsNil(o.AllowMergeFields) {
		return true
	}

	return false
}

// SetAllowMergeFields gets a reference to the given string and assigns it to the AllowMergeFields field.
func (o *AccountSettingsInformation) SetAllowMergeFields(v string) {
	o.AllowMergeFields = &v
}

// GetAllowMergeFieldsMetadata returns the AllowMergeFieldsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowMergeFieldsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowMergeFieldsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowMergeFieldsMetadata
}

// GetAllowMergeFieldsMetadataOk returns a tuple with the AllowMergeFieldsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowMergeFieldsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowMergeFieldsMetadata) {
		return nil, false
	}
	return o.AllowMergeFieldsMetadata, true
}

// HasAllowMergeFieldsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowMergeFieldsMetadata() bool {
	if o != nil && !IsNil(o.AllowMergeFieldsMetadata) {
		return true
	}

	return false
}

// SetAllowMergeFieldsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowMergeFieldsMetadata field.
func (o *AccountSettingsInformation) SetAllowMergeFieldsMetadata(v SettingsMetadata) {
	o.AllowMergeFieldsMetadata = &v
}

// GetAllowMultipleBrandProfiles returns the AllowMultipleBrandProfiles field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowMultipleBrandProfiles() string {
	if o == nil || IsNil(o.AllowMultipleBrandProfiles) {
		var ret string
		return ret
	}
	return *o.AllowMultipleBrandProfiles
}

// GetAllowMultipleBrandProfilesOk returns a tuple with the AllowMultipleBrandProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowMultipleBrandProfilesOk() (*string, bool) {
	if o == nil || IsNil(o.AllowMultipleBrandProfiles) {
		return nil, false
	}
	return o.AllowMultipleBrandProfiles, true
}

// HasAllowMultipleBrandProfiles returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowMultipleBrandProfiles() bool {
	if o != nil && !IsNil(o.AllowMultipleBrandProfiles) {
		return true
	}

	return false
}

// SetAllowMultipleBrandProfiles gets a reference to the given string and assigns it to the AllowMultipleBrandProfiles field.
func (o *AccountSettingsInformation) SetAllowMultipleBrandProfiles(v string) {
	o.AllowMultipleBrandProfiles = &v
}

// GetAllowMultipleBrandProfilesMetadata returns the AllowMultipleBrandProfilesMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowMultipleBrandProfilesMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowMultipleBrandProfilesMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowMultipleBrandProfilesMetadata
}

// GetAllowMultipleBrandProfilesMetadataOk returns a tuple with the AllowMultipleBrandProfilesMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowMultipleBrandProfilesMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowMultipleBrandProfilesMetadata) {
		return nil, false
	}
	return o.AllowMultipleBrandProfilesMetadata, true
}

// HasAllowMultipleBrandProfilesMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowMultipleBrandProfilesMetadata() bool {
	if o != nil && !IsNil(o.AllowMultipleBrandProfilesMetadata) {
		return true
	}

	return false
}

// SetAllowMultipleBrandProfilesMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowMultipleBrandProfilesMetadata field.
func (o *AccountSettingsInformation) SetAllowMultipleBrandProfilesMetadata(v SettingsMetadata) {
	o.AllowMultipleBrandProfilesMetadata = &v
}

// GetAllowMultipleSignerAttachments returns the AllowMultipleSignerAttachments field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowMultipleSignerAttachments() string {
	if o == nil || IsNil(o.AllowMultipleSignerAttachments) {
		var ret string
		return ret
	}
	return *o.AllowMultipleSignerAttachments
}

// GetAllowMultipleSignerAttachmentsOk returns a tuple with the AllowMultipleSignerAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowMultipleSignerAttachmentsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowMultipleSignerAttachments) {
		return nil, false
	}
	return o.AllowMultipleSignerAttachments, true
}

// HasAllowMultipleSignerAttachments returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowMultipleSignerAttachments() bool {
	if o != nil && !IsNil(o.AllowMultipleSignerAttachments) {
		return true
	}

	return false
}

// SetAllowMultipleSignerAttachments gets a reference to the given string and assigns it to the AllowMultipleSignerAttachments field.
func (o *AccountSettingsInformation) SetAllowMultipleSignerAttachments(v string) {
	o.AllowMultipleSignerAttachments = &v
}

// GetAllowMultipleSignerAttachmentsMetadata returns the AllowMultipleSignerAttachmentsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowMultipleSignerAttachmentsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowMultipleSignerAttachmentsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowMultipleSignerAttachmentsMetadata
}

// GetAllowMultipleSignerAttachmentsMetadataOk returns a tuple with the AllowMultipleSignerAttachmentsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowMultipleSignerAttachmentsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowMultipleSignerAttachmentsMetadata) {
		return nil, false
	}
	return o.AllowMultipleSignerAttachmentsMetadata, true
}

// HasAllowMultipleSignerAttachmentsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowMultipleSignerAttachmentsMetadata() bool {
	if o != nil && !IsNil(o.AllowMultipleSignerAttachmentsMetadata) {
		return true
	}

	return false
}

// SetAllowMultipleSignerAttachmentsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowMultipleSignerAttachmentsMetadata field.
func (o *AccountSettingsInformation) SetAllowMultipleSignerAttachmentsMetadata(v SettingsMetadata) {
	o.AllowMultipleSignerAttachmentsMetadata = &v
}

// GetAllowNonUSPhoneAuth returns the AllowNonUSPhoneAuth field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowNonUSPhoneAuth() string {
	if o == nil || IsNil(o.AllowNonUSPhoneAuth) {
		var ret string
		return ret
	}
	return *o.AllowNonUSPhoneAuth
}

// GetAllowNonUSPhoneAuthOk returns a tuple with the AllowNonUSPhoneAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowNonUSPhoneAuthOk() (*string, bool) {
	if o == nil || IsNil(o.AllowNonUSPhoneAuth) {
		return nil, false
	}
	return o.AllowNonUSPhoneAuth, true
}

// HasAllowNonUSPhoneAuth returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowNonUSPhoneAuth() bool {
	if o != nil && !IsNil(o.AllowNonUSPhoneAuth) {
		return true
	}

	return false
}

// SetAllowNonUSPhoneAuth gets a reference to the given string and assigns it to the AllowNonUSPhoneAuth field.
func (o *AccountSettingsInformation) SetAllowNonUSPhoneAuth(v string) {
	o.AllowNonUSPhoneAuth = &v
}

// GetAllowNonUSPhoneAuthMetadata returns the AllowNonUSPhoneAuthMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowNonUSPhoneAuthMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowNonUSPhoneAuthMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowNonUSPhoneAuthMetadata
}

// GetAllowNonUSPhoneAuthMetadataOk returns a tuple with the AllowNonUSPhoneAuthMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowNonUSPhoneAuthMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowNonUSPhoneAuthMetadata) {
		return nil, false
	}
	return o.AllowNonUSPhoneAuthMetadata, true
}

// HasAllowNonUSPhoneAuthMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowNonUSPhoneAuthMetadata() bool {
	if o != nil && !IsNil(o.AllowNonUSPhoneAuthMetadata) {
		return true
	}

	return false
}

// SetAllowNonUSPhoneAuthMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowNonUSPhoneAuthMetadata field.
func (o *AccountSettingsInformation) SetAllowNonUSPhoneAuthMetadata(v SettingsMetadata) {
	o.AllowNonUSPhoneAuthMetadata = &v
}

// GetAllowOcrOfEnvelopeDocuments returns the AllowOcrOfEnvelopeDocuments field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOcrOfEnvelopeDocuments() string {
	if o == nil || IsNil(o.AllowOcrOfEnvelopeDocuments) {
		var ret string
		return ret
	}
	return *o.AllowOcrOfEnvelopeDocuments
}

// GetAllowOcrOfEnvelopeDocumentsOk returns a tuple with the AllowOcrOfEnvelopeDocuments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOcrOfEnvelopeDocumentsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowOcrOfEnvelopeDocuments) {
		return nil, false
	}
	return o.AllowOcrOfEnvelopeDocuments, true
}

// HasAllowOcrOfEnvelopeDocuments returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOcrOfEnvelopeDocuments() bool {
	if o != nil && !IsNil(o.AllowOcrOfEnvelopeDocuments) {
		return true
	}

	return false
}

// SetAllowOcrOfEnvelopeDocuments gets a reference to the given string and assigns it to the AllowOcrOfEnvelopeDocuments field.
func (o *AccountSettingsInformation) SetAllowOcrOfEnvelopeDocuments(v string) {
	o.AllowOcrOfEnvelopeDocuments = &v
}

// GetAllowOcrOfEnvelopeDocumentsMetadata returns the AllowOcrOfEnvelopeDocumentsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOcrOfEnvelopeDocumentsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowOcrOfEnvelopeDocumentsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowOcrOfEnvelopeDocumentsMetadata
}

// GetAllowOcrOfEnvelopeDocumentsMetadataOk returns a tuple with the AllowOcrOfEnvelopeDocumentsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOcrOfEnvelopeDocumentsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowOcrOfEnvelopeDocumentsMetadata) {
		return nil, false
	}
	return o.AllowOcrOfEnvelopeDocumentsMetadata, true
}

// HasAllowOcrOfEnvelopeDocumentsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOcrOfEnvelopeDocumentsMetadata() bool {
	if o != nil && !IsNil(o.AllowOcrOfEnvelopeDocumentsMetadata) {
		return true
	}

	return false
}

// SetAllowOcrOfEnvelopeDocumentsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowOcrOfEnvelopeDocumentsMetadata field.
func (o *AccountSettingsInformation) SetAllowOcrOfEnvelopeDocumentsMetadata(v SettingsMetadata) {
	o.AllowOcrOfEnvelopeDocumentsMetadata = &v
}

// GetAllowOfflineSigning returns the AllowOfflineSigning field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOfflineSigning() string {
	if o == nil || IsNil(o.AllowOfflineSigning) {
		var ret string
		return ret
	}
	return *o.AllowOfflineSigning
}

// GetAllowOfflineSigningOk returns a tuple with the AllowOfflineSigning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOfflineSigningOk() (*string, bool) {
	if o == nil || IsNil(o.AllowOfflineSigning) {
		return nil, false
	}
	return o.AllowOfflineSigning, true
}

// HasAllowOfflineSigning returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOfflineSigning() bool {
	if o != nil && !IsNil(o.AllowOfflineSigning) {
		return true
	}

	return false
}

// SetAllowOfflineSigning gets a reference to the given string and assigns it to the AllowOfflineSigning field.
func (o *AccountSettingsInformation) SetAllowOfflineSigning(v string) {
	o.AllowOfflineSigning = &v
}

// GetAllowOfflineSigningMetadata returns the AllowOfflineSigningMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOfflineSigningMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowOfflineSigningMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowOfflineSigningMetadata
}

// GetAllowOfflineSigningMetadataOk returns a tuple with the AllowOfflineSigningMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOfflineSigningMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowOfflineSigningMetadata) {
		return nil, false
	}
	return o.AllowOfflineSigningMetadata, true
}

// HasAllowOfflineSigningMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOfflineSigningMetadata() bool {
	if o != nil && !IsNil(o.AllowOfflineSigningMetadata) {
		return true
	}

	return false
}

// SetAllowOfflineSigningMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowOfflineSigningMetadata field.
func (o *AccountSettingsInformation) SetAllowOfflineSigningMetadata(v SettingsMetadata) {
	o.AllowOfflineSigningMetadata = &v
}

// GetAllowOpenTrustSignerCertificate returns the AllowOpenTrustSignerCertificate field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOpenTrustSignerCertificate() string {
	if o == nil || IsNil(o.AllowOpenTrustSignerCertificate) {
		var ret string
		return ret
	}
	return *o.AllowOpenTrustSignerCertificate
}

// GetAllowOpenTrustSignerCertificateOk returns a tuple with the AllowOpenTrustSignerCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOpenTrustSignerCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.AllowOpenTrustSignerCertificate) {
		return nil, false
	}
	return o.AllowOpenTrustSignerCertificate, true
}

// HasAllowOpenTrustSignerCertificate returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOpenTrustSignerCertificate() bool {
	if o != nil && !IsNil(o.AllowOpenTrustSignerCertificate) {
		return true
	}

	return false
}

// SetAllowOpenTrustSignerCertificate gets a reference to the given string and assigns it to the AllowOpenTrustSignerCertificate field.
func (o *AccountSettingsInformation) SetAllowOpenTrustSignerCertificate(v string) {
	o.AllowOpenTrustSignerCertificate = &v
}

// GetAllowOpenTrustSignerCertificateMetadata returns the AllowOpenTrustSignerCertificateMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOpenTrustSignerCertificateMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowOpenTrustSignerCertificateMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowOpenTrustSignerCertificateMetadata
}

// GetAllowOpenTrustSignerCertificateMetadataOk returns a tuple with the AllowOpenTrustSignerCertificateMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOpenTrustSignerCertificateMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowOpenTrustSignerCertificateMetadata) {
		return nil, false
	}
	return o.AllowOpenTrustSignerCertificateMetadata, true
}

// HasAllowOpenTrustSignerCertificateMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOpenTrustSignerCertificateMetadata() bool {
	if o != nil && !IsNil(o.AllowOpenTrustSignerCertificateMetadata) {
		return true
	}

	return false
}

// SetAllowOpenTrustSignerCertificateMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowOpenTrustSignerCertificateMetadata field.
func (o *AccountSettingsInformation) SetAllowOpenTrustSignerCertificateMetadata(v SettingsMetadata) {
	o.AllowOpenTrustSignerCertificateMetadata = &v
}

// GetAllowOrganizationDocusignMonitor returns the AllowOrganizationDocusignMonitor field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOrganizationDocusignMonitor() string {
	if o == nil || IsNil(o.AllowOrganizationDocusignMonitor) {
		var ret string
		return ret
	}
	return *o.AllowOrganizationDocusignMonitor
}

// GetAllowOrganizationDocusignMonitorOk returns a tuple with the AllowOrganizationDocusignMonitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOrganizationDocusignMonitorOk() (*string, bool) {
	if o == nil || IsNil(o.AllowOrganizationDocusignMonitor) {
		return nil, false
	}
	return o.AllowOrganizationDocusignMonitor, true
}

// HasAllowOrganizationDocusignMonitor returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOrganizationDocusignMonitor() bool {
	if o != nil && !IsNil(o.AllowOrganizationDocusignMonitor) {
		return true
	}

	return false
}

// SetAllowOrganizationDocusignMonitor gets a reference to the given string and assigns it to the AllowOrganizationDocusignMonitor field.
func (o *AccountSettingsInformation) SetAllowOrganizationDocusignMonitor(v string) {
	o.AllowOrganizationDocusignMonitor = &v
}

// GetAllowOrganizationDocusignMonitorFree returns the AllowOrganizationDocusignMonitorFree field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOrganizationDocusignMonitorFree() string {
	if o == nil || IsNil(o.AllowOrganizationDocusignMonitorFree) {
		var ret string
		return ret
	}
	return *o.AllowOrganizationDocusignMonitorFree
}

// GetAllowOrganizationDocusignMonitorFreeOk returns a tuple with the AllowOrganizationDocusignMonitorFree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOrganizationDocusignMonitorFreeOk() (*string, bool) {
	if o == nil || IsNil(o.AllowOrganizationDocusignMonitorFree) {
		return nil, false
	}
	return o.AllowOrganizationDocusignMonitorFree, true
}

// HasAllowOrganizationDocusignMonitorFree returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOrganizationDocusignMonitorFree() bool {
	if o != nil && !IsNil(o.AllowOrganizationDocusignMonitorFree) {
		return true
	}

	return false
}

// SetAllowOrganizationDocusignMonitorFree gets a reference to the given string and assigns it to the AllowOrganizationDocusignMonitorFree field.
func (o *AccountSettingsInformation) SetAllowOrganizationDocusignMonitorFree(v string) {
	o.AllowOrganizationDocusignMonitorFree = &v
}

// GetAllowOrganizationDocusignMonitorFreeMetadata returns the AllowOrganizationDocusignMonitorFreeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOrganizationDocusignMonitorFreeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowOrganizationDocusignMonitorFreeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowOrganizationDocusignMonitorFreeMetadata
}

// GetAllowOrganizationDocusignMonitorFreeMetadataOk returns a tuple with the AllowOrganizationDocusignMonitorFreeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOrganizationDocusignMonitorFreeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowOrganizationDocusignMonitorFreeMetadata) {
		return nil, false
	}
	return o.AllowOrganizationDocusignMonitorFreeMetadata, true
}

// HasAllowOrganizationDocusignMonitorFreeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOrganizationDocusignMonitorFreeMetadata() bool {
	if o != nil && !IsNil(o.AllowOrganizationDocusignMonitorFreeMetadata) {
		return true
	}

	return false
}

// SetAllowOrganizationDocusignMonitorFreeMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowOrganizationDocusignMonitorFreeMetadata field.
func (o *AccountSettingsInformation) SetAllowOrganizationDocusignMonitorFreeMetadata(v SettingsMetadata) {
	o.AllowOrganizationDocusignMonitorFreeMetadata = &v
}

// GetAllowOrganizationDocusignMonitorMetadata returns the AllowOrganizationDocusignMonitorMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOrganizationDocusignMonitorMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowOrganizationDocusignMonitorMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowOrganizationDocusignMonitorMetadata
}

// GetAllowOrganizationDocusignMonitorMetadataOk returns a tuple with the AllowOrganizationDocusignMonitorMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOrganizationDocusignMonitorMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowOrganizationDocusignMonitorMetadata) {
		return nil, false
	}
	return o.AllowOrganizationDocusignMonitorMetadata, true
}

// HasAllowOrganizationDocusignMonitorMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOrganizationDocusignMonitorMetadata() bool {
	if o != nil && !IsNil(o.AllowOrganizationDocusignMonitorMetadata) {
		return true
	}

	return false
}

// SetAllowOrganizationDocusignMonitorMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowOrganizationDocusignMonitorMetadata field.
func (o *AccountSettingsInformation) SetAllowOrganizationDocusignMonitorMetadata(v SettingsMetadata) {
	o.AllowOrganizationDocusignMonitorMetadata = &v
}

// GetAllowOrganizationDomainUserManagement returns the AllowOrganizationDomainUserManagement field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOrganizationDomainUserManagement() string {
	if o == nil || IsNil(o.AllowOrganizationDomainUserManagement) {
		var ret string
		return ret
	}
	return *o.AllowOrganizationDomainUserManagement
}

// GetAllowOrganizationDomainUserManagementOk returns a tuple with the AllowOrganizationDomainUserManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOrganizationDomainUserManagementOk() (*string, bool) {
	if o == nil || IsNil(o.AllowOrganizationDomainUserManagement) {
		return nil, false
	}
	return o.AllowOrganizationDomainUserManagement, true
}

// HasAllowOrganizationDomainUserManagement returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOrganizationDomainUserManagement() bool {
	if o != nil && !IsNil(o.AllowOrganizationDomainUserManagement) {
		return true
	}

	return false
}

// SetAllowOrganizationDomainUserManagement gets a reference to the given string and assigns it to the AllowOrganizationDomainUserManagement field.
func (o *AccountSettingsInformation) SetAllowOrganizationDomainUserManagement(v string) {
	o.AllowOrganizationDomainUserManagement = &v
}

// GetAllowOrganizationDomainUserManagementMetadata returns the AllowOrganizationDomainUserManagementMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOrganizationDomainUserManagementMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowOrganizationDomainUserManagementMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowOrganizationDomainUserManagementMetadata
}

// GetAllowOrganizationDomainUserManagementMetadataOk returns a tuple with the AllowOrganizationDomainUserManagementMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOrganizationDomainUserManagementMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowOrganizationDomainUserManagementMetadata) {
		return nil, false
	}
	return o.AllowOrganizationDomainUserManagementMetadata, true
}

// HasAllowOrganizationDomainUserManagementMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOrganizationDomainUserManagementMetadata() bool {
	if o != nil && !IsNil(o.AllowOrganizationDomainUserManagementMetadata) {
		return true
	}

	return false
}

// SetAllowOrganizationDomainUserManagementMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowOrganizationDomainUserManagementMetadata field.
func (o *AccountSettingsInformation) SetAllowOrganizationDomainUserManagementMetadata(v SettingsMetadata) {
	o.AllowOrganizationDomainUserManagementMetadata = &v
}

// GetAllowOrganizations returns the AllowOrganizations field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOrganizations() string {
	if o == nil || IsNil(o.AllowOrganizations) {
		var ret string
		return ret
	}
	return *o.AllowOrganizations
}

// GetAllowOrganizationsOk returns a tuple with the AllowOrganizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOrganizationsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowOrganizations) {
		return nil, false
	}
	return o.AllowOrganizations, true
}

// HasAllowOrganizations returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOrganizations() bool {
	if o != nil && !IsNil(o.AllowOrganizations) {
		return true
	}

	return false
}

// SetAllowOrganizations gets a reference to the given string and assigns it to the AllowOrganizations field.
func (o *AccountSettingsInformation) SetAllowOrganizations(v string) {
	o.AllowOrganizations = &v
}

// GetAllowOrganizationsMetadata returns the AllowOrganizationsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOrganizationsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowOrganizationsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowOrganizationsMetadata
}

// GetAllowOrganizationsMetadataOk returns a tuple with the AllowOrganizationsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOrganizationsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowOrganizationsMetadata) {
		return nil, false
	}
	return o.AllowOrganizationsMetadata, true
}

// HasAllowOrganizationsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOrganizationsMetadata() bool {
	if o != nil && !IsNil(o.AllowOrganizationsMetadata) {
		return true
	}

	return false
}

// SetAllowOrganizationsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowOrganizationsMetadata field.
func (o *AccountSettingsInformation) SetAllowOrganizationsMetadata(v SettingsMetadata) {
	o.AllowOrganizationsMetadata = &v
}

// GetAllowOrganizationSsoManagement returns the AllowOrganizationSsoManagement field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOrganizationSsoManagement() string {
	if o == nil || IsNil(o.AllowOrganizationSsoManagement) {
		var ret string
		return ret
	}
	return *o.AllowOrganizationSsoManagement
}

// GetAllowOrganizationSsoManagementOk returns a tuple with the AllowOrganizationSsoManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOrganizationSsoManagementOk() (*string, bool) {
	if o == nil || IsNil(o.AllowOrganizationSsoManagement) {
		return nil, false
	}
	return o.AllowOrganizationSsoManagement, true
}

// HasAllowOrganizationSsoManagement returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOrganizationSsoManagement() bool {
	if o != nil && !IsNil(o.AllowOrganizationSsoManagement) {
		return true
	}

	return false
}

// SetAllowOrganizationSsoManagement gets a reference to the given string and assigns it to the AllowOrganizationSsoManagement field.
func (o *AccountSettingsInformation) SetAllowOrganizationSsoManagement(v string) {
	o.AllowOrganizationSsoManagement = &v
}

// GetAllowOrganizationSsoManagementMetadata returns the AllowOrganizationSsoManagementMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOrganizationSsoManagementMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowOrganizationSsoManagementMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowOrganizationSsoManagementMetadata
}

// GetAllowOrganizationSsoManagementMetadataOk returns a tuple with the AllowOrganizationSsoManagementMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOrganizationSsoManagementMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowOrganizationSsoManagementMetadata) {
		return nil, false
	}
	return o.AllowOrganizationSsoManagementMetadata, true
}

// HasAllowOrganizationSsoManagementMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOrganizationSsoManagementMetadata() bool {
	if o != nil && !IsNil(o.AllowOrganizationSsoManagementMetadata) {
		return true
	}

	return false
}

// SetAllowOrganizationSsoManagementMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowOrganizationSsoManagementMetadata field.
func (o *AccountSettingsInformation) SetAllowOrganizationSsoManagementMetadata(v SettingsMetadata) {
	o.AllowOrganizationSsoManagementMetadata = &v
}

// GetAllowOrganizationToUseInPersonElectronicNotary returns the AllowOrganizationToUseInPersonElectronicNotary field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOrganizationToUseInPersonElectronicNotary() string {
	if o == nil || IsNil(o.AllowOrganizationToUseInPersonElectronicNotary) {
		var ret string
		return ret
	}
	return *o.AllowOrganizationToUseInPersonElectronicNotary
}

// GetAllowOrganizationToUseInPersonElectronicNotaryOk returns a tuple with the AllowOrganizationToUseInPersonElectronicNotary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOrganizationToUseInPersonElectronicNotaryOk() (*string, bool) {
	if o == nil || IsNil(o.AllowOrganizationToUseInPersonElectronicNotary) {
		return nil, false
	}
	return o.AllowOrganizationToUseInPersonElectronicNotary, true
}

// HasAllowOrganizationToUseInPersonElectronicNotary returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOrganizationToUseInPersonElectronicNotary() bool {
	if o != nil && !IsNil(o.AllowOrganizationToUseInPersonElectronicNotary) {
		return true
	}

	return false
}

// SetAllowOrganizationToUseInPersonElectronicNotary gets a reference to the given string and assigns it to the AllowOrganizationToUseInPersonElectronicNotary field.
func (o *AccountSettingsInformation) SetAllowOrganizationToUseInPersonElectronicNotary(v string) {
	o.AllowOrganizationToUseInPersonElectronicNotary = &v
}

// GetAllowOrganizationToUseInPersonElectronicNotaryMetadata returns the AllowOrganizationToUseInPersonElectronicNotaryMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOrganizationToUseInPersonElectronicNotaryMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowOrganizationToUseInPersonElectronicNotaryMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowOrganizationToUseInPersonElectronicNotaryMetadata
}

// GetAllowOrganizationToUseInPersonElectronicNotaryMetadataOk returns a tuple with the AllowOrganizationToUseInPersonElectronicNotaryMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOrganizationToUseInPersonElectronicNotaryMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowOrganizationToUseInPersonElectronicNotaryMetadata) {
		return nil, false
	}
	return o.AllowOrganizationToUseInPersonElectronicNotaryMetadata, true
}

// HasAllowOrganizationToUseInPersonElectronicNotaryMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOrganizationToUseInPersonElectronicNotaryMetadata() bool {
	if o != nil && !IsNil(o.AllowOrganizationToUseInPersonElectronicNotaryMetadata) {
		return true
	}

	return false
}

// SetAllowOrganizationToUseInPersonElectronicNotaryMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowOrganizationToUseInPersonElectronicNotaryMetadata field.
func (o *AccountSettingsInformation) SetAllowOrganizationToUseInPersonElectronicNotaryMetadata(v SettingsMetadata) {
	o.AllowOrganizationToUseInPersonElectronicNotaryMetadata = &v
}

// GetAllowOrganizationToUseRemoteNotary returns the AllowOrganizationToUseRemoteNotary field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOrganizationToUseRemoteNotary() string {
	if o == nil || IsNil(o.AllowOrganizationToUseRemoteNotary) {
		var ret string
		return ret
	}
	return *o.AllowOrganizationToUseRemoteNotary
}

// GetAllowOrganizationToUseRemoteNotaryOk returns a tuple with the AllowOrganizationToUseRemoteNotary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOrganizationToUseRemoteNotaryOk() (*string, bool) {
	if o == nil || IsNil(o.AllowOrganizationToUseRemoteNotary) {
		return nil, false
	}
	return o.AllowOrganizationToUseRemoteNotary, true
}

// HasAllowOrganizationToUseRemoteNotary returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOrganizationToUseRemoteNotary() bool {
	if o != nil && !IsNil(o.AllowOrganizationToUseRemoteNotary) {
		return true
	}

	return false
}

// SetAllowOrganizationToUseRemoteNotary gets a reference to the given string and assigns it to the AllowOrganizationToUseRemoteNotary field.
func (o *AccountSettingsInformation) SetAllowOrganizationToUseRemoteNotary(v string) {
	o.AllowOrganizationToUseRemoteNotary = &v
}

// GetAllowOrganizationToUseRemoteNotaryMetadata returns the AllowOrganizationToUseRemoteNotaryMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOrganizationToUseRemoteNotaryMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowOrganizationToUseRemoteNotaryMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowOrganizationToUseRemoteNotaryMetadata
}

// GetAllowOrganizationToUseRemoteNotaryMetadataOk returns a tuple with the AllowOrganizationToUseRemoteNotaryMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOrganizationToUseRemoteNotaryMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowOrganizationToUseRemoteNotaryMetadata) {
		return nil, false
	}
	return o.AllowOrganizationToUseRemoteNotaryMetadata, true
}

// HasAllowOrganizationToUseRemoteNotaryMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOrganizationToUseRemoteNotaryMetadata() bool {
	if o != nil && !IsNil(o.AllowOrganizationToUseRemoteNotaryMetadata) {
		return true
	}

	return false
}

// SetAllowOrganizationToUseRemoteNotaryMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowOrganizationToUseRemoteNotaryMetadata field.
func (o *AccountSettingsInformation) SetAllowOrganizationToUseRemoteNotaryMetadata(v SettingsMetadata) {
	o.AllowOrganizationToUseRemoteNotaryMetadata = &v
}

// GetAllowOrganizationToUseThirdPartyElectronicNotary returns the AllowOrganizationToUseThirdPartyElectronicNotary field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOrganizationToUseThirdPartyElectronicNotary() string {
	if o == nil || IsNil(o.AllowOrganizationToUseThirdPartyElectronicNotary) {
		var ret string
		return ret
	}
	return *o.AllowOrganizationToUseThirdPartyElectronicNotary
}

// GetAllowOrganizationToUseThirdPartyElectronicNotaryOk returns a tuple with the AllowOrganizationToUseThirdPartyElectronicNotary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOrganizationToUseThirdPartyElectronicNotaryOk() (*string, bool) {
	if o == nil || IsNil(o.AllowOrganizationToUseThirdPartyElectronicNotary) {
		return nil, false
	}
	return o.AllowOrganizationToUseThirdPartyElectronicNotary, true
}

// HasAllowOrganizationToUseThirdPartyElectronicNotary returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOrganizationToUseThirdPartyElectronicNotary() bool {
	if o != nil && !IsNil(o.AllowOrganizationToUseThirdPartyElectronicNotary) {
		return true
	}

	return false
}

// SetAllowOrganizationToUseThirdPartyElectronicNotary gets a reference to the given string and assigns it to the AllowOrganizationToUseThirdPartyElectronicNotary field.
func (o *AccountSettingsInformation) SetAllowOrganizationToUseThirdPartyElectronicNotary(v string) {
	o.AllowOrganizationToUseThirdPartyElectronicNotary = &v
}

// GetAllowOrganizationToUseThirdPartyElectronicNotaryMetadata returns the AllowOrganizationToUseThirdPartyElectronicNotaryMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowOrganizationToUseThirdPartyElectronicNotaryMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowOrganizationToUseThirdPartyElectronicNotaryMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowOrganizationToUseThirdPartyElectronicNotaryMetadata
}

// GetAllowOrganizationToUseThirdPartyElectronicNotaryMetadataOk returns a tuple with the AllowOrganizationToUseThirdPartyElectronicNotaryMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowOrganizationToUseThirdPartyElectronicNotaryMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowOrganizationToUseThirdPartyElectronicNotaryMetadata) {
		return nil, false
	}
	return o.AllowOrganizationToUseThirdPartyElectronicNotaryMetadata, true
}

// HasAllowOrganizationToUseThirdPartyElectronicNotaryMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowOrganizationToUseThirdPartyElectronicNotaryMetadata() bool {
	if o != nil && !IsNil(o.AllowOrganizationToUseThirdPartyElectronicNotaryMetadata) {
		return true
	}

	return false
}

// SetAllowOrganizationToUseThirdPartyElectronicNotaryMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowOrganizationToUseThirdPartyElectronicNotaryMetadata field.
func (o *AccountSettingsInformation) SetAllowOrganizationToUseThirdPartyElectronicNotaryMetadata(v SettingsMetadata) {
	o.AllowOrganizationToUseThirdPartyElectronicNotaryMetadata = &v
}

// GetAllowParticipantRecipientType returns the AllowParticipantRecipientType field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowParticipantRecipientType() string {
	if o == nil || IsNil(o.AllowParticipantRecipientType) {
		var ret string
		return ret
	}
	return *o.AllowParticipantRecipientType
}

// GetAllowParticipantRecipientTypeOk returns a tuple with the AllowParticipantRecipientType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowParticipantRecipientTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AllowParticipantRecipientType) {
		return nil, false
	}
	return o.AllowParticipantRecipientType, true
}

// HasAllowParticipantRecipientType returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowParticipantRecipientType() bool {
	if o != nil && !IsNil(o.AllowParticipantRecipientType) {
		return true
	}

	return false
}

// SetAllowParticipantRecipientType gets a reference to the given string and assigns it to the AllowParticipantRecipientType field.
func (o *AccountSettingsInformation) SetAllowParticipantRecipientType(v string) {
	o.AllowParticipantRecipientType = &v
}

// GetAllowParticipantRecipientTypeMetadata returns the AllowParticipantRecipientTypeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowParticipantRecipientTypeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowParticipantRecipientTypeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowParticipantRecipientTypeMetadata
}

// GetAllowParticipantRecipientTypeMetadataOk returns a tuple with the AllowParticipantRecipientTypeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowParticipantRecipientTypeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowParticipantRecipientTypeMetadata) {
		return nil, false
	}
	return o.AllowParticipantRecipientTypeMetadata, true
}

// HasAllowParticipantRecipientTypeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowParticipantRecipientTypeMetadata() bool {
	if o != nil && !IsNil(o.AllowParticipantRecipientTypeMetadata) {
		return true
	}

	return false
}

// SetAllowParticipantRecipientTypeMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowParticipantRecipientTypeMetadata field.
func (o *AccountSettingsInformation) SetAllowParticipantRecipientTypeMetadata(v SettingsMetadata) {
	o.AllowParticipantRecipientTypeMetadata = &v
}

// GetAllowPaymentProcessing returns the AllowPaymentProcessing field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowPaymentProcessing() string {
	if o == nil || IsNil(o.AllowPaymentProcessing) {
		var ret string
		return ret
	}
	return *o.AllowPaymentProcessing
}

// GetAllowPaymentProcessingOk returns a tuple with the AllowPaymentProcessing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowPaymentProcessingOk() (*string, bool) {
	if o == nil || IsNil(o.AllowPaymentProcessing) {
		return nil, false
	}
	return o.AllowPaymentProcessing, true
}

// HasAllowPaymentProcessing returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowPaymentProcessing() bool {
	if o != nil && !IsNil(o.AllowPaymentProcessing) {
		return true
	}

	return false
}

// SetAllowPaymentProcessing gets a reference to the given string and assigns it to the AllowPaymentProcessing field.
func (o *AccountSettingsInformation) SetAllowPaymentProcessing(v string) {
	o.AllowPaymentProcessing = &v
}

// GetAllowPaymentProcessingMetadata returns the AllowPaymentProcessingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowPaymentProcessingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowPaymentProcessingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowPaymentProcessingMetadata
}

// GetAllowPaymentProcessingMetadataOk returns a tuple with the AllowPaymentProcessingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowPaymentProcessingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowPaymentProcessingMetadata) {
		return nil, false
	}
	return o.AllowPaymentProcessingMetadata, true
}

// HasAllowPaymentProcessingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowPaymentProcessingMetadata() bool {
	if o != nil && !IsNil(o.AllowPaymentProcessingMetadata) {
		return true
	}

	return false
}

// SetAllowPaymentProcessingMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowPaymentProcessingMetadata field.
func (o *AccountSettingsInformation) SetAllowPaymentProcessingMetadata(v SettingsMetadata) {
	o.AllowPaymentProcessingMetadata = &v
}

// GetAllowPerformanceAnalytics returns the AllowPerformanceAnalytics field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowPerformanceAnalytics() string {
	if o == nil || IsNil(o.AllowPerformanceAnalytics) {
		var ret string
		return ret
	}
	return *o.AllowPerformanceAnalytics
}

// GetAllowPerformanceAnalyticsOk returns a tuple with the AllowPerformanceAnalytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowPerformanceAnalyticsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowPerformanceAnalytics) {
		return nil, false
	}
	return o.AllowPerformanceAnalytics, true
}

// HasAllowPerformanceAnalytics returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowPerformanceAnalytics() bool {
	if o != nil && !IsNil(o.AllowPerformanceAnalytics) {
		return true
	}

	return false
}

// SetAllowPerformanceAnalytics gets a reference to the given string and assigns it to the AllowPerformanceAnalytics field.
func (o *AccountSettingsInformation) SetAllowPerformanceAnalytics(v string) {
	o.AllowPerformanceAnalytics = &v
}

// GetAllowPerformanceAnalyticsMetadata returns the AllowPerformanceAnalyticsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowPerformanceAnalyticsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowPerformanceAnalyticsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowPerformanceAnalyticsMetadata
}

// GetAllowPerformanceAnalyticsMetadataOk returns a tuple with the AllowPerformanceAnalyticsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowPerformanceAnalyticsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowPerformanceAnalyticsMetadata) {
		return nil, false
	}
	return o.AllowPerformanceAnalyticsMetadata, true
}

// HasAllowPerformanceAnalyticsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowPerformanceAnalyticsMetadata() bool {
	if o != nil && !IsNil(o.AllowPerformanceAnalyticsMetadata) {
		return true
	}

	return false
}

// SetAllowPerformanceAnalyticsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowPerformanceAnalyticsMetadata field.
func (o *AccountSettingsInformation) SetAllowPerformanceAnalyticsMetadata(v SettingsMetadata) {
	o.AllowPerformanceAnalyticsMetadata = &v
}

// GetAllowPhoneAuthentication returns the AllowPhoneAuthentication field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowPhoneAuthentication() string {
	if o == nil || IsNil(o.AllowPhoneAuthentication) {
		var ret string
		return ret
	}
	return *o.AllowPhoneAuthentication
}

// GetAllowPhoneAuthenticationOk returns a tuple with the AllowPhoneAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowPhoneAuthenticationOk() (*string, bool) {
	if o == nil || IsNil(o.AllowPhoneAuthentication) {
		return nil, false
	}
	return o.AllowPhoneAuthentication, true
}

// HasAllowPhoneAuthentication returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowPhoneAuthentication() bool {
	if o != nil && !IsNil(o.AllowPhoneAuthentication) {
		return true
	}

	return false
}

// SetAllowPhoneAuthentication gets a reference to the given string and assigns it to the AllowPhoneAuthentication field.
func (o *AccountSettingsInformation) SetAllowPhoneAuthentication(v string) {
	o.AllowPhoneAuthentication = &v
}

// GetAllowPhoneAuthenticationMetadata returns the AllowPhoneAuthenticationMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowPhoneAuthenticationMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowPhoneAuthenticationMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowPhoneAuthenticationMetadata
}

// GetAllowPhoneAuthenticationMetadataOk returns a tuple with the AllowPhoneAuthenticationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowPhoneAuthenticationMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowPhoneAuthenticationMetadata) {
		return nil, false
	}
	return o.AllowPhoneAuthenticationMetadata, true
}

// HasAllowPhoneAuthenticationMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowPhoneAuthenticationMetadata() bool {
	if o != nil && !IsNil(o.AllowPhoneAuthenticationMetadata) {
		return true
	}

	return false
}

// SetAllowPhoneAuthenticationMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowPhoneAuthenticationMetadata field.
func (o *AccountSettingsInformation) SetAllowPhoneAuthenticationMetadata(v SettingsMetadata) {
	o.AllowPhoneAuthenticationMetadata = &v
}

// GetAllowPhoneAuthOverride returns the AllowPhoneAuthOverride field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowPhoneAuthOverride() string {
	if o == nil || IsNil(o.AllowPhoneAuthOverride) {
		var ret string
		return ret
	}
	return *o.AllowPhoneAuthOverride
}

// GetAllowPhoneAuthOverrideOk returns a tuple with the AllowPhoneAuthOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowPhoneAuthOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.AllowPhoneAuthOverride) {
		return nil, false
	}
	return o.AllowPhoneAuthOverride, true
}

// HasAllowPhoneAuthOverride returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowPhoneAuthOverride() bool {
	if o != nil && !IsNil(o.AllowPhoneAuthOverride) {
		return true
	}

	return false
}

// SetAllowPhoneAuthOverride gets a reference to the given string and assigns it to the AllowPhoneAuthOverride field.
func (o *AccountSettingsInformation) SetAllowPhoneAuthOverride(v string) {
	o.AllowPhoneAuthOverride = &v
}

// GetAllowPhoneAuthOverrideMetadata returns the AllowPhoneAuthOverrideMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowPhoneAuthOverrideMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowPhoneAuthOverrideMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowPhoneAuthOverrideMetadata
}

// GetAllowPhoneAuthOverrideMetadataOk returns a tuple with the AllowPhoneAuthOverrideMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowPhoneAuthOverrideMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowPhoneAuthOverrideMetadata) {
		return nil, false
	}
	return o.AllowPhoneAuthOverrideMetadata, true
}

// HasAllowPhoneAuthOverrideMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowPhoneAuthOverrideMetadata() bool {
	if o != nil && !IsNil(o.AllowPhoneAuthOverrideMetadata) {
		return true
	}

	return false
}

// SetAllowPhoneAuthOverrideMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowPhoneAuthOverrideMetadata field.
func (o *AccountSettingsInformation) SetAllowPhoneAuthOverrideMetadata(v SettingsMetadata) {
	o.AllowPhoneAuthOverrideMetadata = &v
}

// GetAllowPrivateSigningGroups returns the AllowPrivateSigningGroups field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowPrivateSigningGroups() string {
	if o == nil || IsNil(o.AllowPrivateSigningGroups) {
		var ret string
		return ret
	}
	return *o.AllowPrivateSigningGroups
}

// GetAllowPrivateSigningGroupsOk returns a tuple with the AllowPrivateSigningGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowPrivateSigningGroupsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowPrivateSigningGroups) {
		return nil, false
	}
	return o.AllowPrivateSigningGroups, true
}

// HasAllowPrivateSigningGroups returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowPrivateSigningGroups() bool {
	if o != nil && !IsNil(o.AllowPrivateSigningGroups) {
		return true
	}

	return false
}

// SetAllowPrivateSigningGroups gets a reference to the given string and assigns it to the AllowPrivateSigningGroups field.
func (o *AccountSettingsInformation) SetAllowPrivateSigningGroups(v string) {
	o.AllowPrivateSigningGroups = &v
}

// GetAllowPrivateSigningGroupsMetadata returns the AllowPrivateSigningGroupsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowPrivateSigningGroupsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowPrivateSigningGroupsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowPrivateSigningGroupsMetadata
}

// GetAllowPrivateSigningGroupsMetadataOk returns a tuple with the AllowPrivateSigningGroupsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowPrivateSigningGroupsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowPrivateSigningGroupsMetadata) {
		return nil, false
	}
	return o.AllowPrivateSigningGroupsMetadata, true
}

// HasAllowPrivateSigningGroupsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowPrivateSigningGroupsMetadata() bool {
	if o != nil && !IsNil(o.AllowPrivateSigningGroupsMetadata) {
		return true
	}

	return false
}

// SetAllowPrivateSigningGroupsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowPrivateSigningGroupsMetadata field.
func (o *AccountSettingsInformation) SetAllowPrivateSigningGroupsMetadata(v SettingsMetadata) {
	o.AllowPrivateSigningGroupsMetadata = &v
}

// GetAllowRecipientConnect returns the AllowRecipientConnect field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowRecipientConnect() string {
	if o == nil || IsNil(o.AllowRecipientConnect) {
		var ret string
		return ret
	}
	return *o.AllowRecipientConnect
}

// GetAllowRecipientConnectOk returns a tuple with the AllowRecipientConnect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowRecipientConnectOk() (*string, bool) {
	if o == nil || IsNil(o.AllowRecipientConnect) {
		return nil, false
	}
	return o.AllowRecipientConnect, true
}

// HasAllowRecipientConnect returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowRecipientConnect() bool {
	if o != nil && !IsNil(o.AllowRecipientConnect) {
		return true
	}

	return false
}

// SetAllowRecipientConnect gets a reference to the given string and assigns it to the AllowRecipientConnect field.
func (o *AccountSettingsInformation) SetAllowRecipientConnect(v string) {
	o.AllowRecipientConnect = &v
}

// GetAllowRecipientConnectMetadata returns the AllowRecipientConnectMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowRecipientConnectMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowRecipientConnectMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowRecipientConnectMetadata
}

// GetAllowRecipientConnectMetadataOk returns a tuple with the AllowRecipientConnectMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowRecipientConnectMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowRecipientConnectMetadata) {
		return nil, false
	}
	return o.AllowRecipientConnectMetadata, true
}

// HasAllowRecipientConnectMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowRecipientConnectMetadata() bool {
	if o != nil && !IsNil(o.AllowRecipientConnectMetadata) {
		return true
	}

	return false
}

// SetAllowRecipientConnectMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowRecipientConnectMetadata field.
func (o *AccountSettingsInformation) SetAllowRecipientConnectMetadata(v SettingsMetadata) {
	o.AllowRecipientConnectMetadata = &v
}

// GetAllowReminders returns the AllowReminders field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowReminders() string {
	if o == nil || IsNil(o.AllowReminders) {
		var ret string
		return ret
	}
	return *o.AllowReminders
}

// GetAllowRemindersOk returns a tuple with the AllowReminders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowRemindersOk() (*string, bool) {
	if o == nil || IsNil(o.AllowReminders) {
		return nil, false
	}
	return o.AllowReminders, true
}

// HasAllowReminders returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowReminders() bool {
	if o != nil && !IsNil(o.AllowReminders) {
		return true
	}

	return false
}

// SetAllowReminders gets a reference to the given string and assigns it to the AllowReminders field.
func (o *AccountSettingsInformation) SetAllowReminders(v string) {
	o.AllowReminders = &v
}

// GetAllowRemindersMetadata returns the AllowRemindersMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowRemindersMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowRemindersMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowRemindersMetadata
}

// GetAllowRemindersMetadataOk returns a tuple with the AllowRemindersMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowRemindersMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowRemindersMetadata) {
		return nil, false
	}
	return o.AllowRemindersMetadata, true
}

// HasAllowRemindersMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowRemindersMetadata() bool {
	if o != nil && !IsNil(o.AllowRemindersMetadata) {
		return true
	}

	return false
}

// SetAllowRemindersMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowRemindersMetadata field.
func (o *AccountSettingsInformation) SetAllowRemindersMetadata(v SettingsMetadata) {
	o.AllowRemindersMetadata = &v
}

// GetAllowRemoteNotary returns the AllowRemoteNotary field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowRemoteNotary() string {
	if o == nil || IsNil(o.AllowRemoteNotary) {
		var ret string
		return ret
	}
	return *o.AllowRemoteNotary
}

// GetAllowRemoteNotaryOk returns a tuple with the AllowRemoteNotary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowRemoteNotaryOk() (*string, bool) {
	if o == nil || IsNil(o.AllowRemoteNotary) {
		return nil, false
	}
	return o.AllowRemoteNotary, true
}

// HasAllowRemoteNotary returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowRemoteNotary() bool {
	if o != nil && !IsNil(o.AllowRemoteNotary) {
		return true
	}

	return false
}

// SetAllowRemoteNotary gets a reference to the given string and assigns it to the AllowRemoteNotary field.
func (o *AccountSettingsInformation) SetAllowRemoteNotary(v string) {
	o.AllowRemoteNotary = &v
}

// GetAllowRemoteNotaryMetadata returns the AllowRemoteNotaryMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowRemoteNotaryMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowRemoteNotaryMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowRemoteNotaryMetadata
}

// GetAllowRemoteNotaryMetadataOk returns a tuple with the AllowRemoteNotaryMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowRemoteNotaryMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowRemoteNotaryMetadata) {
		return nil, false
	}
	return o.AllowRemoteNotaryMetadata, true
}

// HasAllowRemoteNotaryMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowRemoteNotaryMetadata() bool {
	if o != nil && !IsNil(o.AllowRemoteNotaryMetadata) {
		return true
	}

	return false
}

// SetAllowRemoteNotaryMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowRemoteNotaryMetadata field.
func (o *AccountSettingsInformation) SetAllowRemoteNotaryMetadata(v SettingsMetadata) {
	o.AllowRemoteNotaryMetadata = &v
}

// GetAllowResourceFileBranding returns the AllowResourceFileBranding field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowResourceFileBranding() string {
	if o == nil || IsNil(o.AllowResourceFileBranding) {
		var ret string
		return ret
	}
	return *o.AllowResourceFileBranding
}

// GetAllowResourceFileBrandingOk returns a tuple with the AllowResourceFileBranding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowResourceFileBrandingOk() (*string, bool) {
	if o == nil || IsNil(o.AllowResourceFileBranding) {
		return nil, false
	}
	return o.AllowResourceFileBranding, true
}

// HasAllowResourceFileBranding returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowResourceFileBranding() bool {
	if o != nil && !IsNil(o.AllowResourceFileBranding) {
		return true
	}

	return false
}

// SetAllowResourceFileBranding gets a reference to the given string and assigns it to the AllowResourceFileBranding field.
func (o *AccountSettingsInformation) SetAllowResourceFileBranding(v string) {
	o.AllowResourceFileBranding = &v
}

// GetAllowResourceFileBrandingMetadata returns the AllowResourceFileBrandingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowResourceFileBrandingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowResourceFileBrandingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowResourceFileBrandingMetadata
}

// GetAllowResourceFileBrandingMetadataOk returns a tuple with the AllowResourceFileBrandingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowResourceFileBrandingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowResourceFileBrandingMetadata) {
		return nil, false
	}
	return o.AllowResourceFileBrandingMetadata, true
}

// HasAllowResourceFileBrandingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowResourceFileBrandingMetadata() bool {
	if o != nil && !IsNil(o.AllowResourceFileBrandingMetadata) {
		return true
	}

	return false
}

// SetAllowResourceFileBrandingMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowResourceFileBrandingMetadata field.
func (o *AccountSettingsInformation) SetAllowResourceFileBrandingMetadata(v SettingsMetadata) {
	o.AllowResourceFileBrandingMetadata = &v
}

// GetAllowSafeBioPharmaSignerCertificate returns the AllowSafeBioPharmaSignerCertificate field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSafeBioPharmaSignerCertificate() string {
	if o == nil || IsNil(o.AllowSafeBioPharmaSignerCertificate) {
		var ret string
		return ret
	}
	return *o.AllowSafeBioPharmaSignerCertificate
}

// GetAllowSafeBioPharmaSignerCertificateOk returns a tuple with the AllowSafeBioPharmaSignerCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSafeBioPharmaSignerCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSafeBioPharmaSignerCertificate) {
		return nil, false
	}
	return o.AllowSafeBioPharmaSignerCertificate, true
}

// HasAllowSafeBioPharmaSignerCertificate returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSafeBioPharmaSignerCertificate() bool {
	if o != nil && !IsNil(o.AllowSafeBioPharmaSignerCertificate) {
		return true
	}

	return false
}

// SetAllowSafeBioPharmaSignerCertificate gets a reference to the given string and assigns it to the AllowSafeBioPharmaSignerCertificate field.
func (o *AccountSettingsInformation) SetAllowSafeBioPharmaSignerCertificate(v string) {
	o.AllowSafeBioPharmaSignerCertificate = &v
}

// GetAllowSafeBioPharmaSignerCertificateMetadata returns the AllowSafeBioPharmaSignerCertificateMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSafeBioPharmaSignerCertificateMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSafeBioPharmaSignerCertificateMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSafeBioPharmaSignerCertificateMetadata
}

// GetAllowSafeBioPharmaSignerCertificateMetadataOk returns a tuple with the AllowSafeBioPharmaSignerCertificateMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSafeBioPharmaSignerCertificateMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSafeBioPharmaSignerCertificateMetadata) {
		return nil, false
	}
	return o.AllowSafeBioPharmaSignerCertificateMetadata, true
}

// HasAllowSafeBioPharmaSignerCertificateMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSafeBioPharmaSignerCertificateMetadata() bool {
	if o != nil && !IsNil(o.AllowSafeBioPharmaSignerCertificateMetadata) {
		return true
	}

	return false
}

// SetAllowSafeBioPharmaSignerCertificateMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSafeBioPharmaSignerCertificateMetadata field.
func (o *AccountSettingsInformation) SetAllowSafeBioPharmaSignerCertificateMetadata(v SettingsMetadata) {
	o.AllowSafeBioPharmaSignerCertificateMetadata = &v
}

// GetAllowScheduledSending returns the AllowScheduledSending field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowScheduledSending() string {
	if o == nil || IsNil(o.AllowScheduledSending) {
		var ret string
		return ret
	}
	return *o.AllowScheduledSending
}

// GetAllowScheduledSendingOk returns a tuple with the AllowScheduledSending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowScheduledSendingOk() (*string, bool) {
	if o == nil || IsNil(o.AllowScheduledSending) {
		return nil, false
	}
	return o.AllowScheduledSending, true
}

// HasAllowScheduledSending returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowScheduledSending() bool {
	if o != nil && !IsNil(o.AllowScheduledSending) {
		return true
	}

	return false
}

// SetAllowScheduledSending gets a reference to the given string and assigns it to the AllowScheduledSending field.
func (o *AccountSettingsInformation) SetAllowScheduledSending(v string) {
	o.AllowScheduledSending = &v
}

// GetAllowScheduledSendingMetadata returns the AllowScheduledSendingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowScheduledSendingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowScheduledSendingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowScheduledSendingMetadata
}

// GetAllowScheduledSendingMetadataOk returns a tuple with the AllowScheduledSendingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowScheduledSendingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowScheduledSendingMetadata) {
		return nil, false
	}
	return o.AllowScheduledSendingMetadata, true
}

// HasAllowScheduledSendingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowScheduledSendingMetadata() bool {
	if o != nil && !IsNil(o.AllowScheduledSendingMetadata) {
		return true
	}

	return false
}

// SetAllowScheduledSendingMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowScheduledSendingMetadata field.
func (o *AccountSettingsInformation) SetAllowScheduledSendingMetadata(v SettingsMetadata) {
	o.AllowScheduledSendingMetadata = &v
}

// GetAllowSecurityAppliance returns the AllowSecurityAppliance field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSecurityAppliance() string {
	if o == nil || IsNil(o.AllowSecurityAppliance) {
		var ret string
		return ret
	}
	return *o.AllowSecurityAppliance
}

// GetAllowSecurityApplianceOk returns a tuple with the AllowSecurityAppliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSecurityApplianceOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSecurityAppliance) {
		return nil, false
	}
	return o.AllowSecurityAppliance, true
}

// HasAllowSecurityAppliance returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSecurityAppliance() bool {
	if o != nil && !IsNil(o.AllowSecurityAppliance) {
		return true
	}

	return false
}

// SetAllowSecurityAppliance gets a reference to the given string and assigns it to the AllowSecurityAppliance field.
func (o *AccountSettingsInformation) SetAllowSecurityAppliance(v string) {
	o.AllowSecurityAppliance = &v
}

// GetAllowSecurityApplianceMetadata returns the AllowSecurityApplianceMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSecurityApplianceMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSecurityApplianceMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSecurityApplianceMetadata
}

// GetAllowSecurityApplianceMetadataOk returns a tuple with the AllowSecurityApplianceMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSecurityApplianceMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSecurityApplianceMetadata) {
		return nil, false
	}
	return o.AllowSecurityApplianceMetadata, true
}

// HasAllowSecurityApplianceMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSecurityApplianceMetadata() bool {
	if o != nil && !IsNil(o.AllowSecurityApplianceMetadata) {
		return true
	}

	return false
}

// SetAllowSecurityApplianceMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSecurityApplianceMetadata field.
func (o *AccountSettingsInformation) SetAllowSecurityApplianceMetadata(v SettingsMetadata) {
	o.AllowSecurityApplianceMetadata = &v
}

// GetAllowSendingEnvelopesOnBehalfOfOthers returns the AllowSendingEnvelopesOnBehalfOfOthers field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSendingEnvelopesOnBehalfOfOthers() string {
	if o == nil || IsNil(o.AllowSendingEnvelopesOnBehalfOfOthers) {
		var ret string
		return ret
	}
	return *o.AllowSendingEnvelopesOnBehalfOfOthers
}

// GetAllowSendingEnvelopesOnBehalfOfOthersOk returns a tuple with the AllowSendingEnvelopesOnBehalfOfOthers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSendingEnvelopesOnBehalfOfOthersOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSendingEnvelopesOnBehalfOfOthers) {
		return nil, false
	}
	return o.AllowSendingEnvelopesOnBehalfOfOthers, true
}

// HasAllowSendingEnvelopesOnBehalfOfOthers returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSendingEnvelopesOnBehalfOfOthers() bool {
	if o != nil && !IsNil(o.AllowSendingEnvelopesOnBehalfOfOthers) {
		return true
	}

	return false
}

// SetAllowSendingEnvelopesOnBehalfOfOthers gets a reference to the given string and assigns it to the AllowSendingEnvelopesOnBehalfOfOthers field.
func (o *AccountSettingsInformation) SetAllowSendingEnvelopesOnBehalfOfOthers(v string) {
	o.AllowSendingEnvelopesOnBehalfOfOthers = &v
}

// GetAllowSendingEnvelopesOnBehalfOfOthersMetadata returns the AllowSendingEnvelopesOnBehalfOfOthersMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSendingEnvelopesOnBehalfOfOthersMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSendingEnvelopesOnBehalfOfOthersMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSendingEnvelopesOnBehalfOfOthersMetadata
}

// GetAllowSendingEnvelopesOnBehalfOfOthersMetadataOk returns a tuple with the AllowSendingEnvelopesOnBehalfOfOthersMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSendingEnvelopesOnBehalfOfOthersMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSendingEnvelopesOnBehalfOfOthersMetadata) {
		return nil, false
	}
	return o.AllowSendingEnvelopesOnBehalfOfOthersMetadata, true
}

// HasAllowSendingEnvelopesOnBehalfOfOthersMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSendingEnvelopesOnBehalfOfOthersMetadata() bool {
	if o != nil && !IsNil(o.AllowSendingEnvelopesOnBehalfOfOthersMetadata) {
		return true
	}

	return false
}

// SetAllowSendingEnvelopesOnBehalfOfOthersMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSendingEnvelopesOnBehalfOfOthersMetadata field.
func (o *AccountSettingsInformation) SetAllowSendingEnvelopesOnBehalfOfOthersMetadata(v SettingsMetadata) {
	o.AllowSendingEnvelopesOnBehalfOfOthersMetadata = &v
}

// GetAllowSendToCertifiedDelivery returns the AllowSendToCertifiedDelivery field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSendToCertifiedDelivery() string {
	if o == nil || IsNil(o.AllowSendToCertifiedDelivery) {
		var ret string
		return ret
	}
	return *o.AllowSendToCertifiedDelivery
}

// GetAllowSendToCertifiedDeliveryOk returns a tuple with the AllowSendToCertifiedDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSendToCertifiedDeliveryOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSendToCertifiedDelivery) {
		return nil, false
	}
	return o.AllowSendToCertifiedDelivery, true
}

// HasAllowSendToCertifiedDelivery returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSendToCertifiedDelivery() bool {
	if o != nil && !IsNil(o.AllowSendToCertifiedDelivery) {
		return true
	}

	return false
}

// SetAllowSendToCertifiedDelivery gets a reference to the given string and assigns it to the AllowSendToCertifiedDelivery field.
func (o *AccountSettingsInformation) SetAllowSendToCertifiedDelivery(v string) {
	o.AllowSendToCertifiedDelivery = &v
}

// GetAllowSendToCertifiedDeliveryMetadata returns the AllowSendToCertifiedDeliveryMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSendToCertifiedDeliveryMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSendToCertifiedDeliveryMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSendToCertifiedDeliveryMetadata
}

// GetAllowSendToCertifiedDeliveryMetadataOk returns a tuple with the AllowSendToCertifiedDeliveryMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSendToCertifiedDeliveryMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSendToCertifiedDeliveryMetadata) {
		return nil, false
	}
	return o.AllowSendToCertifiedDeliveryMetadata, true
}

// HasAllowSendToCertifiedDeliveryMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSendToCertifiedDeliveryMetadata() bool {
	if o != nil && !IsNil(o.AllowSendToCertifiedDeliveryMetadata) {
		return true
	}

	return false
}

// SetAllowSendToCertifiedDeliveryMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSendToCertifiedDeliveryMetadata field.
func (o *AccountSettingsInformation) SetAllowSendToCertifiedDeliveryMetadata(v SettingsMetadata) {
	o.AllowSendToCertifiedDeliveryMetadata = &v
}

// GetAllowSendToIntermediary returns the AllowSendToIntermediary field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSendToIntermediary() string {
	if o == nil || IsNil(o.AllowSendToIntermediary) {
		var ret string
		return ret
	}
	return *o.AllowSendToIntermediary
}

// GetAllowSendToIntermediaryOk returns a tuple with the AllowSendToIntermediary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSendToIntermediaryOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSendToIntermediary) {
		return nil, false
	}
	return o.AllowSendToIntermediary, true
}

// HasAllowSendToIntermediary returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSendToIntermediary() bool {
	if o != nil && !IsNil(o.AllowSendToIntermediary) {
		return true
	}

	return false
}

// SetAllowSendToIntermediary gets a reference to the given string and assigns it to the AllowSendToIntermediary field.
func (o *AccountSettingsInformation) SetAllowSendToIntermediary(v string) {
	o.AllowSendToIntermediary = &v
}

// GetAllowSendToIntermediaryMetadata returns the AllowSendToIntermediaryMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSendToIntermediaryMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSendToIntermediaryMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSendToIntermediaryMetadata
}

// GetAllowSendToIntermediaryMetadataOk returns a tuple with the AllowSendToIntermediaryMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSendToIntermediaryMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSendToIntermediaryMetadata) {
		return nil, false
	}
	return o.AllowSendToIntermediaryMetadata, true
}

// HasAllowSendToIntermediaryMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSendToIntermediaryMetadata() bool {
	if o != nil && !IsNil(o.AllowSendToIntermediaryMetadata) {
		return true
	}

	return false
}

// SetAllowSendToIntermediaryMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSendToIntermediaryMetadata field.
func (o *AccountSettingsInformation) SetAllowSendToIntermediaryMetadata(v SettingsMetadata) {
	o.AllowSendToIntermediaryMetadata = &v
}

// GetAllowServerTemplates returns the AllowServerTemplates field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowServerTemplates() string {
	if o == nil || IsNil(o.AllowServerTemplates) {
		var ret string
		return ret
	}
	return *o.AllowServerTemplates
}

// GetAllowServerTemplatesOk returns a tuple with the AllowServerTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowServerTemplatesOk() (*string, bool) {
	if o == nil || IsNil(o.AllowServerTemplates) {
		return nil, false
	}
	return o.AllowServerTemplates, true
}

// HasAllowServerTemplates returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowServerTemplates() bool {
	if o != nil && !IsNil(o.AllowServerTemplates) {
		return true
	}

	return false
}

// SetAllowServerTemplates gets a reference to the given string and assigns it to the AllowServerTemplates field.
func (o *AccountSettingsInformation) SetAllowServerTemplates(v string) {
	o.AllowServerTemplates = &v
}

// GetAllowServerTemplatesMetadata returns the AllowServerTemplatesMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowServerTemplatesMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowServerTemplatesMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowServerTemplatesMetadata
}

// GetAllowServerTemplatesMetadataOk returns a tuple with the AllowServerTemplatesMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowServerTemplatesMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowServerTemplatesMetadata) {
		return nil, false
	}
	return o.AllowServerTemplatesMetadata, true
}

// HasAllowServerTemplatesMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowServerTemplatesMetadata() bool {
	if o != nil && !IsNil(o.AllowServerTemplatesMetadata) {
		return true
	}

	return false
}

// SetAllowServerTemplatesMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowServerTemplatesMetadata field.
func (o *AccountSettingsInformation) SetAllowServerTemplatesMetadata(v SettingsMetadata) {
	o.AllowServerTemplatesMetadata = &v
}

// GetAllowSetEmbeddedRecipientStartURL returns the AllowSetEmbeddedRecipientStartURL field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSetEmbeddedRecipientStartURL() string {
	if o == nil || IsNil(o.AllowSetEmbeddedRecipientStartURL) {
		var ret string
		return ret
	}
	return *o.AllowSetEmbeddedRecipientStartURL
}

// GetAllowSetEmbeddedRecipientStartURLOk returns a tuple with the AllowSetEmbeddedRecipientStartURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSetEmbeddedRecipientStartURLOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSetEmbeddedRecipientStartURL) {
		return nil, false
	}
	return o.AllowSetEmbeddedRecipientStartURL, true
}

// HasAllowSetEmbeddedRecipientStartURL returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSetEmbeddedRecipientStartURL() bool {
	if o != nil && !IsNil(o.AllowSetEmbeddedRecipientStartURL) {
		return true
	}

	return false
}

// SetAllowSetEmbeddedRecipientStartURL gets a reference to the given string and assigns it to the AllowSetEmbeddedRecipientStartURL field.
func (o *AccountSettingsInformation) SetAllowSetEmbeddedRecipientStartURL(v string) {
	o.AllowSetEmbeddedRecipientStartURL = &v
}

// GetAllowSetEmbeddedRecipientStartURLMetadata returns the AllowSetEmbeddedRecipientStartURLMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSetEmbeddedRecipientStartURLMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSetEmbeddedRecipientStartURLMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSetEmbeddedRecipientStartURLMetadata
}

// GetAllowSetEmbeddedRecipientStartURLMetadataOk returns a tuple with the AllowSetEmbeddedRecipientStartURLMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSetEmbeddedRecipientStartURLMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSetEmbeddedRecipientStartURLMetadata) {
		return nil, false
	}
	return o.AllowSetEmbeddedRecipientStartURLMetadata, true
}

// HasAllowSetEmbeddedRecipientStartURLMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSetEmbeddedRecipientStartURLMetadata() bool {
	if o != nil && !IsNil(o.AllowSetEmbeddedRecipientStartURLMetadata) {
		return true
	}

	return false
}

// SetAllowSetEmbeddedRecipientStartURLMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSetEmbeddedRecipientStartURLMetadata field.
func (o *AccountSettingsInformation) SetAllowSetEmbeddedRecipientStartURLMetadata(v SettingsMetadata) {
	o.AllowSetEmbeddedRecipientStartURLMetadata = &v
}

// GetAllowSharedTabs returns the AllowSharedTabs field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSharedTabs() string {
	if o == nil || IsNil(o.AllowSharedTabs) {
		var ret string
		return ret
	}
	return *o.AllowSharedTabs
}

// GetAllowSharedTabsOk returns a tuple with the AllowSharedTabs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSharedTabsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSharedTabs) {
		return nil, false
	}
	return o.AllowSharedTabs, true
}

// HasAllowSharedTabs returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSharedTabs() bool {
	if o != nil && !IsNil(o.AllowSharedTabs) {
		return true
	}

	return false
}

// SetAllowSharedTabs gets a reference to the given string and assigns it to the AllowSharedTabs field.
func (o *AccountSettingsInformation) SetAllowSharedTabs(v string) {
	o.AllowSharedTabs = &v
}

// GetAllowSharedTabsMetadata returns the AllowSharedTabsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSharedTabsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSharedTabsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSharedTabsMetadata
}

// GetAllowSharedTabsMetadataOk returns a tuple with the AllowSharedTabsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSharedTabsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSharedTabsMetadata) {
		return nil, false
	}
	return o.AllowSharedTabsMetadata, true
}

// HasAllowSharedTabsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSharedTabsMetadata() bool {
	if o != nil && !IsNil(o.AllowSharedTabsMetadata) {
		return true
	}

	return false
}

// SetAllowSharedTabsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSharedTabsMetadata field.
func (o *AccountSettingsInformation) SetAllowSharedTabsMetadata(v SettingsMetadata) {
	o.AllowSharedTabsMetadata = &v
}

// GetAllowSignatureStamps returns the AllowSignatureStamps field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSignatureStamps() string {
	if o == nil || IsNil(o.AllowSignatureStamps) {
		var ret string
		return ret
	}
	return *o.AllowSignatureStamps
}

// GetAllowSignatureStampsOk returns a tuple with the AllowSignatureStamps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSignatureStampsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSignatureStamps) {
		return nil, false
	}
	return o.AllowSignatureStamps, true
}

// HasAllowSignatureStamps returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSignatureStamps() bool {
	if o != nil && !IsNil(o.AllowSignatureStamps) {
		return true
	}

	return false
}

// SetAllowSignatureStamps gets a reference to the given string and assigns it to the AllowSignatureStamps field.
func (o *AccountSettingsInformation) SetAllowSignatureStamps(v string) {
	o.AllowSignatureStamps = &v
}

// GetAllowSignatureStampsMetadata returns the AllowSignatureStampsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSignatureStampsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSignatureStampsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSignatureStampsMetadata
}

// GetAllowSignatureStampsMetadataOk returns a tuple with the AllowSignatureStampsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSignatureStampsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSignatureStampsMetadata) {
		return nil, false
	}
	return o.AllowSignatureStampsMetadata, true
}

// HasAllowSignatureStampsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSignatureStampsMetadata() bool {
	if o != nil && !IsNil(o.AllowSignatureStampsMetadata) {
		return true
	}

	return false
}

// SetAllowSignatureStampsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSignatureStampsMetadata field.
func (o *AccountSettingsInformation) SetAllowSignatureStampsMetadata(v SettingsMetadata) {
	o.AllowSignatureStampsMetadata = &v
}

// GetAllowSignDocumentFromHomePage returns the AllowSignDocumentFromHomePage field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSignDocumentFromHomePage() string {
	if o == nil || IsNil(o.AllowSignDocumentFromHomePage) {
		var ret string
		return ret
	}
	return *o.AllowSignDocumentFromHomePage
}

// GetAllowSignDocumentFromHomePageOk returns a tuple with the AllowSignDocumentFromHomePage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSignDocumentFromHomePageOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSignDocumentFromHomePage) {
		return nil, false
	}
	return o.AllowSignDocumentFromHomePage, true
}

// HasAllowSignDocumentFromHomePage returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSignDocumentFromHomePage() bool {
	if o != nil && !IsNil(o.AllowSignDocumentFromHomePage) {
		return true
	}

	return false
}

// SetAllowSignDocumentFromHomePage gets a reference to the given string and assigns it to the AllowSignDocumentFromHomePage field.
func (o *AccountSettingsInformation) SetAllowSignDocumentFromHomePage(v string) {
	o.AllowSignDocumentFromHomePage = &v
}

// GetAllowSignDocumentFromHomePageMetadata returns the AllowSignDocumentFromHomePageMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSignDocumentFromHomePageMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSignDocumentFromHomePageMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSignDocumentFromHomePageMetadata
}

// GetAllowSignDocumentFromHomePageMetadataOk returns a tuple with the AllowSignDocumentFromHomePageMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSignDocumentFromHomePageMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSignDocumentFromHomePageMetadata) {
		return nil, false
	}
	return o.AllowSignDocumentFromHomePageMetadata, true
}

// HasAllowSignDocumentFromHomePageMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSignDocumentFromHomePageMetadata() bool {
	if o != nil && !IsNil(o.AllowSignDocumentFromHomePageMetadata) {
		return true
	}

	return false
}

// SetAllowSignDocumentFromHomePageMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSignDocumentFromHomePageMetadata field.
func (o *AccountSettingsInformation) SetAllowSignDocumentFromHomePageMetadata(v SettingsMetadata) {
	o.AllowSignDocumentFromHomePageMetadata = &v
}

// GetAllowSignerReassign returns the AllowSignerReassign field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSignerReassign() string {
	if o == nil || IsNil(o.AllowSignerReassign) {
		var ret string
		return ret
	}
	return *o.AllowSignerReassign
}

// GetAllowSignerReassignOk returns a tuple with the AllowSignerReassign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSignerReassignOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSignerReassign) {
		return nil, false
	}
	return o.AllowSignerReassign, true
}

// HasAllowSignerReassign returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSignerReassign() bool {
	if o != nil && !IsNil(o.AllowSignerReassign) {
		return true
	}

	return false
}

// SetAllowSignerReassign gets a reference to the given string and assigns it to the AllowSignerReassign field.
func (o *AccountSettingsInformation) SetAllowSignerReassign(v string) {
	o.AllowSignerReassign = &v
}

// GetAllowSignerReassignMetadata returns the AllowSignerReassignMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSignerReassignMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSignerReassignMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSignerReassignMetadata
}

// GetAllowSignerReassignMetadataOk returns a tuple with the AllowSignerReassignMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSignerReassignMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSignerReassignMetadata) {
		return nil, false
	}
	return o.AllowSignerReassignMetadata, true
}

// HasAllowSignerReassignMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSignerReassignMetadata() bool {
	if o != nil && !IsNil(o.AllowSignerReassignMetadata) {
		return true
	}

	return false
}

// SetAllowSignerReassignMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSignerReassignMetadata field.
func (o *AccountSettingsInformation) SetAllowSignerReassignMetadata(v SettingsMetadata) {
	o.AllowSignerReassignMetadata = &v
}

// GetAllowSignerReassignOverride returns the AllowSignerReassignOverride field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSignerReassignOverride() string {
	if o == nil || IsNil(o.AllowSignerReassignOverride) {
		var ret string
		return ret
	}
	return *o.AllowSignerReassignOverride
}

// GetAllowSignerReassignOverrideOk returns a tuple with the AllowSignerReassignOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSignerReassignOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSignerReassignOverride) {
		return nil, false
	}
	return o.AllowSignerReassignOverride, true
}

// HasAllowSignerReassignOverride returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSignerReassignOverride() bool {
	if o != nil && !IsNil(o.AllowSignerReassignOverride) {
		return true
	}

	return false
}

// SetAllowSignerReassignOverride gets a reference to the given string and assigns it to the AllowSignerReassignOverride field.
func (o *AccountSettingsInformation) SetAllowSignerReassignOverride(v string) {
	o.AllowSignerReassignOverride = &v
}

// GetAllowSignerReassignOverrideMetadata returns the AllowSignerReassignOverrideMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSignerReassignOverrideMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSignerReassignOverrideMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSignerReassignOverrideMetadata
}

// GetAllowSignerReassignOverrideMetadataOk returns a tuple with the AllowSignerReassignOverrideMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSignerReassignOverrideMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSignerReassignOverrideMetadata) {
		return nil, false
	}
	return o.AllowSignerReassignOverrideMetadata, true
}

// HasAllowSignerReassignOverrideMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSignerReassignOverrideMetadata() bool {
	if o != nil && !IsNil(o.AllowSignerReassignOverrideMetadata) {
		return true
	}

	return false
}

// SetAllowSignerReassignOverrideMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSignerReassignOverrideMetadata field.
func (o *AccountSettingsInformation) SetAllowSignerReassignOverrideMetadata(v SettingsMetadata) {
	o.AllowSignerReassignOverrideMetadata = &v
}

// GetAllowSigningExtensions returns the AllowSigningExtensions field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSigningExtensions() string {
	if o == nil || IsNil(o.AllowSigningExtensions) {
		var ret string
		return ret
	}
	return *o.AllowSigningExtensions
}

// GetAllowSigningExtensionsOk returns a tuple with the AllowSigningExtensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSigningExtensionsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSigningExtensions) {
		return nil, false
	}
	return o.AllowSigningExtensions, true
}

// HasAllowSigningExtensions returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSigningExtensions() bool {
	if o != nil && !IsNil(o.AllowSigningExtensions) {
		return true
	}

	return false
}

// SetAllowSigningExtensions gets a reference to the given string and assigns it to the AllowSigningExtensions field.
func (o *AccountSettingsInformation) SetAllowSigningExtensions(v string) {
	o.AllowSigningExtensions = &v
}

// GetAllowSigningExtensionsMetadata returns the AllowSigningExtensionsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSigningExtensionsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSigningExtensionsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSigningExtensionsMetadata
}

// GetAllowSigningExtensionsMetadataOk returns a tuple with the AllowSigningExtensionsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSigningExtensionsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSigningExtensionsMetadata) {
		return nil, false
	}
	return o.AllowSigningExtensionsMetadata, true
}

// HasAllowSigningExtensionsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSigningExtensionsMetadata() bool {
	if o != nil && !IsNil(o.AllowSigningExtensionsMetadata) {
		return true
	}

	return false
}

// SetAllowSigningExtensionsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSigningExtensionsMetadata field.
func (o *AccountSettingsInformation) SetAllowSigningExtensionsMetadata(v SettingsMetadata) {
	o.AllowSigningExtensionsMetadata = &v
}

// GetAllowSigningGroups returns the AllowSigningGroups field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSigningGroups() string {
	if o == nil || IsNil(o.AllowSigningGroups) {
		var ret string
		return ret
	}
	return *o.AllowSigningGroups
}

// GetAllowSigningGroupsOk returns a tuple with the AllowSigningGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSigningGroupsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSigningGroups) {
		return nil, false
	}
	return o.AllowSigningGroups, true
}

// HasAllowSigningGroups returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSigningGroups() bool {
	if o != nil && !IsNil(o.AllowSigningGroups) {
		return true
	}

	return false
}

// SetAllowSigningGroups gets a reference to the given string and assigns it to the AllowSigningGroups field.
func (o *AccountSettingsInformation) SetAllowSigningGroups(v string) {
	o.AllowSigningGroups = &v
}

// GetAllowSigningGroupsMetadata returns the AllowSigningGroupsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSigningGroupsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSigningGroupsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSigningGroupsMetadata
}

// GetAllowSigningGroupsMetadataOk returns a tuple with the AllowSigningGroupsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSigningGroupsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSigningGroupsMetadata) {
		return nil, false
	}
	return o.AllowSigningGroupsMetadata, true
}

// HasAllowSigningGroupsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSigningGroupsMetadata() bool {
	if o != nil && !IsNil(o.AllowSigningGroupsMetadata) {
		return true
	}

	return false
}

// SetAllowSigningGroupsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSigningGroupsMetadata field.
func (o *AccountSettingsInformation) SetAllowSigningGroupsMetadata(v SettingsMetadata) {
	o.AllowSigningGroupsMetadata = &v
}

// GetAllowSigningInsights returns the AllowSigningInsights field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSigningInsights() string {
	if o == nil || IsNil(o.AllowSigningInsights) {
		var ret string
		return ret
	}
	return *o.AllowSigningInsights
}

// GetAllowSigningInsightsOk returns a tuple with the AllowSigningInsights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSigningInsightsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSigningInsights) {
		return nil, false
	}
	return o.AllowSigningInsights, true
}

// HasAllowSigningInsights returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSigningInsights() bool {
	if o != nil && !IsNil(o.AllowSigningInsights) {
		return true
	}

	return false
}

// SetAllowSigningInsights gets a reference to the given string and assigns it to the AllowSigningInsights field.
func (o *AccountSettingsInformation) SetAllowSigningInsights(v string) {
	o.AllowSigningInsights = &v
}

// GetAllowSigningInsightsMetadata returns the AllowSigningInsightsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSigningInsightsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSigningInsightsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSigningInsightsMetadata
}

// GetAllowSigningInsightsMetadataOk returns a tuple with the AllowSigningInsightsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSigningInsightsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSigningInsightsMetadata) {
		return nil, false
	}
	return o.AllowSigningInsightsMetadata, true
}

// HasAllowSigningInsightsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSigningInsightsMetadata() bool {
	if o != nil && !IsNil(o.AllowSigningInsightsMetadata) {
		return true
	}

	return false
}

// SetAllowSigningInsightsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSigningInsightsMetadata field.
func (o *AccountSettingsInformation) SetAllowSigningInsightsMetadata(v SettingsMetadata) {
	o.AllowSigningInsightsMetadata = &v
}

// GetAllowSigningRadioDeselect returns the AllowSigningRadioDeselect field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSigningRadioDeselect() string {
	if o == nil || IsNil(o.AllowSigningRadioDeselect) {
		var ret string
		return ret
	}
	return *o.AllowSigningRadioDeselect
}

// GetAllowSigningRadioDeselectOk returns a tuple with the AllowSigningRadioDeselect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSigningRadioDeselectOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSigningRadioDeselect) {
		return nil, false
	}
	return o.AllowSigningRadioDeselect, true
}

// HasAllowSigningRadioDeselect returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSigningRadioDeselect() bool {
	if o != nil && !IsNil(o.AllowSigningRadioDeselect) {
		return true
	}

	return false
}

// SetAllowSigningRadioDeselect gets a reference to the given string and assigns it to the AllowSigningRadioDeselect field.
func (o *AccountSettingsInformation) SetAllowSigningRadioDeselect(v string) {
	o.AllowSigningRadioDeselect = &v
}

// GetAllowSigningRadioDeselectMetadata returns the AllowSigningRadioDeselectMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSigningRadioDeselectMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSigningRadioDeselectMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSigningRadioDeselectMetadata
}

// GetAllowSigningRadioDeselectMetadataOk returns a tuple with the AllowSigningRadioDeselectMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSigningRadioDeselectMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSigningRadioDeselectMetadata) {
		return nil, false
	}
	return o.AllowSigningRadioDeselectMetadata, true
}

// HasAllowSigningRadioDeselectMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSigningRadioDeselectMetadata() bool {
	if o != nil && !IsNil(o.AllowSigningRadioDeselectMetadata) {
		return true
	}

	return false
}

// SetAllowSigningRadioDeselectMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSigningRadioDeselectMetadata field.
func (o *AccountSettingsInformation) SetAllowSigningRadioDeselectMetadata(v SettingsMetadata) {
	o.AllowSigningRadioDeselectMetadata = &v
}

// GetAllowSignNow returns the AllowSignNow field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSignNow() string {
	if o == nil || IsNil(o.AllowSignNow) {
		var ret string
		return ret
	}
	return *o.AllowSignNow
}

// GetAllowSignNowOk returns a tuple with the AllowSignNow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSignNowOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSignNow) {
		return nil, false
	}
	return o.AllowSignNow, true
}

// HasAllowSignNow returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSignNow() bool {
	if o != nil && !IsNil(o.AllowSignNow) {
		return true
	}

	return false
}

// SetAllowSignNow gets a reference to the given string and assigns it to the AllowSignNow field.
func (o *AccountSettingsInformation) SetAllowSignNow(v string) {
	o.AllowSignNow = &v
}

// GetAllowSignNowMetadata returns the AllowSignNowMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSignNowMetadata() string {
	if o == nil || IsNil(o.AllowSignNowMetadata) {
		var ret string
		return ret
	}
	return *o.AllowSignNowMetadata
}

// GetAllowSignNowMetadataOk returns a tuple with the AllowSignNowMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSignNowMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSignNowMetadata) {
		return nil, false
	}
	return o.AllowSignNowMetadata, true
}

// HasAllowSignNowMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSignNowMetadata() bool {
	if o != nil && !IsNil(o.AllowSignNowMetadata) {
		return true
	}

	return false
}

// SetAllowSignNowMetadata gets a reference to the given string and assigns it to the AllowSignNowMetadata field.
func (o *AccountSettingsInformation) SetAllowSignNowMetadata(v string) {
	o.AllowSignNowMetadata = &v
}

// GetAllowSMSDelivery returns the AllowSMSDelivery field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSMSDelivery() string {
	if o == nil || IsNil(o.AllowSMSDelivery) {
		var ret string
		return ret
	}
	return *o.AllowSMSDelivery
}

// GetAllowSMSDeliveryOk returns a tuple with the AllowSMSDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSMSDeliveryOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSMSDelivery) {
		return nil, false
	}
	return o.AllowSMSDelivery, true
}

// HasAllowSMSDelivery returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSMSDelivery() bool {
	if o != nil && !IsNil(o.AllowSMSDelivery) {
		return true
	}

	return false
}

// SetAllowSMSDelivery gets a reference to the given string and assigns it to the AllowSMSDelivery field.
func (o *AccountSettingsInformation) SetAllowSMSDelivery(v string) {
	o.AllowSMSDelivery = &v
}

// GetAllowSMSDeliveryMetadata returns the AllowSMSDeliveryMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSMSDeliveryMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSMSDeliveryMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSMSDeliveryMetadata
}

// GetAllowSMSDeliveryMetadataOk returns a tuple with the AllowSMSDeliveryMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSMSDeliveryMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSMSDeliveryMetadata) {
		return nil, false
	}
	return o.AllowSMSDeliveryMetadata, true
}

// HasAllowSMSDeliveryMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSMSDeliveryMetadata() bool {
	if o != nil && !IsNil(o.AllowSMSDeliveryMetadata) {
		return true
	}

	return false
}

// SetAllowSMSDeliveryMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSMSDeliveryMetadata field.
func (o *AccountSettingsInformation) SetAllowSMSDeliveryMetadata(v SettingsMetadata) {
	o.AllowSMSDeliveryMetadata = &v
}

// GetAllowSocialIdLogin returns the AllowSocialIdLogin field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSocialIdLogin() string {
	if o == nil || IsNil(o.AllowSocialIdLogin) {
		var ret string
		return ret
	}
	return *o.AllowSocialIdLogin
}

// GetAllowSocialIdLoginOk returns a tuple with the AllowSocialIdLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSocialIdLoginOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSocialIdLogin) {
		return nil, false
	}
	return o.AllowSocialIdLogin, true
}

// HasAllowSocialIdLogin returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSocialIdLogin() bool {
	if o != nil && !IsNil(o.AllowSocialIdLogin) {
		return true
	}

	return false
}

// SetAllowSocialIdLogin gets a reference to the given string and assigns it to the AllowSocialIdLogin field.
func (o *AccountSettingsInformation) SetAllowSocialIdLogin(v string) {
	o.AllowSocialIdLogin = &v
}

// GetAllowSocialIdLoginMetadata returns the AllowSocialIdLoginMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSocialIdLoginMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSocialIdLoginMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSocialIdLoginMetadata
}

// GetAllowSocialIdLoginMetadataOk returns a tuple with the AllowSocialIdLoginMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSocialIdLoginMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSocialIdLoginMetadata) {
		return nil, false
	}
	return o.AllowSocialIdLoginMetadata, true
}

// HasAllowSocialIdLoginMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSocialIdLoginMetadata() bool {
	if o != nil && !IsNil(o.AllowSocialIdLoginMetadata) {
		return true
	}

	return false
}

// SetAllowSocialIdLoginMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSocialIdLoginMetadata field.
func (o *AccountSettingsInformation) SetAllowSocialIdLoginMetadata(v SettingsMetadata) {
	o.AllowSocialIdLoginMetadata = &v
}

// GetAllowSupplementalDocuments returns the AllowSupplementalDocuments field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSupplementalDocuments() string {
	if o == nil || IsNil(o.AllowSupplementalDocuments) {
		var ret string
		return ret
	}
	return *o.AllowSupplementalDocuments
}

// GetAllowSupplementalDocumentsOk returns a tuple with the AllowSupplementalDocuments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSupplementalDocumentsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSupplementalDocuments) {
		return nil, false
	}
	return o.AllowSupplementalDocuments, true
}

// HasAllowSupplementalDocuments returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSupplementalDocuments() bool {
	if o != nil && !IsNil(o.AllowSupplementalDocuments) {
		return true
	}

	return false
}

// SetAllowSupplementalDocuments gets a reference to the given string and assigns it to the AllowSupplementalDocuments field.
func (o *AccountSettingsInformation) SetAllowSupplementalDocuments(v string) {
	o.AllowSupplementalDocuments = &v
}

// GetAllowSupplementalDocumentsMetadata returns the AllowSupplementalDocumentsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowSupplementalDocumentsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSupplementalDocumentsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSupplementalDocumentsMetadata
}

// GetAllowSupplementalDocumentsMetadataOk returns a tuple with the AllowSupplementalDocumentsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowSupplementalDocumentsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSupplementalDocumentsMetadata) {
		return nil, false
	}
	return o.AllowSupplementalDocumentsMetadata, true
}

// HasAllowSupplementalDocumentsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowSupplementalDocumentsMetadata() bool {
	if o != nil && !IsNil(o.AllowSupplementalDocumentsMetadata) {
		return true
	}

	return false
}

// SetAllowSupplementalDocumentsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSupplementalDocumentsMetadata field.
func (o *AccountSettingsInformation) SetAllowSupplementalDocumentsMetadata(v SettingsMetadata) {
	o.AllowSupplementalDocumentsMetadata = &v
}

// GetAllowThirdPartyElectronicNotary returns the AllowThirdPartyElectronicNotary field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowThirdPartyElectronicNotary() string {
	if o == nil || IsNil(o.AllowThirdPartyElectronicNotary) {
		var ret string
		return ret
	}
	return *o.AllowThirdPartyElectronicNotary
}

// GetAllowThirdPartyElectronicNotaryOk returns a tuple with the AllowThirdPartyElectronicNotary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowThirdPartyElectronicNotaryOk() (*string, bool) {
	if o == nil || IsNil(o.AllowThirdPartyElectronicNotary) {
		return nil, false
	}
	return o.AllowThirdPartyElectronicNotary, true
}

// HasAllowThirdPartyElectronicNotary returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowThirdPartyElectronicNotary() bool {
	if o != nil && !IsNil(o.AllowThirdPartyElectronicNotary) {
		return true
	}

	return false
}

// SetAllowThirdPartyElectronicNotary gets a reference to the given string and assigns it to the AllowThirdPartyElectronicNotary field.
func (o *AccountSettingsInformation) SetAllowThirdPartyElectronicNotary(v string) {
	o.AllowThirdPartyElectronicNotary = &v
}

// GetAllowThirdPartyElectronicNotaryMetadata returns the AllowThirdPartyElectronicNotaryMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowThirdPartyElectronicNotaryMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowThirdPartyElectronicNotaryMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowThirdPartyElectronicNotaryMetadata
}

// GetAllowThirdPartyElectronicNotaryMetadataOk returns a tuple with the AllowThirdPartyElectronicNotaryMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowThirdPartyElectronicNotaryMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowThirdPartyElectronicNotaryMetadata) {
		return nil, false
	}
	return o.AllowThirdPartyElectronicNotaryMetadata, true
}

// HasAllowThirdPartyElectronicNotaryMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowThirdPartyElectronicNotaryMetadata() bool {
	if o != nil && !IsNil(o.AllowThirdPartyElectronicNotaryMetadata) {
		return true
	}

	return false
}

// SetAllowThirdPartyElectronicNotaryMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowThirdPartyElectronicNotaryMetadata field.
func (o *AccountSettingsInformation) SetAllowThirdPartyElectronicNotaryMetadata(v SettingsMetadata) {
	o.AllowThirdPartyElectronicNotaryMetadata = &v
}

// GetAllowTransactionsWorkspace returns the AllowTransactionsWorkspace field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowTransactionsWorkspace() string {
	if o == nil || IsNil(o.AllowTransactionsWorkspace) {
		var ret string
		return ret
	}
	return *o.AllowTransactionsWorkspace
}

// GetAllowTransactionsWorkspaceOk returns a tuple with the AllowTransactionsWorkspace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowTransactionsWorkspaceOk() (*string, bool) {
	if o == nil || IsNil(o.AllowTransactionsWorkspace) {
		return nil, false
	}
	return o.AllowTransactionsWorkspace, true
}

// HasAllowTransactionsWorkspace returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowTransactionsWorkspace() bool {
	if o != nil && !IsNil(o.AllowTransactionsWorkspace) {
		return true
	}

	return false
}

// SetAllowTransactionsWorkspace gets a reference to the given string and assigns it to the AllowTransactionsWorkspace field.
func (o *AccountSettingsInformation) SetAllowTransactionsWorkspace(v string) {
	o.AllowTransactionsWorkspace = &v
}

// GetAllowTransactionsWorkspaceMetadata returns the AllowTransactionsWorkspaceMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowTransactionsWorkspaceMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowTransactionsWorkspaceMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowTransactionsWorkspaceMetadata
}

// GetAllowTransactionsWorkspaceMetadataOk returns a tuple with the AllowTransactionsWorkspaceMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowTransactionsWorkspaceMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowTransactionsWorkspaceMetadata) {
		return nil, false
	}
	return o.AllowTransactionsWorkspaceMetadata, true
}

// HasAllowTransactionsWorkspaceMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowTransactionsWorkspaceMetadata() bool {
	if o != nil && !IsNil(o.AllowTransactionsWorkspaceMetadata) {
		return true
	}

	return false
}

// SetAllowTransactionsWorkspaceMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowTransactionsWorkspaceMetadata field.
func (o *AccountSettingsInformation) SetAllowTransactionsWorkspaceMetadata(v SettingsMetadata) {
	o.AllowTransactionsWorkspaceMetadata = &v
}

// GetAllowTransactionsWorkspaceOriginal returns the AllowTransactionsWorkspaceOriginal field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowTransactionsWorkspaceOriginal() string {
	if o == nil || IsNil(o.AllowTransactionsWorkspaceOriginal) {
		var ret string
		return ret
	}
	return *o.AllowTransactionsWorkspaceOriginal
}

// GetAllowTransactionsWorkspaceOriginalOk returns a tuple with the AllowTransactionsWorkspaceOriginal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowTransactionsWorkspaceOriginalOk() (*string, bool) {
	if o == nil || IsNil(o.AllowTransactionsWorkspaceOriginal) {
		return nil, false
	}
	return o.AllowTransactionsWorkspaceOriginal, true
}

// HasAllowTransactionsWorkspaceOriginal returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowTransactionsWorkspaceOriginal() bool {
	if o != nil && !IsNil(o.AllowTransactionsWorkspaceOriginal) {
		return true
	}

	return false
}

// SetAllowTransactionsWorkspaceOriginal gets a reference to the given string and assigns it to the AllowTransactionsWorkspaceOriginal field.
func (o *AccountSettingsInformation) SetAllowTransactionsWorkspaceOriginal(v string) {
	o.AllowTransactionsWorkspaceOriginal = &v
}

// GetAllowTransactionsWorkspaceOriginalMetadata returns the AllowTransactionsWorkspaceOriginalMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowTransactionsWorkspaceOriginalMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowTransactionsWorkspaceOriginalMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowTransactionsWorkspaceOriginalMetadata
}

// GetAllowTransactionsWorkspaceOriginalMetadataOk returns a tuple with the AllowTransactionsWorkspaceOriginalMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowTransactionsWorkspaceOriginalMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowTransactionsWorkspaceOriginalMetadata) {
		return nil, false
	}
	return o.AllowTransactionsWorkspaceOriginalMetadata, true
}

// HasAllowTransactionsWorkspaceOriginalMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowTransactionsWorkspaceOriginalMetadata() bool {
	if o != nil && !IsNil(o.AllowTransactionsWorkspaceOriginalMetadata) {
		return true
	}

	return false
}

// SetAllowTransactionsWorkspaceOriginalMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowTransactionsWorkspaceOriginalMetadata field.
func (o *AccountSettingsInformation) SetAllowTransactionsWorkspaceOriginalMetadata(v SettingsMetadata) {
	o.AllowTransactionsWorkspaceOriginalMetadata = &v
}

// GetAllowUsersToAccessDirectory returns the AllowUsersToAccessDirectory field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowUsersToAccessDirectory() string {
	if o == nil || IsNil(o.AllowUsersToAccessDirectory) {
		var ret string
		return ret
	}
	return *o.AllowUsersToAccessDirectory
}

// GetAllowUsersToAccessDirectoryOk returns a tuple with the AllowUsersToAccessDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowUsersToAccessDirectoryOk() (*string, bool) {
	if o == nil || IsNil(o.AllowUsersToAccessDirectory) {
		return nil, false
	}
	return o.AllowUsersToAccessDirectory, true
}

// HasAllowUsersToAccessDirectory returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowUsersToAccessDirectory() bool {
	if o != nil && !IsNil(o.AllowUsersToAccessDirectory) {
		return true
	}

	return false
}

// SetAllowUsersToAccessDirectory gets a reference to the given string and assigns it to the AllowUsersToAccessDirectory field.
func (o *AccountSettingsInformation) SetAllowUsersToAccessDirectory(v string) {
	o.AllowUsersToAccessDirectory = &v
}

// GetAllowUsersToAccessDirectoryMetadata returns the AllowUsersToAccessDirectoryMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowUsersToAccessDirectoryMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowUsersToAccessDirectoryMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowUsersToAccessDirectoryMetadata
}

// GetAllowUsersToAccessDirectoryMetadataOk returns a tuple with the AllowUsersToAccessDirectoryMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowUsersToAccessDirectoryMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowUsersToAccessDirectoryMetadata) {
		return nil, false
	}
	return o.AllowUsersToAccessDirectoryMetadata, true
}

// HasAllowUsersToAccessDirectoryMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowUsersToAccessDirectoryMetadata() bool {
	if o != nil && !IsNil(o.AllowUsersToAccessDirectoryMetadata) {
		return true
	}

	return false
}

// SetAllowUsersToAccessDirectoryMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowUsersToAccessDirectoryMetadata field.
func (o *AccountSettingsInformation) SetAllowUsersToAccessDirectoryMetadata(v SettingsMetadata) {
	o.AllowUsersToAccessDirectoryMetadata = &v
}

// GetAllowValueInsights returns the AllowValueInsights field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowValueInsights() string {
	if o == nil || IsNil(o.AllowValueInsights) {
		var ret string
		return ret
	}
	return *o.AllowValueInsights
}

// GetAllowValueInsightsOk returns a tuple with the AllowValueInsights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowValueInsightsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowValueInsights) {
		return nil, false
	}
	return o.AllowValueInsights, true
}

// HasAllowValueInsights returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowValueInsights() bool {
	if o != nil && !IsNil(o.AllowValueInsights) {
		return true
	}

	return false
}

// SetAllowValueInsights gets a reference to the given string and assigns it to the AllowValueInsights field.
func (o *AccountSettingsInformation) SetAllowValueInsights(v string) {
	o.AllowValueInsights = &v
}

// GetAllowValueInsightsMetadata returns the AllowValueInsightsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowValueInsightsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowValueInsightsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowValueInsightsMetadata
}

// GetAllowValueInsightsMetadataOk returns a tuple with the AllowValueInsightsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowValueInsightsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowValueInsightsMetadata) {
		return nil, false
	}
	return o.AllowValueInsightsMetadata, true
}

// HasAllowValueInsightsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowValueInsightsMetadata() bool {
	if o != nil && !IsNil(o.AllowValueInsightsMetadata) {
		return true
	}

	return false
}

// SetAllowValueInsightsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowValueInsightsMetadata field.
func (o *AccountSettingsInformation) SetAllowValueInsightsMetadata(v SettingsMetadata) {
	o.AllowValueInsightsMetadata = &v
}

// GetAllowWebForms returns the AllowWebForms field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowWebForms() string {
	if o == nil || IsNil(o.AllowWebForms) {
		var ret string
		return ret
	}
	return *o.AllowWebForms
}

// GetAllowWebFormsOk returns a tuple with the AllowWebForms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowWebFormsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowWebForms) {
		return nil, false
	}
	return o.AllowWebForms, true
}

// HasAllowWebForms returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowWebForms() bool {
	if o != nil && !IsNil(o.AllowWebForms) {
		return true
	}

	return false
}

// SetAllowWebForms gets a reference to the given string and assigns it to the AllowWebForms field.
func (o *AccountSettingsInformation) SetAllowWebForms(v string) {
	o.AllowWebForms = &v
}

// GetAllowWebFormsMetadata returns the AllowWebFormsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowWebFormsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowWebFormsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowWebFormsMetadata
}

// GetAllowWebFormsMetadataOk returns a tuple with the AllowWebFormsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowWebFormsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowWebFormsMetadata) {
		return nil, false
	}
	return o.AllowWebFormsMetadata, true
}

// HasAllowWebFormsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowWebFormsMetadata() bool {
	if o != nil && !IsNil(o.AllowWebFormsMetadata) {
		return true
	}

	return false
}

// SetAllowWebFormsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowWebFormsMetadata field.
func (o *AccountSettingsInformation) SetAllowWebFormsMetadata(v SettingsMetadata) {
	o.AllowWebFormsMetadata = &v
}

// GetAllowWhatsAppDelivery returns the AllowWhatsAppDelivery field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowWhatsAppDelivery() string {
	if o == nil || IsNil(o.AllowWhatsAppDelivery) {
		var ret string
		return ret
	}
	return *o.AllowWhatsAppDelivery
}

// GetAllowWhatsAppDeliveryOk returns a tuple with the AllowWhatsAppDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowWhatsAppDeliveryOk() (*string, bool) {
	if o == nil || IsNil(o.AllowWhatsAppDelivery) {
		return nil, false
	}
	return o.AllowWhatsAppDelivery, true
}

// HasAllowWhatsAppDelivery returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowWhatsAppDelivery() bool {
	if o != nil && !IsNil(o.AllowWhatsAppDelivery) {
		return true
	}

	return false
}

// SetAllowWhatsAppDelivery gets a reference to the given string and assigns it to the AllowWhatsAppDelivery field.
func (o *AccountSettingsInformation) SetAllowWhatsAppDelivery(v string) {
	o.AllowWhatsAppDelivery = &v
}

// GetAllowWhatsAppDeliveryMetadata returns the AllowWhatsAppDeliveryMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAllowWhatsAppDeliveryMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowWhatsAppDeliveryMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowWhatsAppDeliveryMetadata
}

// GetAllowWhatsAppDeliveryMetadataOk returns a tuple with the AllowWhatsAppDeliveryMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAllowWhatsAppDeliveryMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowWhatsAppDeliveryMetadata) {
		return nil, false
	}
	return o.AllowWhatsAppDeliveryMetadata, true
}

// HasAllowWhatsAppDeliveryMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAllowWhatsAppDeliveryMetadata() bool {
	if o != nil && !IsNil(o.AllowWhatsAppDeliveryMetadata) {
		return true
	}

	return false
}

// SetAllowWhatsAppDeliveryMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowWhatsAppDeliveryMetadata field.
func (o *AccountSettingsInformation) SetAllowWhatsAppDeliveryMetadata(v SettingsMetadata) {
	o.AllowWhatsAppDeliveryMetadata = &v
}

// GetAnchorPopulationScope returns the AnchorPopulationScope field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAnchorPopulationScope() string {
	if o == nil || IsNil(o.AnchorPopulationScope) {
		var ret string
		return ret
	}
	return *o.AnchorPopulationScope
}

// GetAnchorPopulationScopeOk returns a tuple with the AnchorPopulationScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAnchorPopulationScopeOk() (*string, bool) {
	if o == nil || IsNil(o.AnchorPopulationScope) {
		return nil, false
	}
	return o.AnchorPopulationScope, true
}

// HasAnchorPopulationScope returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAnchorPopulationScope() bool {
	if o != nil && !IsNil(o.AnchorPopulationScope) {
		return true
	}

	return false
}

// SetAnchorPopulationScope gets a reference to the given string and assigns it to the AnchorPopulationScope field.
func (o *AccountSettingsInformation) SetAnchorPopulationScope(v string) {
	o.AnchorPopulationScope = &v
}

// GetAnchorPopulationScopeMetadata returns the AnchorPopulationScopeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAnchorPopulationScopeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AnchorPopulationScopeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AnchorPopulationScopeMetadata
}

// GetAnchorPopulationScopeMetadataOk returns a tuple with the AnchorPopulationScopeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAnchorPopulationScopeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AnchorPopulationScopeMetadata) {
		return nil, false
	}
	return o.AnchorPopulationScopeMetadata, true
}

// HasAnchorPopulationScopeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAnchorPopulationScopeMetadata() bool {
	if o != nil && !IsNil(o.AnchorPopulationScopeMetadata) {
		return true
	}

	return false
}

// SetAnchorPopulationScopeMetadata gets a reference to the given SettingsMetadata and assigns it to the AnchorPopulationScopeMetadata field.
func (o *AccountSettingsInformation) SetAnchorPopulationScopeMetadata(v SettingsMetadata) {
	o.AnchorPopulationScopeMetadata = &v
}

// GetAnchorTagVersionedPlacementEnabled returns the AnchorTagVersionedPlacementEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAnchorTagVersionedPlacementEnabled() string {
	if o == nil || IsNil(o.AnchorTagVersionedPlacementEnabled) {
		var ret string
		return ret
	}
	return *o.AnchorTagVersionedPlacementEnabled
}

// GetAnchorTagVersionedPlacementEnabledOk returns a tuple with the AnchorTagVersionedPlacementEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAnchorTagVersionedPlacementEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.AnchorTagVersionedPlacementEnabled) {
		return nil, false
	}
	return o.AnchorTagVersionedPlacementEnabled, true
}

// HasAnchorTagVersionedPlacementEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAnchorTagVersionedPlacementEnabled() bool {
	if o != nil && !IsNil(o.AnchorTagVersionedPlacementEnabled) {
		return true
	}

	return false
}

// SetAnchorTagVersionedPlacementEnabled gets a reference to the given string and assigns it to the AnchorTagVersionedPlacementEnabled field.
func (o *AccountSettingsInformation) SetAnchorTagVersionedPlacementEnabled(v string) {
	o.AnchorTagVersionedPlacementEnabled = &v
}

// GetAnchorTagVersionedPlacementMetadataEnabled returns the AnchorTagVersionedPlacementMetadataEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAnchorTagVersionedPlacementMetadataEnabled() SettingsMetadata {
	if o == nil || IsNil(o.AnchorTagVersionedPlacementMetadataEnabled) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AnchorTagVersionedPlacementMetadataEnabled
}

// GetAnchorTagVersionedPlacementMetadataEnabledOk returns a tuple with the AnchorTagVersionedPlacementMetadataEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAnchorTagVersionedPlacementMetadataEnabledOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AnchorTagVersionedPlacementMetadataEnabled) {
		return nil, false
	}
	return o.AnchorTagVersionedPlacementMetadataEnabled, true
}

// HasAnchorTagVersionedPlacementMetadataEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAnchorTagVersionedPlacementMetadataEnabled() bool {
	if o != nil && !IsNil(o.AnchorTagVersionedPlacementMetadataEnabled) {
		return true
	}

	return false
}

// SetAnchorTagVersionedPlacementMetadataEnabled gets a reference to the given SettingsMetadata and assigns it to the AnchorTagVersionedPlacementMetadataEnabled field.
func (o *AccountSettingsInformation) SetAnchorTagVersionedPlacementMetadataEnabled(v SettingsMetadata) {
	o.AnchorTagVersionedPlacementMetadataEnabled = &v
}

// GetAttachCompletedEnvelope returns the AttachCompletedEnvelope field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAttachCompletedEnvelope() string {
	if o == nil || IsNil(o.AttachCompletedEnvelope) {
		var ret string
		return ret
	}
	return *o.AttachCompletedEnvelope
}

// GetAttachCompletedEnvelopeOk returns a tuple with the AttachCompletedEnvelope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAttachCompletedEnvelopeOk() (*string, bool) {
	if o == nil || IsNil(o.AttachCompletedEnvelope) {
		return nil, false
	}
	return o.AttachCompletedEnvelope, true
}

// HasAttachCompletedEnvelope returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAttachCompletedEnvelope() bool {
	if o != nil && !IsNil(o.AttachCompletedEnvelope) {
		return true
	}

	return false
}

// SetAttachCompletedEnvelope gets a reference to the given string and assigns it to the AttachCompletedEnvelope field.
func (o *AccountSettingsInformation) SetAttachCompletedEnvelope(v string) {
	o.AttachCompletedEnvelope = &v
}

// GetAttachCompletedEnvelopeMetadata returns the AttachCompletedEnvelopeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAttachCompletedEnvelopeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AttachCompletedEnvelopeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AttachCompletedEnvelopeMetadata
}

// GetAttachCompletedEnvelopeMetadataOk returns a tuple with the AttachCompletedEnvelopeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAttachCompletedEnvelopeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AttachCompletedEnvelopeMetadata) {
		return nil, false
	}
	return o.AttachCompletedEnvelopeMetadata, true
}

// HasAttachCompletedEnvelopeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAttachCompletedEnvelopeMetadata() bool {
	if o != nil && !IsNil(o.AttachCompletedEnvelopeMetadata) {
		return true
	}

	return false
}

// SetAttachCompletedEnvelopeMetadata gets a reference to the given SettingsMetadata and assigns it to the AttachCompletedEnvelopeMetadata field.
func (o *AccountSettingsInformation) SetAttachCompletedEnvelopeMetadata(v SettingsMetadata) {
	o.AttachCompletedEnvelopeMetadata = &v
}

// GetAuthenticationCheck returns the AuthenticationCheck field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAuthenticationCheck() string {
	if o == nil || IsNil(o.AuthenticationCheck) {
		var ret string
		return ret
	}
	return *o.AuthenticationCheck
}

// GetAuthenticationCheckOk returns a tuple with the AuthenticationCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAuthenticationCheckOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationCheck) {
		return nil, false
	}
	return o.AuthenticationCheck, true
}

// HasAuthenticationCheck returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAuthenticationCheck() bool {
	if o != nil && !IsNil(o.AuthenticationCheck) {
		return true
	}

	return false
}

// SetAuthenticationCheck gets a reference to the given string and assigns it to the AuthenticationCheck field.
func (o *AccountSettingsInformation) SetAuthenticationCheck(v string) {
	o.AuthenticationCheck = &v
}

// GetAuthenticationCheckMetadata returns the AuthenticationCheckMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAuthenticationCheckMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AuthenticationCheckMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AuthenticationCheckMetadata
}

// GetAuthenticationCheckMetadataOk returns a tuple with the AuthenticationCheckMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAuthenticationCheckMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AuthenticationCheckMetadata) {
		return nil, false
	}
	return o.AuthenticationCheckMetadata, true
}

// HasAuthenticationCheckMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAuthenticationCheckMetadata() bool {
	if o != nil && !IsNil(o.AuthenticationCheckMetadata) {
		return true
	}

	return false
}

// SetAuthenticationCheckMetadata gets a reference to the given SettingsMetadata and assigns it to the AuthenticationCheckMetadata field.
func (o *AccountSettingsInformation) SetAuthenticationCheckMetadata(v SettingsMetadata) {
	o.AuthenticationCheckMetadata = &v
}

// GetAutoNavRule returns the AutoNavRule field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAutoNavRule() string {
	if o == nil || IsNil(o.AutoNavRule) {
		var ret string
		return ret
	}
	return *o.AutoNavRule
}

// GetAutoNavRuleOk returns a tuple with the AutoNavRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAutoNavRuleOk() (*string, bool) {
	if o == nil || IsNil(o.AutoNavRule) {
		return nil, false
	}
	return o.AutoNavRule, true
}

// HasAutoNavRule returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAutoNavRule() bool {
	if o != nil && !IsNil(o.AutoNavRule) {
		return true
	}

	return false
}

// SetAutoNavRule gets a reference to the given string and assigns it to the AutoNavRule field.
func (o *AccountSettingsInformation) SetAutoNavRule(v string) {
	o.AutoNavRule = &v
}

// GetAutoNavRuleMetadata returns the AutoNavRuleMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAutoNavRuleMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AutoNavRuleMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AutoNavRuleMetadata
}

// GetAutoNavRuleMetadataOk returns a tuple with the AutoNavRuleMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAutoNavRuleMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AutoNavRuleMetadata) {
		return nil, false
	}
	return o.AutoNavRuleMetadata, true
}

// HasAutoNavRuleMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAutoNavRuleMetadata() bool {
	if o != nil && !IsNil(o.AutoNavRuleMetadata) {
		return true
	}

	return false
}

// SetAutoNavRuleMetadata gets a reference to the given SettingsMetadata and assigns it to the AutoNavRuleMetadata field.
func (o *AccountSettingsInformation) SetAutoNavRuleMetadata(v SettingsMetadata) {
	o.AutoNavRuleMetadata = &v
}

// GetAutoProvisionSignerAccount returns the AutoProvisionSignerAccount field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAutoProvisionSignerAccount() string {
	if o == nil || IsNil(o.AutoProvisionSignerAccount) {
		var ret string
		return ret
	}
	return *o.AutoProvisionSignerAccount
}

// GetAutoProvisionSignerAccountOk returns a tuple with the AutoProvisionSignerAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAutoProvisionSignerAccountOk() (*string, bool) {
	if o == nil || IsNil(o.AutoProvisionSignerAccount) {
		return nil, false
	}
	return o.AutoProvisionSignerAccount, true
}

// HasAutoProvisionSignerAccount returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAutoProvisionSignerAccount() bool {
	if o != nil && !IsNil(o.AutoProvisionSignerAccount) {
		return true
	}

	return false
}

// SetAutoProvisionSignerAccount gets a reference to the given string and assigns it to the AutoProvisionSignerAccount field.
func (o *AccountSettingsInformation) SetAutoProvisionSignerAccount(v string) {
	o.AutoProvisionSignerAccount = &v
}

// GetAutoProvisionSignerAccountMetadata returns the AutoProvisionSignerAccountMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetAutoProvisionSignerAccountMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AutoProvisionSignerAccountMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AutoProvisionSignerAccountMetadata
}

// GetAutoProvisionSignerAccountMetadataOk returns a tuple with the AutoProvisionSignerAccountMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetAutoProvisionSignerAccountMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AutoProvisionSignerAccountMetadata) {
		return nil, false
	}
	return o.AutoProvisionSignerAccountMetadata, true
}

// HasAutoProvisionSignerAccountMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasAutoProvisionSignerAccountMetadata() bool {
	if o != nil && !IsNil(o.AutoProvisionSignerAccountMetadata) {
		return true
	}

	return false
}

// SetAutoProvisionSignerAccountMetadata gets a reference to the given SettingsMetadata and assigns it to the AutoProvisionSignerAccountMetadata field.
func (o *AccountSettingsInformation) SetAutoProvisionSignerAccountMetadata(v SettingsMetadata) {
	o.AutoProvisionSignerAccountMetadata = &v
}

// GetBccEmailArchive returns the BccEmailArchive field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetBccEmailArchive() string {
	if o == nil || IsNil(o.BccEmailArchive) {
		var ret string
		return ret
	}
	return *o.BccEmailArchive
}

// GetBccEmailArchiveOk returns a tuple with the BccEmailArchive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetBccEmailArchiveOk() (*string, bool) {
	if o == nil || IsNil(o.BccEmailArchive) {
		return nil, false
	}
	return o.BccEmailArchive, true
}

// HasBccEmailArchive returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasBccEmailArchive() bool {
	if o != nil && !IsNil(o.BccEmailArchive) {
		return true
	}

	return false
}

// SetBccEmailArchive gets a reference to the given string and assigns it to the BccEmailArchive field.
func (o *AccountSettingsInformation) SetBccEmailArchive(v string) {
	o.BccEmailArchive = &v
}

// GetBccEmailArchiveMetadata returns the BccEmailArchiveMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetBccEmailArchiveMetadata() SettingsMetadata {
	if o == nil || IsNil(o.BccEmailArchiveMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.BccEmailArchiveMetadata
}

// GetBccEmailArchiveMetadataOk returns a tuple with the BccEmailArchiveMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetBccEmailArchiveMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.BccEmailArchiveMetadata) {
		return nil, false
	}
	return o.BccEmailArchiveMetadata, true
}

// HasBccEmailArchiveMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasBccEmailArchiveMetadata() bool {
	if o != nil && !IsNil(o.BccEmailArchiveMetadata) {
		return true
	}

	return false
}

// SetBccEmailArchiveMetadata gets a reference to the given SettingsMetadata and assigns it to the BccEmailArchiveMetadata field.
func (o *AccountSettingsInformation) SetBccEmailArchiveMetadata(v SettingsMetadata) {
	o.BccEmailArchiveMetadata = &v
}

// GetBetaSwitchConfiguration returns the BetaSwitchConfiguration field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetBetaSwitchConfiguration() string {
	if o == nil || IsNil(o.BetaSwitchConfiguration) {
		var ret string
		return ret
	}
	return *o.BetaSwitchConfiguration
}

// GetBetaSwitchConfigurationOk returns a tuple with the BetaSwitchConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetBetaSwitchConfigurationOk() (*string, bool) {
	if o == nil || IsNil(o.BetaSwitchConfiguration) {
		return nil, false
	}
	return o.BetaSwitchConfiguration, true
}

// HasBetaSwitchConfiguration returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasBetaSwitchConfiguration() bool {
	if o != nil && !IsNil(o.BetaSwitchConfiguration) {
		return true
	}

	return false
}

// SetBetaSwitchConfiguration gets a reference to the given string and assigns it to the BetaSwitchConfiguration field.
func (o *AccountSettingsInformation) SetBetaSwitchConfiguration(v string) {
	o.BetaSwitchConfiguration = &v
}

// GetBetaSwitchConfigurationMetadata returns the BetaSwitchConfigurationMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetBetaSwitchConfigurationMetadata() SettingsMetadata {
	if o == nil || IsNil(o.BetaSwitchConfigurationMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.BetaSwitchConfigurationMetadata
}

// GetBetaSwitchConfigurationMetadataOk returns a tuple with the BetaSwitchConfigurationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetBetaSwitchConfigurationMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.BetaSwitchConfigurationMetadata) {
		return nil, false
	}
	return o.BetaSwitchConfigurationMetadata, true
}

// HasBetaSwitchConfigurationMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasBetaSwitchConfigurationMetadata() bool {
	if o != nil && !IsNil(o.BetaSwitchConfigurationMetadata) {
		return true
	}

	return false
}

// SetBetaSwitchConfigurationMetadata gets a reference to the given SettingsMetadata and assigns it to the BetaSwitchConfigurationMetadata field.
func (o *AccountSettingsInformation) SetBetaSwitchConfigurationMetadata(v SettingsMetadata) {
	o.BetaSwitchConfigurationMetadata = &v
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetBillingAddress() AddressInformation {
	if o == nil || IsNil(o.BillingAddress) {
		var ret AddressInformation
		return ret
	}
	return *o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetBillingAddressOk() (*AddressInformation, bool) {
	if o == nil || IsNil(o.BillingAddress) {
		return nil, false
	}
	return o.BillingAddress, true
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasBillingAddress() bool {
	if o != nil && !IsNil(o.BillingAddress) {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given AddressInformation and assigns it to the BillingAddress field.
func (o *AccountSettingsInformation) SetBillingAddress(v AddressInformation) {
	o.BillingAddress = &v
}

// GetBillingAddressMetadata returns the BillingAddressMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetBillingAddressMetadata() SettingsMetadata {
	if o == nil || IsNil(o.BillingAddressMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.BillingAddressMetadata
}

// GetBillingAddressMetadataOk returns a tuple with the BillingAddressMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetBillingAddressMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.BillingAddressMetadata) {
		return nil, false
	}
	return o.BillingAddressMetadata, true
}

// HasBillingAddressMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasBillingAddressMetadata() bool {
	if o != nil && !IsNil(o.BillingAddressMetadata) {
		return true
	}

	return false
}

// SetBillingAddressMetadata gets a reference to the given SettingsMetadata and assigns it to the BillingAddressMetadata field.
func (o *AccountSettingsInformation) SetBillingAddressMetadata(v SettingsMetadata) {
	o.BillingAddressMetadata = &v
}

// GetBulkSend returns the BulkSend field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetBulkSend() string {
	if o == nil || IsNil(o.BulkSend) {
		var ret string
		return ret
	}
	return *o.BulkSend
}

// GetBulkSendOk returns a tuple with the BulkSend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetBulkSendOk() (*string, bool) {
	if o == nil || IsNil(o.BulkSend) {
		return nil, false
	}
	return o.BulkSend, true
}

// HasBulkSend returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasBulkSend() bool {
	if o != nil && !IsNil(o.BulkSend) {
		return true
	}

	return false
}

// SetBulkSend gets a reference to the given string and assigns it to the BulkSend field.
func (o *AccountSettingsInformation) SetBulkSend(v string) {
	o.BulkSend = &v
}

// GetBulkSendActionResendLimit returns the BulkSendActionResendLimit field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetBulkSendActionResendLimit() string {
	if o == nil || IsNil(o.BulkSendActionResendLimit) {
		var ret string
		return ret
	}
	return *o.BulkSendActionResendLimit
}

// GetBulkSendActionResendLimitOk returns a tuple with the BulkSendActionResendLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetBulkSendActionResendLimitOk() (*string, bool) {
	if o == nil || IsNil(o.BulkSendActionResendLimit) {
		return nil, false
	}
	return o.BulkSendActionResendLimit, true
}

// HasBulkSendActionResendLimit returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasBulkSendActionResendLimit() bool {
	if o != nil && !IsNil(o.BulkSendActionResendLimit) {
		return true
	}

	return false
}

// SetBulkSendActionResendLimit gets a reference to the given string and assigns it to the BulkSendActionResendLimit field.
func (o *AccountSettingsInformation) SetBulkSendActionResendLimit(v string) {
	o.BulkSendActionResendLimit = &v
}

// GetBulkSendMaxCopiesInBatch returns the BulkSendMaxCopiesInBatch field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetBulkSendMaxCopiesInBatch() string {
	if o == nil || IsNil(o.BulkSendMaxCopiesInBatch) {
		var ret string
		return ret
	}
	return *o.BulkSendMaxCopiesInBatch
}

// GetBulkSendMaxCopiesInBatchOk returns a tuple with the BulkSendMaxCopiesInBatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetBulkSendMaxCopiesInBatchOk() (*string, bool) {
	if o == nil || IsNil(o.BulkSendMaxCopiesInBatch) {
		return nil, false
	}
	return o.BulkSendMaxCopiesInBatch, true
}

// HasBulkSendMaxCopiesInBatch returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasBulkSendMaxCopiesInBatch() bool {
	if o != nil && !IsNil(o.BulkSendMaxCopiesInBatch) {
		return true
	}

	return false
}

// SetBulkSendMaxCopiesInBatch gets a reference to the given string and assigns it to the BulkSendMaxCopiesInBatch field.
func (o *AccountSettingsInformation) SetBulkSendMaxCopiesInBatch(v string) {
	o.BulkSendMaxCopiesInBatch = &v
}

// GetBulkSendMaxUnprocessedEnvelopesCount returns the BulkSendMaxUnprocessedEnvelopesCount field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetBulkSendMaxUnprocessedEnvelopesCount() string {
	if o == nil || IsNil(o.BulkSendMaxUnprocessedEnvelopesCount) {
		var ret string
		return ret
	}
	return *o.BulkSendMaxUnprocessedEnvelopesCount
}

// GetBulkSendMaxUnprocessedEnvelopesCountOk returns a tuple with the BulkSendMaxUnprocessedEnvelopesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetBulkSendMaxUnprocessedEnvelopesCountOk() (*string, bool) {
	if o == nil || IsNil(o.BulkSendMaxUnprocessedEnvelopesCount) {
		return nil, false
	}
	return o.BulkSendMaxUnprocessedEnvelopesCount, true
}

// HasBulkSendMaxUnprocessedEnvelopesCount returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasBulkSendMaxUnprocessedEnvelopesCount() bool {
	if o != nil && !IsNil(o.BulkSendMaxUnprocessedEnvelopesCount) {
		return true
	}

	return false
}

// SetBulkSendMaxUnprocessedEnvelopesCount gets a reference to the given string and assigns it to the BulkSendMaxUnprocessedEnvelopesCount field.
func (o *AccountSettingsInformation) SetBulkSendMaxUnprocessedEnvelopesCount(v string) {
	o.BulkSendMaxUnprocessedEnvelopesCount = &v
}

// GetBulkSendMetadata returns the BulkSendMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetBulkSendMetadata() SettingsMetadata {
	if o == nil || IsNil(o.BulkSendMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.BulkSendMetadata
}

// GetBulkSendMetadataOk returns a tuple with the BulkSendMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetBulkSendMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.BulkSendMetadata) {
		return nil, false
	}
	return o.BulkSendMetadata, true
}

// HasBulkSendMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasBulkSendMetadata() bool {
	if o != nil && !IsNil(o.BulkSendMetadata) {
		return true
	}

	return false
}

// SetBulkSendMetadata gets a reference to the given SettingsMetadata and assigns it to the BulkSendMetadata field.
func (o *AccountSettingsInformation) SetBulkSendMetadata(v SettingsMetadata) {
	o.BulkSendMetadata = &v
}

// GetCanSelfBrandSend returns the CanSelfBrandSend field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCanSelfBrandSend() string {
	if o == nil || IsNil(o.CanSelfBrandSend) {
		var ret string
		return ret
	}
	return *o.CanSelfBrandSend
}

// GetCanSelfBrandSendOk returns a tuple with the CanSelfBrandSend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCanSelfBrandSendOk() (*string, bool) {
	if o == nil || IsNil(o.CanSelfBrandSend) {
		return nil, false
	}
	return o.CanSelfBrandSend, true
}

// HasCanSelfBrandSend returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCanSelfBrandSend() bool {
	if o != nil && !IsNil(o.CanSelfBrandSend) {
		return true
	}

	return false
}

// SetCanSelfBrandSend gets a reference to the given string and assigns it to the CanSelfBrandSend field.
func (o *AccountSettingsInformation) SetCanSelfBrandSend(v string) {
	o.CanSelfBrandSend = &v
}

// GetCanSelfBrandSendMetadata returns the CanSelfBrandSendMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCanSelfBrandSendMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanSelfBrandSendMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanSelfBrandSendMetadata
}

// GetCanSelfBrandSendMetadataOk returns a tuple with the CanSelfBrandSendMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCanSelfBrandSendMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanSelfBrandSendMetadata) {
		return nil, false
	}
	return o.CanSelfBrandSendMetadata, true
}

// HasCanSelfBrandSendMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCanSelfBrandSendMetadata() bool {
	if o != nil && !IsNil(o.CanSelfBrandSendMetadata) {
		return true
	}

	return false
}

// SetCanSelfBrandSendMetadata gets a reference to the given SettingsMetadata and assigns it to the CanSelfBrandSendMetadata field.
func (o *AccountSettingsInformation) SetCanSelfBrandSendMetadata(v SettingsMetadata) {
	o.CanSelfBrandSendMetadata = &v
}

// GetCanSelfBrandSign returns the CanSelfBrandSign field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCanSelfBrandSign() string {
	if o == nil || IsNil(o.CanSelfBrandSign) {
		var ret string
		return ret
	}
	return *o.CanSelfBrandSign
}

// GetCanSelfBrandSignOk returns a tuple with the CanSelfBrandSign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCanSelfBrandSignOk() (*string, bool) {
	if o == nil || IsNil(o.CanSelfBrandSign) {
		return nil, false
	}
	return o.CanSelfBrandSign, true
}

// HasCanSelfBrandSign returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCanSelfBrandSign() bool {
	if o != nil && !IsNil(o.CanSelfBrandSign) {
		return true
	}

	return false
}

// SetCanSelfBrandSign gets a reference to the given string and assigns it to the CanSelfBrandSign field.
func (o *AccountSettingsInformation) SetCanSelfBrandSign(v string) {
	o.CanSelfBrandSign = &v
}

// GetCanSelfBrandSignMetadata returns the CanSelfBrandSignMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCanSelfBrandSignMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanSelfBrandSignMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanSelfBrandSignMetadata
}

// GetCanSelfBrandSignMetadataOk returns a tuple with the CanSelfBrandSignMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCanSelfBrandSignMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanSelfBrandSignMetadata) {
		return nil, false
	}
	return o.CanSelfBrandSignMetadata, true
}

// HasCanSelfBrandSignMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCanSelfBrandSignMetadata() bool {
	if o != nil && !IsNil(o.CanSelfBrandSignMetadata) {
		return true
	}

	return false
}

// SetCanSelfBrandSignMetadata gets a reference to the given SettingsMetadata and assigns it to the CanSelfBrandSignMetadata field.
func (o *AccountSettingsInformation) SetCanSelfBrandSignMetadata(v SettingsMetadata) {
	o.CanSelfBrandSignMetadata = &v
}

// GetCanUseSalesforceOAuth returns the CanUseSalesforceOAuth field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCanUseSalesforceOAuth() string {
	if o == nil || IsNil(o.CanUseSalesforceOAuth) {
		var ret string
		return ret
	}
	return *o.CanUseSalesforceOAuth
}

// GetCanUseSalesforceOAuthOk returns a tuple with the CanUseSalesforceOAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCanUseSalesforceOAuthOk() (*string, bool) {
	if o == nil || IsNil(o.CanUseSalesforceOAuth) {
		return nil, false
	}
	return o.CanUseSalesforceOAuth, true
}

// HasCanUseSalesforceOAuth returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCanUseSalesforceOAuth() bool {
	if o != nil && !IsNil(o.CanUseSalesforceOAuth) {
		return true
	}

	return false
}

// SetCanUseSalesforceOAuth gets a reference to the given string and assigns it to the CanUseSalesforceOAuth field.
func (o *AccountSettingsInformation) SetCanUseSalesforceOAuth(v string) {
	o.CanUseSalesforceOAuth = &v
}

// GetCanUseSalesforceOAuthMetadata returns the CanUseSalesforceOAuthMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCanUseSalesforceOAuthMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanUseSalesforceOAuthMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanUseSalesforceOAuthMetadata
}

// GetCanUseSalesforceOAuthMetadataOk returns a tuple with the CanUseSalesforceOAuthMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCanUseSalesforceOAuthMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanUseSalesforceOAuthMetadata) {
		return nil, false
	}
	return o.CanUseSalesforceOAuthMetadata, true
}

// HasCanUseSalesforceOAuthMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCanUseSalesforceOAuthMetadata() bool {
	if o != nil && !IsNil(o.CanUseSalesforceOAuthMetadata) {
		return true
	}

	return false
}

// SetCanUseSalesforceOAuthMetadata gets a reference to the given SettingsMetadata and assigns it to the CanUseSalesforceOAuthMetadata field.
func (o *AccountSettingsInformation) SetCanUseSalesforceOAuthMetadata(v SettingsMetadata) {
	o.CanUseSalesforceOAuthMetadata = &v
}

// GetCaptureVoiceRecording returns the CaptureVoiceRecording field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCaptureVoiceRecording() string {
	if o == nil || IsNil(o.CaptureVoiceRecording) {
		var ret string
		return ret
	}
	return *o.CaptureVoiceRecording
}

// GetCaptureVoiceRecordingOk returns a tuple with the CaptureVoiceRecording field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCaptureVoiceRecordingOk() (*string, bool) {
	if o == nil || IsNil(o.CaptureVoiceRecording) {
		return nil, false
	}
	return o.CaptureVoiceRecording, true
}

// HasCaptureVoiceRecording returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCaptureVoiceRecording() bool {
	if o != nil && !IsNil(o.CaptureVoiceRecording) {
		return true
	}

	return false
}

// SetCaptureVoiceRecording gets a reference to the given string and assigns it to the CaptureVoiceRecording field.
func (o *AccountSettingsInformation) SetCaptureVoiceRecording(v string) {
	o.CaptureVoiceRecording = &v
}

// GetCaptureVoiceRecordingMetadata returns the CaptureVoiceRecordingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCaptureVoiceRecordingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CaptureVoiceRecordingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CaptureVoiceRecordingMetadata
}

// GetCaptureVoiceRecordingMetadataOk returns a tuple with the CaptureVoiceRecordingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCaptureVoiceRecordingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CaptureVoiceRecordingMetadata) {
		return nil, false
	}
	return o.CaptureVoiceRecordingMetadata, true
}

// HasCaptureVoiceRecordingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCaptureVoiceRecordingMetadata() bool {
	if o != nil && !IsNil(o.CaptureVoiceRecordingMetadata) {
		return true
	}

	return false
}

// SetCaptureVoiceRecordingMetadata gets a reference to the given SettingsMetadata and assigns it to the CaptureVoiceRecordingMetadata field.
func (o *AccountSettingsInformation) SetCaptureVoiceRecordingMetadata(v SettingsMetadata) {
	o.CaptureVoiceRecordingMetadata = &v
}

// GetCfr21SimplifiedSigningEnabled returns the Cfr21SimplifiedSigningEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCfr21SimplifiedSigningEnabled() string {
	if o == nil || IsNil(o.Cfr21SimplifiedSigningEnabled) {
		var ret string
		return ret
	}
	return *o.Cfr21SimplifiedSigningEnabled
}

// GetCfr21SimplifiedSigningEnabledOk returns a tuple with the Cfr21SimplifiedSigningEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCfr21SimplifiedSigningEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.Cfr21SimplifiedSigningEnabled) {
		return nil, false
	}
	return o.Cfr21SimplifiedSigningEnabled, true
}

// HasCfr21SimplifiedSigningEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCfr21SimplifiedSigningEnabled() bool {
	if o != nil && !IsNil(o.Cfr21SimplifiedSigningEnabled) {
		return true
	}

	return false
}

// SetCfr21SimplifiedSigningEnabled gets a reference to the given string and assigns it to the Cfr21SimplifiedSigningEnabled field.
func (o *AccountSettingsInformation) SetCfr21SimplifiedSigningEnabled(v string) {
	o.Cfr21SimplifiedSigningEnabled = &v
}

// GetCfr21SimplifiedSigningEnabledMetadata returns the Cfr21SimplifiedSigningEnabledMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCfr21SimplifiedSigningEnabledMetadata() SettingsMetadata {
	if o == nil || IsNil(o.Cfr21SimplifiedSigningEnabledMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.Cfr21SimplifiedSigningEnabledMetadata
}

// GetCfr21SimplifiedSigningEnabledMetadataOk returns a tuple with the Cfr21SimplifiedSigningEnabledMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCfr21SimplifiedSigningEnabledMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.Cfr21SimplifiedSigningEnabledMetadata) {
		return nil, false
	}
	return o.Cfr21SimplifiedSigningEnabledMetadata, true
}

// HasCfr21SimplifiedSigningEnabledMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCfr21SimplifiedSigningEnabledMetadata() bool {
	if o != nil && !IsNil(o.Cfr21SimplifiedSigningEnabledMetadata) {
		return true
	}

	return false
}

// SetCfr21SimplifiedSigningEnabledMetadata gets a reference to the given SettingsMetadata and assigns it to the Cfr21SimplifiedSigningEnabledMetadata field.
func (o *AccountSettingsInformation) SetCfr21SimplifiedSigningEnabledMetadata(v SettingsMetadata) {
	o.Cfr21SimplifiedSigningEnabledMetadata = &v
}

// GetCfrUseWideImage returns the CfrUseWideImage field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCfrUseWideImage() string {
	if o == nil || IsNil(o.CfrUseWideImage) {
		var ret string
		return ret
	}
	return *o.CfrUseWideImage
}

// GetCfrUseWideImageOk returns a tuple with the CfrUseWideImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCfrUseWideImageOk() (*string, bool) {
	if o == nil || IsNil(o.CfrUseWideImage) {
		return nil, false
	}
	return o.CfrUseWideImage, true
}

// HasCfrUseWideImage returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCfrUseWideImage() bool {
	if o != nil && !IsNil(o.CfrUseWideImage) {
		return true
	}

	return false
}

// SetCfrUseWideImage gets a reference to the given string and assigns it to the CfrUseWideImage field.
func (o *AccountSettingsInformation) SetCfrUseWideImage(v string) {
	o.CfrUseWideImage = &v
}

// GetCfrUseWideImageMetadata returns the CfrUseWideImageMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCfrUseWideImageMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CfrUseWideImageMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CfrUseWideImageMetadata
}

// GetCfrUseWideImageMetadataOk returns a tuple with the CfrUseWideImageMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCfrUseWideImageMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CfrUseWideImageMetadata) {
		return nil, false
	}
	return o.CfrUseWideImageMetadata, true
}

// HasCfrUseWideImageMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCfrUseWideImageMetadata() bool {
	if o != nil && !IsNil(o.CfrUseWideImageMetadata) {
		return true
	}

	return false
}

// SetCfrUseWideImageMetadata gets a reference to the given SettingsMetadata and assigns it to the CfrUseWideImageMetadata field.
func (o *AccountSettingsInformation) SetCfrUseWideImageMetadata(v SettingsMetadata) {
	o.CfrUseWideImageMetadata = &v
}

// GetCheckForMultipleAdminsOnAccount returns the CheckForMultipleAdminsOnAccount field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCheckForMultipleAdminsOnAccount() string {
	if o == nil || IsNil(o.CheckForMultipleAdminsOnAccount) {
		var ret string
		return ret
	}
	return *o.CheckForMultipleAdminsOnAccount
}

// GetCheckForMultipleAdminsOnAccountOk returns a tuple with the CheckForMultipleAdminsOnAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCheckForMultipleAdminsOnAccountOk() (*string, bool) {
	if o == nil || IsNil(o.CheckForMultipleAdminsOnAccount) {
		return nil, false
	}
	return o.CheckForMultipleAdminsOnAccount, true
}

// HasCheckForMultipleAdminsOnAccount returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCheckForMultipleAdminsOnAccount() bool {
	if o != nil && !IsNil(o.CheckForMultipleAdminsOnAccount) {
		return true
	}

	return false
}

// SetCheckForMultipleAdminsOnAccount gets a reference to the given string and assigns it to the CheckForMultipleAdminsOnAccount field.
func (o *AccountSettingsInformation) SetCheckForMultipleAdminsOnAccount(v string) {
	o.CheckForMultipleAdminsOnAccount = &v
}

// GetCheckForMultipleAdminsOnAccountMetadata returns the CheckForMultipleAdminsOnAccountMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCheckForMultipleAdminsOnAccountMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CheckForMultipleAdminsOnAccountMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CheckForMultipleAdminsOnAccountMetadata
}

// GetCheckForMultipleAdminsOnAccountMetadataOk returns a tuple with the CheckForMultipleAdminsOnAccountMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCheckForMultipleAdminsOnAccountMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CheckForMultipleAdminsOnAccountMetadata) {
		return nil, false
	}
	return o.CheckForMultipleAdminsOnAccountMetadata, true
}

// HasCheckForMultipleAdminsOnAccountMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCheckForMultipleAdminsOnAccountMetadata() bool {
	if o != nil && !IsNil(o.CheckForMultipleAdminsOnAccountMetadata) {
		return true
	}

	return false
}

// SetCheckForMultipleAdminsOnAccountMetadata gets a reference to the given SettingsMetadata and assigns it to the CheckForMultipleAdminsOnAccountMetadata field.
func (o *AccountSettingsInformation) SetCheckForMultipleAdminsOnAccountMetadata(v SettingsMetadata) {
	o.CheckForMultipleAdminsOnAccountMetadata = &v
}

// GetChromeSignatureEnabled returns the ChromeSignatureEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetChromeSignatureEnabled() string {
	if o == nil || IsNil(o.ChromeSignatureEnabled) {
		var ret string
		return ret
	}
	return *o.ChromeSignatureEnabled
}

// GetChromeSignatureEnabledOk returns a tuple with the ChromeSignatureEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetChromeSignatureEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.ChromeSignatureEnabled) {
		return nil, false
	}
	return o.ChromeSignatureEnabled, true
}

// HasChromeSignatureEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasChromeSignatureEnabled() bool {
	if o != nil && !IsNil(o.ChromeSignatureEnabled) {
		return true
	}

	return false
}

// SetChromeSignatureEnabled gets a reference to the given string and assigns it to the ChromeSignatureEnabled field.
func (o *AccountSettingsInformation) SetChromeSignatureEnabled(v string) {
	o.ChromeSignatureEnabled = &v
}

// GetChromeSignatureEnabledMetadata returns the ChromeSignatureEnabledMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetChromeSignatureEnabledMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ChromeSignatureEnabledMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ChromeSignatureEnabledMetadata
}

// GetChromeSignatureEnabledMetadataOk returns a tuple with the ChromeSignatureEnabledMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetChromeSignatureEnabledMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ChromeSignatureEnabledMetadata) {
		return nil, false
	}
	return o.ChromeSignatureEnabledMetadata, true
}

// HasChromeSignatureEnabledMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasChromeSignatureEnabledMetadata() bool {
	if o != nil && !IsNil(o.ChromeSignatureEnabledMetadata) {
		return true
	}

	return false
}

// SetChromeSignatureEnabledMetadata gets a reference to the given SettingsMetadata and assigns it to the ChromeSignatureEnabledMetadata field.
func (o *AccountSettingsInformation) SetChromeSignatureEnabledMetadata(v SettingsMetadata) {
	o.ChromeSignatureEnabledMetadata = &v
}

// GetCommentEmailShowMessageText returns the CommentEmailShowMessageText field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCommentEmailShowMessageText() string {
	if o == nil || IsNil(o.CommentEmailShowMessageText) {
		var ret string
		return ret
	}
	return *o.CommentEmailShowMessageText
}

// GetCommentEmailShowMessageTextOk returns a tuple with the CommentEmailShowMessageText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCommentEmailShowMessageTextOk() (*string, bool) {
	if o == nil || IsNil(o.CommentEmailShowMessageText) {
		return nil, false
	}
	return o.CommentEmailShowMessageText, true
}

// HasCommentEmailShowMessageText returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCommentEmailShowMessageText() bool {
	if o != nil && !IsNil(o.CommentEmailShowMessageText) {
		return true
	}

	return false
}

// SetCommentEmailShowMessageText gets a reference to the given string and assigns it to the CommentEmailShowMessageText field.
func (o *AccountSettingsInformation) SetCommentEmailShowMessageText(v string) {
	o.CommentEmailShowMessageText = &v
}

// GetCommentEmailShowMessageTextMetadata returns the CommentEmailShowMessageTextMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCommentEmailShowMessageTextMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CommentEmailShowMessageTextMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CommentEmailShowMessageTextMetadata
}

// GetCommentEmailShowMessageTextMetadataOk returns a tuple with the CommentEmailShowMessageTextMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCommentEmailShowMessageTextMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CommentEmailShowMessageTextMetadata) {
		return nil, false
	}
	return o.CommentEmailShowMessageTextMetadata, true
}

// HasCommentEmailShowMessageTextMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCommentEmailShowMessageTextMetadata() bool {
	if o != nil && !IsNil(o.CommentEmailShowMessageTextMetadata) {
		return true
	}

	return false
}

// SetCommentEmailShowMessageTextMetadata gets a reference to the given SettingsMetadata and assigns it to the CommentEmailShowMessageTextMetadata field.
func (o *AccountSettingsInformation) SetCommentEmailShowMessageTextMetadata(v SettingsMetadata) {
	o.CommentEmailShowMessageTextMetadata = &v
}

// GetCommentsAllowEnvelopeOverride returns the CommentsAllowEnvelopeOverride field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCommentsAllowEnvelopeOverride() string {
	if o == nil || IsNil(o.CommentsAllowEnvelopeOverride) {
		var ret string
		return ret
	}
	return *o.CommentsAllowEnvelopeOverride
}

// GetCommentsAllowEnvelopeOverrideOk returns a tuple with the CommentsAllowEnvelopeOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCommentsAllowEnvelopeOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.CommentsAllowEnvelopeOverride) {
		return nil, false
	}
	return o.CommentsAllowEnvelopeOverride, true
}

// HasCommentsAllowEnvelopeOverride returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCommentsAllowEnvelopeOverride() bool {
	if o != nil && !IsNil(o.CommentsAllowEnvelopeOverride) {
		return true
	}

	return false
}

// SetCommentsAllowEnvelopeOverride gets a reference to the given string and assigns it to the CommentsAllowEnvelopeOverride field.
func (o *AccountSettingsInformation) SetCommentsAllowEnvelopeOverride(v string) {
	o.CommentsAllowEnvelopeOverride = &v
}

// GetCommentsAllowEnvelopeOverrideMetadata returns the CommentsAllowEnvelopeOverrideMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetCommentsAllowEnvelopeOverrideMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CommentsAllowEnvelopeOverrideMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CommentsAllowEnvelopeOverrideMetadata
}

// GetCommentsAllowEnvelopeOverrideMetadataOk returns a tuple with the CommentsAllowEnvelopeOverrideMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetCommentsAllowEnvelopeOverrideMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CommentsAllowEnvelopeOverrideMetadata) {
		return nil, false
	}
	return o.CommentsAllowEnvelopeOverrideMetadata, true
}

// HasCommentsAllowEnvelopeOverrideMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasCommentsAllowEnvelopeOverrideMetadata() bool {
	if o != nil && !IsNil(o.CommentsAllowEnvelopeOverrideMetadata) {
		return true
	}

	return false
}

// SetCommentsAllowEnvelopeOverrideMetadata gets a reference to the given SettingsMetadata and assigns it to the CommentsAllowEnvelopeOverrideMetadata field.
func (o *AccountSettingsInformation) SetCommentsAllowEnvelopeOverrideMetadata(v SettingsMetadata) {
	o.CommentsAllowEnvelopeOverrideMetadata = &v
}

// GetConditionalFieldsEnabled returns the ConditionalFieldsEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetConditionalFieldsEnabled() string {
	if o == nil || IsNil(o.ConditionalFieldsEnabled) {
		var ret string
		return ret
	}
	return *o.ConditionalFieldsEnabled
}

// GetConditionalFieldsEnabledOk returns a tuple with the ConditionalFieldsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetConditionalFieldsEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.ConditionalFieldsEnabled) {
		return nil, false
	}
	return o.ConditionalFieldsEnabled, true
}

// HasConditionalFieldsEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasConditionalFieldsEnabled() bool {
	if o != nil && !IsNil(o.ConditionalFieldsEnabled) {
		return true
	}

	return false
}

// SetConditionalFieldsEnabled gets a reference to the given string and assigns it to the ConditionalFieldsEnabled field.
func (o *AccountSettingsInformation) SetConditionalFieldsEnabled(v string) {
	o.ConditionalFieldsEnabled = &v
}

// GetConditionalFieldsEnabledMetadata returns the ConditionalFieldsEnabledMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetConditionalFieldsEnabledMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ConditionalFieldsEnabledMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ConditionalFieldsEnabledMetadata
}

// GetConditionalFieldsEnabledMetadataOk returns a tuple with the ConditionalFieldsEnabledMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetConditionalFieldsEnabledMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ConditionalFieldsEnabledMetadata) {
		return nil, false
	}
	return o.ConditionalFieldsEnabledMetadata, true
}

// HasConditionalFieldsEnabledMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasConditionalFieldsEnabledMetadata() bool {
	if o != nil && !IsNil(o.ConditionalFieldsEnabledMetadata) {
		return true
	}

	return false
}

// SetConditionalFieldsEnabledMetadata gets a reference to the given SettingsMetadata and assigns it to the ConditionalFieldsEnabledMetadata field.
func (o *AccountSettingsInformation) SetConditionalFieldsEnabledMetadata(v SettingsMetadata) {
	o.ConditionalFieldsEnabledMetadata = &v
}

// GetConsumerDisclosureFrequency returns the ConsumerDisclosureFrequency field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetConsumerDisclosureFrequency() string {
	if o == nil || IsNil(o.ConsumerDisclosureFrequency) {
		var ret string
		return ret
	}
	return *o.ConsumerDisclosureFrequency
}

// GetConsumerDisclosureFrequencyOk returns a tuple with the ConsumerDisclosureFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetConsumerDisclosureFrequencyOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumerDisclosureFrequency) {
		return nil, false
	}
	return o.ConsumerDisclosureFrequency, true
}

// HasConsumerDisclosureFrequency returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasConsumerDisclosureFrequency() bool {
	if o != nil && !IsNil(o.ConsumerDisclosureFrequency) {
		return true
	}

	return false
}

// SetConsumerDisclosureFrequency gets a reference to the given string and assigns it to the ConsumerDisclosureFrequency field.
func (o *AccountSettingsInformation) SetConsumerDisclosureFrequency(v string) {
	o.ConsumerDisclosureFrequency = &v
}

// GetConsumerDisclosureFrequencyMetadata returns the ConsumerDisclosureFrequencyMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetConsumerDisclosureFrequencyMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ConsumerDisclosureFrequencyMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ConsumerDisclosureFrequencyMetadata
}

// GetConsumerDisclosureFrequencyMetadataOk returns a tuple with the ConsumerDisclosureFrequencyMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetConsumerDisclosureFrequencyMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ConsumerDisclosureFrequencyMetadata) {
		return nil, false
	}
	return o.ConsumerDisclosureFrequencyMetadata, true
}

// HasConsumerDisclosureFrequencyMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasConsumerDisclosureFrequencyMetadata() bool {
	if o != nil && !IsNil(o.ConsumerDisclosureFrequencyMetadata) {
		return true
	}

	return false
}

// SetConsumerDisclosureFrequencyMetadata gets a reference to the given SettingsMetadata and assigns it to the ConsumerDisclosureFrequencyMetadata field.
func (o *AccountSettingsInformation) SetConsumerDisclosureFrequencyMetadata(v SettingsMetadata) {
	o.ConsumerDisclosureFrequencyMetadata = &v
}

// GetConvertPdfFields returns the ConvertPdfFields field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetConvertPdfFields() string {
	if o == nil || IsNil(o.ConvertPdfFields) {
		var ret string
		return ret
	}
	return *o.ConvertPdfFields
}

// GetConvertPdfFieldsOk returns a tuple with the ConvertPdfFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetConvertPdfFieldsOk() (*string, bool) {
	if o == nil || IsNil(o.ConvertPdfFields) {
		return nil, false
	}
	return o.ConvertPdfFields, true
}

// HasConvertPdfFields returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasConvertPdfFields() bool {
	if o != nil && !IsNil(o.ConvertPdfFields) {
		return true
	}

	return false
}

// SetConvertPdfFields gets a reference to the given string and assigns it to the ConvertPdfFields field.
func (o *AccountSettingsInformation) SetConvertPdfFields(v string) {
	o.ConvertPdfFields = &v
}

// GetConvertPdfFieldsMetadata returns the ConvertPdfFieldsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetConvertPdfFieldsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ConvertPdfFieldsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ConvertPdfFieldsMetadata
}

// GetConvertPdfFieldsMetadataOk returns a tuple with the ConvertPdfFieldsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetConvertPdfFieldsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ConvertPdfFieldsMetadata) {
		return nil, false
	}
	return o.ConvertPdfFieldsMetadata, true
}

// HasConvertPdfFieldsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasConvertPdfFieldsMetadata() bool {
	if o != nil && !IsNil(o.ConvertPdfFieldsMetadata) {
		return true
	}

	return false
}

// SetConvertPdfFieldsMetadata gets a reference to the given SettingsMetadata and assigns it to the ConvertPdfFieldsMetadata field.
func (o *AccountSettingsInformation) SetConvertPdfFieldsMetadata(v SettingsMetadata) {
	o.ConvertPdfFieldsMetadata = &v
}

// GetDataPopulationScope returns the DataPopulationScope field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDataPopulationScope() string {
	if o == nil || IsNil(o.DataPopulationScope) {
		var ret string
		return ret
	}
	return *o.DataPopulationScope
}

// GetDataPopulationScopeOk returns a tuple with the DataPopulationScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDataPopulationScopeOk() (*string, bool) {
	if o == nil || IsNil(o.DataPopulationScope) {
		return nil, false
	}
	return o.DataPopulationScope, true
}

// HasDataPopulationScope returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDataPopulationScope() bool {
	if o != nil && !IsNil(o.DataPopulationScope) {
		return true
	}

	return false
}

// SetDataPopulationScope gets a reference to the given string and assigns it to the DataPopulationScope field.
func (o *AccountSettingsInformation) SetDataPopulationScope(v string) {
	o.DataPopulationScope = &v
}

// GetDataPopulationScopeMetadata returns the DataPopulationScopeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDataPopulationScopeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DataPopulationScopeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DataPopulationScopeMetadata
}

// GetDataPopulationScopeMetadataOk returns a tuple with the DataPopulationScopeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDataPopulationScopeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DataPopulationScopeMetadata) {
		return nil, false
	}
	return o.DataPopulationScopeMetadata, true
}

// HasDataPopulationScopeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDataPopulationScopeMetadata() bool {
	if o != nil && !IsNil(o.DataPopulationScopeMetadata) {
		return true
	}

	return false
}

// SetDataPopulationScopeMetadata gets a reference to the given SettingsMetadata and assigns it to the DataPopulationScopeMetadata field.
func (o *AccountSettingsInformation) SetDataPopulationScopeMetadata(v SettingsMetadata) {
	o.DataPopulationScopeMetadata = &v
}

// GetDefaultToAdvancedEnvelopesFilterForm returns the DefaultToAdvancedEnvelopesFilterForm field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDefaultToAdvancedEnvelopesFilterForm() string {
	if o == nil || IsNil(o.DefaultToAdvancedEnvelopesFilterForm) {
		var ret string
		return ret
	}
	return *o.DefaultToAdvancedEnvelopesFilterForm
}

// GetDefaultToAdvancedEnvelopesFilterFormOk returns a tuple with the DefaultToAdvancedEnvelopesFilterForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDefaultToAdvancedEnvelopesFilterFormOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultToAdvancedEnvelopesFilterForm) {
		return nil, false
	}
	return o.DefaultToAdvancedEnvelopesFilterForm, true
}

// HasDefaultToAdvancedEnvelopesFilterForm returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDefaultToAdvancedEnvelopesFilterForm() bool {
	if o != nil && !IsNil(o.DefaultToAdvancedEnvelopesFilterForm) {
		return true
	}

	return false
}

// SetDefaultToAdvancedEnvelopesFilterForm gets a reference to the given string and assigns it to the DefaultToAdvancedEnvelopesFilterForm field.
func (o *AccountSettingsInformation) SetDefaultToAdvancedEnvelopesFilterForm(v string) {
	o.DefaultToAdvancedEnvelopesFilterForm = &v
}

// GetDefaultToAdvancedEnvelopesFilterFormMetadata returns the DefaultToAdvancedEnvelopesFilterFormMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDefaultToAdvancedEnvelopesFilterFormMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DefaultToAdvancedEnvelopesFilterFormMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DefaultToAdvancedEnvelopesFilterFormMetadata
}

// GetDefaultToAdvancedEnvelopesFilterFormMetadataOk returns a tuple with the DefaultToAdvancedEnvelopesFilterFormMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDefaultToAdvancedEnvelopesFilterFormMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DefaultToAdvancedEnvelopesFilterFormMetadata) {
		return nil, false
	}
	return o.DefaultToAdvancedEnvelopesFilterFormMetadata, true
}

// HasDefaultToAdvancedEnvelopesFilterFormMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDefaultToAdvancedEnvelopesFilterFormMetadata() bool {
	if o != nil && !IsNil(o.DefaultToAdvancedEnvelopesFilterFormMetadata) {
		return true
	}

	return false
}

// SetDefaultToAdvancedEnvelopesFilterFormMetadata gets a reference to the given SettingsMetadata and assigns it to the DefaultToAdvancedEnvelopesFilterFormMetadata field.
func (o *AccountSettingsInformation) SetDefaultToAdvancedEnvelopesFilterFormMetadata(v SettingsMetadata) {
	o.DefaultToAdvancedEnvelopesFilterFormMetadata = &v
}

// GetDisableAutoTemplateMatching returns the DisableAutoTemplateMatching field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableAutoTemplateMatching() string {
	if o == nil || IsNil(o.DisableAutoTemplateMatching) {
		var ret string
		return ret
	}
	return *o.DisableAutoTemplateMatching
}

// GetDisableAutoTemplateMatchingOk returns a tuple with the DisableAutoTemplateMatching field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableAutoTemplateMatchingOk() (*string, bool) {
	if o == nil || IsNil(o.DisableAutoTemplateMatching) {
		return nil, false
	}
	return o.DisableAutoTemplateMatching, true
}

// HasDisableAutoTemplateMatching returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableAutoTemplateMatching() bool {
	if o != nil && !IsNil(o.DisableAutoTemplateMatching) {
		return true
	}

	return false
}

// SetDisableAutoTemplateMatching gets a reference to the given string and assigns it to the DisableAutoTemplateMatching field.
func (o *AccountSettingsInformation) SetDisableAutoTemplateMatching(v string) {
	o.DisableAutoTemplateMatching = &v
}

// GetDisableAutoTemplateMatchingMetadata returns the DisableAutoTemplateMatchingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableAutoTemplateMatchingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DisableAutoTemplateMatchingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DisableAutoTemplateMatchingMetadata
}

// GetDisableAutoTemplateMatchingMetadataOk returns a tuple with the DisableAutoTemplateMatchingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableAutoTemplateMatchingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DisableAutoTemplateMatchingMetadata) {
		return nil, false
	}
	return o.DisableAutoTemplateMatchingMetadata, true
}

// HasDisableAutoTemplateMatchingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableAutoTemplateMatchingMetadata() bool {
	if o != nil && !IsNil(o.DisableAutoTemplateMatchingMetadata) {
		return true
	}

	return false
}

// SetDisableAutoTemplateMatchingMetadata gets a reference to the given SettingsMetadata and assigns it to the DisableAutoTemplateMatchingMetadata field.
func (o *AccountSettingsInformation) SetDisableAutoTemplateMatchingMetadata(v SettingsMetadata) {
	o.DisableAutoTemplateMatchingMetadata = &v
}

// GetDisableMobileApp returns the DisableMobileApp field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableMobileApp() string {
	if o == nil || IsNil(o.DisableMobileApp) {
		var ret string
		return ret
	}
	return *o.DisableMobileApp
}

// GetDisableMobileAppOk returns a tuple with the DisableMobileApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableMobileAppOk() (*string, bool) {
	if o == nil || IsNil(o.DisableMobileApp) {
		return nil, false
	}
	return o.DisableMobileApp, true
}

// HasDisableMobileApp returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableMobileApp() bool {
	if o != nil && !IsNil(o.DisableMobileApp) {
		return true
	}

	return false
}

// SetDisableMobileApp gets a reference to the given string and assigns it to the DisableMobileApp field.
func (o *AccountSettingsInformation) SetDisableMobileApp(v string) {
	o.DisableMobileApp = &v
}

// GetDisableMobileAppMetadata returns the DisableMobileAppMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableMobileAppMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DisableMobileAppMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DisableMobileAppMetadata
}

// GetDisableMobileAppMetadataOk returns a tuple with the DisableMobileAppMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableMobileAppMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DisableMobileAppMetadata) {
		return nil, false
	}
	return o.DisableMobileAppMetadata, true
}

// HasDisableMobileAppMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableMobileAppMetadata() bool {
	if o != nil && !IsNil(o.DisableMobileAppMetadata) {
		return true
	}

	return false
}

// SetDisableMobileAppMetadata gets a reference to the given SettingsMetadata and assigns it to the DisableMobileAppMetadata field.
func (o *AccountSettingsInformation) SetDisableMobileAppMetadata(v SettingsMetadata) {
	o.DisableMobileAppMetadata = &v
}

// GetDisableMobilePushNotifications returns the DisableMobilePushNotifications field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableMobilePushNotifications() string {
	if o == nil || IsNil(o.DisableMobilePushNotifications) {
		var ret string
		return ret
	}
	return *o.DisableMobilePushNotifications
}

// GetDisableMobilePushNotificationsOk returns a tuple with the DisableMobilePushNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableMobilePushNotificationsOk() (*string, bool) {
	if o == nil || IsNil(o.DisableMobilePushNotifications) {
		return nil, false
	}
	return o.DisableMobilePushNotifications, true
}

// HasDisableMobilePushNotifications returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableMobilePushNotifications() bool {
	if o != nil && !IsNil(o.DisableMobilePushNotifications) {
		return true
	}

	return false
}

// SetDisableMobilePushNotifications gets a reference to the given string and assigns it to the DisableMobilePushNotifications field.
func (o *AccountSettingsInformation) SetDisableMobilePushNotifications(v string) {
	o.DisableMobilePushNotifications = &v
}

// GetDisableMobilePushNotificationsMetadata returns the DisableMobilePushNotificationsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableMobilePushNotificationsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DisableMobilePushNotificationsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DisableMobilePushNotificationsMetadata
}

// GetDisableMobilePushNotificationsMetadataOk returns a tuple with the DisableMobilePushNotificationsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableMobilePushNotificationsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DisableMobilePushNotificationsMetadata) {
		return nil, false
	}
	return o.DisableMobilePushNotificationsMetadata, true
}

// HasDisableMobilePushNotificationsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableMobilePushNotificationsMetadata() bool {
	if o != nil && !IsNil(o.DisableMobilePushNotificationsMetadata) {
		return true
	}

	return false
}

// SetDisableMobilePushNotificationsMetadata gets a reference to the given SettingsMetadata and assigns it to the DisableMobilePushNotificationsMetadata field.
func (o *AccountSettingsInformation) SetDisableMobilePushNotificationsMetadata(v SettingsMetadata) {
	o.DisableMobilePushNotificationsMetadata = &v
}

// GetDisableMobileSending returns the DisableMobileSending field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableMobileSending() string {
	if o == nil || IsNil(o.DisableMobileSending) {
		var ret string
		return ret
	}
	return *o.DisableMobileSending
}

// GetDisableMobileSendingOk returns a tuple with the DisableMobileSending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableMobileSendingOk() (*string, bool) {
	if o == nil || IsNil(o.DisableMobileSending) {
		return nil, false
	}
	return o.DisableMobileSending, true
}

// HasDisableMobileSending returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableMobileSending() bool {
	if o != nil && !IsNil(o.DisableMobileSending) {
		return true
	}

	return false
}

// SetDisableMobileSending gets a reference to the given string and assigns it to the DisableMobileSending field.
func (o *AccountSettingsInformation) SetDisableMobileSending(v string) {
	o.DisableMobileSending = &v
}

// GetDisableMobileSendingMetadata returns the DisableMobileSendingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableMobileSendingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DisableMobileSendingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DisableMobileSendingMetadata
}

// GetDisableMobileSendingMetadataOk returns a tuple with the DisableMobileSendingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableMobileSendingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DisableMobileSendingMetadata) {
		return nil, false
	}
	return o.DisableMobileSendingMetadata, true
}

// HasDisableMobileSendingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableMobileSendingMetadata() bool {
	if o != nil && !IsNil(o.DisableMobileSendingMetadata) {
		return true
	}

	return false
}

// SetDisableMobileSendingMetadata gets a reference to the given SettingsMetadata and assigns it to the DisableMobileSendingMetadata field.
func (o *AccountSettingsInformation) SetDisableMobileSendingMetadata(v SettingsMetadata) {
	o.DisableMobileSendingMetadata = &v
}

// GetDisableMultipleSessions returns the DisableMultipleSessions field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableMultipleSessions() string {
	if o == nil || IsNil(o.DisableMultipleSessions) {
		var ret string
		return ret
	}
	return *o.DisableMultipleSessions
}

// GetDisableMultipleSessionsOk returns a tuple with the DisableMultipleSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableMultipleSessionsOk() (*string, bool) {
	if o == nil || IsNil(o.DisableMultipleSessions) {
		return nil, false
	}
	return o.DisableMultipleSessions, true
}

// HasDisableMultipleSessions returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableMultipleSessions() bool {
	if o != nil && !IsNil(o.DisableMultipleSessions) {
		return true
	}

	return false
}

// SetDisableMultipleSessions gets a reference to the given string and assigns it to the DisableMultipleSessions field.
func (o *AccountSettingsInformation) SetDisableMultipleSessions(v string) {
	o.DisableMultipleSessions = &v
}

// GetDisableMultipleSessionsMetadata returns the DisableMultipleSessionsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableMultipleSessionsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DisableMultipleSessionsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DisableMultipleSessionsMetadata
}

// GetDisableMultipleSessionsMetadataOk returns a tuple with the DisableMultipleSessionsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableMultipleSessionsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DisableMultipleSessionsMetadata) {
		return nil, false
	}
	return o.DisableMultipleSessionsMetadata, true
}

// HasDisableMultipleSessionsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableMultipleSessionsMetadata() bool {
	if o != nil && !IsNil(o.DisableMultipleSessionsMetadata) {
		return true
	}

	return false
}

// SetDisableMultipleSessionsMetadata gets a reference to the given SettingsMetadata and assigns it to the DisableMultipleSessionsMetadata field.
func (o *AccountSettingsInformation) SetDisableMultipleSessionsMetadata(v SettingsMetadata) {
	o.DisableMultipleSessionsMetadata = &v
}

// GetDisablePurgeNotificationsForSenderMetadata returns the DisablePurgeNotificationsForSenderMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisablePurgeNotificationsForSenderMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DisablePurgeNotificationsForSenderMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DisablePurgeNotificationsForSenderMetadata
}

// GetDisablePurgeNotificationsForSenderMetadataOk returns a tuple with the DisablePurgeNotificationsForSenderMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisablePurgeNotificationsForSenderMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DisablePurgeNotificationsForSenderMetadata) {
		return nil, false
	}
	return o.DisablePurgeNotificationsForSenderMetadata, true
}

// HasDisablePurgeNotificationsForSenderMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisablePurgeNotificationsForSenderMetadata() bool {
	if o != nil && !IsNil(o.DisablePurgeNotificationsForSenderMetadata) {
		return true
	}

	return false
}

// SetDisablePurgeNotificationsForSenderMetadata gets a reference to the given SettingsMetadata and assigns it to the DisablePurgeNotificationsForSenderMetadata field.
func (o *AccountSettingsInformation) SetDisablePurgeNotificationsForSenderMetadata(v SettingsMetadata) {
	o.DisablePurgeNotificationsForSenderMetadata = &v
}

// GetDisableSignerCertView returns the DisableSignerCertView field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableSignerCertView() string {
	if o == nil || IsNil(o.DisableSignerCertView) {
		var ret string
		return ret
	}
	return *o.DisableSignerCertView
}

// GetDisableSignerCertViewOk returns a tuple with the DisableSignerCertView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableSignerCertViewOk() (*string, bool) {
	if o == nil || IsNil(o.DisableSignerCertView) {
		return nil, false
	}
	return o.DisableSignerCertView, true
}

// HasDisableSignerCertView returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableSignerCertView() bool {
	if o != nil && !IsNil(o.DisableSignerCertView) {
		return true
	}

	return false
}

// SetDisableSignerCertView gets a reference to the given string and assigns it to the DisableSignerCertView field.
func (o *AccountSettingsInformation) SetDisableSignerCertView(v string) {
	o.DisableSignerCertView = &v
}

// GetDisableSignerCertViewMetadata returns the DisableSignerCertViewMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableSignerCertViewMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DisableSignerCertViewMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DisableSignerCertViewMetadata
}

// GetDisableSignerCertViewMetadataOk returns a tuple with the DisableSignerCertViewMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableSignerCertViewMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DisableSignerCertViewMetadata) {
		return nil, false
	}
	return o.DisableSignerCertViewMetadata, true
}

// HasDisableSignerCertViewMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableSignerCertViewMetadata() bool {
	if o != nil && !IsNil(o.DisableSignerCertViewMetadata) {
		return true
	}

	return false
}

// SetDisableSignerCertViewMetadata gets a reference to the given SettingsMetadata and assigns it to the DisableSignerCertViewMetadata field.
func (o *AccountSettingsInformation) SetDisableSignerCertViewMetadata(v SettingsMetadata) {
	o.DisableSignerCertViewMetadata = &v
}

// GetDisableSignerHistoryView returns the DisableSignerHistoryView field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableSignerHistoryView() string {
	if o == nil || IsNil(o.DisableSignerHistoryView) {
		var ret string
		return ret
	}
	return *o.DisableSignerHistoryView
}

// GetDisableSignerHistoryViewOk returns a tuple with the DisableSignerHistoryView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableSignerHistoryViewOk() (*string, bool) {
	if o == nil || IsNil(o.DisableSignerHistoryView) {
		return nil, false
	}
	return o.DisableSignerHistoryView, true
}

// HasDisableSignerHistoryView returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableSignerHistoryView() bool {
	if o != nil && !IsNil(o.DisableSignerHistoryView) {
		return true
	}

	return false
}

// SetDisableSignerHistoryView gets a reference to the given string and assigns it to the DisableSignerHistoryView field.
func (o *AccountSettingsInformation) SetDisableSignerHistoryView(v string) {
	o.DisableSignerHistoryView = &v
}

// GetDisableSignerHistoryViewMetadata returns the DisableSignerHistoryViewMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableSignerHistoryViewMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DisableSignerHistoryViewMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DisableSignerHistoryViewMetadata
}

// GetDisableSignerHistoryViewMetadataOk returns a tuple with the DisableSignerHistoryViewMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableSignerHistoryViewMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DisableSignerHistoryViewMetadata) {
		return nil, false
	}
	return o.DisableSignerHistoryViewMetadata, true
}

// HasDisableSignerHistoryViewMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableSignerHistoryViewMetadata() bool {
	if o != nil && !IsNil(o.DisableSignerHistoryViewMetadata) {
		return true
	}

	return false
}

// SetDisableSignerHistoryViewMetadata gets a reference to the given SettingsMetadata and assigns it to the DisableSignerHistoryViewMetadata field.
func (o *AccountSettingsInformation) SetDisableSignerHistoryViewMetadata(v SettingsMetadata) {
	o.DisableSignerHistoryViewMetadata = &v
}

// GetDisableStyleSignature returns the DisableStyleSignature field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableStyleSignature() string {
	if o == nil || IsNil(o.DisableStyleSignature) {
		var ret string
		return ret
	}
	return *o.DisableStyleSignature
}

// GetDisableStyleSignatureOk returns a tuple with the DisableStyleSignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableStyleSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.DisableStyleSignature) {
		return nil, false
	}
	return o.DisableStyleSignature, true
}

// HasDisableStyleSignature returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableStyleSignature() bool {
	if o != nil && !IsNil(o.DisableStyleSignature) {
		return true
	}

	return false
}

// SetDisableStyleSignature gets a reference to the given string and assigns it to the DisableStyleSignature field.
func (o *AccountSettingsInformation) SetDisableStyleSignature(v string) {
	o.DisableStyleSignature = &v
}

// GetDisableStyleSignatureMetadata returns the DisableStyleSignatureMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableStyleSignatureMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DisableStyleSignatureMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DisableStyleSignatureMetadata
}

// GetDisableStyleSignatureMetadataOk returns a tuple with the DisableStyleSignatureMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableStyleSignatureMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DisableStyleSignatureMetadata) {
		return nil, false
	}
	return o.DisableStyleSignatureMetadata, true
}

// HasDisableStyleSignatureMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableStyleSignatureMetadata() bool {
	if o != nil && !IsNil(o.DisableStyleSignatureMetadata) {
		return true
	}

	return false
}

// SetDisableStyleSignatureMetadata gets a reference to the given SettingsMetadata and assigns it to the DisableStyleSignatureMetadata field.
func (o *AccountSettingsInformation) SetDisableStyleSignatureMetadata(v SettingsMetadata) {
	o.DisableStyleSignatureMetadata = &v
}

// GetDisableUploadSignature returns the DisableUploadSignature field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableUploadSignature() string {
	if o == nil || IsNil(o.DisableUploadSignature) {
		var ret string
		return ret
	}
	return *o.DisableUploadSignature
}

// GetDisableUploadSignatureOk returns a tuple with the DisableUploadSignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableUploadSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.DisableUploadSignature) {
		return nil, false
	}
	return o.DisableUploadSignature, true
}

// HasDisableUploadSignature returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableUploadSignature() bool {
	if o != nil && !IsNil(o.DisableUploadSignature) {
		return true
	}

	return false
}

// SetDisableUploadSignature gets a reference to the given string and assigns it to the DisableUploadSignature field.
func (o *AccountSettingsInformation) SetDisableUploadSignature(v string) {
	o.DisableUploadSignature = &v
}

// GetDisableUploadSignatureMetadata returns the DisableUploadSignatureMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableUploadSignatureMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DisableUploadSignatureMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DisableUploadSignatureMetadata
}

// GetDisableUploadSignatureMetadataOk returns a tuple with the DisableUploadSignatureMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableUploadSignatureMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DisableUploadSignatureMetadata) {
		return nil, false
	}
	return o.DisableUploadSignatureMetadata, true
}

// HasDisableUploadSignatureMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableUploadSignatureMetadata() bool {
	if o != nil && !IsNil(o.DisableUploadSignatureMetadata) {
		return true
	}

	return false
}

// SetDisableUploadSignatureMetadata gets a reference to the given SettingsMetadata and assigns it to the DisableUploadSignatureMetadata field.
func (o *AccountSettingsInformation) SetDisableUploadSignatureMetadata(v SettingsMetadata) {
	o.DisableUploadSignatureMetadata = &v
}

// GetDisableUserSharing returns the DisableUserSharing field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableUserSharing() string {
	if o == nil || IsNil(o.DisableUserSharing) {
		var ret string
		return ret
	}
	return *o.DisableUserSharing
}

// GetDisableUserSharingOk returns a tuple with the DisableUserSharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableUserSharingOk() (*string, bool) {
	if o == nil || IsNil(o.DisableUserSharing) {
		return nil, false
	}
	return o.DisableUserSharing, true
}

// HasDisableUserSharing returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableUserSharing() bool {
	if o != nil && !IsNil(o.DisableUserSharing) {
		return true
	}

	return false
}

// SetDisableUserSharing gets a reference to the given string and assigns it to the DisableUserSharing field.
func (o *AccountSettingsInformation) SetDisableUserSharing(v string) {
	o.DisableUserSharing = &v
}

// GetDisableUserSharingMetadata returns the DisableUserSharingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisableUserSharingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DisableUserSharingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DisableUserSharingMetadata
}

// GetDisableUserSharingMetadataOk returns a tuple with the DisableUserSharingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisableUserSharingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DisableUserSharingMetadata) {
		return nil, false
	}
	return o.DisableUserSharingMetadata, true
}

// HasDisableUserSharingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisableUserSharingMetadata() bool {
	if o != nil && !IsNil(o.DisableUserSharingMetadata) {
		return true
	}

	return false
}

// SetDisableUserSharingMetadata gets a reference to the given SettingsMetadata and assigns it to the DisableUserSharingMetadata field.
func (o *AccountSettingsInformation) SetDisableUserSharingMetadata(v SettingsMetadata) {
	o.DisableUserSharingMetadata = &v
}

// GetDisplayBetaSwitch returns the DisplayBetaSwitch field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisplayBetaSwitch() string {
	if o == nil || IsNil(o.DisplayBetaSwitch) {
		var ret string
		return ret
	}
	return *o.DisplayBetaSwitch
}

// GetDisplayBetaSwitchOk returns a tuple with the DisplayBetaSwitch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisplayBetaSwitchOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayBetaSwitch) {
		return nil, false
	}
	return o.DisplayBetaSwitch, true
}

// HasDisplayBetaSwitch returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisplayBetaSwitch() bool {
	if o != nil && !IsNil(o.DisplayBetaSwitch) {
		return true
	}

	return false
}

// SetDisplayBetaSwitch gets a reference to the given string and assigns it to the DisplayBetaSwitch field.
func (o *AccountSettingsInformation) SetDisplayBetaSwitch(v string) {
	o.DisplayBetaSwitch = &v
}

// GetDisplayBetaSwitchMetadata returns the DisplayBetaSwitchMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDisplayBetaSwitchMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DisplayBetaSwitchMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DisplayBetaSwitchMetadata
}

// GetDisplayBetaSwitchMetadataOk returns a tuple with the DisplayBetaSwitchMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDisplayBetaSwitchMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DisplayBetaSwitchMetadata) {
		return nil, false
	}
	return o.DisplayBetaSwitchMetadata, true
}

// HasDisplayBetaSwitchMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDisplayBetaSwitchMetadata() bool {
	if o != nil && !IsNil(o.DisplayBetaSwitchMetadata) {
		return true
	}

	return false
}

// SetDisplayBetaSwitchMetadata gets a reference to the given SettingsMetadata and assigns it to the DisplayBetaSwitchMetadata field.
func (o *AccountSettingsInformation) SetDisplayBetaSwitchMetadata(v SettingsMetadata) {
	o.DisplayBetaSwitchMetadata = &v
}

// GetDocumentConversionRestrictions returns the DocumentConversionRestrictions field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDocumentConversionRestrictions() string {
	if o == nil || IsNil(o.DocumentConversionRestrictions) {
		var ret string
		return ret
	}
	return *o.DocumentConversionRestrictions
}

// GetDocumentConversionRestrictionsOk returns a tuple with the DocumentConversionRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDocumentConversionRestrictionsOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentConversionRestrictions) {
		return nil, false
	}
	return o.DocumentConversionRestrictions, true
}

// HasDocumentConversionRestrictions returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDocumentConversionRestrictions() bool {
	if o != nil && !IsNil(o.DocumentConversionRestrictions) {
		return true
	}

	return false
}

// SetDocumentConversionRestrictions gets a reference to the given string and assigns it to the DocumentConversionRestrictions field.
func (o *AccountSettingsInformation) SetDocumentConversionRestrictions(v string) {
	o.DocumentConversionRestrictions = &v
}

// GetDocumentConversionRestrictionsMetadata returns the DocumentConversionRestrictionsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDocumentConversionRestrictionsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DocumentConversionRestrictionsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DocumentConversionRestrictionsMetadata
}

// GetDocumentConversionRestrictionsMetadataOk returns a tuple with the DocumentConversionRestrictionsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDocumentConversionRestrictionsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DocumentConversionRestrictionsMetadata) {
		return nil, false
	}
	return o.DocumentConversionRestrictionsMetadata, true
}

// HasDocumentConversionRestrictionsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDocumentConversionRestrictionsMetadata() bool {
	if o != nil && !IsNil(o.DocumentConversionRestrictionsMetadata) {
		return true
	}

	return false
}

// SetDocumentConversionRestrictionsMetadata gets a reference to the given SettingsMetadata and assigns it to the DocumentConversionRestrictionsMetadata field.
func (o *AccountSettingsInformation) SetDocumentConversionRestrictionsMetadata(v SettingsMetadata) {
	o.DocumentConversionRestrictionsMetadata = &v
}

// GetDocumentRetention returns the DocumentRetention field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDocumentRetention() string {
	if o == nil || IsNil(o.DocumentRetention) {
		var ret string
		return ret
	}
	return *o.DocumentRetention
}

// GetDocumentRetentionOk returns a tuple with the DocumentRetention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDocumentRetentionOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentRetention) {
		return nil, false
	}
	return o.DocumentRetention, true
}

// HasDocumentRetention returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDocumentRetention() bool {
	if o != nil && !IsNil(o.DocumentRetention) {
		return true
	}

	return false
}

// SetDocumentRetention gets a reference to the given string and assigns it to the DocumentRetention field.
func (o *AccountSettingsInformation) SetDocumentRetention(v string) {
	o.DocumentRetention = &v
}

// GetDocumentRetentionMetadata returns the DocumentRetentionMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDocumentRetentionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DocumentRetentionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DocumentRetentionMetadata
}

// GetDocumentRetentionMetadataOk returns a tuple with the DocumentRetentionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDocumentRetentionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DocumentRetentionMetadata) {
		return nil, false
	}
	return o.DocumentRetentionMetadata, true
}

// HasDocumentRetentionMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDocumentRetentionMetadata() bool {
	if o != nil && !IsNil(o.DocumentRetentionMetadata) {
		return true
	}

	return false
}

// SetDocumentRetentionMetadata gets a reference to the given SettingsMetadata and assigns it to the DocumentRetentionMetadata field.
func (o *AccountSettingsInformation) SetDocumentRetentionMetadata(v SettingsMetadata) {
	o.DocumentRetentionMetadata = &v
}

// GetDocumentRetentionPurgeTabs returns the DocumentRetentionPurgeTabs field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDocumentRetentionPurgeTabs() string {
	if o == nil || IsNil(o.DocumentRetentionPurgeTabs) {
		var ret string
		return ret
	}
	return *o.DocumentRetentionPurgeTabs
}

// GetDocumentRetentionPurgeTabsOk returns a tuple with the DocumentRetentionPurgeTabs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDocumentRetentionPurgeTabsOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentRetentionPurgeTabs) {
		return nil, false
	}
	return o.DocumentRetentionPurgeTabs, true
}

// HasDocumentRetentionPurgeTabs returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDocumentRetentionPurgeTabs() bool {
	if o != nil && !IsNil(o.DocumentRetentionPurgeTabs) {
		return true
	}

	return false
}

// SetDocumentRetentionPurgeTabs gets a reference to the given string and assigns it to the DocumentRetentionPurgeTabs field.
func (o *AccountSettingsInformation) SetDocumentRetentionPurgeTabs(v string) {
	o.DocumentRetentionPurgeTabs = &v
}

// GetDocumentVisibility returns the DocumentVisibility field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDocumentVisibility() string {
	if o == nil || IsNil(o.DocumentVisibility) {
		var ret string
		return ret
	}
	return *o.DocumentVisibility
}

// GetDocumentVisibilityOk returns a tuple with the DocumentVisibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDocumentVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentVisibility) {
		return nil, false
	}
	return o.DocumentVisibility, true
}

// HasDocumentVisibility returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDocumentVisibility() bool {
	if o != nil && !IsNil(o.DocumentVisibility) {
		return true
	}

	return false
}

// SetDocumentVisibility gets a reference to the given string and assigns it to the DocumentVisibility field.
func (o *AccountSettingsInformation) SetDocumentVisibility(v string) {
	o.DocumentVisibility = &v
}

// GetDocumentVisibilityMetadata returns the DocumentVisibilityMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDocumentVisibilityMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DocumentVisibilityMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DocumentVisibilityMetadata
}

// GetDocumentVisibilityMetadataOk returns a tuple with the DocumentVisibilityMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDocumentVisibilityMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DocumentVisibilityMetadata) {
		return nil, false
	}
	return o.DocumentVisibilityMetadata, true
}

// HasDocumentVisibilityMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDocumentVisibilityMetadata() bool {
	if o != nil && !IsNil(o.DocumentVisibilityMetadata) {
		return true
	}

	return false
}

// SetDocumentVisibilityMetadata gets a reference to the given SettingsMetadata and assigns it to the DocumentVisibilityMetadata field.
func (o *AccountSettingsInformation) SetDocumentVisibilityMetadata(v SettingsMetadata) {
	o.DocumentVisibilityMetadata = &v
}

// GetDraftEnvelopeRetention returns the DraftEnvelopeRetention field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDraftEnvelopeRetention() string {
	if o == nil || IsNil(o.DraftEnvelopeRetention) {
		var ret string
		return ret
	}
	return *o.DraftEnvelopeRetention
}

// GetDraftEnvelopeRetentionOk returns a tuple with the DraftEnvelopeRetention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDraftEnvelopeRetentionOk() (*string, bool) {
	if o == nil || IsNil(o.DraftEnvelopeRetention) {
		return nil, false
	}
	return o.DraftEnvelopeRetention, true
}

// HasDraftEnvelopeRetention returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDraftEnvelopeRetention() bool {
	if o != nil && !IsNil(o.DraftEnvelopeRetention) {
		return true
	}

	return false
}

// SetDraftEnvelopeRetention gets a reference to the given string and assigns it to the DraftEnvelopeRetention field.
func (o *AccountSettingsInformation) SetDraftEnvelopeRetention(v string) {
	o.DraftEnvelopeRetention = &v
}

// GetDraftEnvelopeRetentionMetadata returns the DraftEnvelopeRetentionMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDraftEnvelopeRetentionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DraftEnvelopeRetentionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DraftEnvelopeRetentionMetadata
}

// GetDraftEnvelopeRetentionMetadataOk returns a tuple with the DraftEnvelopeRetentionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDraftEnvelopeRetentionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DraftEnvelopeRetentionMetadata) {
		return nil, false
	}
	return o.DraftEnvelopeRetentionMetadata, true
}

// HasDraftEnvelopeRetentionMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDraftEnvelopeRetentionMetadata() bool {
	if o != nil && !IsNil(o.DraftEnvelopeRetentionMetadata) {
		return true
	}

	return false
}

// SetDraftEnvelopeRetentionMetadata gets a reference to the given SettingsMetadata and assigns it to the DraftEnvelopeRetentionMetadata field.
func (o *AccountSettingsInformation) SetDraftEnvelopeRetentionMetadata(v SettingsMetadata) {
	o.DraftEnvelopeRetentionMetadata = &v
}

// GetDssEnableProvisioningPenConfigurationRadminOption returns the DssEnableProvisioningPenConfigurationRadminOption field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDssEnableProvisioningPenConfigurationRadminOption() string {
	if o == nil || IsNil(o.DssEnableProvisioningPenConfigurationRadminOption) {
		var ret string
		return ret
	}
	return *o.DssEnableProvisioningPenConfigurationRadminOption
}

// GetDssEnableProvisioningPenConfigurationRadminOptionOk returns a tuple with the DssEnableProvisioningPenConfigurationRadminOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDssEnableProvisioningPenConfigurationRadminOptionOk() (*string, bool) {
	if o == nil || IsNil(o.DssEnableProvisioningPenConfigurationRadminOption) {
		return nil, false
	}
	return o.DssEnableProvisioningPenConfigurationRadminOption, true
}

// HasDssEnableProvisioningPenConfigurationRadminOption returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDssEnableProvisioningPenConfigurationRadminOption() bool {
	if o != nil && !IsNil(o.DssEnableProvisioningPenConfigurationRadminOption) {
		return true
	}

	return false
}

// SetDssEnableProvisioningPenConfigurationRadminOption gets a reference to the given string and assigns it to the DssEnableProvisioningPenConfigurationRadminOption field.
func (o *AccountSettingsInformation) SetDssEnableProvisioningPenConfigurationRadminOption(v string) {
	o.DssEnableProvisioningPenConfigurationRadminOption = &v
}

// GetDssSIGN28411EnableLeavePagePromptRadminOption returns the DssSIGN28411EnableLeavePagePromptRadminOption field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDssSIGN28411EnableLeavePagePromptRadminOption() string {
	if o == nil || IsNil(o.DssSIGN28411EnableLeavePagePromptRadminOption) {
		var ret string
		return ret
	}
	return *o.DssSIGN28411EnableLeavePagePromptRadminOption
}

// GetDssSIGN28411EnableLeavePagePromptRadminOptionOk returns a tuple with the DssSIGN28411EnableLeavePagePromptRadminOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDssSIGN28411EnableLeavePagePromptRadminOptionOk() (*string, bool) {
	if o == nil || IsNil(o.DssSIGN28411EnableLeavePagePromptRadminOption) {
		return nil, false
	}
	return o.DssSIGN28411EnableLeavePagePromptRadminOption, true
}

// HasDssSIGN28411EnableLeavePagePromptRadminOption returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDssSIGN28411EnableLeavePagePromptRadminOption() bool {
	if o != nil && !IsNil(o.DssSIGN28411EnableLeavePagePromptRadminOption) {
		return true
	}

	return false
}

// SetDssSIGN28411EnableLeavePagePromptRadminOption gets a reference to the given string and assigns it to the DssSIGN28411EnableLeavePagePromptRadminOption field.
func (o *AccountSettingsInformation) SetDssSIGN28411EnableLeavePagePromptRadminOption(v string) {
	o.DssSIGN28411EnableLeavePagePromptRadminOption = &v
}

// GetDssSIGN29182SlideUpBarRadminOption returns the DssSIGN29182SlideUpBarRadminOption field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetDssSIGN29182SlideUpBarRadminOption() string {
	if o == nil || IsNil(o.DssSIGN29182SlideUpBarRadminOption) {
		var ret string
		return ret
	}
	return *o.DssSIGN29182SlideUpBarRadminOption
}

// GetDssSIGN29182SlideUpBarRadminOptionOk returns a tuple with the DssSIGN29182SlideUpBarRadminOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetDssSIGN29182SlideUpBarRadminOptionOk() (*string, bool) {
	if o == nil || IsNil(o.DssSIGN29182SlideUpBarRadminOption) {
		return nil, false
	}
	return o.DssSIGN29182SlideUpBarRadminOption, true
}

// HasDssSIGN29182SlideUpBarRadminOption returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasDssSIGN29182SlideUpBarRadminOption() bool {
	if o != nil && !IsNil(o.DssSIGN29182SlideUpBarRadminOption) {
		return true
	}

	return false
}

// SetDssSIGN29182SlideUpBarRadminOption gets a reference to the given string and assigns it to the DssSIGN29182SlideUpBarRadminOption field.
func (o *AccountSettingsInformation) SetDssSIGN29182SlideUpBarRadminOption(v string) {
	o.DssSIGN29182SlideUpBarRadminOption = &v
}

// GetEmailTemplateVersion returns the EmailTemplateVersion field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEmailTemplateVersion() string {
	if o == nil || IsNil(o.EmailTemplateVersion) {
		var ret string
		return ret
	}
	return *o.EmailTemplateVersion
}

// GetEmailTemplateVersionOk returns a tuple with the EmailTemplateVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEmailTemplateVersionOk() (*string, bool) {
	if o == nil || IsNil(o.EmailTemplateVersion) {
		return nil, false
	}
	return o.EmailTemplateVersion, true
}

// HasEmailTemplateVersion returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEmailTemplateVersion() bool {
	if o != nil && !IsNil(o.EmailTemplateVersion) {
		return true
	}

	return false
}

// SetEmailTemplateVersion gets a reference to the given string and assigns it to the EmailTemplateVersion field.
func (o *AccountSettingsInformation) SetEmailTemplateVersion(v string) {
	o.EmailTemplateVersion = &v
}

// GetEmailTemplateVersionMetadata returns the EmailTemplateVersionMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEmailTemplateVersionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EmailTemplateVersionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EmailTemplateVersionMetadata
}

// GetEmailTemplateVersionMetadataOk returns a tuple with the EmailTemplateVersionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEmailTemplateVersionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EmailTemplateVersionMetadata) {
		return nil, false
	}
	return o.EmailTemplateVersionMetadata, true
}

// HasEmailTemplateVersionMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEmailTemplateVersionMetadata() bool {
	if o != nil && !IsNil(o.EmailTemplateVersionMetadata) {
		return true
	}

	return false
}

// SetEmailTemplateVersionMetadata gets a reference to the given SettingsMetadata and assigns it to the EmailTemplateVersionMetadata field.
func (o *AccountSettingsInformation) SetEmailTemplateVersionMetadata(v SettingsMetadata) {
	o.EmailTemplateVersionMetadata = &v
}

// GetEnableAccessCodeGenerator returns the EnableAccessCodeGenerator field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAccessCodeGenerator() string {
	if o == nil || IsNil(o.EnableAccessCodeGenerator) {
		var ret string
		return ret
	}
	return *o.EnableAccessCodeGenerator
}

// GetEnableAccessCodeGeneratorOk returns a tuple with the EnableAccessCodeGenerator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAccessCodeGeneratorOk() (*string, bool) {
	if o == nil || IsNil(o.EnableAccessCodeGenerator) {
		return nil, false
	}
	return o.EnableAccessCodeGenerator, true
}

// HasEnableAccessCodeGenerator returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAccessCodeGenerator() bool {
	if o != nil && !IsNil(o.EnableAccessCodeGenerator) {
		return true
	}

	return false
}

// SetEnableAccessCodeGenerator gets a reference to the given string and assigns it to the EnableAccessCodeGenerator field.
func (o *AccountSettingsInformation) SetEnableAccessCodeGenerator(v string) {
	o.EnableAccessCodeGenerator = &v
}

// GetEnableAccessCodeGeneratorMetadata returns the EnableAccessCodeGeneratorMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAccessCodeGeneratorMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableAccessCodeGeneratorMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableAccessCodeGeneratorMetadata
}

// GetEnableAccessCodeGeneratorMetadataOk returns a tuple with the EnableAccessCodeGeneratorMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAccessCodeGeneratorMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableAccessCodeGeneratorMetadata) {
		return nil, false
	}
	return o.EnableAccessCodeGeneratorMetadata, true
}

// HasEnableAccessCodeGeneratorMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAccessCodeGeneratorMetadata() bool {
	if o != nil && !IsNil(o.EnableAccessCodeGeneratorMetadata) {
		return true
	}

	return false
}

// SetEnableAccessCodeGeneratorMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableAccessCodeGeneratorMetadata field.
func (o *AccountSettingsInformation) SetEnableAccessCodeGeneratorMetadata(v SettingsMetadata) {
	o.EnableAccessCodeGeneratorMetadata = &v
}

// GetEnableAccountWideSearch returns the EnableAccountWideSearch field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAccountWideSearch() string {
	if o == nil || IsNil(o.EnableAccountWideSearch) {
		var ret string
		return ret
	}
	return *o.EnableAccountWideSearch
}

// GetEnableAccountWideSearchOk returns a tuple with the EnableAccountWideSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAccountWideSearchOk() (*string, bool) {
	if o == nil || IsNil(o.EnableAccountWideSearch) {
		return nil, false
	}
	return o.EnableAccountWideSearch, true
}

// HasEnableAccountWideSearch returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAccountWideSearch() bool {
	if o != nil && !IsNil(o.EnableAccountWideSearch) {
		return true
	}

	return false
}

// SetEnableAccountWideSearch gets a reference to the given string and assigns it to the EnableAccountWideSearch field.
func (o *AccountSettingsInformation) SetEnableAccountWideSearch(v string) {
	o.EnableAccountWideSearch = &v
}

// GetEnableAccountWideSearchMetadata returns the EnableAccountWideSearchMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAccountWideSearchMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableAccountWideSearchMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableAccountWideSearchMetadata
}

// GetEnableAccountWideSearchMetadataOk returns a tuple with the EnableAccountWideSearchMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAccountWideSearchMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableAccountWideSearchMetadata) {
		return nil, false
	}
	return o.EnableAccountWideSearchMetadata, true
}

// HasEnableAccountWideSearchMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAccountWideSearchMetadata() bool {
	if o != nil && !IsNil(o.EnableAccountWideSearchMetadata) {
		return true
	}

	return false
}

// SetEnableAccountWideSearchMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableAccountWideSearchMetadata field.
func (o *AccountSettingsInformation) SetEnableAccountWideSearchMetadata(v SettingsMetadata) {
	o.EnableAccountWideSearchMetadata = &v
}

// GetEnableAdmHealthcare returns the EnableAdmHealthcare field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAdmHealthcare() string {
	if o == nil || IsNil(o.EnableAdmHealthcare) {
		var ret string
		return ret
	}
	return *o.EnableAdmHealthcare
}

// GetEnableAdmHealthcareOk returns a tuple with the EnableAdmHealthcare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAdmHealthcareOk() (*string, bool) {
	if o == nil || IsNil(o.EnableAdmHealthcare) {
		return nil, false
	}
	return o.EnableAdmHealthcare, true
}

// HasEnableAdmHealthcare returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAdmHealthcare() bool {
	if o != nil && !IsNil(o.EnableAdmHealthcare) {
		return true
	}

	return false
}

// SetEnableAdmHealthcare gets a reference to the given string and assigns it to the EnableAdmHealthcare field.
func (o *AccountSettingsInformation) SetEnableAdmHealthcare(v string) {
	o.EnableAdmHealthcare = &v
}

// GetEnableAdmHealthcareMetadata returns the EnableAdmHealthcareMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAdmHealthcareMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableAdmHealthcareMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableAdmHealthcareMetadata
}

// GetEnableAdmHealthcareMetadataOk returns a tuple with the EnableAdmHealthcareMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAdmHealthcareMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableAdmHealthcareMetadata) {
		return nil, false
	}
	return o.EnableAdmHealthcareMetadata, true
}

// HasEnableAdmHealthcareMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAdmHealthcareMetadata() bool {
	if o != nil && !IsNil(o.EnableAdmHealthcareMetadata) {
		return true
	}

	return false
}

// SetEnableAdmHealthcareMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableAdmHealthcareMetadata field.
func (o *AccountSettingsInformation) SetEnableAdmHealthcareMetadata(v SettingsMetadata) {
	o.EnableAdmHealthcareMetadata = &v
}

// GetEnableAdvancedEnvelopesSearch returns the EnableAdvancedEnvelopesSearch field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAdvancedEnvelopesSearch() string {
	if o == nil || IsNil(o.EnableAdvancedEnvelopesSearch) {
		var ret string
		return ret
	}
	return *o.EnableAdvancedEnvelopesSearch
}

// GetEnableAdvancedEnvelopesSearchOk returns a tuple with the EnableAdvancedEnvelopesSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAdvancedEnvelopesSearchOk() (*string, bool) {
	if o == nil || IsNil(o.EnableAdvancedEnvelopesSearch) {
		return nil, false
	}
	return o.EnableAdvancedEnvelopesSearch, true
}

// HasEnableAdvancedEnvelopesSearch returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAdvancedEnvelopesSearch() bool {
	if o != nil && !IsNil(o.EnableAdvancedEnvelopesSearch) {
		return true
	}

	return false
}

// SetEnableAdvancedEnvelopesSearch gets a reference to the given string and assigns it to the EnableAdvancedEnvelopesSearch field.
func (o *AccountSettingsInformation) SetEnableAdvancedEnvelopesSearch(v string) {
	o.EnableAdvancedEnvelopesSearch = &v
}

// GetEnableAdvancedEnvelopesSearchMetadata returns the EnableAdvancedEnvelopesSearchMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAdvancedEnvelopesSearchMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableAdvancedEnvelopesSearchMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableAdvancedEnvelopesSearchMetadata
}

// GetEnableAdvancedEnvelopesSearchMetadataOk returns a tuple with the EnableAdvancedEnvelopesSearchMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAdvancedEnvelopesSearchMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableAdvancedEnvelopesSearchMetadata) {
		return nil, false
	}
	return o.EnableAdvancedEnvelopesSearchMetadata, true
}

// HasEnableAdvancedEnvelopesSearchMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAdvancedEnvelopesSearchMetadata() bool {
	if o != nil && !IsNil(o.EnableAdvancedEnvelopesSearchMetadata) {
		return true
	}

	return false
}

// SetEnableAdvancedEnvelopesSearchMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableAdvancedEnvelopesSearchMetadata field.
func (o *AccountSettingsInformation) SetEnableAdvancedEnvelopesSearchMetadata(v SettingsMetadata) {
	o.EnableAdvancedEnvelopesSearchMetadata = &v
}

// GetEnableAdvancedPayments returns the EnableAdvancedPayments field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAdvancedPayments() string {
	if o == nil || IsNil(o.EnableAdvancedPayments) {
		var ret string
		return ret
	}
	return *o.EnableAdvancedPayments
}

// GetEnableAdvancedPaymentsOk returns a tuple with the EnableAdvancedPayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAdvancedPaymentsOk() (*string, bool) {
	if o == nil || IsNil(o.EnableAdvancedPayments) {
		return nil, false
	}
	return o.EnableAdvancedPayments, true
}

// HasEnableAdvancedPayments returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAdvancedPayments() bool {
	if o != nil && !IsNil(o.EnableAdvancedPayments) {
		return true
	}

	return false
}

// SetEnableAdvancedPayments gets a reference to the given string and assigns it to the EnableAdvancedPayments field.
func (o *AccountSettingsInformation) SetEnableAdvancedPayments(v string) {
	o.EnableAdvancedPayments = &v
}

// GetEnableAdvancedPaymentsMetadata returns the EnableAdvancedPaymentsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAdvancedPaymentsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableAdvancedPaymentsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableAdvancedPaymentsMetadata
}

// GetEnableAdvancedPaymentsMetadataOk returns a tuple with the EnableAdvancedPaymentsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAdvancedPaymentsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableAdvancedPaymentsMetadata) {
		return nil, false
	}
	return o.EnableAdvancedPaymentsMetadata, true
}

// HasEnableAdvancedPaymentsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAdvancedPaymentsMetadata() bool {
	if o != nil && !IsNil(o.EnableAdvancedPaymentsMetadata) {
		return true
	}

	return false
}

// SetEnableAdvancedPaymentsMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableAdvancedPaymentsMetadata field.
func (o *AccountSettingsInformation) SetEnableAdvancedPaymentsMetadata(v SettingsMetadata) {
	o.EnableAdvancedPaymentsMetadata = &v
}

// GetEnableAdvancedPowerForms returns the EnableAdvancedPowerForms field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAdvancedPowerForms() string {
	if o == nil || IsNil(o.EnableAdvancedPowerForms) {
		var ret string
		return ret
	}
	return *o.EnableAdvancedPowerForms
}

// GetEnableAdvancedPowerFormsOk returns a tuple with the EnableAdvancedPowerForms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAdvancedPowerFormsOk() (*string, bool) {
	if o == nil || IsNil(o.EnableAdvancedPowerForms) {
		return nil, false
	}
	return o.EnableAdvancedPowerForms, true
}

// HasEnableAdvancedPowerForms returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAdvancedPowerForms() bool {
	if o != nil && !IsNil(o.EnableAdvancedPowerForms) {
		return true
	}

	return false
}

// SetEnableAdvancedPowerForms gets a reference to the given string and assigns it to the EnableAdvancedPowerForms field.
func (o *AccountSettingsInformation) SetEnableAdvancedPowerForms(v string) {
	o.EnableAdvancedPowerForms = &v
}

// GetEnableAdvancedPowerFormsMetadata returns the EnableAdvancedPowerFormsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAdvancedPowerFormsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableAdvancedPowerFormsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableAdvancedPowerFormsMetadata
}

// GetEnableAdvancedPowerFormsMetadataOk returns a tuple with the EnableAdvancedPowerFormsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAdvancedPowerFormsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableAdvancedPowerFormsMetadata) {
		return nil, false
	}
	return o.EnableAdvancedPowerFormsMetadata, true
}

// HasEnableAdvancedPowerFormsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAdvancedPowerFormsMetadata() bool {
	if o != nil && !IsNil(o.EnableAdvancedPowerFormsMetadata) {
		return true
	}

	return false
}

// SetEnableAdvancedPowerFormsMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableAdvancedPowerFormsMetadata field.
func (o *AccountSettingsInformation) SetEnableAdvancedPowerFormsMetadata(v SettingsMetadata) {
	o.EnableAdvancedPowerFormsMetadata = &v
}

// GetEnableAgreementActionsForCLM returns the EnableAgreementActionsForCLM field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAgreementActionsForCLM() string {
	if o == nil || IsNil(o.EnableAgreementActionsForCLM) {
		var ret string
		return ret
	}
	return *o.EnableAgreementActionsForCLM
}

// GetEnableAgreementActionsForCLMOk returns a tuple with the EnableAgreementActionsForCLM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAgreementActionsForCLMOk() (*string, bool) {
	if o == nil || IsNil(o.EnableAgreementActionsForCLM) {
		return nil, false
	}
	return o.EnableAgreementActionsForCLM, true
}

// HasEnableAgreementActionsForCLM returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAgreementActionsForCLM() bool {
	if o != nil && !IsNil(o.EnableAgreementActionsForCLM) {
		return true
	}

	return false
}

// SetEnableAgreementActionsForCLM gets a reference to the given string and assigns it to the EnableAgreementActionsForCLM field.
func (o *AccountSettingsInformation) SetEnableAgreementActionsForCLM(v string) {
	o.EnableAgreementActionsForCLM = &v
}

// GetEnableAgreementActionsForCLMMetadata returns the EnableAgreementActionsForCLMMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAgreementActionsForCLMMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableAgreementActionsForCLMMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableAgreementActionsForCLMMetadata
}

// GetEnableAgreementActionsForCLMMetadataOk returns a tuple with the EnableAgreementActionsForCLMMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAgreementActionsForCLMMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableAgreementActionsForCLMMetadata) {
		return nil, false
	}
	return o.EnableAgreementActionsForCLMMetadata, true
}

// HasEnableAgreementActionsForCLMMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAgreementActionsForCLMMetadata() bool {
	if o != nil && !IsNil(o.EnableAgreementActionsForCLMMetadata) {
		return true
	}

	return false
}

// SetEnableAgreementActionsForCLMMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableAgreementActionsForCLMMetadata field.
func (o *AccountSettingsInformation) SetEnableAgreementActionsForCLMMetadata(v SettingsMetadata) {
	o.EnableAgreementActionsForCLMMetadata = &v
}

// GetEnableAgreementActionsForESign returns the EnableAgreementActionsForESign field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAgreementActionsForESign() string {
	if o == nil || IsNil(o.EnableAgreementActionsForESign) {
		var ret string
		return ret
	}
	return *o.EnableAgreementActionsForESign
}

// GetEnableAgreementActionsForESignOk returns a tuple with the EnableAgreementActionsForESign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAgreementActionsForESignOk() (*string, bool) {
	if o == nil || IsNil(o.EnableAgreementActionsForESign) {
		return nil, false
	}
	return o.EnableAgreementActionsForESign, true
}

// HasEnableAgreementActionsForESign returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAgreementActionsForESign() bool {
	if o != nil && !IsNil(o.EnableAgreementActionsForESign) {
		return true
	}

	return false
}

// SetEnableAgreementActionsForESign gets a reference to the given string and assigns it to the EnableAgreementActionsForESign field.
func (o *AccountSettingsInformation) SetEnableAgreementActionsForESign(v string) {
	o.EnableAgreementActionsForESign = &v
}

// GetEnableAgreementActionsForESignMetadata returns the EnableAgreementActionsForESignMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAgreementActionsForESignMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableAgreementActionsForESignMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableAgreementActionsForESignMetadata
}

// GetEnableAgreementActionsForESignMetadataOk returns a tuple with the EnableAgreementActionsForESignMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAgreementActionsForESignMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableAgreementActionsForESignMetadata) {
		return nil, false
	}
	return o.EnableAgreementActionsForESignMetadata, true
}

// HasEnableAgreementActionsForESignMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAgreementActionsForESignMetadata() bool {
	if o != nil && !IsNil(o.EnableAgreementActionsForESignMetadata) {
		return true
	}

	return false
}

// SetEnableAgreementActionsForESignMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableAgreementActionsForESignMetadata field.
func (o *AccountSettingsInformation) SetEnableAgreementActionsForESignMetadata(v SettingsMetadata) {
	o.EnableAgreementActionsForESignMetadata = &v
}

// GetEnableAutoNav returns the EnableAutoNav field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAutoNav() string {
	if o == nil || IsNil(o.EnableAutoNav) {
		var ret string
		return ret
	}
	return *o.EnableAutoNav
}

// GetEnableAutoNavOk returns a tuple with the EnableAutoNav field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAutoNavOk() (*string, bool) {
	if o == nil || IsNil(o.EnableAutoNav) {
		return nil, false
	}
	return o.EnableAutoNav, true
}

// HasEnableAutoNav returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAutoNav() bool {
	if o != nil && !IsNil(o.EnableAutoNav) {
		return true
	}

	return false
}

// SetEnableAutoNav gets a reference to the given string and assigns it to the EnableAutoNav field.
func (o *AccountSettingsInformation) SetEnableAutoNav(v string) {
	o.EnableAutoNav = &v
}

// GetEnableAutoNavMetadata returns the EnableAutoNavMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableAutoNavMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableAutoNavMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableAutoNavMetadata
}

// GetEnableAutoNavMetadataOk returns a tuple with the EnableAutoNavMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableAutoNavMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableAutoNavMetadata) {
		return nil, false
	}
	return o.EnableAutoNavMetadata, true
}

// HasEnableAutoNavMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableAutoNavMetadata() bool {
	if o != nil && !IsNil(o.EnableAutoNavMetadata) {
		return true
	}

	return false
}

// SetEnableAutoNavMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableAutoNavMetadata field.
func (o *AccountSettingsInformation) SetEnableAutoNavMetadata(v SettingsMetadata) {
	o.EnableAutoNavMetadata = &v
}

// GetEnableBccDummyLink returns the EnableBccDummyLink field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableBccDummyLink() string {
	if o == nil || IsNil(o.EnableBccDummyLink) {
		var ret string
		return ret
	}
	return *o.EnableBccDummyLink
}

// GetEnableBccDummyLinkOk returns a tuple with the EnableBccDummyLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableBccDummyLinkOk() (*string, bool) {
	if o == nil || IsNil(o.EnableBccDummyLink) {
		return nil, false
	}
	return o.EnableBccDummyLink, true
}

// HasEnableBccDummyLink returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableBccDummyLink() bool {
	if o != nil && !IsNil(o.EnableBccDummyLink) {
		return true
	}

	return false
}

// SetEnableBccDummyLink gets a reference to the given string and assigns it to the EnableBccDummyLink field.
func (o *AccountSettingsInformation) SetEnableBccDummyLink(v string) {
	o.EnableBccDummyLink = &v
}

// GetEnableBccDummyLinkMetadata returns the EnableBccDummyLinkMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableBccDummyLinkMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableBccDummyLinkMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableBccDummyLinkMetadata
}

// GetEnableBccDummyLinkMetadataOk returns a tuple with the EnableBccDummyLinkMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableBccDummyLinkMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableBccDummyLinkMetadata) {
		return nil, false
	}
	return o.EnableBccDummyLinkMetadata, true
}

// HasEnableBccDummyLinkMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableBccDummyLinkMetadata() bool {
	if o != nil && !IsNil(o.EnableBccDummyLinkMetadata) {
		return true
	}

	return false
}

// SetEnableBccDummyLinkMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableBccDummyLinkMetadata field.
func (o *AccountSettingsInformation) SetEnableBccDummyLinkMetadata(v SettingsMetadata) {
	o.EnableBccDummyLinkMetadata = &v
}

// GetEnableCalculatedFields returns the EnableCalculatedFields field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableCalculatedFields() string {
	if o == nil || IsNil(o.EnableCalculatedFields) {
		var ret string
		return ret
	}
	return *o.EnableCalculatedFields
}

// GetEnableCalculatedFieldsOk returns a tuple with the EnableCalculatedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableCalculatedFieldsOk() (*string, bool) {
	if o == nil || IsNil(o.EnableCalculatedFields) {
		return nil, false
	}
	return o.EnableCalculatedFields, true
}

// HasEnableCalculatedFields returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableCalculatedFields() bool {
	if o != nil && !IsNil(o.EnableCalculatedFields) {
		return true
	}

	return false
}

// SetEnableCalculatedFields gets a reference to the given string and assigns it to the EnableCalculatedFields field.
func (o *AccountSettingsInformation) SetEnableCalculatedFields(v string) {
	o.EnableCalculatedFields = &v
}

// GetEnableCalculatedFieldsMetadata returns the EnableCalculatedFieldsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableCalculatedFieldsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableCalculatedFieldsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableCalculatedFieldsMetadata
}

// GetEnableCalculatedFieldsMetadataOk returns a tuple with the EnableCalculatedFieldsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableCalculatedFieldsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableCalculatedFieldsMetadata) {
		return nil, false
	}
	return o.EnableCalculatedFieldsMetadata, true
}

// HasEnableCalculatedFieldsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableCalculatedFieldsMetadata() bool {
	if o != nil && !IsNil(o.EnableCalculatedFieldsMetadata) {
		return true
	}

	return false
}

// SetEnableCalculatedFieldsMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableCalculatedFieldsMetadata field.
func (o *AccountSettingsInformation) SetEnableCalculatedFieldsMetadata(v SettingsMetadata) {
	o.EnableCalculatedFieldsMetadata = &v
}

// GetEnableClickPlus returns the EnableClickPlus field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableClickPlus() string {
	if o == nil || IsNil(o.EnableClickPlus) {
		var ret string
		return ret
	}
	return *o.EnableClickPlus
}

// GetEnableClickPlusOk returns a tuple with the EnableClickPlus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableClickPlusOk() (*string, bool) {
	if o == nil || IsNil(o.EnableClickPlus) {
		return nil, false
	}
	return o.EnableClickPlus, true
}

// HasEnableClickPlus returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableClickPlus() bool {
	if o != nil && !IsNil(o.EnableClickPlus) {
		return true
	}

	return false
}

// SetEnableClickPlus gets a reference to the given string and assigns it to the EnableClickPlus field.
func (o *AccountSettingsInformation) SetEnableClickPlus(v string) {
	o.EnableClickPlus = &v
}

// GetEnableClickPlusConditionalContent returns the EnableClickPlusConditionalContent field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableClickPlusConditionalContent() string {
	if o == nil || IsNil(o.EnableClickPlusConditionalContent) {
		var ret string
		return ret
	}
	return *o.EnableClickPlusConditionalContent
}

// GetEnableClickPlusConditionalContentOk returns a tuple with the EnableClickPlusConditionalContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableClickPlusConditionalContentOk() (*string, bool) {
	if o == nil || IsNil(o.EnableClickPlusConditionalContent) {
		return nil, false
	}
	return o.EnableClickPlusConditionalContent, true
}

// HasEnableClickPlusConditionalContent returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableClickPlusConditionalContent() bool {
	if o != nil && !IsNil(o.EnableClickPlusConditionalContent) {
		return true
	}

	return false
}

// SetEnableClickPlusConditionalContent gets a reference to the given string and assigns it to the EnableClickPlusConditionalContent field.
func (o *AccountSettingsInformation) SetEnableClickPlusConditionalContent(v string) {
	o.EnableClickPlusConditionalContent = &v
}

// GetEnableClickPlusConditionalContentMetaData returns the EnableClickPlusConditionalContentMetaData field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableClickPlusConditionalContentMetaData() SettingsMetadata {
	if o == nil || IsNil(o.EnableClickPlusConditionalContentMetaData) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableClickPlusConditionalContentMetaData
}

// GetEnableClickPlusConditionalContentMetaDataOk returns a tuple with the EnableClickPlusConditionalContentMetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableClickPlusConditionalContentMetaDataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableClickPlusConditionalContentMetaData) {
		return nil, false
	}
	return o.EnableClickPlusConditionalContentMetaData, true
}

// HasEnableClickPlusConditionalContentMetaData returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableClickPlusConditionalContentMetaData() bool {
	if o != nil && !IsNil(o.EnableClickPlusConditionalContentMetaData) {
		return true
	}

	return false
}

// SetEnableClickPlusConditionalContentMetaData gets a reference to the given SettingsMetadata and assigns it to the EnableClickPlusConditionalContentMetaData field.
func (o *AccountSettingsInformation) SetEnableClickPlusConditionalContentMetaData(v SettingsMetadata) {
	o.EnableClickPlusConditionalContentMetaData = &v
}

// GetEnableClickPlusCustomFields returns the EnableClickPlusCustomFields field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableClickPlusCustomFields() string {
	if o == nil || IsNil(o.EnableClickPlusCustomFields) {
		var ret string
		return ret
	}
	return *o.EnableClickPlusCustomFields
}

// GetEnableClickPlusCustomFieldsOk returns a tuple with the EnableClickPlusCustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableClickPlusCustomFieldsOk() (*string, bool) {
	if o == nil || IsNil(o.EnableClickPlusCustomFields) {
		return nil, false
	}
	return o.EnableClickPlusCustomFields, true
}

// HasEnableClickPlusCustomFields returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableClickPlusCustomFields() bool {
	if o != nil && !IsNil(o.EnableClickPlusCustomFields) {
		return true
	}

	return false
}

// SetEnableClickPlusCustomFields gets a reference to the given string and assigns it to the EnableClickPlusCustomFields field.
func (o *AccountSettingsInformation) SetEnableClickPlusCustomFields(v string) {
	o.EnableClickPlusCustomFields = &v
}

// GetEnableClickPlusCustomFieldsMetaData returns the EnableClickPlusCustomFieldsMetaData field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableClickPlusCustomFieldsMetaData() SettingsMetadata {
	if o == nil || IsNil(o.EnableClickPlusCustomFieldsMetaData) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableClickPlusCustomFieldsMetaData
}

// GetEnableClickPlusCustomFieldsMetaDataOk returns a tuple with the EnableClickPlusCustomFieldsMetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableClickPlusCustomFieldsMetaDataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableClickPlusCustomFieldsMetaData) {
		return nil, false
	}
	return o.EnableClickPlusCustomFieldsMetaData, true
}

// HasEnableClickPlusCustomFieldsMetaData returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableClickPlusCustomFieldsMetaData() bool {
	if o != nil && !IsNil(o.EnableClickPlusCustomFieldsMetaData) {
		return true
	}

	return false
}

// SetEnableClickPlusCustomFieldsMetaData gets a reference to the given SettingsMetadata and assigns it to the EnableClickPlusCustomFieldsMetaData field.
func (o *AccountSettingsInformation) SetEnableClickPlusCustomFieldsMetaData(v SettingsMetadata) {
	o.EnableClickPlusCustomFieldsMetaData = &v
}

// GetEnableClickPlusCustomStyle returns the EnableClickPlusCustomStyle field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableClickPlusCustomStyle() string {
	if o == nil || IsNil(o.EnableClickPlusCustomStyle) {
		var ret string
		return ret
	}
	return *o.EnableClickPlusCustomStyle
}

// GetEnableClickPlusCustomStyleOk returns a tuple with the EnableClickPlusCustomStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableClickPlusCustomStyleOk() (*string, bool) {
	if o == nil || IsNil(o.EnableClickPlusCustomStyle) {
		return nil, false
	}
	return o.EnableClickPlusCustomStyle, true
}

// HasEnableClickPlusCustomStyle returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableClickPlusCustomStyle() bool {
	if o != nil && !IsNil(o.EnableClickPlusCustomStyle) {
		return true
	}

	return false
}

// SetEnableClickPlusCustomStyle gets a reference to the given string and assigns it to the EnableClickPlusCustomStyle field.
func (o *AccountSettingsInformation) SetEnableClickPlusCustomStyle(v string) {
	o.EnableClickPlusCustomStyle = &v
}

// GetEnableClickPlusCustomStyleMetaData returns the EnableClickPlusCustomStyleMetaData field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableClickPlusCustomStyleMetaData() SettingsMetadata {
	if o == nil || IsNil(o.EnableClickPlusCustomStyleMetaData) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableClickPlusCustomStyleMetaData
}

// GetEnableClickPlusCustomStyleMetaDataOk returns a tuple with the EnableClickPlusCustomStyleMetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableClickPlusCustomStyleMetaDataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableClickPlusCustomStyleMetaData) {
		return nil, false
	}
	return o.EnableClickPlusCustomStyleMetaData, true
}

// HasEnableClickPlusCustomStyleMetaData returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableClickPlusCustomStyleMetaData() bool {
	if o != nil && !IsNil(o.EnableClickPlusCustomStyleMetaData) {
		return true
	}

	return false
}

// SetEnableClickPlusCustomStyleMetaData gets a reference to the given SettingsMetadata and assigns it to the EnableClickPlusCustomStyleMetaData field.
func (o *AccountSettingsInformation) SetEnableClickPlusCustomStyleMetaData(v SettingsMetadata) {
	o.EnableClickPlusCustomStyleMetaData = &v
}

// GetEnableClickPlusDynamicContent returns the EnableClickPlusDynamicContent field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableClickPlusDynamicContent() string {
	if o == nil || IsNil(o.EnableClickPlusDynamicContent) {
		var ret string
		return ret
	}
	return *o.EnableClickPlusDynamicContent
}

// GetEnableClickPlusDynamicContentOk returns a tuple with the EnableClickPlusDynamicContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableClickPlusDynamicContentOk() (*string, bool) {
	if o == nil || IsNil(o.EnableClickPlusDynamicContent) {
		return nil, false
	}
	return o.EnableClickPlusDynamicContent, true
}

// HasEnableClickPlusDynamicContent returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableClickPlusDynamicContent() bool {
	if o != nil && !IsNil(o.EnableClickPlusDynamicContent) {
		return true
	}

	return false
}

// SetEnableClickPlusDynamicContent gets a reference to the given string and assigns it to the EnableClickPlusDynamicContent field.
func (o *AccountSettingsInformation) SetEnableClickPlusDynamicContent(v string) {
	o.EnableClickPlusDynamicContent = &v
}

// GetEnableClickPlusDynamicContentMetaData returns the EnableClickPlusDynamicContentMetaData field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableClickPlusDynamicContentMetaData() SettingsMetadata {
	if o == nil || IsNil(o.EnableClickPlusDynamicContentMetaData) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableClickPlusDynamicContentMetaData
}

// GetEnableClickPlusDynamicContentMetaDataOk returns a tuple with the EnableClickPlusDynamicContentMetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableClickPlusDynamicContentMetaDataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableClickPlusDynamicContentMetaData) {
		return nil, false
	}
	return o.EnableClickPlusDynamicContentMetaData, true
}

// HasEnableClickPlusDynamicContentMetaData returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableClickPlusDynamicContentMetaData() bool {
	if o != nil && !IsNil(o.EnableClickPlusDynamicContentMetaData) {
		return true
	}

	return false
}

// SetEnableClickPlusDynamicContentMetaData gets a reference to the given SettingsMetadata and assigns it to the EnableClickPlusDynamicContentMetaData field.
func (o *AccountSettingsInformation) SetEnableClickPlusDynamicContentMetaData(v SettingsMetadata) {
	o.EnableClickPlusDynamicContentMetaData = &v
}

// GetEnableClickPlusMetaData returns the EnableClickPlusMetaData field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableClickPlusMetaData() SettingsMetadata {
	if o == nil || IsNil(o.EnableClickPlusMetaData) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableClickPlusMetaData
}

// GetEnableClickPlusMetaDataOk returns a tuple with the EnableClickPlusMetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableClickPlusMetaDataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableClickPlusMetaData) {
		return nil, false
	}
	return o.EnableClickPlusMetaData, true
}

// HasEnableClickPlusMetaData returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableClickPlusMetaData() bool {
	if o != nil && !IsNil(o.EnableClickPlusMetaData) {
		return true
	}

	return false
}

// SetEnableClickPlusMetaData gets a reference to the given SettingsMetadata and assigns it to the EnableClickPlusMetaData field.
func (o *AccountSettingsInformation) SetEnableClickPlusMetaData(v SettingsMetadata) {
	o.EnableClickPlusMetaData = &v
}

// GetEnableClickwraps returns the EnableClickwraps field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableClickwraps() string {
	if o == nil || IsNil(o.EnableClickwraps) {
		var ret string
		return ret
	}
	return *o.EnableClickwraps
}

// GetEnableClickwrapsOk returns a tuple with the EnableClickwraps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableClickwrapsOk() (*string, bool) {
	if o == nil || IsNil(o.EnableClickwraps) {
		return nil, false
	}
	return o.EnableClickwraps, true
}

// HasEnableClickwraps returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableClickwraps() bool {
	if o != nil && !IsNil(o.EnableClickwraps) {
		return true
	}

	return false
}

// SetEnableClickwraps gets a reference to the given string and assigns it to the EnableClickwraps field.
func (o *AccountSettingsInformation) SetEnableClickwraps(v string) {
	o.EnableClickwraps = &v
}

// GetEnableClickwrapsMetadata returns the EnableClickwrapsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableClickwrapsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableClickwrapsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableClickwrapsMetadata
}

// GetEnableClickwrapsMetadataOk returns a tuple with the EnableClickwrapsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableClickwrapsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableClickwrapsMetadata) {
		return nil, false
	}
	return o.EnableClickwrapsMetadata, true
}

// HasEnableClickwrapsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableClickwrapsMetadata() bool {
	if o != nil && !IsNil(o.EnableClickwrapsMetadata) {
		return true
	}

	return false
}

// SetEnableClickwrapsMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableClickwrapsMetadata field.
func (o *AccountSettingsInformation) SetEnableClickwrapsMetadata(v SettingsMetadata) {
	o.EnableClickwrapsMetadata = &v
}

// GetEnableCombinedPDFDownloadForSBS returns the EnableCombinedPDFDownloadForSBS field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableCombinedPDFDownloadForSBS() string {
	if o == nil || IsNil(o.EnableCombinedPDFDownloadForSBS) {
		var ret string
		return ret
	}
	return *o.EnableCombinedPDFDownloadForSBS
}

// GetEnableCombinedPDFDownloadForSBSOk returns a tuple with the EnableCombinedPDFDownloadForSBS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableCombinedPDFDownloadForSBSOk() (*string, bool) {
	if o == nil || IsNil(o.EnableCombinedPDFDownloadForSBS) {
		return nil, false
	}
	return o.EnableCombinedPDFDownloadForSBS, true
}

// HasEnableCombinedPDFDownloadForSBS returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableCombinedPDFDownloadForSBS() bool {
	if o != nil && !IsNil(o.EnableCombinedPDFDownloadForSBS) {
		return true
	}

	return false
}

// SetEnableCombinedPDFDownloadForSBS gets a reference to the given string and assigns it to the EnableCombinedPDFDownloadForSBS field.
func (o *AccountSettingsInformation) SetEnableCombinedPDFDownloadForSBS(v string) {
	o.EnableCombinedPDFDownloadForSBS = &v
}

// GetEnableCommentsHistoryDownloadInSigning returns the EnableCommentsHistoryDownloadInSigning field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableCommentsHistoryDownloadInSigning() string {
	if o == nil || IsNil(o.EnableCommentsHistoryDownloadInSigning) {
		var ret string
		return ret
	}
	return *o.EnableCommentsHistoryDownloadInSigning
}

// GetEnableCommentsHistoryDownloadInSigningOk returns a tuple with the EnableCommentsHistoryDownloadInSigning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableCommentsHistoryDownloadInSigningOk() (*string, bool) {
	if o == nil || IsNil(o.EnableCommentsHistoryDownloadInSigning) {
		return nil, false
	}
	return o.EnableCommentsHistoryDownloadInSigning, true
}

// HasEnableCommentsHistoryDownloadInSigning returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableCommentsHistoryDownloadInSigning() bool {
	if o != nil && !IsNil(o.EnableCommentsHistoryDownloadInSigning) {
		return true
	}

	return false
}

// SetEnableCommentsHistoryDownloadInSigning gets a reference to the given string and assigns it to the EnableCommentsHistoryDownloadInSigning field.
func (o *AccountSettingsInformation) SetEnableCommentsHistoryDownloadInSigning(v string) {
	o.EnableCommentsHistoryDownloadInSigning = &v
}

// GetEnableCommentsHistoryDownloadInSigningMetadata returns the EnableCommentsHistoryDownloadInSigningMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableCommentsHistoryDownloadInSigningMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableCommentsHistoryDownloadInSigningMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableCommentsHistoryDownloadInSigningMetadata
}

// GetEnableCommentsHistoryDownloadInSigningMetadataOk returns a tuple with the EnableCommentsHistoryDownloadInSigningMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableCommentsHistoryDownloadInSigningMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableCommentsHistoryDownloadInSigningMetadata) {
		return nil, false
	}
	return o.EnableCommentsHistoryDownloadInSigningMetadata, true
}

// HasEnableCommentsHistoryDownloadInSigningMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableCommentsHistoryDownloadInSigningMetadata() bool {
	if o != nil && !IsNil(o.EnableCommentsHistoryDownloadInSigningMetadata) {
		return true
	}

	return false
}

// SetEnableCommentsHistoryDownloadInSigningMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableCommentsHistoryDownloadInSigningMetadata field.
func (o *AccountSettingsInformation) SetEnableCommentsHistoryDownloadInSigningMetadata(v SettingsMetadata) {
	o.EnableCommentsHistoryDownloadInSigningMetadata = &v
}

// GetEnableContactSuggestions returns the EnableContactSuggestions field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableContactSuggestions() string {
	if o == nil || IsNil(o.EnableContactSuggestions) {
		var ret string
		return ret
	}
	return *o.EnableContactSuggestions
}

// GetEnableContactSuggestionsOk returns a tuple with the EnableContactSuggestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableContactSuggestionsOk() (*string, bool) {
	if o == nil || IsNil(o.EnableContactSuggestions) {
		return nil, false
	}
	return o.EnableContactSuggestions, true
}

// HasEnableContactSuggestions returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableContactSuggestions() bool {
	if o != nil && !IsNil(o.EnableContactSuggestions) {
		return true
	}

	return false
}

// SetEnableContactSuggestions gets a reference to the given string and assigns it to the EnableContactSuggestions field.
func (o *AccountSettingsInformation) SetEnableContactSuggestions(v string) {
	o.EnableContactSuggestions = &v
}

// GetEnableContactSuggestionsMetadata returns the EnableContactSuggestionsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableContactSuggestionsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableContactSuggestionsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableContactSuggestionsMetadata
}

// GetEnableContactSuggestionsMetadataOk returns a tuple with the EnableContactSuggestionsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableContactSuggestionsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableContactSuggestionsMetadata) {
		return nil, false
	}
	return o.EnableContactSuggestionsMetadata, true
}

// HasEnableContactSuggestionsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableContactSuggestionsMetadata() bool {
	if o != nil && !IsNil(o.EnableContactSuggestionsMetadata) {
		return true
	}

	return false
}

// SetEnableContactSuggestionsMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableContactSuggestionsMetadata field.
func (o *AccountSettingsInformation) SetEnableContactSuggestionsMetadata(v SettingsMetadata) {
	o.EnableContactSuggestionsMetadata = &v
}

// GetEnableCustomerSatisfactionMetricTracking returns the EnableCustomerSatisfactionMetricTracking field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableCustomerSatisfactionMetricTracking() string {
	if o == nil || IsNil(o.EnableCustomerSatisfactionMetricTracking) {
		var ret string
		return ret
	}
	return *o.EnableCustomerSatisfactionMetricTracking
}

// GetEnableCustomerSatisfactionMetricTrackingOk returns a tuple with the EnableCustomerSatisfactionMetricTracking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableCustomerSatisfactionMetricTrackingOk() (*string, bool) {
	if o == nil || IsNil(o.EnableCustomerSatisfactionMetricTracking) {
		return nil, false
	}
	return o.EnableCustomerSatisfactionMetricTracking, true
}

// HasEnableCustomerSatisfactionMetricTracking returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableCustomerSatisfactionMetricTracking() bool {
	if o != nil && !IsNil(o.EnableCustomerSatisfactionMetricTracking) {
		return true
	}

	return false
}

// SetEnableCustomerSatisfactionMetricTracking gets a reference to the given string and assigns it to the EnableCustomerSatisfactionMetricTracking field.
func (o *AccountSettingsInformation) SetEnableCustomerSatisfactionMetricTracking(v string) {
	o.EnableCustomerSatisfactionMetricTracking = &v
}

// GetEnableCustomerSatisfactionMetricTrackingMetadata returns the EnableCustomerSatisfactionMetricTrackingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableCustomerSatisfactionMetricTrackingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableCustomerSatisfactionMetricTrackingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableCustomerSatisfactionMetricTrackingMetadata
}

// GetEnableCustomerSatisfactionMetricTrackingMetadataOk returns a tuple with the EnableCustomerSatisfactionMetricTrackingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableCustomerSatisfactionMetricTrackingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableCustomerSatisfactionMetricTrackingMetadata) {
		return nil, false
	}
	return o.EnableCustomerSatisfactionMetricTrackingMetadata, true
}

// HasEnableCustomerSatisfactionMetricTrackingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableCustomerSatisfactionMetricTrackingMetadata() bool {
	if o != nil && !IsNil(o.EnableCustomerSatisfactionMetricTrackingMetadata) {
		return true
	}

	return false
}

// SetEnableCustomerSatisfactionMetricTrackingMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableCustomerSatisfactionMetricTrackingMetadata field.
func (o *AccountSettingsInformation) SetEnableCustomerSatisfactionMetricTrackingMetadata(v SettingsMetadata) {
	o.EnableCustomerSatisfactionMetricTrackingMetadata = &v
}

// GetEnableDSigEUAdvancedPens returns the EnableDSigEUAdvancedPens field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableDSigEUAdvancedPens() string {
	if o == nil || IsNil(o.EnableDSigEUAdvancedPens) {
		var ret string
		return ret
	}
	return *o.EnableDSigEUAdvancedPens
}

// GetEnableDSigEUAdvancedPensOk returns a tuple with the EnableDSigEUAdvancedPens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableDSigEUAdvancedPensOk() (*string, bool) {
	if o == nil || IsNil(o.EnableDSigEUAdvancedPens) {
		return nil, false
	}
	return o.EnableDSigEUAdvancedPens, true
}

// HasEnableDSigEUAdvancedPens returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableDSigEUAdvancedPens() bool {
	if o != nil && !IsNil(o.EnableDSigEUAdvancedPens) {
		return true
	}

	return false
}

// SetEnableDSigEUAdvancedPens gets a reference to the given string and assigns it to the EnableDSigEUAdvancedPens field.
func (o *AccountSettingsInformation) SetEnableDSigEUAdvancedPens(v string) {
	o.EnableDSigEUAdvancedPens = &v
}

// GetEnableDSigEUAdvancedPensMetadata returns the EnableDSigEUAdvancedPensMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableDSigEUAdvancedPensMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableDSigEUAdvancedPensMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableDSigEUAdvancedPensMetadata
}

// GetEnableDSigEUAdvancedPensMetadataOk returns a tuple with the EnableDSigEUAdvancedPensMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableDSigEUAdvancedPensMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableDSigEUAdvancedPensMetadata) {
		return nil, false
	}
	return o.EnableDSigEUAdvancedPensMetadata, true
}

// HasEnableDSigEUAdvancedPensMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableDSigEUAdvancedPensMetadata() bool {
	if o != nil && !IsNil(o.EnableDSigEUAdvancedPensMetadata) {
		return true
	}

	return false
}

// SetEnableDSigEUAdvancedPensMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableDSigEUAdvancedPensMetadata field.
func (o *AccountSettingsInformation) SetEnableDSigEUAdvancedPensMetadata(v SettingsMetadata) {
	o.EnableDSigEUAdvancedPensMetadata = &v
}

// GetEnableDSigExpressPens returns the EnableDSigExpressPens field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableDSigExpressPens() string {
	if o == nil || IsNil(o.EnableDSigExpressPens) {
		var ret string
		return ret
	}
	return *o.EnableDSigExpressPens
}

// GetEnableDSigExpressPensOk returns a tuple with the EnableDSigExpressPens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableDSigExpressPensOk() (*string, bool) {
	if o == nil || IsNil(o.EnableDSigExpressPens) {
		return nil, false
	}
	return o.EnableDSigExpressPens, true
}

// HasEnableDSigExpressPens returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableDSigExpressPens() bool {
	if o != nil && !IsNil(o.EnableDSigExpressPens) {
		return true
	}

	return false
}

// SetEnableDSigExpressPens gets a reference to the given string and assigns it to the EnableDSigExpressPens field.
func (o *AccountSettingsInformation) SetEnableDSigExpressPens(v string) {
	o.EnableDSigExpressPens = &v
}

// GetEnableDSigExpressPensMetadata returns the EnableDSigExpressPensMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableDSigExpressPensMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableDSigExpressPensMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableDSigExpressPensMetadata
}

// GetEnableDSigExpressPensMetadataOk returns a tuple with the EnableDSigExpressPensMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableDSigExpressPensMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableDSigExpressPensMetadata) {
		return nil, false
	}
	return o.EnableDSigExpressPensMetadata, true
}

// HasEnableDSigExpressPensMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableDSigExpressPensMetadata() bool {
	if o != nil && !IsNil(o.EnableDSigExpressPensMetadata) {
		return true
	}

	return false
}

// SetEnableDSigExpressPensMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableDSigExpressPensMetadata field.
func (o *AccountSettingsInformation) SetEnableDSigExpressPensMetadata(v SettingsMetadata) {
	o.EnableDSigExpressPensMetadata = &v
}

// GetEnableDSigIDCheckForAESPens returns the EnableDSigIDCheckForAESPens field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableDSigIDCheckForAESPens() string {
	if o == nil || IsNil(o.EnableDSigIDCheckForAESPens) {
		var ret string
		return ret
	}
	return *o.EnableDSigIDCheckForAESPens
}

// GetEnableDSigIDCheckForAESPensOk returns a tuple with the EnableDSigIDCheckForAESPens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableDSigIDCheckForAESPensOk() (*string, bool) {
	if o == nil || IsNil(o.EnableDSigIDCheckForAESPens) {
		return nil, false
	}
	return o.EnableDSigIDCheckForAESPens, true
}

// HasEnableDSigIDCheckForAESPens returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableDSigIDCheckForAESPens() bool {
	if o != nil && !IsNil(o.EnableDSigIDCheckForAESPens) {
		return true
	}

	return false
}

// SetEnableDSigIDCheckForAESPens gets a reference to the given string and assigns it to the EnableDSigIDCheckForAESPens field.
func (o *AccountSettingsInformation) SetEnableDSigIDCheckForAESPens(v string) {
	o.EnableDSigIDCheckForAESPens = &v
}

// GetEnableDSigIDCheckForAESPensMetadata returns the EnableDSigIDCheckForAESPensMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableDSigIDCheckForAESPensMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableDSigIDCheckForAESPensMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableDSigIDCheckForAESPensMetadata
}

// GetEnableDSigIDCheckForAESPensMetadataOk returns a tuple with the EnableDSigIDCheckForAESPensMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableDSigIDCheckForAESPensMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableDSigIDCheckForAESPensMetadata) {
		return nil, false
	}
	return o.EnableDSigIDCheckForAESPensMetadata, true
}

// HasEnableDSigIDCheckForAESPensMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableDSigIDCheckForAESPensMetadata() bool {
	if o != nil && !IsNil(o.EnableDSigIDCheckForAESPensMetadata) {
		return true
	}

	return false
}

// SetEnableDSigIDCheckForAESPensMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableDSigIDCheckForAESPensMetadata field.
func (o *AccountSettingsInformation) SetEnableDSigIDCheckForAESPensMetadata(v SettingsMetadata) {
	o.EnableDSigIDCheckForAESPensMetadata = &v
}

// GetEnableDSigIDCheckInPersonForQESPens returns the EnableDSigIDCheckInPersonForQESPens field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableDSigIDCheckInPersonForQESPens() string {
	if o == nil || IsNil(o.EnableDSigIDCheckInPersonForQESPens) {
		var ret string
		return ret
	}
	return *o.EnableDSigIDCheckInPersonForQESPens
}

// GetEnableDSigIDCheckInPersonForQESPensOk returns a tuple with the EnableDSigIDCheckInPersonForQESPens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableDSigIDCheckInPersonForQESPensOk() (*string, bool) {
	if o == nil || IsNil(o.EnableDSigIDCheckInPersonForQESPens) {
		return nil, false
	}
	return o.EnableDSigIDCheckInPersonForQESPens, true
}

// HasEnableDSigIDCheckInPersonForQESPens returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableDSigIDCheckInPersonForQESPens() bool {
	if o != nil && !IsNil(o.EnableDSigIDCheckInPersonForQESPens) {
		return true
	}

	return false
}

// SetEnableDSigIDCheckInPersonForQESPens gets a reference to the given string and assigns it to the EnableDSigIDCheckInPersonForQESPens field.
func (o *AccountSettingsInformation) SetEnableDSigIDCheckInPersonForQESPens(v string) {
	o.EnableDSigIDCheckInPersonForQESPens = &v
}

// GetEnableDSigIDCheckInPersonForQESPensMetadata returns the EnableDSigIDCheckInPersonForQESPensMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableDSigIDCheckInPersonForQESPensMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableDSigIDCheckInPersonForQESPensMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableDSigIDCheckInPersonForQESPensMetadata
}

// GetEnableDSigIDCheckInPersonForQESPensMetadataOk returns a tuple with the EnableDSigIDCheckInPersonForQESPensMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableDSigIDCheckInPersonForQESPensMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableDSigIDCheckInPersonForQESPensMetadata) {
		return nil, false
	}
	return o.EnableDSigIDCheckInPersonForQESPensMetadata, true
}

// HasEnableDSigIDCheckInPersonForQESPensMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableDSigIDCheckInPersonForQESPensMetadata() bool {
	if o != nil && !IsNil(o.EnableDSigIDCheckInPersonForQESPensMetadata) {
		return true
	}

	return false
}

// SetEnableDSigIDCheckInPersonForQESPensMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableDSigIDCheckInPersonForQESPensMetadata field.
func (o *AccountSettingsInformation) SetEnableDSigIDCheckInPersonForQESPensMetadata(v SettingsMetadata) {
	o.EnableDSigIDCheckInPersonForQESPensMetadata = &v
}

// GetEnableDSigIDCheckRemoteForQESPens returns the EnableDSigIDCheckRemoteForQESPens field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableDSigIDCheckRemoteForQESPens() string {
	if o == nil || IsNil(o.EnableDSigIDCheckRemoteForQESPens) {
		var ret string
		return ret
	}
	return *o.EnableDSigIDCheckRemoteForQESPens
}

// GetEnableDSigIDCheckRemoteForQESPensOk returns a tuple with the EnableDSigIDCheckRemoteForQESPens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableDSigIDCheckRemoteForQESPensOk() (*string, bool) {
	if o == nil || IsNil(o.EnableDSigIDCheckRemoteForQESPens) {
		return nil, false
	}
	return o.EnableDSigIDCheckRemoteForQESPens, true
}

// HasEnableDSigIDCheckRemoteForQESPens returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableDSigIDCheckRemoteForQESPens() bool {
	if o != nil && !IsNil(o.EnableDSigIDCheckRemoteForQESPens) {
		return true
	}

	return false
}

// SetEnableDSigIDCheckRemoteForQESPens gets a reference to the given string and assigns it to the EnableDSigIDCheckRemoteForQESPens field.
func (o *AccountSettingsInformation) SetEnableDSigIDCheckRemoteForQESPens(v string) {
	o.EnableDSigIDCheckRemoteForQESPens = &v
}

// GetEnableDSigIDCheckRemoteForQESPensMetadata returns the EnableDSigIDCheckRemoteForQESPensMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableDSigIDCheckRemoteForQESPensMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableDSigIDCheckRemoteForQESPensMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableDSigIDCheckRemoteForQESPensMetadata
}

// GetEnableDSigIDCheckRemoteForQESPensMetadataOk returns a tuple with the EnableDSigIDCheckRemoteForQESPensMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableDSigIDCheckRemoteForQESPensMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableDSigIDCheckRemoteForQESPensMetadata) {
		return nil, false
	}
	return o.EnableDSigIDCheckRemoteForQESPensMetadata, true
}

// HasEnableDSigIDCheckRemoteForQESPensMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableDSigIDCheckRemoteForQESPensMetadata() bool {
	if o != nil && !IsNil(o.EnableDSigIDCheckRemoteForQESPensMetadata) {
		return true
	}

	return false
}

// SetEnableDSigIDCheckRemoteForQESPensMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableDSigIDCheckRemoteForQESPensMetadata field.
func (o *AccountSettingsInformation) SetEnableDSigIDCheckRemoteForQESPensMetadata(v SettingsMetadata) {
	o.EnableDSigIDCheckRemoteForQESPensMetadata = &v
}

// GetEnableDSigIDVerificationPens returns the EnableDSigIDVerificationPens field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableDSigIDVerificationPens() string {
	if o == nil || IsNil(o.EnableDSigIDVerificationPens) {
		var ret string
		return ret
	}
	return *o.EnableDSigIDVerificationPens
}

// GetEnableDSigIDVerificationPensOk returns a tuple with the EnableDSigIDVerificationPens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableDSigIDVerificationPensOk() (*string, bool) {
	if o == nil || IsNil(o.EnableDSigIDVerificationPens) {
		return nil, false
	}
	return o.EnableDSigIDVerificationPens, true
}

// HasEnableDSigIDVerificationPens returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableDSigIDVerificationPens() bool {
	if o != nil && !IsNil(o.EnableDSigIDVerificationPens) {
		return true
	}

	return false
}

// SetEnableDSigIDVerificationPens gets a reference to the given string and assigns it to the EnableDSigIDVerificationPens field.
func (o *AccountSettingsInformation) SetEnableDSigIDVerificationPens(v string) {
	o.EnableDSigIDVerificationPens = &v
}

// GetEnableDSigIDVerificationPensMetadata returns the EnableDSigIDVerificationPensMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableDSigIDVerificationPensMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableDSigIDVerificationPensMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableDSigIDVerificationPensMetadata
}

// GetEnableDSigIDVerificationPensMetadataOk returns a tuple with the EnableDSigIDVerificationPensMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableDSigIDVerificationPensMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableDSigIDVerificationPensMetadata) {
		return nil, false
	}
	return o.EnableDSigIDVerificationPensMetadata, true
}

// HasEnableDSigIDVerificationPensMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableDSigIDVerificationPensMetadata() bool {
	if o != nil && !IsNil(o.EnableDSigIDVerificationPensMetadata) {
		return true
	}

	return false
}

// SetEnableDSigIDVerificationPensMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableDSigIDVerificationPensMetadata field.
func (o *AccountSettingsInformation) SetEnableDSigIDVerificationPensMetadata(v SettingsMetadata) {
	o.EnableDSigIDVerificationPensMetadata = &v
}

// GetEnableDSigIDVerificationPremierPens returns the EnableDSigIDVerificationPremierPens field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableDSigIDVerificationPremierPens() string {
	if o == nil || IsNil(o.EnableDSigIDVerificationPremierPens) {
		var ret string
		return ret
	}
	return *o.EnableDSigIDVerificationPremierPens
}

// GetEnableDSigIDVerificationPremierPensOk returns a tuple with the EnableDSigIDVerificationPremierPens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableDSigIDVerificationPremierPensOk() (*string, bool) {
	if o == nil || IsNil(o.EnableDSigIDVerificationPremierPens) {
		return nil, false
	}
	return o.EnableDSigIDVerificationPremierPens, true
}

// HasEnableDSigIDVerificationPremierPens returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableDSigIDVerificationPremierPens() bool {
	if o != nil && !IsNil(o.EnableDSigIDVerificationPremierPens) {
		return true
	}

	return false
}

// SetEnableDSigIDVerificationPremierPens gets a reference to the given string and assigns it to the EnableDSigIDVerificationPremierPens field.
func (o *AccountSettingsInformation) SetEnableDSigIDVerificationPremierPens(v string) {
	o.EnableDSigIDVerificationPremierPens = &v
}

// GetEnableDSigIDVerificationPremierPensMetadata returns the EnableDSigIDVerificationPremierPensMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableDSigIDVerificationPremierPensMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableDSigIDVerificationPremierPensMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableDSigIDVerificationPremierPensMetadata
}

// GetEnableDSigIDVerificationPremierPensMetadataOk returns a tuple with the EnableDSigIDVerificationPremierPensMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableDSigIDVerificationPremierPensMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableDSigIDVerificationPremierPensMetadata) {
		return nil, false
	}
	return o.EnableDSigIDVerificationPremierPensMetadata, true
}

// HasEnableDSigIDVerificationPremierPensMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableDSigIDVerificationPremierPensMetadata() bool {
	if o != nil && !IsNil(o.EnableDSigIDVerificationPremierPensMetadata) {
		return true
	}

	return false
}

// SetEnableDSigIDVerificationPremierPensMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableDSigIDVerificationPremierPensMetadata field.
func (o *AccountSettingsInformation) SetEnableDSigIDVerificationPremierPensMetadata(v SettingsMetadata) {
	o.EnableDSigIDVerificationPremierPensMetadata = &v
}

// GetEnableDSPro returns the EnableDSPro field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableDSPro() string {
	if o == nil || IsNil(o.EnableDSPro) {
		var ret string
		return ret
	}
	return *o.EnableDSPro
}

// GetEnableDSProOk returns a tuple with the EnableDSPro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableDSProOk() (*string, bool) {
	if o == nil || IsNil(o.EnableDSPro) {
		return nil, false
	}
	return o.EnableDSPro, true
}

// HasEnableDSPro returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableDSPro() bool {
	if o != nil && !IsNil(o.EnableDSPro) {
		return true
	}

	return false
}

// SetEnableDSPro gets a reference to the given string and assigns it to the EnableDSPro field.
func (o *AccountSettingsInformation) SetEnableDSPro(v string) {
	o.EnableDSPro = &v
}

// GetEnableDSProMetadata returns the EnableDSProMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableDSProMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableDSProMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableDSProMetadata
}

// GetEnableDSProMetadataOk returns a tuple with the EnableDSProMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableDSProMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableDSProMetadata) {
		return nil, false
	}
	return o.EnableDSProMetadata, true
}

// HasEnableDSProMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableDSProMetadata() bool {
	if o != nil && !IsNil(o.EnableDSProMetadata) {
		return true
	}

	return false
}

// SetEnableDSProMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableDSProMetadata field.
func (o *AccountSettingsInformation) SetEnableDSProMetadata(v SettingsMetadata) {
	o.EnableDSProMetadata = &v
}

// GetEnableEnforceTlsEmailsSettingMetadata returns the EnableEnforceTlsEmailsSettingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableEnforceTlsEmailsSettingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableEnforceTlsEmailsSettingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableEnforceTlsEmailsSettingMetadata
}

// GetEnableEnforceTlsEmailsSettingMetadataOk returns a tuple with the EnableEnforceTlsEmailsSettingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableEnforceTlsEmailsSettingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableEnforceTlsEmailsSettingMetadata) {
		return nil, false
	}
	return o.EnableEnforceTlsEmailsSettingMetadata, true
}

// HasEnableEnforceTlsEmailsSettingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableEnforceTlsEmailsSettingMetadata() bool {
	if o != nil && !IsNil(o.EnableEnforceTlsEmailsSettingMetadata) {
		return true
	}

	return false
}

// SetEnableEnforceTlsEmailsSettingMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableEnforceTlsEmailsSettingMetadata field.
func (o *AccountSettingsInformation) SetEnableEnforceTlsEmailsSettingMetadata(v SettingsMetadata) {
	o.EnableEnforceTlsEmailsSettingMetadata = &v
}

// GetEnableEnvelopeStampingByAccountAdmin returns the EnableEnvelopeStampingByAccountAdmin field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableEnvelopeStampingByAccountAdmin() string {
	if o == nil || IsNil(o.EnableEnvelopeStampingByAccountAdmin) {
		var ret string
		return ret
	}
	return *o.EnableEnvelopeStampingByAccountAdmin
}

// GetEnableEnvelopeStampingByAccountAdminOk returns a tuple with the EnableEnvelopeStampingByAccountAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableEnvelopeStampingByAccountAdminOk() (*string, bool) {
	if o == nil || IsNil(o.EnableEnvelopeStampingByAccountAdmin) {
		return nil, false
	}
	return o.EnableEnvelopeStampingByAccountAdmin, true
}

// HasEnableEnvelopeStampingByAccountAdmin returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableEnvelopeStampingByAccountAdmin() bool {
	if o != nil && !IsNil(o.EnableEnvelopeStampingByAccountAdmin) {
		return true
	}

	return false
}

// SetEnableEnvelopeStampingByAccountAdmin gets a reference to the given string and assigns it to the EnableEnvelopeStampingByAccountAdmin field.
func (o *AccountSettingsInformation) SetEnableEnvelopeStampingByAccountAdmin(v string) {
	o.EnableEnvelopeStampingByAccountAdmin = &v
}

// GetEnableEnvelopeStampingByAccountAdminMetadata returns the EnableEnvelopeStampingByAccountAdminMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableEnvelopeStampingByAccountAdminMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableEnvelopeStampingByAccountAdminMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableEnvelopeStampingByAccountAdminMetadata
}

// GetEnableEnvelopeStampingByAccountAdminMetadataOk returns a tuple with the EnableEnvelopeStampingByAccountAdminMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableEnvelopeStampingByAccountAdminMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableEnvelopeStampingByAccountAdminMetadata) {
		return nil, false
	}
	return o.EnableEnvelopeStampingByAccountAdminMetadata, true
}

// HasEnableEnvelopeStampingByAccountAdminMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableEnvelopeStampingByAccountAdminMetadata() bool {
	if o != nil && !IsNil(o.EnableEnvelopeStampingByAccountAdminMetadata) {
		return true
	}

	return false
}

// SetEnableEnvelopeStampingByAccountAdminMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableEnvelopeStampingByAccountAdminMetadata field.
func (o *AccountSettingsInformation) SetEnableEnvelopeStampingByAccountAdminMetadata(v SettingsMetadata) {
	o.EnableEnvelopeStampingByAccountAdminMetadata = &v
}

// GetEnableEnvelopeStampingByDSAdmin returns the EnableEnvelopeStampingByDSAdmin field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableEnvelopeStampingByDSAdmin() string {
	if o == nil || IsNil(o.EnableEnvelopeStampingByDSAdmin) {
		var ret string
		return ret
	}
	return *o.EnableEnvelopeStampingByDSAdmin
}

// GetEnableEnvelopeStampingByDSAdminOk returns a tuple with the EnableEnvelopeStampingByDSAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableEnvelopeStampingByDSAdminOk() (*string, bool) {
	if o == nil || IsNil(o.EnableEnvelopeStampingByDSAdmin) {
		return nil, false
	}
	return o.EnableEnvelopeStampingByDSAdmin, true
}

// HasEnableEnvelopeStampingByDSAdmin returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableEnvelopeStampingByDSAdmin() bool {
	if o != nil && !IsNil(o.EnableEnvelopeStampingByDSAdmin) {
		return true
	}

	return false
}

// SetEnableEnvelopeStampingByDSAdmin gets a reference to the given string and assigns it to the EnableEnvelopeStampingByDSAdmin field.
func (o *AccountSettingsInformation) SetEnableEnvelopeStampingByDSAdmin(v string) {
	o.EnableEnvelopeStampingByDSAdmin = &v
}

// GetEnableEnvelopeStampingByDSAdminMetadata returns the EnableEnvelopeStampingByDSAdminMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableEnvelopeStampingByDSAdminMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableEnvelopeStampingByDSAdminMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableEnvelopeStampingByDSAdminMetadata
}

// GetEnableEnvelopeStampingByDSAdminMetadataOk returns a tuple with the EnableEnvelopeStampingByDSAdminMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableEnvelopeStampingByDSAdminMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableEnvelopeStampingByDSAdminMetadata) {
		return nil, false
	}
	return o.EnableEnvelopeStampingByDSAdminMetadata, true
}

// HasEnableEnvelopeStampingByDSAdminMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableEnvelopeStampingByDSAdminMetadata() bool {
	if o != nil && !IsNil(o.EnableEnvelopeStampingByDSAdminMetadata) {
		return true
	}

	return false
}

// SetEnableEnvelopeStampingByDSAdminMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableEnvelopeStampingByDSAdminMetadata field.
func (o *AccountSettingsInformation) SetEnableEnvelopeStampingByDSAdminMetadata(v SettingsMetadata) {
	o.EnableEnvelopeStampingByDSAdminMetadata = &v
}

// GetEnableESignAPIHourlyLimitManagement returns the EnableESignAPIHourlyLimitManagement field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableESignAPIHourlyLimitManagement() string {
	if o == nil || IsNil(o.EnableESignAPIHourlyLimitManagement) {
		var ret string
		return ret
	}
	return *o.EnableESignAPIHourlyLimitManagement
}

// GetEnableESignAPIHourlyLimitManagementOk returns a tuple with the EnableESignAPIHourlyLimitManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableESignAPIHourlyLimitManagementOk() (*string, bool) {
	if o == nil || IsNil(o.EnableESignAPIHourlyLimitManagement) {
		return nil, false
	}
	return o.EnableESignAPIHourlyLimitManagement, true
}

// HasEnableESignAPIHourlyLimitManagement returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableESignAPIHourlyLimitManagement() bool {
	if o != nil && !IsNil(o.EnableESignAPIHourlyLimitManagement) {
		return true
	}

	return false
}

// SetEnableESignAPIHourlyLimitManagement gets a reference to the given string and assigns it to the EnableESignAPIHourlyLimitManagement field.
func (o *AccountSettingsInformation) SetEnableESignAPIHourlyLimitManagement(v string) {
	o.EnableESignAPIHourlyLimitManagement = &v
}

// GetEnableESignAPIHourlyLimitManagementMetadata returns the EnableESignAPIHourlyLimitManagementMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableESignAPIHourlyLimitManagementMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableESignAPIHourlyLimitManagementMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableESignAPIHourlyLimitManagementMetadata
}

// GetEnableESignAPIHourlyLimitManagementMetadataOk returns a tuple with the EnableESignAPIHourlyLimitManagementMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableESignAPIHourlyLimitManagementMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableESignAPIHourlyLimitManagementMetadata) {
		return nil, false
	}
	return o.EnableESignAPIHourlyLimitManagementMetadata, true
}

// HasEnableESignAPIHourlyLimitManagementMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableESignAPIHourlyLimitManagementMetadata() bool {
	if o != nil && !IsNil(o.EnableESignAPIHourlyLimitManagementMetadata) {
		return true
	}

	return false
}

// SetEnableESignAPIHourlyLimitManagementMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableESignAPIHourlyLimitManagementMetadata field.
func (o *AccountSettingsInformation) SetEnableESignAPIHourlyLimitManagementMetadata(v SettingsMetadata) {
	o.EnableESignAPIHourlyLimitManagementMetadata = &v
}

// GetEnableEsignCommunities returns the EnableEsignCommunities field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableEsignCommunities() string {
	if o == nil || IsNil(o.EnableEsignCommunities) {
		var ret string
		return ret
	}
	return *o.EnableEsignCommunities
}

// GetEnableEsignCommunitiesOk returns a tuple with the EnableEsignCommunities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableEsignCommunitiesOk() (*string, bool) {
	if o == nil || IsNil(o.EnableEsignCommunities) {
		return nil, false
	}
	return o.EnableEsignCommunities, true
}

// HasEnableEsignCommunities returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableEsignCommunities() bool {
	if o != nil && !IsNil(o.EnableEsignCommunities) {
		return true
	}

	return false
}

// SetEnableEsignCommunities gets a reference to the given string and assigns it to the EnableEsignCommunities field.
func (o *AccountSettingsInformation) SetEnableEsignCommunities(v string) {
	o.EnableEsignCommunities = &v
}

// GetEnableEsignCommunitiesMetadata returns the EnableEsignCommunitiesMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableEsignCommunitiesMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableEsignCommunitiesMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableEsignCommunitiesMetadata
}

// GetEnableEsignCommunitiesMetadataOk returns a tuple with the EnableEsignCommunitiesMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableEsignCommunitiesMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableEsignCommunitiesMetadata) {
		return nil, false
	}
	return o.EnableEsignCommunitiesMetadata, true
}

// HasEnableEsignCommunitiesMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableEsignCommunitiesMetadata() bool {
	if o != nil && !IsNil(o.EnableEsignCommunitiesMetadata) {
		return true
	}

	return false
}

// SetEnableEsignCommunitiesMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableEsignCommunitiesMetadata field.
func (o *AccountSettingsInformation) SetEnableEsignCommunitiesMetadata(v SettingsMetadata) {
	o.EnableEsignCommunitiesMetadata = &v
}

// GetEnableIDFxAccountlessSMSAuthForPart11 returns the EnableIDFxAccountlessSMSAuthForPart11 field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableIDFxAccountlessSMSAuthForPart11() string {
	if o == nil || IsNil(o.EnableIDFxAccountlessSMSAuthForPart11) {
		var ret string
		return ret
	}
	return *o.EnableIDFxAccountlessSMSAuthForPart11
}

// GetEnableIDFxAccountlessSMSAuthForPart11Ok returns a tuple with the EnableIDFxAccountlessSMSAuthForPart11 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableIDFxAccountlessSMSAuthForPart11Ok() (*string, bool) {
	if o == nil || IsNil(o.EnableIDFxAccountlessSMSAuthForPart11) {
		return nil, false
	}
	return o.EnableIDFxAccountlessSMSAuthForPart11, true
}

// HasEnableIDFxAccountlessSMSAuthForPart11 returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableIDFxAccountlessSMSAuthForPart11() bool {
	if o != nil && !IsNil(o.EnableIDFxAccountlessSMSAuthForPart11) {
		return true
	}

	return false
}

// SetEnableIDFxAccountlessSMSAuthForPart11 gets a reference to the given string and assigns it to the EnableIDFxAccountlessSMSAuthForPart11 field.
func (o *AccountSettingsInformation) SetEnableIDFxAccountlessSMSAuthForPart11(v string) {
	o.EnableIDFxAccountlessSMSAuthForPart11 = &v
}

// GetEnableIDFxAccountlessSMSAuthForPart11Metadata returns the EnableIDFxAccountlessSMSAuthForPart11Metadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableIDFxAccountlessSMSAuthForPart11Metadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableIDFxAccountlessSMSAuthForPart11Metadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableIDFxAccountlessSMSAuthForPart11Metadata
}

// GetEnableIDFxAccountlessSMSAuthForPart11MetadataOk returns a tuple with the EnableIDFxAccountlessSMSAuthForPart11Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableIDFxAccountlessSMSAuthForPart11MetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableIDFxAccountlessSMSAuthForPart11Metadata) {
		return nil, false
	}
	return o.EnableIDFxAccountlessSMSAuthForPart11Metadata, true
}

// HasEnableIDFxAccountlessSMSAuthForPart11Metadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableIDFxAccountlessSMSAuthForPart11Metadata() bool {
	if o != nil && !IsNil(o.EnableIDFxAccountlessSMSAuthForPart11Metadata) {
		return true
	}

	return false
}

// SetEnableIDFxAccountlessSMSAuthForPart11Metadata gets a reference to the given SettingsMetadata and assigns it to the EnableIDFxAccountlessSMSAuthForPart11Metadata field.
func (o *AccountSettingsInformation) SetEnableIDFxAccountlessSMSAuthForPart11Metadata(v SettingsMetadata) {
	o.EnableIDFxAccountlessSMSAuthForPart11Metadata = &v
}

// GetEnableIDFxIntuitKBA returns the EnableIDFxIntuitKBA field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableIDFxIntuitKBA() string {
	if o == nil || IsNil(o.EnableIDFxIntuitKBA) {
		var ret string
		return ret
	}
	return *o.EnableIDFxIntuitKBA
}

// GetEnableIDFxIntuitKBAOk returns a tuple with the EnableIDFxIntuitKBA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableIDFxIntuitKBAOk() (*string, bool) {
	if o == nil || IsNil(o.EnableIDFxIntuitKBA) {
		return nil, false
	}
	return o.EnableIDFxIntuitKBA, true
}

// HasEnableIDFxIntuitKBA returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableIDFxIntuitKBA() bool {
	if o != nil && !IsNil(o.EnableIDFxIntuitKBA) {
		return true
	}

	return false
}

// SetEnableIDFxIntuitKBA gets a reference to the given string and assigns it to the EnableIDFxIntuitKBA field.
func (o *AccountSettingsInformation) SetEnableIDFxIntuitKBA(v string) {
	o.EnableIDFxIntuitKBA = &v
}

// GetEnableIDFxIntuitKBAMetadata returns the EnableIDFxIntuitKBAMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableIDFxIntuitKBAMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableIDFxIntuitKBAMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableIDFxIntuitKBAMetadata
}

// GetEnableIDFxIntuitKBAMetadataOk returns a tuple with the EnableIDFxIntuitKBAMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableIDFxIntuitKBAMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableIDFxIntuitKBAMetadata) {
		return nil, false
	}
	return o.EnableIDFxIntuitKBAMetadata, true
}

// HasEnableIDFxIntuitKBAMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableIDFxIntuitKBAMetadata() bool {
	if o != nil && !IsNil(o.EnableIDFxIntuitKBAMetadata) {
		return true
	}

	return false
}

// SetEnableIDFxIntuitKBAMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableIDFxIntuitKBAMetadata field.
func (o *AccountSettingsInformation) SetEnableIDFxIntuitKBAMetadata(v SettingsMetadata) {
	o.EnableIDFxIntuitKBAMetadata = &v
}

// GetEnableIDFxPhoneAuthentication returns the EnableIDFxPhoneAuthentication field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableIDFxPhoneAuthentication() string {
	if o == nil || IsNil(o.EnableIDFxPhoneAuthentication) {
		var ret string
		return ret
	}
	return *o.EnableIDFxPhoneAuthentication
}

// GetEnableIDFxPhoneAuthenticationOk returns a tuple with the EnableIDFxPhoneAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableIDFxPhoneAuthenticationOk() (*string, bool) {
	if o == nil || IsNil(o.EnableIDFxPhoneAuthentication) {
		return nil, false
	}
	return o.EnableIDFxPhoneAuthentication, true
}

// HasEnableIDFxPhoneAuthentication returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableIDFxPhoneAuthentication() bool {
	if o != nil && !IsNil(o.EnableIDFxPhoneAuthentication) {
		return true
	}

	return false
}

// SetEnableIDFxPhoneAuthentication gets a reference to the given string and assigns it to the EnableIDFxPhoneAuthentication field.
func (o *AccountSettingsInformation) SetEnableIDFxPhoneAuthentication(v string) {
	o.EnableIDFxPhoneAuthentication = &v
}

// GetEnableIDFxPhoneAuthenticationMetadata returns the EnableIDFxPhoneAuthenticationMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableIDFxPhoneAuthenticationMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableIDFxPhoneAuthenticationMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableIDFxPhoneAuthenticationMetadata
}

// GetEnableIDFxPhoneAuthenticationMetadataOk returns a tuple with the EnableIDFxPhoneAuthenticationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableIDFxPhoneAuthenticationMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableIDFxPhoneAuthenticationMetadata) {
		return nil, false
	}
	return o.EnableIDFxPhoneAuthenticationMetadata, true
}

// HasEnableIDFxPhoneAuthenticationMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableIDFxPhoneAuthenticationMetadata() bool {
	if o != nil && !IsNil(o.EnableIDFxPhoneAuthenticationMetadata) {
		return true
	}

	return false
}

// SetEnableIDFxPhoneAuthenticationMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableIDFxPhoneAuthenticationMetadata field.
func (o *AccountSettingsInformation) SetEnableIDFxPhoneAuthenticationMetadata(v SettingsMetadata) {
	o.EnableIDFxPhoneAuthenticationMetadata = &v
}

// GetEnableIdfxPhoneAuthSignatureAuthStatus returns the EnableIdfxPhoneAuthSignatureAuthStatus field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableIdfxPhoneAuthSignatureAuthStatus() string {
	if o == nil || IsNil(o.EnableIdfxPhoneAuthSignatureAuthStatus) {
		var ret string
		return ret
	}
	return *o.EnableIdfxPhoneAuthSignatureAuthStatus
}

// GetEnableIdfxPhoneAuthSignatureAuthStatusOk returns a tuple with the EnableIdfxPhoneAuthSignatureAuthStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableIdfxPhoneAuthSignatureAuthStatusOk() (*string, bool) {
	if o == nil || IsNil(o.EnableIdfxPhoneAuthSignatureAuthStatus) {
		return nil, false
	}
	return o.EnableIdfxPhoneAuthSignatureAuthStatus, true
}

// HasEnableIdfxPhoneAuthSignatureAuthStatus returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableIdfxPhoneAuthSignatureAuthStatus() bool {
	if o != nil && !IsNil(o.EnableIdfxPhoneAuthSignatureAuthStatus) {
		return true
	}

	return false
}

// SetEnableIdfxPhoneAuthSignatureAuthStatus gets a reference to the given string and assigns it to the EnableIdfxPhoneAuthSignatureAuthStatus field.
func (o *AccountSettingsInformation) SetEnableIdfxPhoneAuthSignatureAuthStatus(v string) {
	o.EnableIdfxPhoneAuthSignatureAuthStatus = &v
}

// GetEnableIdfxPhoneAuthSignatureAuthStatusMetadata returns the EnableIdfxPhoneAuthSignatureAuthStatusMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableIdfxPhoneAuthSignatureAuthStatusMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableIdfxPhoneAuthSignatureAuthStatusMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableIdfxPhoneAuthSignatureAuthStatusMetadata
}

// GetEnableIdfxPhoneAuthSignatureAuthStatusMetadataOk returns a tuple with the EnableIdfxPhoneAuthSignatureAuthStatusMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableIdfxPhoneAuthSignatureAuthStatusMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableIdfxPhoneAuthSignatureAuthStatusMetadata) {
		return nil, false
	}
	return o.EnableIdfxPhoneAuthSignatureAuthStatusMetadata, true
}

// HasEnableIdfxPhoneAuthSignatureAuthStatusMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableIdfxPhoneAuthSignatureAuthStatusMetadata() bool {
	if o != nil && !IsNil(o.EnableIdfxPhoneAuthSignatureAuthStatusMetadata) {
		return true
	}

	return false
}

// SetEnableIdfxPhoneAuthSignatureAuthStatusMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableIdfxPhoneAuthSignatureAuthStatusMetadata field.
func (o *AccountSettingsInformation) SetEnableIdfxPhoneAuthSignatureAuthStatusMetadata(v SettingsMetadata) {
	o.EnableIdfxPhoneAuthSignatureAuthStatusMetadata = &v
}

// GetEnableInboxBrowseViewsPoweredByElasticSearch returns the EnableInboxBrowseViewsPoweredByElasticSearch field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableInboxBrowseViewsPoweredByElasticSearch() string {
	if o == nil || IsNil(o.EnableInboxBrowseViewsPoweredByElasticSearch) {
		var ret string
		return ret
	}
	return *o.EnableInboxBrowseViewsPoweredByElasticSearch
}

// GetEnableInboxBrowseViewsPoweredByElasticSearchOk returns a tuple with the EnableInboxBrowseViewsPoweredByElasticSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableInboxBrowseViewsPoweredByElasticSearchOk() (*string, bool) {
	if o == nil || IsNil(o.EnableInboxBrowseViewsPoweredByElasticSearch) {
		return nil, false
	}
	return o.EnableInboxBrowseViewsPoweredByElasticSearch, true
}

// HasEnableInboxBrowseViewsPoweredByElasticSearch returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableInboxBrowseViewsPoweredByElasticSearch() bool {
	if o != nil && !IsNil(o.EnableInboxBrowseViewsPoweredByElasticSearch) {
		return true
	}

	return false
}

// SetEnableInboxBrowseViewsPoweredByElasticSearch gets a reference to the given string and assigns it to the EnableInboxBrowseViewsPoweredByElasticSearch field.
func (o *AccountSettingsInformation) SetEnableInboxBrowseViewsPoweredByElasticSearch(v string) {
	o.EnableInboxBrowseViewsPoweredByElasticSearch = &v
}

// GetEnableInboxBrowseViewsPoweredByElasticSearchMetadata returns the EnableInboxBrowseViewsPoweredByElasticSearchMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableInboxBrowseViewsPoweredByElasticSearchMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableInboxBrowseViewsPoweredByElasticSearchMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableInboxBrowseViewsPoweredByElasticSearchMetadata
}

// GetEnableInboxBrowseViewsPoweredByElasticSearchMetadataOk returns a tuple with the EnableInboxBrowseViewsPoweredByElasticSearchMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableInboxBrowseViewsPoweredByElasticSearchMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableInboxBrowseViewsPoweredByElasticSearchMetadata) {
		return nil, false
	}
	return o.EnableInboxBrowseViewsPoweredByElasticSearchMetadata, true
}

// HasEnableInboxBrowseViewsPoweredByElasticSearchMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableInboxBrowseViewsPoweredByElasticSearchMetadata() bool {
	if o != nil && !IsNil(o.EnableInboxBrowseViewsPoweredByElasticSearchMetadata) {
		return true
	}

	return false
}

// SetEnableInboxBrowseViewsPoweredByElasticSearchMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableInboxBrowseViewsPoweredByElasticSearchMetadata field.
func (o *AccountSettingsInformation) SetEnableInboxBrowseViewsPoweredByElasticSearchMetadata(v SettingsMetadata) {
	o.EnableInboxBrowseViewsPoweredByElasticSearchMetadata = &v
}

// GetEnableInboxRelevanceSort returns the EnableInboxRelevanceSort field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableInboxRelevanceSort() string {
	if o == nil || IsNil(o.EnableInboxRelevanceSort) {
		var ret string
		return ret
	}
	return *o.EnableInboxRelevanceSort
}

// GetEnableInboxRelevanceSortOk returns a tuple with the EnableInboxRelevanceSort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableInboxRelevanceSortOk() (*string, bool) {
	if o == nil || IsNil(o.EnableInboxRelevanceSort) {
		return nil, false
	}
	return o.EnableInboxRelevanceSort, true
}

// HasEnableInboxRelevanceSort returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableInboxRelevanceSort() bool {
	if o != nil && !IsNil(o.EnableInboxRelevanceSort) {
		return true
	}

	return false
}

// SetEnableInboxRelevanceSort gets a reference to the given string and assigns it to the EnableInboxRelevanceSort field.
func (o *AccountSettingsInformation) SetEnableInboxRelevanceSort(v string) {
	o.EnableInboxRelevanceSort = &v
}

// GetEnableInboxRelevanceSortForRecentAccounts returns the EnableInboxRelevanceSortForRecentAccounts field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableInboxRelevanceSortForRecentAccounts() string {
	if o == nil || IsNil(o.EnableInboxRelevanceSortForRecentAccounts) {
		var ret string
		return ret
	}
	return *o.EnableInboxRelevanceSortForRecentAccounts
}

// GetEnableInboxRelevanceSortForRecentAccountsOk returns a tuple with the EnableInboxRelevanceSortForRecentAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableInboxRelevanceSortForRecentAccountsOk() (*string, bool) {
	if o == nil || IsNil(o.EnableInboxRelevanceSortForRecentAccounts) {
		return nil, false
	}
	return o.EnableInboxRelevanceSortForRecentAccounts, true
}

// HasEnableInboxRelevanceSortForRecentAccounts returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableInboxRelevanceSortForRecentAccounts() bool {
	if o != nil && !IsNil(o.EnableInboxRelevanceSortForRecentAccounts) {
		return true
	}

	return false
}

// SetEnableInboxRelevanceSortForRecentAccounts gets a reference to the given string and assigns it to the EnableInboxRelevanceSortForRecentAccounts field.
func (o *AccountSettingsInformation) SetEnableInboxRelevanceSortForRecentAccounts(v string) {
	o.EnableInboxRelevanceSortForRecentAccounts = &v
}

// GetEnableInboxRelevanceSortForRecentAccountsMetadata returns the EnableInboxRelevanceSortForRecentAccountsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableInboxRelevanceSortForRecentAccountsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableInboxRelevanceSortForRecentAccountsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableInboxRelevanceSortForRecentAccountsMetadata
}

// GetEnableInboxRelevanceSortForRecentAccountsMetadataOk returns a tuple with the EnableInboxRelevanceSortForRecentAccountsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableInboxRelevanceSortForRecentAccountsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableInboxRelevanceSortForRecentAccountsMetadata) {
		return nil, false
	}
	return o.EnableInboxRelevanceSortForRecentAccountsMetadata, true
}

// HasEnableInboxRelevanceSortForRecentAccountsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableInboxRelevanceSortForRecentAccountsMetadata() bool {
	if o != nil && !IsNil(o.EnableInboxRelevanceSortForRecentAccountsMetadata) {
		return true
	}

	return false
}

// SetEnableInboxRelevanceSortForRecentAccountsMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableInboxRelevanceSortForRecentAccountsMetadata field.
func (o *AccountSettingsInformation) SetEnableInboxRelevanceSortForRecentAccountsMetadata(v SettingsMetadata) {
	o.EnableInboxRelevanceSortForRecentAccountsMetadata = &v
}

// GetEnableInboxRelevanceSortMetadata returns the EnableInboxRelevanceSortMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableInboxRelevanceSortMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableInboxRelevanceSortMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableInboxRelevanceSortMetadata
}

// GetEnableInboxRelevanceSortMetadataOk returns a tuple with the EnableInboxRelevanceSortMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableInboxRelevanceSortMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableInboxRelevanceSortMetadata) {
		return nil, false
	}
	return o.EnableInboxRelevanceSortMetadata, true
}

// HasEnableInboxRelevanceSortMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableInboxRelevanceSortMetadata() bool {
	if o != nil && !IsNil(o.EnableInboxRelevanceSortMetadata) {
		return true
	}

	return false
}

// SetEnableInboxRelevanceSortMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableInboxRelevanceSortMetadata field.
func (o *AccountSettingsInformation) SetEnableInboxRelevanceSortMetadata(v SettingsMetadata) {
	o.EnableInboxRelevanceSortMetadata = &v
}

// GetEnableInBrowserEditor returns the EnableInBrowserEditor field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableInBrowserEditor() string {
	if o == nil || IsNil(o.EnableInBrowserEditor) {
		var ret string
		return ret
	}
	return *o.EnableInBrowserEditor
}

// GetEnableInBrowserEditorOk returns a tuple with the EnableInBrowserEditor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableInBrowserEditorOk() (*string, bool) {
	if o == nil || IsNil(o.EnableInBrowserEditor) {
		return nil, false
	}
	return o.EnableInBrowserEditor, true
}

// HasEnableInBrowserEditor returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableInBrowserEditor() bool {
	if o != nil && !IsNil(o.EnableInBrowserEditor) {
		return true
	}

	return false
}

// SetEnableInBrowserEditor gets a reference to the given string and assigns it to the EnableInBrowserEditor field.
func (o *AccountSettingsInformation) SetEnableInBrowserEditor(v string) {
	o.EnableInBrowserEditor = &v
}

// GetEnableInBrowserEditorMetadata returns the EnableInBrowserEditorMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableInBrowserEditorMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableInBrowserEditorMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableInBrowserEditorMetadata
}

// GetEnableInBrowserEditorMetadataOk returns a tuple with the EnableInBrowserEditorMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableInBrowserEditorMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableInBrowserEditorMetadata) {
		return nil, false
	}
	return o.EnableInBrowserEditorMetadata, true
}

// HasEnableInBrowserEditorMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableInBrowserEditorMetadata() bool {
	if o != nil && !IsNil(o.EnableInBrowserEditorMetadata) {
		return true
	}

	return false
}

// SetEnableInBrowserEditorMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableInBrowserEditorMetadata field.
func (o *AccountSettingsInformation) SetEnableInBrowserEditorMetadata(v SettingsMetadata) {
	o.EnableInBrowserEditorMetadata = &v
}

// GetEnableKeyTermsSuggestionsByDocumentType returns the EnableKeyTermsSuggestionsByDocumentType field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableKeyTermsSuggestionsByDocumentType() string {
	if o == nil || IsNil(o.EnableKeyTermsSuggestionsByDocumentType) {
		var ret string
		return ret
	}
	return *o.EnableKeyTermsSuggestionsByDocumentType
}

// GetEnableKeyTermsSuggestionsByDocumentTypeOk returns a tuple with the EnableKeyTermsSuggestionsByDocumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableKeyTermsSuggestionsByDocumentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EnableKeyTermsSuggestionsByDocumentType) {
		return nil, false
	}
	return o.EnableKeyTermsSuggestionsByDocumentType, true
}

// HasEnableKeyTermsSuggestionsByDocumentType returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableKeyTermsSuggestionsByDocumentType() bool {
	if o != nil && !IsNil(o.EnableKeyTermsSuggestionsByDocumentType) {
		return true
	}

	return false
}

// SetEnableKeyTermsSuggestionsByDocumentType gets a reference to the given string and assigns it to the EnableKeyTermsSuggestionsByDocumentType field.
func (o *AccountSettingsInformation) SetEnableKeyTermsSuggestionsByDocumentType(v string) {
	o.EnableKeyTermsSuggestionsByDocumentType = &v
}

// GetEnableKeyTermsSuggestionsByDocumentTypeMetadata returns the EnableKeyTermsSuggestionsByDocumentTypeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableKeyTermsSuggestionsByDocumentTypeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableKeyTermsSuggestionsByDocumentTypeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableKeyTermsSuggestionsByDocumentTypeMetadata
}

// GetEnableKeyTermsSuggestionsByDocumentTypeMetadataOk returns a tuple with the EnableKeyTermsSuggestionsByDocumentTypeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableKeyTermsSuggestionsByDocumentTypeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableKeyTermsSuggestionsByDocumentTypeMetadata) {
		return nil, false
	}
	return o.EnableKeyTermsSuggestionsByDocumentTypeMetadata, true
}

// HasEnableKeyTermsSuggestionsByDocumentTypeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableKeyTermsSuggestionsByDocumentTypeMetadata() bool {
	if o != nil && !IsNil(o.EnableKeyTermsSuggestionsByDocumentTypeMetadata) {
		return true
	}

	return false
}

// SetEnableKeyTermsSuggestionsByDocumentTypeMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableKeyTermsSuggestionsByDocumentTypeMetadata field.
func (o *AccountSettingsInformation) SetEnableKeyTermsSuggestionsByDocumentTypeMetadata(v SettingsMetadata) {
	o.EnableKeyTermsSuggestionsByDocumentTypeMetadata = &v
}

// GetEnableParticipantRecipientSettingMetadata returns the EnableParticipantRecipientSettingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableParticipantRecipientSettingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableParticipantRecipientSettingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableParticipantRecipientSettingMetadata
}

// GetEnableParticipantRecipientSettingMetadataOk returns a tuple with the EnableParticipantRecipientSettingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableParticipantRecipientSettingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableParticipantRecipientSettingMetadata) {
		return nil, false
	}
	return o.EnableParticipantRecipientSettingMetadata, true
}

// HasEnableParticipantRecipientSettingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableParticipantRecipientSettingMetadata() bool {
	if o != nil && !IsNil(o.EnableParticipantRecipientSettingMetadata) {
		return true
	}

	return false
}

// SetEnableParticipantRecipientSettingMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableParticipantRecipientSettingMetadata field.
func (o *AccountSettingsInformation) SetEnableParticipantRecipientSettingMetadata(v SettingsMetadata) {
	o.EnableParticipantRecipientSettingMetadata = &v
}

// GetEnablePaymentProcessing returns the EnablePaymentProcessing field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnablePaymentProcessing() string {
	if o == nil || IsNil(o.EnablePaymentProcessing) {
		var ret string
		return ret
	}
	return *o.EnablePaymentProcessing
}

// GetEnablePaymentProcessingOk returns a tuple with the EnablePaymentProcessing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnablePaymentProcessingOk() (*string, bool) {
	if o == nil || IsNil(o.EnablePaymentProcessing) {
		return nil, false
	}
	return o.EnablePaymentProcessing, true
}

// HasEnablePaymentProcessing returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnablePaymentProcessing() bool {
	if o != nil && !IsNil(o.EnablePaymentProcessing) {
		return true
	}

	return false
}

// SetEnablePaymentProcessing gets a reference to the given string and assigns it to the EnablePaymentProcessing field.
func (o *AccountSettingsInformation) SetEnablePaymentProcessing(v string) {
	o.EnablePaymentProcessing = &v
}

// GetEnablePaymentProcessingMetadata returns the EnablePaymentProcessingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnablePaymentProcessingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnablePaymentProcessingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnablePaymentProcessingMetadata
}

// GetEnablePaymentProcessingMetadataOk returns a tuple with the EnablePaymentProcessingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnablePaymentProcessingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnablePaymentProcessingMetadata) {
		return nil, false
	}
	return o.EnablePaymentProcessingMetadata, true
}

// HasEnablePaymentProcessingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnablePaymentProcessingMetadata() bool {
	if o != nil && !IsNil(o.EnablePaymentProcessingMetadata) {
		return true
	}

	return false
}

// SetEnablePaymentProcessingMetadata gets a reference to the given SettingsMetadata and assigns it to the EnablePaymentProcessingMetadata field.
func (o *AccountSettingsInformation) SetEnablePaymentProcessingMetadata(v SettingsMetadata) {
	o.EnablePaymentProcessingMetadata = &v
}

// GetEnablePDFAConversion returns the EnablePDFAConversion field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnablePDFAConversion() string {
	if o == nil || IsNil(o.EnablePDFAConversion) {
		var ret string
		return ret
	}
	return *o.EnablePDFAConversion
}

// GetEnablePDFAConversionOk returns a tuple with the EnablePDFAConversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnablePDFAConversionOk() (*string, bool) {
	if o == nil || IsNil(o.EnablePDFAConversion) {
		return nil, false
	}
	return o.EnablePDFAConversion, true
}

// HasEnablePDFAConversion returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnablePDFAConversion() bool {
	if o != nil && !IsNil(o.EnablePDFAConversion) {
		return true
	}

	return false
}

// SetEnablePDFAConversion gets a reference to the given string and assigns it to the EnablePDFAConversion field.
func (o *AccountSettingsInformation) SetEnablePDFAConversion(v string) {
	o.EnablePDFAConversion = &v
}

// GetEnablePDFAConversionMetadata returns the EnablePDFAConversionMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnablePDFAConversionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnablePDFAConversionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnablePDFAConversionMetadata
}

// GetEnablePDFAConversionMetadataOk returns a tuple with the EnablePDFAConversionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnablePDFAConversionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnablePDFAConversionMetadata) {
		return nil, false
	}
	return o.EnablePDFAConversionMetadata, true
}

// HasEnablePDFAConversionMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnablePDFAConversionMetadata() bool {
	if o != nil && !IsNil(o.EnablePDFAConversionMetadata) {
		return true
	}

	return false
}

// SetEnablePDFAConversionMetadata gets a reference to the given SettingsMetadata and assigns it to the EnablePDFAConversionMetadata field.
func (o *AccountSettingsInformation) SetEnablePDFAConversionMetadata(v SettingsMetadata) {
	o.EnablePDFAConversionMetadata = &v
}

// GetEnablePowerForm returns the EnablePowerForm field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnablePowerForm() string {
	if o == nil || IsNil(o.EnablePowerForm) {
		var ret string
		return ret
	}
	return *o.EnablePowerForm
}

// GetEnablePowerFormOk returns a tuple with the EnablePowerForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnablePowerFormOk() (*string, bool) {
	if o == nil || IsNil(o.EnablePowerForm) {
		return nil, false
	}
	return o.EnablePowerForm, true
}

// HasEnablePowerForm returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnablePowerForm() bool {
	if o != nil && !IsNil(o.EnablePowerForm) {
		return true
	}

	return false
}

// SetEnablePowerForm gets a reference to the given string and assigns it to the EnablePowerForm field.
func (o *AccountSettingsInformation) SetEnablePowerForm(v string) {
	o.EnablePowerForm = &v
}

// GetEnablePowerFormDirect returns the EnablePowerFormDirect field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnablePowerFormDirect() string {
	if o == nil || IsNil(o.EnablePowerFormDirect) {
		var ret string
		return ret
	}
	return *o.EnablePowerFormDirect
}

// GetEnablePowerFormDirectOk returns a tuple with the EnablePowerFormDirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnablePowerFormDirectOk() (*string, bool) {
	if o == nil || IsNil(o.EnablePowerFormDirect) {
		return nil, false
	}
	return o.EnablePowerFormDirect, true
}

// HasEnablePowerFormDirect returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnablePowerFormDirect() bool {
	if o != nil && !IsNil(o.EnablePowerFormDirect) {
		return true
	}

	return false
}

// SetEnablePowerFormDirect gets a reference to the given string and assigns it to the EnablePowerFormDirect field.
func (o *AccountSettingsInformation) SetEnablePowerFormDirect(v string) {
	o.EnablePowerFormDirect = &v
}

// GetEnablePowerFormDirectMetadata returns the EnablePowerFormDirectMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnablePowerFormDirectMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnablePowerFormDirectMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnablePowerFormDirectMetadata
}

// GetEnablePowerFormDirectMetadataOk returns a tuple with the EnablePowerFormDirectMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnablePowerFormDirectMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnablePowerFormDirectMetadata) {
		return nil, false
	}
	return o.EnablePowerFormDirectMetadata, true
}

// HasEnablePowerFormDirectMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnablePowerFormDirectMetadata() bool {
	if o != nil && !IsNil(o.EnablePowerFormDirectMetadata) {
		return true
	}

	return false
}

// SetEnablePowerFormDirectMetadata gets a reference to the given SettingsMetadata and assigns it to the EnablePowerFormDirectMetadata field.
func (o *AccountSettingsInformation) SetEnablePowerFormDirectMetadata(v SettingsMetadata) {
	o.EnablePowerFormDirectMetadata = &v
}

// GetEnablePowerFormMetadata returns the EnablePowerFormMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnablePowerFormMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnablePowerFormMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnablePowerFormMetadata
}

// GetEnablePowerFormMetadataOk returns a tuple with the EnablePowerFormMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnablePowerFormMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnablePowerFormMetadata) {
		return nil, false
	}
	return o.EnablePowerFormMetadata, true
}

// HasEnablePowerFormMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnablePowerFormMetadata() bool {
	if o != nil && !IsNil(o.EnablePowerFormMetadata) {
		return true
	}

	return false
}

// SetEnablePowerFormMetadata gets a reference to the given SettingsMetadata and assigns it to the EnablePowerFormMetadata field.
func (o *AccountSettingsInformation) SetEnablePowerFormMetadata(v SettingsMetadata) {
	o.EnablePowerFormMetadata = &v
}

// GetEnableRecipientDomainValidation returns the EnableRecipientDomainValidation field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableRecipientDomainValidation() string {
	if o == nil || IsNil(o.EnableRecipientDomainValidation) {
		var ret string
		return ret
	}
	return *o.EnableRecipientDomainValidation
}

// GetEnableRecipientDomainValidationOk returns a tuple with the EnableRecipientDomainValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableRecipientDomainValidationOk() (*string, bool) {
	if o == nil || IsNil(o.EnableRecipientDomainValidation) {
		return nil, false
	}
	return o.EnableRecipientDomainValidation, true
}

// HasEnableRecipientDomainValidation returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableRecipientDomainValidation() bool {
	if o != nil && !IsNil(o.EnableRecipientDomainValidation) {
		return true
	}

	return false
}

// SetEnableRecipientDomainValidation gets a reference to the given string and assigns it to the EnableRecipientDomainValidation field.
func (o *AccountSettingsInformation) SetEnableRecipientDomainValidation(v string) {
	o.EnableRecipientDomainValidation = &v
}

// GetEnableRecipientDomainValidationMetadata returns the EnableRecipientDomainValidationMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableRecipientDomainValidationMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableRecipientDomainValidationMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableRecipientDomainValidationMetadata
}

// GetEnableRecipientDomainValidationMetadataOk returns a tuple with the EnableRecipientDomainValidationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableRecipientDomainValidationMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableRecipientDomainValidationMetadata) {
		return nil, false
	}
	return o.EnableRecipientDomainValidationMetadata, true
}

// HasEnableRecipientDomainValidationMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableRecipientDomainValidationMetadata() bool {
	if o != nil && !IsNil(o.EnableRecipientDomainValidationMetadata) {
		return true
	}

	return false
}

// SetEnableRecipientDomainValidationMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableRecipientDomainValidationMetadata field.
func (o *AccountSettingsInformation) SetEnableRecipientDomainValidationMetadata(v SettingsMetadata) {
	o.EnableRecipientDomainValidationMetadata = &v
}

// GetEnableRecipientMayProvidePhoneNumber returns the EnableRecipientMayProvidePhoneNumber field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableRecipientMayProvidePhoneNumber() string {
	if o == nil || IsNil(o.EnableRecipientMayProvidePhoneNumber) {
		var ret string
		return ret
	}
	return *o.EnableRecipientMayProvidePhoneNumber
}

// GetEnableRecipientMayProvidePhoneNumberOk returns a tuple with the EnableRecipientMayProvidePhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableRecipientMayProvidePhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.EnableRecipientMayProvidePhoneNumber) {
		return nil, false
	}
	return o.EnableRecipientMayProvidePhoneNumber, true
}

// HasEnableRecipientMayProvidePhoneNumber returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableRecipientMayProvidePhoneNumber() bool {
	if o != nil && !IsNil(o.EnableRecipientMayProvidePhoneNumber) {
		return true
	}

	return false
}

// SetEnableRecipientMayProvidePhoneNumber gets a reference to the given string and assigns it to the EnableRecipientMayProvidePhoneNumber field.
func (o *AccountSettingsInformation) SetEnableRecipientMayProvidePhoneNumber(v string) {
	o.EnableRecipientMayProvidePhoneNumber = &v
}

// GetEnableRecipientMayProvidePhoneNumberMetadata returns the EnableRecipientMayProvidePhoneNumberMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableRecipientMayProvidePhoneNumberMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableRecipientMayProvidePhoneNumberMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableRecipientMayProvidePhoneNumberMetadata
}

// GetEnableRecipientMayProvidePhoneNumberMetadataOk returns a tuple with the EnableRecipientMayProvidePhoneNumberMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableRecipientMayProvidePhoneNumberMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableRecipientMayProvidePhoneNumberMetadata) {
		return nil, false
	}
	return o.EnableRecipientMayProvidePhoneNumberMetadata, true
}

// HasEnableRecipientMayProvidePhoneNumberMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableRecipientMayProvidePhoneNumberMetadata() bool {
	if o != nil && !IsNil(o.EnableRecipientMayProvidePhoneNumberMetadata) {
		return true
	}

	return false
}

// SetEnableRecipientMayProvidePhoneNumberMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableRecipientMayProvidePhoneNumberMetadata field.
func (o *AccountSettingsInformation) SetEnableRecipientMayProvidePhoneNumberMetadata(v SettingsMetadata) {
	o.EnableRecipientMayProvidePhoneNumberMetadata = &v
}

// GetEnableReportLinks returns the EnableReportLinks field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableReportLinks() string {
	if o == nil || IsNil(o.EnableReportLinks) {
		var ret string
		return ret
	}
	return *o.EnableReportLinks
}

// GetEnableReportLinksOk returns a tuple with the EnableReportLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableReportLinksOk() (*string, bool) {
	if o == nil || IsNil(o.EnableReportLinks) {
		return nil, false
	}
	return o.EnableReportLinks, true
}

// HasEnableReportLinks returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableReportLinks() bool {
	if o != nil && !IsNil(o.EnableReportLinks) {
		return true
	}

	return false
}

// SetEnableReportLinks gets a reference to the given string and assigns it to the EnableReportLinks field.
func (o *AccountSettingsInformation) SetEnableReportLinks(v string) {
	o.EnableReportLinks = &v
}

// GetEnableReportLinksMetadata returns the EnableReportLinksMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableReportLinksMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableReportLinksMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableReportLinksMetadata
}

// GetEnableReportLinksMetadataOk returns a tuple with the EnableReportLinksMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableReportLinksMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableReportLinksMetadata) {
		return nil, false
	}
	return o.EnableReportLinksMetadata, true
}

// HasEnableReportLinksMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableReportLinksMetadata() bool {
	if o != nil && !IsNil(o.EnableReportLinksMetadata) {
		return true
	}

	return false
}

// SetEnableReportLinksMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableReportLinksMetadata field.
func (o *AccountSettingsInformation) SetEnableReportLinksMetadata(v SettingsMetadata) {
	o.EnableReportLinksMetadata = &v
}

// GetEnableRequireSignOnPaper returns the EnableRequireSignOnPaper field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableRequireSignOnPaper() string {
	if o == nil || IsNil(o.EnableRequireSignOnPaper) {
		var ret string
		return ret
	}
	return *o.EnableRequireSignOnPaper
}

// GetEnableRequireSignOnPaperOk returns a tuple with the EnableRequireSignOnPaper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableRequireSignOnPaperOk() (*string, bool) {
	if o == nil || IsNil(o.EnableRequireSignOnPaper) {
		return nil, false
	}
	return o.EnableRequireSignOnPaper, true
}

// HasEnableRequireSignOnPaper returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableRequireSignOnPaper() bool {
	if o != nil && !IsNil(o.EnableRequireSignOnPaper) {
		return true
	}

	return false
}

// SetEnableRequireSignOnPaper gets a reference to the given string and assigns it to the EnableRequireSignOnPaper field.
func (o *AccountSettingsInformation) SetEnableRequireSignOnPaper(v string) {
	o.EnableRequireSignOnPaper = &v
}

// GetEnableRequireSignOnPaperMetadata returns the EnableRequireSignOnPaperMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableRequireSignOnPaperMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableRequireSignOnPaperMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableRequireSignOnPaperMetadata
}

// GetEnableRequireSignOnPaperMetadataOk returns a tuple with the EnableRequireSignOnPaperMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableRequireSignOnPaperMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableRequireSignOnPaperMetadata) {
		return nil, false
	}
	return o.EnableRequireSignOnPaperMetadata, true
}

// HasEnableRequireSignOnPaperMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableRequireSignOnPaperMetadata() bool {
	if o != nil && !IsNil(o.EnableRequireSignOnPaperMetadata) {
		return true
	}

	return false
}

// SetEnableRequireSignOnPaperMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableRequireSignOnPaperMetadata field.
func (o *AccountSettingsInformation) SetEnableRequireSignOnPaperMetadata(v SettingsMetadata) {
	o.EnableRequireSignOnPaperMetadata = &v
}

// GetEnableReservedDomain returns the EnableReservedDomain field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableReservedDomain() string {
	if o == nil || IsNil(o.EnableReservedDomain) {
		var ret string
		return ret
	}
	return *o.EnableReservedDomain
}

// GetEnableReservedDomainOk returns a tuple with the EnableReservedDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableReservedDomainOk() (*string, bool) {
	if o == nil || IsNil(o.EnableReservedDomain) {
		return nil, false
	}
	return o.EnableReservedDomain, true
}

// HasEnableReservedDomain returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableReservedDomain() bool {
	if o != nil && !IsNil(o.EnableReservedDomain) {
		return true
	}

	return false
}

// SetEnableReservedDomain gets a reference to the given string and assigns it to the EnableReservedDomain field.
func (o *AccountSettingsInformation) SetEnableReservedDomain(v string) {
	o.EnableReservedDomain = &v
}

// GetEnableReservedDomainMetadata returns the EnableReservedDomainMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableReservedDomainMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableReservedDomainMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableReservedDomainMetadata
}

// GetEnableReservedDomainMetadataOk returns a tuple with the EnableReservedDomainMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableReservedDomainMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableReservedDomainMetadata) {
		return nil, false
	}
	return o.EnableReservedDomainMetadata, true
}

// HasEnableReservedDomainMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableReservedDomainMetadata() bool {
	if o != nil && !IsNil(o.EnableReservedDomainMetadata) {
		return true
	}

	return false
}

// SetEnableReservedDomainMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableReservedDomainMetadata field.
func (o *AccountSettingsInformation) SetEnableReservedDomainMetadata(v SettingsMetadata) {
	o.EnableReservedDomainMetadata = &v
}

// GetEnableResponsiveSigning returns the EnableResponsiveSigning field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableResponsiveSigning() string {
	if o == nil || IsNil(o.EnableResponsiveSigning) {
		var ret string
		return ret
	}
	return *o.EnableResponsiveSigning
}

// GetEnableResponsiveSigningOk returns a tuple with the EnableResponsiveSigning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableResponsiveSigningOk() (*string, bool) {
	if o == nil || IsNil(o.EnableResponsiveSigning) {
		return nil, false
	}
	return o.EnableResponsiveSigning, true
}

// HasEnableResponsiveSigning returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableResponsiveSigning() bool {
	if o != nil && !IsNil(o.EnableResponsiveSigning) {
		return true
	}

	return false
}

// SetEnableResponsiveSigning gets a reference to the given string and assigns it to the EnableResponsiveSigning field.
func (o *AccountSettingsInformation) SetEnableResponsiveSigning(v string) {
	o.EnableResponsiveSigning = &v
}

// GetEnableResponsiveSigningMetadata returns the EnableResponsiveSigningMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableResponsiveSigningMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableResponsiveSigningMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableResponsiveSigningMetadata
}

// GetEnableResponsiveSigningMetadataOk returns a tuple with the EnableResponsiveSigningMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableResponsiveSigningMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableResponsiveSigningMetadata) {
		return nil, false
	}
	return o.EnableResponsiveSigningMetadata, true
}

// HasEnableResponsiveSigningMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableResponsiveSigningMetadata() bool {
	if o != nil && !IsNil(o.EnableResponsiveSigningMetadata) {
		return true
	}

	return false
}

// SetEnableResponsiveSigningMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableResponsiveSigningMetadata field.
func (o *AccountSettingsInformation) SetEnableResponsiveSigningMetadata(v SettingsMetadata) {
	o.EnableResponsiveSigningMetadata = &v
}

// GetEnableScheduledRelease returns the EnableScheduledRelease field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableScheduledRelease() string {
	if o == nil || IsNil(o.EnableScheduledRelease) {
		var ret string
		return ret
	}
	return *o.EnableScheduledRelease
}

// GetEnableScheduledReleaseOk returns a tuple with the EnableScheduledRelease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableScheduledReleaseOk() (*string, bool) {
	if o == nil || IsNil(o.EnableScheduledRelease) {
		return nil, false
	}
	return o.EnableScheduledRelease, true
}

// HasEnableScheduledRelease returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableScheduledRelease() bool {
	if o != nil && !IsNil(o.EnableScheduledRelease) {
		return true
	}

	return false
}

// SetEnableScheduledRelease gets a reference to the given string and assigns it to the EnableScheduledRelease field.
func (o *AccountSettingsInformation) SetEnableScheduledRelease(v string) {
	o.EnableScheduledRelease = &v
}

// GetEnableScheduledReleaseMetadata returns the EnableScheduledReleaseMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableScheduledReleaseMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableScheduledReleaseMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableScheduledReleaseMetadata
}

// GetEnableScheduledReleaseMetadataOk returns a tuple with the EnableScheduledReleaseMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableScheduledReleaseMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableScheduledReleaseMetadata) {
		return nil, false
	}
	return o.EnableScheduledReleaseMetadata, true
}

// HasEnableScheduledReleaseMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableScheduledReleaseMetadata() bool {
	if o != nil && !IsNil(o.EnableScheduledReleaseMetadata) {
		return true
	}

	return false
}

// SetEnableScheduledReleaseMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableScheduledReleaseMetadata field.
func (o *AccountSettingsInformation) SetEnableScheduledReleaseMetadata(v SettingsMetadata) {
	o.EnableScheduledReleaseMetadata = &v
}

// GetEnableSearch returns the EnableSearch field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSearch() string {
	if o == nil || IsNil(o.EnableSearch) {
		var ret string
		return ret
	}
	return *o.EnableSearch
}

// GetEnableSearchOk returns a tuple with the EnableSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSearchOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSearch) {
		return nil, false
	}
	return o.EnableSearch, true
}

// HasEnableSearch returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSearch() bool {
	if o != nil && !IsNil(o.EnableSearch) {
		return true
	}

	return false
}

// SetEnableSearch gets a reference to the given string and assigns it to the EnableSearch field.
func (o *AccountSettingsInformation) SetEnableSearch(v string) {
	o.EnableSearch = &v
}

// GetEnableSearchMetadata returns the EnableSearchMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSearchMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSearchMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSearchMetadata
}

// GetEnableSearchMetadataOk returns a tuple with the EnableSearchMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSearchMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSearchMetadata) {
		return nil, false
	}
	return o.EnableSearchMetadata, true
}

// HasEnableSearchMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSearchMetadata() bool {
	if o != nil && !IsNil(o.EnableSearchMetadata) {
		return true
	}

	return false
}

// SetEnableSearchMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSearchMetadata field.
func (o *AccountSettingsInformation) SetEnableSearchMetadata(v SettingsMetadata) {
	o.EnableSearchMetadata = &v
}

// GetEnableSearchServiceAzureUri returns the EnableSearchServiceAzureUri field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSearchServiceAzureUri() string {
	if o == nil || IsNil(o.EnableSearchServiceAzureUri) {
		var ret string
		return ret
	}
	return *o.EnableSearchServiceAzureUri
}

// GetEnableSearchServiceAzureUriOk returns a tuple with the EnableSearchServiceAzureUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSearchServiceAzureUriOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSearchServiceAzureUri) {
		return nil, false
	}
	return o.EnableSearchServiceAzureUri, true
}

// HasEnableSearchServiceAzureUri returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSearchServiceAzureUri() bool {
	if o != nil && !IsNil(o.EnableSearchServiceAzureUri) {
		return true
	}

	return false
}

// SetEnableSearchServiceAzureUri gets a reference to the given string and assigns it to the EnableSearchServiceAzureUri field.
func (o *AccountSettingsInformation) SetEnableSearchServiceAzureUri(v string) {
	o.EnableSearchServiceAzureUri = &v
}

// GetEnableSearchServiceAzureUriMetadata returns the EnableSearchServiceAzureUriMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSearchServiceAzureUriMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSearchServiceAzureUriMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSearchServiceAzureUriMetadata
}

// GetEnableSearchServiceAzureUriMetadataOk returns a tuple with the EnableSearchServiceAzureUriMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSearchServiceAzureUriMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSearchServiceAzureUriMetadata) {
		return nil, false
	}
	return o.EnableSearchServiceAzureUriMetadata, true
}

// HasEnableSearchServiceAzureUriMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSearchServiceAzureUriMetadata() bool {
	if o != nil && !IsNil(o.EnableSearchServiceAzureUriMetadata) {
		return true
	}

	return false
}

// SetEnableSearchServiceAzureUriMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSearchServiceAzureUriMetadata field.
func (o *AccountSettingsInformation) SetEnableSearchServiceAzureUriMetadata(v SettingsMetadata) {
	o.EnableSearchServiceAzureUriMetadata = &v
}

// GetEnableSearchSiteSpecificApi returns the EnableSearchSiteSpecificApi field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSearchSiteSpecificApi() string {
	if o == nil || IsNil(o.EnableSearchSiteSpecificApi) {
		var ret string
		return ret
	}
	return *o.EnableSearchSiteSpecificApi
}

// GetEnableSearchSiteSpecificApiOk returns a tuple with the EnableSearchSiteSpecificApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSearchSiteSpecificApiOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSearchSiteSpecificApi) {
		return nil, false
	}
	return o.EnableSearchSiteSpecificApi, true
}

// HasEnableSearchSiteSpecificApi returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSearchSiteSpecificApi() bool {
	if o != nil && !IsNil(o.EnableSearchSiteSpecificApi) {
		return true
	}

	return false
}

// SetEnableSearchSiteSpecificApi gets a reference to the given string and assigns it to the EnableSearchSiteSpecificApi field.
func (o *AccountSettingsInformation) SetEnableSearchSiteSpecificApi(v string) {
	o.EnableSearchSiteSpecificApi = &v
}

// GetEnableSearchSiteSpecificApiMetadata returns the EnableSearchSiteSpecificApiMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSearchSiteSpecificApiMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSearchSiteSpecificApiMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSearchSiteSpecificApiMetadata
}

// GetEnableSearchSiteSpecificApiMetadataOk returns a tuple with the EnableSearchSiteSpecificApiMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSearchSiteSpecificApiMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSearchSiteSpecificApiMetadata) {
		return nil, false
	}
	return o.EnableSearchSiteSpecificApiMetadata, true
}

// HasEnableSearchSiteSpecificApiMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSearchSiteSpecificApiMetadata() bool {
	if o != nil && !IsNil(o.EnableSearchSiteSpecificApiMetadata) {
		return true
	}

	return false
}

// SetEnableSearchSiteSpecificApiMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSearchSiteSpecificApiMetadata field.
func (o *AccountSettingsInformation) SetEnableSearchSiteSpecificApiMetadata(v SettingsMetadata) {
	o.EnableSearchSiteSpecificApiMetadata = &v
}

// GetEnableSearchUI returns the EnableSearchUI field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSearchUI() string {
	if o == nil || IsNil(o.EnableSearchUI) {
		var ret string
		return ret
	}
	return *o.EnableSearchUI
}

// GetEnableSearchUIOk returns a tuple with the EnableSearchUI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSearchUIOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSearchUI) {
		return nil, false
	}
	return o.EnableSearchUI, true
}

// HasEnableSearchUI returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSearchUI() bool {
	if o != nil && !IsNil(o.EnableSearchUI) {
		return true
	}

	return false
}

// SetEnableSearchUI gets a reference to the given string and assigns it to the EnableSearchUI field.
func (o *AccountSettingsInformation) SetEnableSearchUI(v string) {
	o.EnableSearchUI = &v
}

// GetEnableSearchUIMetadata returns the EnableSearchUIMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSearchUIMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSearchUIMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSearchUIMetadata
}

// GetEnableSearchUIMetadataOk returns a tuple with the EnableSearchUIMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSearchUIMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSearchUIMetadata) {
		return nil, false
	}
	return o.EnableSearchUIMetadata, true
}

// HasEnableSearchUIMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSearchUIMetadata() bool {
	if o != nil && !IsNil(o.EnableSearchUIMetadata) {
		return true
	}

	return false
}

// SetEnableSearchUIMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSearchUIMetadata field.
func (o *AccountSettingsInformation) SetEnableSearchUIMetadata(v SettingsMetadata) {
	o.EnableSearchUIMetadata = &v
}

// GetEnableSendingTagsFontSettings returns the EnableSendingTagsFontSettings field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSendingTagsFontSettings() string {
	if o == nil || IsNil(o.EnableSendingTagsFontSettings) {
		var ret string
		return ret
	}
	return *o.EnableSendingTagsFontSettings
}

// GetEnableSendingTagsFontSettingsOk returns a tuple with the EnableSendingTagsFontSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSendingTagsFontSettingsOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSendingTagsFontSettings) {
		return nil, false
	}
	return o.EnableSendingTagsFontSettings, true
}

// HasEnableSendingTagsFontSettings returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSendingTagsFontSettings() bool {
	if o != nil && !IsNil(o.EnableSendingTagsFontSettings) {
		return true
	}

	return false
}

// SetEnableSendingTagsFontSettings gets a reference to the given string and assigns it to the EnableSendingTagsFontSettings field.
func (o *AccountSettingsInformation) SetEnableSendingTagsFontSettings(v string) {
	o.EnableSendingTagsFontSettings = &v
}

// GetEnableSendingTagsFontSettingsMetadata returns the EnableSendingTagsFontSettingsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSendingTagsFontSettingsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSendingTagsFontSettingsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSendingTagsFontSettingsMetadata
}

// GetEnableSendingTagsFontSettingsMetadataOk returns a tuple with the EnableSendingTagsFontSettingsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSendingTagsFontSettingsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSendingTagsFontSettingsMetadata) {
		return nil, false
	}
	return o.EnableSendingTagsFontSettingsMetadata, true
}

// HasEnableSendingTagsFontSettingsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSendingTagsFontSettingsMetadata() bool {
	if o != nil && !IsNil(o.EnableSendingTagsFontSettingsMetadata) {
		return true
	}

	return false
}

// SetEnableSendingTagsFontSettingsMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSendingTagsFontSettingsMetadata field.
func (o *AccountSettingsInformation) SetEnableSendingTagsFontSettingsMetadata(v SettingsMetadata) {
	o.EnableSendingTagsFontSettingsMetadata = &v
}

// GetEnableSendToAgent returns the EnableSendToAgent field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSendToAgent() string {
	if o == nil || IsNil(o.EnableSendToAgent) {
		var ret string
		return ret
	}
	return *o.EnableSendToAgent
}

// GetEnableSendToAgentOk returns a tuple with the EnableSendToAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSendToAgentOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSendToAgent) {
		return nil, false
	}
	return o.EnableSendToAgent, true
}

// HasEnableSendToAgent returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSendToAgent() bool {
	if o != nil && !IsNil(o.EnableSendToAgent) {
		return true
	}

	return false
}

// SetEnableSendToAgent gets a reference to the given string and assigns it to the EnableSendToAgent field.
func (o *AccountSettingsInformation) SetEnableSendToAgent(v string) {
	o.EnableSendToAgent = &v
}

// GetEnableSendToAgentMetadata returns the EnableSendToAgentMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSendToAgentMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSendToAgentMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSendToAgentMetadata
}

// GetEnableSendToAgentMetadataOk returns a tuple with the EnableSendToAgentMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSendToAgentMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSendToAgentMetadata) {
		return nil, false
	}
	return o.EnableSendToAgentMetadata, true
}

// HasEnableSendToAgentMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSendToAgentMetadata() bool {
	if o != nil && !IsNil(o.EnableSendToAgentMetadata) {
		return true
	}

	return false
}

// SetEnableSendToAgentMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSendToAgentMetadata field.
func (o *AccountSettingsInformation) SetEnableSendToAgentMetadata(v SettingsMetadata) {
	o.EnableSendToAgentMetadata = &v
}

// GetEnableSendToIntermediary returns the EnableSendToIntermediary field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSendToIntermediary() string {
	if o == nil || IsNil(o.EnableSendToIntermediary) {
		var ret string
		return ret
	}
	return *o.EnableSendToIntermediary
}

// GetEnableSendToIntermediaryOk returns a tuple with the EnableSendToIntermediary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSendToIntermediaryOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSendToIntermediary) {
		return nil, false
	}
	return o.EnableSendToIntermediary, true
}

// HasEnableSendToIntermediary returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSendToIntermediary() bool {
	if o != nil && !IsNil(o.EnableSendToIntermediary) {
		return true
	}

	return false
}

// SetEnableSendToIntermediary gets a reference to the given string and assigns it to the EnableSendToIntermediary field.
func (o *AccountSettingsInformation) SetEnableSendToIntermediary(v string) {
	o.EnableSendToIntermediary = &v
}

// GetEnableSendToIntermediaryMetadata returns the EnableSendToIntermediaryMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSendToIntermediaryMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSendToIntermediaryMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSendToIntermediaryMetadata
}

// GetEnableSendToIntermediaryMetadataOk returns a tuple with the EnableSendToIntermediaryMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSendToIntermediaryMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSendToIntermediaryMetadata) {
		return nil, false
	}
	return o.EnableSendToIntermediaryMetadata, true
}

// HasEnableSendToIntermediaryMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSendToIntermediaryMetadata() bool {
	if o != nil && !IsNil(o.EnableSendToIntermediaryMetadata) {
		return true
	}

	return false
}

// SetEnableSendToIntermediaryMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSendToIntermediaryMetadata field.
func (o *AccountSettingsInformation) SetEnableSendToIntermediaryMetadata(v SettingsMetadata) {
	o.EnableSendToIntermediaryMetadata = &v
}

// GetEnableSendToManage returns the EnableSendToManage field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSendToManage() string {
	if o == nil || IsNil(o.EnableSendToManage) {
		var ret string
		return ret
	}
	return *o.EnableSendToManage
}

// GetEnableSendToManageOk returns a tuple with the EnableSendToManage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSendToManageOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSendToManage) {
		return nil, false
	}
	return o.EnableSendToManage, true
}

// HasEnableSendToManage returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSendToManage() bool {
	if o != nil && !IsNil(o.EnableSendToManage) {
		return true
	}

	return false
}

// SetEnableSendToManage gets a reference to the given string and assigns it to the EnableSendToManage field.
func (o *AccountSettingsInformation) SetEnableSendToManage(v string) {
	o.EnableSendToManage = &v
}

// GetEnableSendToManageMetadata returns the EnableSendToManageMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSendToManageMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSendToManageMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSendToManageMetadata
}

// GetEnableSendToManageMetadataOk returns a tuple with the EnableSendToManageMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSendToManageMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSendToManageMetadata) {
		return nil, false
	}
	return o.EnableSendToManageMetadata, true
}

// HasEnableSendToManageMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSendToManageMetadata() bool {
	if o != nil && !IsNil(o.EnableSendToManageMetadata) {
		return true
	}

	return false
}

// SetEnableSendToManageMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSendToManageMetadata field.
func (o *AccountSettingsInformation) SetEnableSendToManageMetadata(v SettingsMetadata) {
	o.EnableSendToManageMetadata = &v
}

// GetEnableSequentialSigningAPI returns the EnableSequentialSigningAPI field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSequentialSigningAPI() string {
	if o == nil || IsNil(o.EnableSequentialSigningAPI) {
		var ret string
		return ret
	}
	return *o.EnableSequentialSigningAPI
}

// GetEnableSequentialSigningAPIOk returns a tuple with the EnableSequentialSigningAPI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSequentialSigningAPIOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSequentialSigningAPI) {
		return nil, false
	}
	return o.EnableSequentialSigningAPI, true
}

// HasEnableSequentialSigningAPI returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSequentialSigningAPI() bool {
	if o != nil && !IsNil(o.EnableSequentialSigningAPI) {
		return true
	}

	return false
}

// SetEnableSequentialSigningAPI gets a reference to the given string and assigns it to the EnableSequentialSigningAPI field.
func (o *AccountSettingsInformation) SetEnableSequentialSigningAPI(v string) {
	o.EnableSequentialSigningAPI = &v
}

// GetEnableSequentialSigningAPIMetadata returns the EnableSequentialSigningAPIMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSequentialSigningAPIMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSequentialSigningAPIMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSequentialSigningAPIMetadata
}

// GetEnableSequentialSigningAPIMetadataOk returns a tuple with the EnableSequentialSigningAPIMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSequentialSigningAPIMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSequentialSigningAPIMetadata) {
		return nil, false
	}
	return o.EnableSequentialSigningAPIMetadata, true
}

// HasEnableSequentialSigningAPIMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSequentialSigningAPIMetadata() bool {
	if o != nil && !IsNil(o.EnableSequentialSigningAPIMetadata) {
		return true
	}

	return false
}

// SetEnableSequentialSigningAPIMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSequentialSigningAPIMetadata field.
func (o *AccountSettingsInformation) SetEnableSequentialSigningAPIMetadata(v SettingsMetadata) {
	o.EnableSequentialSigningAPIMetadata = &v
}

// GetEnableSequentialSigningUI returns the EnableSequentialSigningUI field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSequentialSigningUI() string {
	if o == nil || IsNil(o.EnableSequentialSigningUI) {
		var ret string
		return ret
	}
	return *o.EnableSequentialSigningUI
}

// GetEnableSequentialSigningUIOk returns a tuple with the EnableSequentialSigningUI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSequentialSigningUIOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSequentialSigningUI) {
		return nil, false
	}
	return o.EnableSequentialSigningUI, true
}

// HasEnableSequentialSigningUI returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSequentialSigningUI() bool {
	if o != nil && !IsNil(o.EnableSequentialSigningUI) {
		return true
	}

	return false
}

// SetEnableSequentialSigningUI gets a reference to the given string and assigns it to the EnableSequentialSigningUI field.
func (o *AccountSettingsInformation) SetEnableSequentialSigningUI(v string) {
	o.EnableSequentialSigningUI = &v
}

// GetEnableSequentialSigningUIMetadata returns the EnableSequentialSigningUIMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSequentialSigningUIMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSequentialSigningUIMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSequentialSigningUIMetadata
}

// GetEnableSequentialSigningUIMetadataOk returns a tuple with the EnableSequentialSigningUIMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSequentialSigningUIMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSequentialSigningUIMetadata) {
		return nil, false
	}
	return o.EnableSequentialSigningUIMetadata, true
}

// HasEnableSequentialSigningUIMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSequentialSigningUIMetadata() bool {
	if o != nil && !IsNil(o.EnableSequentialSigningUIMetadata) {
		return true
	}

	return false
}

// SetEnableSequentialSigningUIMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSequentialSigningUIMetadata field.
func (o *AccountSettingsInformation) SetEnableSequentialSigningUIMetadata(v SettingsMetadata) {
	o.EnableSequentialSigningUIMetadata = &v
}

// GetEnableSignerAttachments returns the EnableSignerAttachments field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSignerAttachments() string {
	if o == nil || IsNil(o.EnableSignerAttachments) {
		var ret string
		return ret
	}
	return *o.EnableSignerAttachments
}

// GetEnableSignerAttachmentsOk returns a tuple with the EnableSignerAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSignerAttachmentsOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSignerAttachments) {
		return nil, false
	}
	return o.EnableSignerAttachments, true
}

// HasEnableSignerAttachments returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSignerAttachments() bool {
	if o != nil && !IsNil(o.EnableSignerAttachments) {
		return true
	}

	return false
}

// SetEnableSignerAttachments gets a reference to the given string and assigns it to the EnableSignerAttachments field.
func (o *AccountSettingsInformation) SetEnableSignerAttachments(v string) {
	o.EnableSignerAttachments = &v
}

// GetEnableSignerAttachmentsMetadata returns the EnableSignerAttachmentsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSignerAttachmentsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSignerAttachmentsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSignerAttachmentsMetadata
}

// GetEnableSignerAttachmentsMetadataOk returns a tuple with the EnableSignerAttachmentsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSignerAttachmentsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSignerAttachmentsMetadata) {
		return nil, false
	}
	return o.EnableSignerAttachmentsMetadata, true
}

// HasEnableSignerAttachmentsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSignerAttachmentsMetadata() bool {
	if o != nil && !IsNil(o.EnableSignerAttachmentsMetadata) {
		return true
	}

	return false
}

// SetEnableSignerAttachmentsMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSignerAttachmentsMetadata field.
func (o *AccountSettingsInformation) SetEnableSignerAttachmentsMetadata(v SettingsMetadata) {
	o.EnableSignerAttachmentsMetadata = &v
}

// GetEnableSigningExtensionComments returns the EnableSigningExtensionComments field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSigningExtensionComments() string {
	if o == nil || IsNil(o.EnableSigningExtensionComments) {
		var ret string
		return ret
	}
	return *o.EnableSigningExtensionComments
}

// GetEnableSigningExtensionCommentsOk returns a tuple with the EnableSigningExtensionComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSigningExtensionCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSigningExtensionComments) {
		return nil, false
	}
	return o.EnableSigningExtensionComments, true
}

// HasEnableSigningExtensionComments returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSigningExtensionComments() bool {
	if o != nil && !IsNil(o.EnableSigningExtensionComments) {
		return true
	}

	return false
}

// SetEnableSigningExtensionComments gets a reference to the given string and assigns it to the EnableSigningExtensionComments field.
func (o *AccountSettingsInformation) SetEnableSigningExtensionComments(v string) {
	o.EnableSigningExtensionComments = &v
}

// GetEnableSigningExtensionCommentsMetadata returns the EnableSigningExtensionCommentsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSigningExtensionCommentsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSigningExtensionCommentsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSigningExtensionCommentsMetadata
}

// GetEnableSigningExtensionCommentsMetadataOk returns a tuple with the EnableSigningExtensionCommentsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSigningExtensionCommentsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSigningExtensionCommentsMetadata) {
		return nil, false
	}
	return o.EnableSigningExtensionCommentsMetadata, true
}

// HasEnableSigningExtensionCommentsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSigningExtensionCommentsMetadata() bool {
	if o != nil && !IsNil(o.EnableSigningExtensionCommentsMetadata) {
		return true
	}

	return false
}

// SetEnableSigningExtensionCommentsMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSigningExtensionCommentsMetadata field.
func (o *AccountSettingsInformation) SetEnableSigningExtensionCommentsMetadata(v SettingsMetadata) {
	o.EnableSigningExtensionCommentsMetadata = &v
}

// GetEnableSigningExtensionConversations returns the EnableSigningExtensionConversations field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSigningExtensionConversations() string {
	if o == nil || IsNil(o.EnableSigningExtensionConversations) {
		var ret string
		return ret
	}
	return *o.EnableSigningExtensionConversations
}

// GetEnableSigningExtensionConversationsOk returns a tuple with the EnableSigningExtensionConversations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSigningExtensionConversationsOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSigningExtensionConversations) {
		return nil, false
	}
	return o.EnableSigningExtensionConversations, true
}

// HasEnableSigningExtensionConversations returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSigningExtensionConversations() bool {
	if o != nil && !IsNil(o.EnableSigningExtensionConversations) {
		return true
	}

	return false
}

// SetEnableSigningExtensionConversations gets a reference to the given string and assigns it to the EnableSigningExtensionConversations field.
func (o *AccountSettingsInformation) SetEnableSigningExtensionConversations(v string) {
	o.EnableSigningExtensionConversations = &v
}

// GetEnableSigningExtensionConversationsMetadata returns the EnableSigningExtensionConversationsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSigningExtensionConversationsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSigningExtensionConversationsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSigningExtensionConversationsMetadata
}

// GetEnableSigningExtensionConversationsMetadataOk returns a tuple with the EnableSigningExtensionConversationsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSigningExtensionConversationsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSigningExtensionConversationsMetadata) {
		return nil, false
	}
	return o.EnableSigningExtensionConversationsMetadata, true
}

// HasEnableSigningExtensionConversationsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSigningExtensionConversationsMetadata() bool {
	if o != nil && !IsNil(o.EnableSigningExtensionConversationsMetadata) {
		return true
	}

	return false
}

// SetEnableSigningExtensionConversationsMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSigningExtensionConversationsMetadata field.
func (o *AccountSettingsInformation) SetEnableSigningExtensionConversationsMetadata(v SettingsMetadata) {
	o.EnableSigningExtensionConversationsMetadata = &v
}

// GetEnableSigningOrderSettingsForAccount returns the EnableSigningOrderSettingsForAccount field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSigningOrderSettingsForAccount() string {
	if o == nil || IsNil(o.EnableSigningOrderSettingsForAccount) {
		var ret string
		return ret
	}
	return *o.EnableSigningOrderSettingsForAccount
}

// GetEnableSigningOrderSettingsForAccountOk returns a tuple with the EnableSigningOrderSettingsForAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSigningOrderSettingsForAccountOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSigningOrderSettingsForAccount) {
		return nil, false
	}
	return o.EnableSigningOrderSettingsForAccount, true
}

// HasEnableSigningOrderSettingsForAccount returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSigningOrderSettingsForAccount() bool {
	if o != nil && !IsNil(o.EnableSigningOrderSettingsForAccount) {
		return true
	}

	return false
}

// SetEnableSigningOrderSettingsForAccount gets a reference to the given string and assigns it to the EnableSigningOrderSettingsForAccount field.
func (o *AccountSettingsInformation) SetEnableSigningOrderSettingsForAccount(v string) {
	o.EnableSigningOrderSettingsForAccount = &v
}

// GetEnableSigningOrderSettingsForAccountMetadata returns the EnableSigningOrderSettingsForAccountMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSigningOrderSettingsForAccountMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSigningOrderSettingsForAccountMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSigningOrderSettingsForAccountMetadata
}

// GetEnableSigningOrderSettingsForAccountMetadataOk returns a tuple with the EnableSigningOrderSettingsForAccountMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSigningOrderSettingsForAccountMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSigningOrderSettingsForAccountMetadata) {
		return nil, false
	}
	return o.EnableSigningOrderSettingsForAccountMetadata, true
}

// HasEnableSigningOrderSettingsForAccountMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSigningOrderSettingsForAccountMetadata() bool {
	if o != nil && !IsNil(o.EnableSigningOrderSettingsForAccountMetadata) {
		return true
	}

	return false
}

// SetEnableSigningOrderSettingsForAccountMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSigningOrderSettingsForAccountMetadata field.
func (o *AccountSettingsInformation) SetEnableSigningOrderSettingsForAccountMetadata(v SettingsMetadata) {
	o.EnableSigningOrderSettingsForAccountMetadata = &v
}

// GetEnableSignOnPaper returns the EnableSignOnPaper field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSignOnPaper() string {
	if o == nil || IsNil(o.EnableSignOnPaper) {
		var ret string
		return ret
	}
	return *o.EnableSignOnPaper
}

// GetEnableSignOnPaperOk returns a tuple with the EnableSignOnPaper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSignOnPaperOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSignOnPaper) {
		return nil, false
	}
	return o.EnableSignOnPaper, true
}

// HasEnableSignOnPaper returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSignOnPaper() bool {
	if o != nil && !IsNil(o.EnableSignOnPaper) {
		return true
	}

	return false
}

// SetEnableSignOnPaper gets a reference to the given string and assigns it to the EnableSignOnPaper field.
func (o *AccountSettingsInformation) SetEnableSignOnPaper(v string) {
	o.EnableSignOnPaper = &v
}

// GetEnableSignOnPaperMetadata returns the EnableSignOnPaperMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSignOnPaperMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSignOnPaperMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSignOnPaperMetadata
}

// GetEnableSignOnPaperMetadataOk returns a tuple with the EnableSignOnPaperMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSignOnPaperMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSignOnPaperMetadata) {
		return nil, false
	}
	return o.EnableSignOnPaperMetadata, true
}

// HasEnableSignOnPaperMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSignOnPaperMetadata() bool {
	if o != nil && !IsNil(o.EnableSignOnPaperMetadata) {
		return true
	}

	return false
}

// SetEnableSignOnPaperMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSignOnPaperMetadata field.
func (o *AccountSettingsInformation) SetEnableSignOnPaperMetadata(v SettingsMetadata) {
	o.EnableSignOnPaperMetadata = &v
}

// GetEnableSignOnPaperOverride returns the EnableSignOnPaperOverride field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSignOnPaperOverride() string {
	if o == nil || IsNil(o.EnableSignOnPaperOverride) {
		var ret string
		return ret
	}
	return *o.EnableSignOnPaperOverride
}

// GetEnableSignOnPaperOverrideOk returns a tuple with the EnableSignOnPaperOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSignOnPaperOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSignOnPaperOverride) {
		return nil, false
	}
	return o.EnableSignOnPaperOverride, true
}

// HasEnableSignOnPaperOverride returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSignOnPaperOverride() bool {
	if o != nil && !IsNil(o.EnableSignOnPaperOverride) {
		return true
	}

	return false
}

// SetEnableSignOnPaperOverride gets a reference to the given string and assigns it to the EnableSignOnPaperOverride field.
func (o *AccountSettingsInformation) SetEnableSignOnPaperOverride(v string) {
	o.EnableSignOnPaperOverride = &v
}

// GetEnableSignOnPaperOverrideMetadata returns the EnableSignOnPaperOverrideMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSignOnPaperOverrideMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSignOnPaperOverrideMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSignOnPaperOverrideMetadata
}

// GetEnableSignOnPaperOverrideMetadataOk returns a tuple with the EnableSignOnPaperOverrideMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSignOnPaperOverrideMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSignOnPaperOverrideMetadata) {
		return nil, false
	}
	return o.EnableSignOnPaperOverrideMetadata, true
}

// HasEnableSignOnPaperOverrideMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSignOnPaperOverrideMetadata() bool {
	if o != nil && !IsNil(o.EnableSignOnPaperOverrideMetadata) {
		return true
	}

	return false
}

// SetEnableSignOnPaperOverrideMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSignOnPaperOverrideMetadata field.
func (o *AccountSettingsInformation) SetEnableSignOnPaperOverrideMetadata(v SettingsMetadata) {
	o.EnableSignOnPaperOverrideMetadata = &v
}

// GetEnableSignWithNotary returns the EnableSignWithNotary field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSignWithNotary() string {
	if o == nil || IsNil(o.EnableSignWithNotary) {
		var ret string
		return ret
	}
	return *o.EnableSignWithNotary
}

// GetEnableSignWithNotaryOk returns a tuple with the EnableSignWithNotary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSignWithNotaryOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSignWithNotary) {
		return nil, false
	}
	return o.EnableSignWithNotary, true
}

// HasEnableSignWithNotary returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSignWithNotary() bool {
	if o != nil && !IsNil(o.EnableSignWithNotary) {
		return true
	}

	return false
}

// SetEnableSignWithNotary gets a reference to the given string and assigns it to the EnableSignWithNotary field.
func (o *AccountSettingsInformation) SetEnableSignWithNotary(v string) {
	o.EnableSignWithNotary = &v
}

// GetEnableSignWithNotaryMetadata returns the EnableSignWithNotaryMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSignWithNotaryMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSignWithNotaryMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSignWithNotaryMetadata
}

// GetEnableSignWithNotaryMetadataOk returns a tuple with the EnableSignWithNotaryMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSignWithNotaryMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSignWithNotaryMetadata) {
		return nil, false
	}
	return o.EnableSignWithNotaryMetadata, true
}

// HasEnableSignWithNotaryMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSignWithNotaryMetadata() bool {
	if o != nil && !IsNil(o.EnableSignWithNotaryMetadata) {
		return true
	}

	return false
}

// SetEnableSignWithNotaryMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSignWithNotaryMetadata field.
func (o *AccountSettingsInformation) SetEnableSignWithNotaryMetadata(v SettingsMetadata) {
	o.EnableSignWithNotaryMetadata = &v
}

// GetEnableSmartContracts returns the EnableSmartContracts field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSmartContracts() string {
	if o == nil || IsNil(o.EnableSmartContracts) {
		var ret string
		return ret
	}
	return *o.EnableSmartContracts
}

// GetEnableSmartContractsOk returns a tuple with the EnableSmartContracts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSmartContractsOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSmartContracts) {
		return nil, false
	}
	return o.EnableSmartContracts, true
}

// HasEnableSmartContracts returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSmartContracts() bool {
	if o != nil && !IsNil(o.EnableSmartContracts) {
		return true
	}

	return false
}

// SetEnableSmartContracts gets a reference to the given string and assigns it to the EnableSmartContracts field.
func (o *AccountSettingsInformation) SetEnableSmartContracts(v string) {
	o.EnableSmartContracts = &v
}

// GetEnableSmartContractsMetadata returns the EnableSmartContractsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSmartContractsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSmartContractsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSmartContractsMetadata
}

// GetEnableSmartContractsMetadataOk returns a tuple with the EnableSmartContractsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSmartContractsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSmartContractsMetadata) {
		return nil, false
	}
	return o.EnableSmartContractsMetadata, true
}

// HasEnableSmartContractsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSmartContractsMetadata() bool {
	if o != nil && !IsNil(o.EnableSmartContractsMetadata) {
		return true
	}

	return false
}

// SetEnableSmartContractsMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSmartContractsMetadata field.
func (o *AccountSettingsInformation) SetEnableSmartContractsMetadata(v SettingsMetadata) {
	o.EnableSmartContractsMetadata = &v
}

// GetEnableSMSAuthentication returns the EnableSMSAuthentication field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSMSAuthentication() string {
	if o == nil || IsNil(o.EnableSMSAuthentication) {
		var ret string
		return ret
	}
	return *o.EnableSMSAuthentication
}

// GetEnableSMSAuthenticationOk returns a tuple with the EnableSMSAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSMSAuthenticationOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSMSAuthentication) {
		return nil, false
	}
	return o.EnableSMSAuthentication, true
}

// HasEnableSMSAuthentication returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSMSAuthentication() bool {
	if o != nil && !IsNil(o.EnableSMSAuthentication) {
		return true
	}

	return false
}

// SetEnableSMSAuthentication gets a reference to the given string and assigns it to the EnableSMSAuthentication field.
func (o *AccountSettingsInformation) SetEnableSMSAuthentication(v string) {
	o.EnableSMSAuthentication = &v
}

// GetEnableSMSAuthenticationMetadata returns the EnableSMSAuthenticationMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSMSAuthenticationMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSMSAuthenticationMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSMSAuthenticationMetadata
}

// GetEnableSMSAuthenticationMetadataOk returns a tuple with the EnableSMSAuthenticationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSMSAuthenticationMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSMSAuthenticationMetadata) {
		return nil, false
	}
	return o.EnableSMSAuthenticationMetadata, true
}

// HasEnableSMSAuthenticationMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSMSAuthenticationMetadata() bool {
	if o != nil && !IsNil(o.EnableSMSAuthenticationMetadata) {
		return true
	}

	return false
}

// SetEnableSMSAuthenticationMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSMSAuthenticationMetadata field.
func (o *AccountSettingsInformation) SetEnableSMSAuthenticationMetadata(v SettingsMetadata) {
	o.EnableSMSAuthenticationMetadata = &v
}

// GetEnableSMSDeliveryAdditionalNotification returns the EnableSMSDeliveryAdditionalNotification field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSMSDeliveryAdditionalNotification() string {
	if o == nil || IsNil(o.EnableSMSDeliveryAdditionalNotification) {
		var ret string
		return ret
	}
	return *o.EnableSMSDeliveryAdditionalNotification
}

// GetEnableSMSDeliveryAdditionalNotificationOk returns a tuple with the EnableSMSDeliveryAdditionalNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSMSDeliveryAdditionalNotificationOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSMSDeliveryAdditionalNotification) {
		return nil, false
	}
	return o.EnableSMSDeliveryAdditionalNotification, true
}

// HasEnableSMSDeliveryAdditionalNotification returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSMSDeliveryAdditionalNotification() bool {
	if o != nil && !IsNil(o.EnableSMSDeliveryAdditionalNotification) {
		return true
	}

	return false
}

// SetEnableSMSDeliveryAdditionalNotification gets a reference to the given string and assigns it to the EnableSMSDeliveryAdditionalNotification field.
func (o *AccountSettingsInformation) SetEnableSMSDeliveryAdditionalNotification(v string) {
	o.EnableSMSDeliveryAdditionalNotification = &v
}

// GetEnableSMSDeliveryAdditionalNotificationMetadata returns the EnableSMSDeliveryAdditionalNotificationMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSMSDeliveryAdditionalNotificationMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSMSDeliveryAdditionalNotificationMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSMSDeliveryAdditionalNotificationMetadata
}

// GetEnableSMSDeliveryAdditionalNotificationMetadataOk returns a tuple with the EnableSMSDeliveryAdditionalNotificationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSMSDeliveryAdditionalNotificationMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSMSDeliveryAdditionalNotificationMetadata) {
		return nil, false
	}
	return o.EnableSMSDeliveryAdditionalNotificationMetadata, true
}

// HasEnableSMSDeliveryAdditionalNotificationMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSMSDeliveryAdditionalNotificationMetadata() bool {
	if o != nil && !IsNil(o.EnableSMSDeliveryAdditionalNotificationMetadata) {
		return true
	}

	return false
}

// SetEnableSMSDeliveryAdditionalNotificationMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSMSDeliveryAdditionalNotificationMetadata field.
func (o *AccountSettingsInformation) SetEnableSMSDeliveryAdditionalNotificationMetadata(v SettingsMetadata) {
	o.EnableSMSDeliveryAdditionalNotificationMetadata = &v
}

// GetEnableSMSDeliveryPrimary returns the EnableSMSDeliveryPrimary field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSMSDeliveryPrimary() string {
	if o == nil || IsNil(o.EnableSMSDeliveryPrimary) {
		var ret string
		return ret
	}
	return *o.EnableSMSDeliveryPrimary
}

// GetEnableSMSDeliveryPrimaryOk returns a tuple with the EnableSMSDeliveryPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSMSDeliveryPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSMSDeliveryPrimary) {
		return nil, false
	}
	return o.EnableSMSDeliveryPrimary, true
}

// HasEnableSMSDeliveryPrimary returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSMSDeliveryPrimary() bool {
	if o != nil && !IsNil(o.EnableSMSDeliveryPrimary) {
		return true
	}

	return false
}

// SetEnableSMSDeliveryPrimary gets a reference to the given string and assigns it to the EnableSMSDeliveryPrimary field.
func (o *AccountSettingsInformation) SetEnableSMSDeliveryPrimary(v string) {
	o.EnableSMSDeliveryPrimary = &v
}

// GetEnableSocialIdLogin returns the EnableSocialIdLogin field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSocialIdLogin() string {
	if o == nil || IsNil(o.EnableSocialIdLogin) {
		var ret string
		return ret
	}
	return *o.EnableSocialIdLogin
}

// GetEnableSocialIdLoginOk returns a tuple with the EnableSocialIdLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSocialIdLoginOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSocialIdLogin) {
		return nil, false
	}
	return o.EnableSocialIdLogin, true
}

// HasEnableSocialIdLogin returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSocialIdLogin() bool {
	if o != nil && !IsNil(o.EnableSocialIdLogin) {
		return true
	}

	return false
}

// SetEnableSocialIdLogin gets a reference to the given string and assigns it to the EnableSocialIdLogin field.
func (o *AccountSettingsInformation) SetEnableSocialIdLogin(v string) {
	o.EnableSocialIdLogin = &v
}

// GetEnableSocialIdLoginMetadata returns the EnableSocialIdLoginMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableSocialIdLoginMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSocialIdLoginMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSocialIdLoginMetadata
}

// GetEnableSocialIdLoginMetadataOk returns a tuple with the EnableSocialIdLoginMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableSocialIdLoginMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSocialIdLoginMetadata) {
		return nil, false
	}
	return o.EnableSocialIdLoginMetadata, true
}

// HasEnableSocialIdLoginMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableSocialIdLoginMetadata() bool {
	if o != nil && !IsNil(o.EnableSocialIdLoginMetadata) {
		return true
	}

	return false
}

// SetEnableSocialIdLoginMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSocialIdLoginMetadata field.
func (o *AccountSettingsInformation) SetEnableSocialIdLoginMetadata(v SettingsMetadata) {
	o.EnableSocialIdLoginMetadata = &v
}

// GetEnableStrikeThrough returns the EnableStrikeThrough field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableStrikeThrough() string {
	if o == nil || IsNil(o.EnableStrikeThrough) {
		var ret string
		return ret
	}
	return *o.EnableStrikeThrough
}

// GetEnableStrikeThroughOk returns a tuple with the EnableStrikeThrough field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableStrikeThroughOk() (*string, bool) {
	if o == nil || IsNil(o.EnableStrikeThrough) {
		return nil, false
	}
	return o.EnableStrikeThrough, true
}

// HasEnableStrikeThrough returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableStrikeThrough() bool {
	if o != nil && !IsNil(o.EnableStrikeThrough) {
		return true
	}

	return false
}

// SetEnableStrikeThrough gets a reference to the given string and assigns it to the EnableStrikeThrough field.
func (o *AccountSettingsInformation) SetEnableStrikeThrough(v string) {
	o.EnableStrikeThrough = &v
}

// GetEnableStrikeThroughMetadata returns the EnableStrikeThroughMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableStrikeThroughMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableStrikeThroughMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableStrikeThroughMetadata
}

// GetEnableStrikeThroughMetadataOk returns a tuple with the EnableStrikeThroughMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableStrikeThroughMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableStrikeThroughMetadata) {
		return nil, false
	}
	return o.EnableStrikeThroughMetadata, true
}

// HasEnableStrikeThroughMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableStrikeThroughMetadata() bool {
	if o != nil && !IsNil(o.EnableStrikeThroughMetadata) {
		return true
	}

	return false
}

// SetEnableStrikeThroughMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableStrikeThroughMetadata field.
func (o *AccountSettingsInformation) SetEnableStrikeThroughMetadata(v SettingsMetadata) {
	o.EnableStrikeThroughMetadata = &v
}

// GetEnableTransactionPoint returns the EnableTransactionPoint field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableTransactionPoint() string {
	if o == nil || IsNil(o.EnableTransactionPoint) {
		var ret string
		return ret
	}
	return *o.EnableTransactionPoint
}

// GetEnableTransactionPointOk returns a tuple with the EnableTransactionPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableTransactionPointOk() (*string, bool) {
	if o == nil || IsNil(o.EnableTransactionPoint) {
		return nil, false
	}
	return o.EnableTransactionPoint, true
}

// HasEnableTransactionPoint returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableTransactionPoint() bool {
	if o != nil && !IsNil(o.EnableTransactionPoint) {
		return true
	}

	return false
}

// SetEnableTransactionPoint gets a reference to the given string and assigns it to the EnableTransactionPoint field.
func (o *AccountSettingsInformation) SetEnableTransactionPoint(v string) {
	o.EnableTransactionPoint = &v
}

// GetEnableTransactionPointMetadata returns the EnableTransactionPointMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableTransactionPointMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableTransactionPointMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableTransactionPointMetadata
}

// GetEnableTransactionPointMetadataOk returns a tuple with the EnableTransactionPointMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableTransactionPointMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableTransactionPointMetadata) {
		return nil, false
	}
	return o.EnableTransactionPointMetadata, true
}

// HasEnableTransactionPointMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableTransactionPointMetadata() bool {
	if o != nil && !IsNil(o.EnableTransactionPointMetadata) {
		return true
	}

	return false
}

// SetEnableTransactionPointMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableTransactionPointMetadata field.
func (o *AccountSettingsInformation) SetEnableTransactionPointMetadata(v SettingsMetadata) {
	o.EnableTransactionPointMetadata = &v
}

// GetEnableVaulting returns the EnableVaulting field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableVaulting() string {
	if o == nil || IsNil(o.EnableVaulting) {
		var ret string
		return ret
	}
	return *o.EnableVaulting
}

// GetEnableVaultingOk returns a tuple with the EnableVaulting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableVaultingOk() (*string, bool) {
	if o == nil || IsNil(o.EnableVaulting) {
		return nil, false
	}
	return o.EnableVaulting, true
}

// HasEnableVaulting returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableVaulting() bool {
	if o != nil && !IsNil(o.EnableVaulting) {
		return true
	}

	return false
}

// SetEnableVaulting gets a reference to the given string and assigns it to the EnableVaulting field.
func (o *AccountSettingsInformation) SetEnableVaulting(v string) {
	o.EnableVaulting = &v
}

// GetEnableVaultingMetadata returns the EnableVaultingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableVaultingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableVaultingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableVaultingMetadata
}

// GetEnableVaultingMetadataOk returns a tuple with the EnableVaultingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableVaultingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableVaultingMetadata) {
		return nil, false
	}
	return o.EnableVaultingMetadata, true
}

// HasEnableVaultingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableVaultingMetadata() bool {
	if o != nil && !IsNil(o.EnableVaultingMetadata) {
		return true
	}

	return false
}

// SetEnableVaultingMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableVaultingMetadata field.
func (o *AccountSettingsInformation) SetEnableVaultingMetadata(v SettingsMetadata) {
	o.EnableVaultingMetadata = &v
}

// GetEnableWebFormsSeparateUserPermissions returns the EnableWebFormsSeparateUserPermissions field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableWebFormsSeparateUserPermissions() string {
	if o == nil || IsNil(o.EnableWebFormsSeparateUserPermissions) {
		var ret string
		return ret
	}
	return *o.EnableWebFormsSeparateUserPermissions
}

// GetEnableWebFormsSeparateUserPermissionsOk returns a tuple with the EnableWebFormsSeparateUserPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableWebFormsSeparateUserPermissionsOk() (*string, bool) {
	if o == nil || IsNil(o.EnableWebFormsSeparateUserPermissions) {
		return nil, false
	}
	return o.EnableWebFormsSeparateUserPermissions, true
}

// HasEnableWebFormsSeparateUserPermissions returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableWebFormsSeparateUserPermissions() bool {
	if o != nil && !IsNil(o.EnableWebFormsSeparateUserPermissions) {
		return true
	}

	return false
}

// SetEnableWebFormsSeparateUserPermissions gets a reference to the given string and assigns it to the EnableWebFormsSeparateUserPermissions field.
func (o *AccountSettingsInformation) SetEnableWebFormsSeparateUserPermissions(v string) {
	o.EnableWebFormsSeparateUserPermissions = &v
}

// GetEnableWebFormsSeparateUserPermissionsMetadata returns the EnableWebFormsSeparateUserPermissionsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableWebFormsSeparateUserPermissionsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableWebFormsSeparateUserPermissionsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableWebFormsSeparateUserPermissionsMetadata
}

// GetEnableWebFormsSeparateUserPermissionsMetadataOk returns a tuple with the EnableWebFormsSeparateUserPermissionsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableWebFormsSeparateUserPermissionsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableWebFormsSeparateUserPermissionsMetadata) {
		return nil, false
	}
	return o.EnableWebFormsSeparateUserPermissionsMetadata, true
}

// HasEnableWebFormsSeparateUserPermissionsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableWebFormsSeparateUserPermissionsMetadata() bool {
	if o != nil && !IsNil(o.EnableWebFormsSeparateUserPermissionsMetadata) {
		return true
	}

	return false
}

// SetEnableWebFormsSeparateUserPermissionsMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableWebFormsSeparateUserPermissionsMetadata field.
func (o *AccountSettingsInformation) SetEnableWebFormsSeparateUserPermissionsMetadata(v SettingsMetadata) {
	o.EnableWebFormsSeparateUserPermissionsMetadata = &v
}

// GetEnableWitnessing returns the EnableWitnessing field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableWitnessing() string {
	if o == nil || IsNil(o.EnableWitnessing) {
		var ret string
		return ret
	}
	return *o.EnableWitnessing
}

// GetEnableWitnessingOk returns a tuple with the EnableWitnessing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableWitnessingOk() (*string, bool) {
	if o == nil || IsNil(o.EnableWitnessing) {
		return nil, false
	}
	return o.EnableWitnessing, true
}

// HasEnableWitnessing returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableWitnessing() bool {
	if o != nil && !IsNil(o.EnableWitnessing) {
		return true
	}

	return false
}

// SetEnableWitnessing gets a reference to the given string and assigns it to the EnableWitnessing field.
func (o *AccountSettingsInformation) SetEnableWitnessing(v string) {
	o.EnableWitnessing = &v
}

// GetEnableWitnessingMetadata returns the EnableWitnessingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnableWitnessingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableWitnessingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableWitnessingMetadata
}

// GetEnableWitnessingMetadataOk returns a tuple with the EnableWitnessingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnableWitnessingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableWitnessingMetadata) {
		return nil, false
	}
	return o.EnableWitnessingMetadata, true
}

// HasEnableWitnessingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnableWitnessingMetadata() bool {
	if o != nil && !IsNil(o.EnableWitnessingMetadata) {
		return true
	}

	return false
}

// SetEnableWitnessingMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableWitnessingMetadata field.
func (o *AccountSettingsInformation) SetEnableWitnessingMetadata(v SettingsMetadata) {
	o.EnableWitnessingMetadata = &v
}

// GetEnforceTemplateNameUniqueness returns the EnforceTemplateNameUniqueness field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnforceTemplateNameUniqueness() string {
	if o == nil || IsNil(o.EnforceTemplateNameUniqueness) {
		var ret string
		return ret
	}
	return *o.EnforceTemplateNameUniqueness
}

// GetEnforceTemplateNameUniquenessOk returns a tuple with the EnforceTemplateNameUniqueness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnforceTemplateNameUniquenessOk() (*string, bool) {
	if o == nil || IsNil(o.EnforceTemplateNameUniqueness) {
		return nil, false
	}
	return o.EnforceTemplateNameUniqueness, true
}

// HasEnforceTemplateNameUniqueness returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnforceTemplateNameUniqueness() bool {
	if o != nil && !IsNil(o.EnforceTemplateNameUniqueness) {
		return true
	}

	return false
}

// SetEnforceTemplateNameUniqueness gets a reference to the given string and assigns it to the EnforceTemplateNameUniqueness field.
func (o *AccountSettingsInformation) SetEnforceTemplateNameUniqueness(v string) {
	o.EnforceTemplateNameUniqueness = &v
}

// GetEnforceTemplateNameUniquenessMetadata returns the EnforceTemplateNameUniquenessMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnforceTemplateNameUniquenessMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnforceTemplateNameUniquenessMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnforceTemplateNameUniquenessMetadata
}

// GetEnforceTemplateNameUniquenessMetadataOk returns a tuple with the EnforceTemplateNameUniquenessMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnforceTemplateNameUniquenessMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnforceTemplateNameUniquenessMetadata) {
		return nil, false
	}
	return o.EnforceTemplateNameUniquenessMetadata, true
}

// HasEnforceTemplateNameUniquenessMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnforceTemplateNameUniquenessMetadata() bool {
	if o != nil && !IsNil(o.EnforceTemplateNameUniquenessMetadata) {
		return true
	}

	return false
}

// SetEnforceTemplateNameUniquenessMetadata gets a reference to the given SettingsMetadata and assigns it to the EnforceTemplateNameUniquenessMetadata field.
func (o *AccountSettingsInformation) SetEnforceTemplateNameUniquenessMetadata(v SettingsMetadata) {
	o.EnforceTemplateNameUniquenessMetadata = &v
}

// GetEnforceTlsEmails returns the EnforceTlsEmails field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnforceTlsEmails() string {
	if o == nil || IsNil(o.EnforceTlsEmails) {
		var ret string
		return ret
	}
	return *o.EnforceTlsEmails
}

// GetEnforceTlsEmailsOk returns a tuple with the EnforceTlsEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnforceTlsEmailsOk() (*string, bool) {
	if o == nil || IsNil(o.EnforceTlsEmails) {
		return nil, false
	}
	return o.EnforceTlsEmails, true
}

// HasEnforceTlsEmails returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnforceTlsEmails() bool {
	if o != nil && !IsNil(o.EnforceTlsEmails) {
		return true
	}

	return false
}

// SetEnforceTlsEmails gets a reference to the given string and assigns it to the EnforceTlsEmails field.
func (o *AccountSettingsInformation) SetEnforceTlsEmails(v string) {
	o.EnforceTlsEmails = &v
}

// GetEnforceTlsEmailsMetadata returns the EnforceTlsEmailsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnforceTlsEmailsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnforceTlsEmailsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnforceTlsEmailsMetadata
}

// GetEnforceTlsEmailsMetadataOk returns a tuple with the EnforceTlsEmailsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnforceTlsEmailsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnforceTlsEmailsMetadata) {
		return nil, false
	}
	return o.EnforceTlsEmailsMetadata, true
}

// HasEnforceTlsEmailsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnforceTlsEmailsMetadata() bool {
	if o != nil && !IsNil(o.EnforceTlsEmailsMetadata) {
		return true
	}

	return false
}

// SetEnforceTlsEmailsMetadata gets a reference to the given SettingsMetadata and assigns it to the EnforceTlsEmailsMetadata field.
func (o *AccountSettingsInformation) SetEnforceTlsEmailsMetadata(v SettingsMetadata) {
	o.EnforceTlsEmailsMetadata = &v
}

// GetEnvelopeIntegrationAllowed returns the EnvelopeIntegrationAllowed field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnvelopeIntegrationAllowed() string {
	if o == nil || IsNil(o.EnvelopeIntegrationAllowed) {
		var ret string
		return ret
	}
	return *o.EnvelopeIntegrationAllowed
}

// GetEnvelopeIntegrationAllowedOk returns a tuple with the EnvelopeIntegrationAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnvelopeIntegrationAllowedOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeIntegrationAllowed) {
		return nil, false
	}
	return o.EnvelopeIntegrationAllowed, true
}

// HasEnvelopeIntegrationAllowed returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnvelopeIntegrationAllowed() bool {
	if o != nil && !IsNil(o.EnvelopeIntegrationAllowed) {
		return true
	}

	return false
}

// SetEnvelopeIntegrationAllowed gets a reference to the given string and assigns it to the EnvelopeIntegrationAllowed field.
func (o *AccountSettingsInformation) SetEnvelopeIntegrationAllowed(v string) {
	o.EnvelopeIntegrationAllowed = &v
}

// GetEnvelopeIntegrationAllowedMetadata returns the EnvelopeIntegrationAllowedMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnvelopeIntegrationAllowedMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnvelopeIntegrationAllowedMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnvelopeIntegrationAllowedMetadata
}

// GetEnvelopeIntegrationAllowedMetadataOk returns a tuple with the EnvelopeIntegrationAllowedMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnvelopeIntegrationAllowedMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnvelopeIntegrationAllowedMetadata) {
		return nil, false
	}
	return o.EnvelopeIntegrationAllowedMetadata, true
}

// HasEnvelopeIntegrationAllowedMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnvelopeIntegrationAllowedMetadata() bool {
	if o != nil && !IsNil(o.EnvelopeIntegrationAllowedMetadata) {
		return true
	}

	return false
}

// SetEnvelopeIntegrationAllowedMetadata gets a reference to the given SettingsMetadata and assigns it to the EnvelopeIntegrationAllowedMetadata field.
func (o *AccountSettingsInformation) SetEnvelopeIntegrationAllowedMetadata(v SettingsMetadata) {
	o.EnvelopeIntegrationAllowedMetadata = &v
}

// GetEnvelopeIntegrationEnabled returns the EnvelopeIntegrationEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnvelopeIntegrationEnabled() string {
	if o == nil || IsNil(o.EnvelopeIntegrationEnabled) {
		var ret string
		return ret
	}
	return *o.EnvelopeIntegrationEnabled
}

// GetEnvelopeIntegrationEnabledOk returns a tuple with the EnvelopeIntegrationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnvelopeIntegrationEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeIntegrationEnabled) {
		return nil, false
	}
	return o.EnvelopeIntegrationEnabled, true
}

// HasEnvelopeIntegrationEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnvelopeIntegrationEnabled() bool {
	if o != nil && !IsNil(o.EnvelopeIntegrationEnabled) {
		return true
	}

	return false
}

// SetEnvelopeIntegrationEnabled gets a reference to the given string and assigns it to the EnvelopeIntegrationEnabled field.
func (o *AccountSettingsInformation) SetEnvelopeIntegrationEnabled(v string) {
	o.EnvelopeIntegrationEnabled = &v
}

// GetEnvelopeIntegrationEnabledMetadata returns the EnvelopeIntegrationEnabledMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnvelopeIntegrationEnabledMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnvelopeIntegrationEnabledMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnvelopeIntegrationEnabledMetadata
}

// GetEnvelopeIntegrationEnabledMetadataOk returns a tuple with the EnvelopeIntegrationEnabledMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnvelopeIntegrationEnabledMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnvelopeIntegrationEnabledMetadata) {
		return nil, false
	}
	return o.EnvelopeIntegrationEnabledMetadata, true
}

// HasEnvelopeIntegrationEnabledMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnvelopeIntegrationEnabledMetadata() bool {
	if o != nil && !IsNil(o.EnvelopeIntegrationEnabledMetadata) {
		return true
	}

	return false
}

// SetEnvelopeIntegrationEnabledMetadata gets a reference to the given SettingsMetadata and assigns it to the EnvelopeIntegrationEnabledMetadata field.
func (o *AccountSettingsInformation) SetEnvelopeIntegrationEnabledMetadata(v SettingsMetadata) {
	o.EnvelopeIntegrationEnabledMetadata = &v
}

// GetEnvelopeLimitsTotalDocumentSizeAllowedInMB returns the EnvelopeLimitsTotalDocumentSizeAllowedInMB field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnvelopeLimitsTotalDocumentSizeAllowedInMB() string {
	if o == nil || IsNil(o.EnvelopeLimitsTotalDocumentSizeAllowedInMB) {
		var ret string
		return ret
	}
	return *o.EnvelopeLimitsTotalDocumentSizeAllowedInMB
}

// GetEnvelopeLimitsTotalDocumentSizeAllowedInMBOk returns a tuple with the EnvelopeLimitsTotalDocumentSizeAllowedInMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnvelopeLimitsTotalDocumentSizeAllowedInMBOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeLimitsTotalDocumentSizeAllowedInMB) {
		return nil, false
	}
	return o.EnvelopeLimitsTotalDocumentSizeAllowedInMB, true
}

// HasEnvelopeLimitsTotalDocumentSizeAllowedInMB returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnvelopeLimitsTotalDocumentSizeAllowedInMB() bool {
	if o != nil && !IsNil(o.EnvelopeLimitsTotalDocumentSizeAllowedInMB) {
		return true
	}

	return false
}

// SetEnvelopeLimitsTotalDocumentSizeAllowedInMB gets a reference to the given string and assigns it to the EnvelopeLimitsTotalDocumentSizeAllowedInMB field.
func (o *AccountSettingsInformation) SetEnvelopeLimitsTotalDocumentSizeAllowedInMB(v string) {
	o.EnvelopeLimitsTotalDocumentSizeAllowedInMB = &v
}

// GetEnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled returns the EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled() string {
	if o == nil || IsNil(o.EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled) {
		var ret string
		return ret
	}
	return *o.EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled
}

// GetEnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledOk returns a tuple with the EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled) {
		return nil, false
	}
	return o.EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled, true
}

// HasEnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled() bool {
	if o != nil && !IsNil(o.EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled) {
		return true
	}

	return false
}

// SetEnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled gets a reference to the given string and assigns it to the EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled field.
func (o *AccountSettingsInformation) SetEnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled(v string) {
	o.EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled = &v
}

// GetEnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata returns the EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata
}

// GetEnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadataOk returns a tuple with the EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata) {
		return nil, false
	}
	return o.EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata, true
}

// HasEnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata() bool {
	if o != nil && !IsNil(o.EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata) {
		return true
	}

	return false
}

// SetEnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata gets a reference to the given SettingsMetadata and assigns it to the EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata field.
func (o *AccountSettingsInformation) SetEnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata(v SettingsMetadata) {
	o.EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata = &v
}

// GetEnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata returns the EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata
}

// GetEnvelopeLimitsTotalDocumentSizeAllowedInMBMetadataOk returns a tuple with the EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnvelopeLimitsTotalDocumentSizeAllowedInMBMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata) {
		return nil, false
	}
	return o.EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata, true
}

// HasEnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata() bool {
	if o != nil && !IsNil(o.EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata) {
		return true
	}

	return false
}

// SetEnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata gets a reference to the given SettingsMetadata and assigns it to the EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata field.
func (o *AccountSettingsInformation) SetEnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata(v SettingsMetadata) {
	o.EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata = &v
}

// GetEnvelopeSearchMode returns the EnvelopeSearchMode field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnvelopeSearchMode() string {
	if o == nil || IsNil(o.EnvelopeSearchMode) {
		var ret string
		return ret
	}
	return *o.EnvelopeSearchMode
}

// GetEnvelopeSearchModeOk returns a tuple with the EnvelopeSearchMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnvelopeSearchModeOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeSearchMode) {
		return nil, false
	}
	return o.EnvelopeSearchMode, true
}

// HasEnvelopeSearchMode returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnvelopeSearchMode() bool {
	if o != nil && !IsNil(o.EnvelopeSearchMode) {
		return true
	}

	return false
}

// SetEnvelopeSearchMode gets a reference to the given string and assigns it to the EnvelopeSearchMode field.
func (o *AccountSettingsInformation) SetEnvelopeSearchMode(v string) {
	o.EnvelopeSearchMode = &v
}

// GetEnvelopeSearchModeMetadata returns the EnvelopeSearchModeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnvelopeSearchModeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnvelopeSearchModeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnvelopeSearchModeMetadata
}

// GetEnvelopeSearchModeMetadataOk returns a tuple with the EnvelopeSearchModeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnvelopeSearchModeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnvelopeSearchModeMetadata) {
		return nil, false
	}
	return o.EnvelopeSearchModeMetadata, true
}

// HasEnvelopeSearchModeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnvelopeSearchModeMetadata() bool {
	if o != nil && !IsNil(o.EnvelopeSearchModeMetadata) {
		return true
	}

	return false
}

// SetEnvelopeSearchModeMetadata gets a reference to the given SettingsMetadata and assigns it to the EnvelopeSearchModeMetadata field.
func (o *AccountSettingsInformation) SetEnvelopeSearchModeMetadata(v SettingsMetadata) {
	o.EnvelopeSearchModeMetadata = &v
}

// GetEnvelopeStampingDefaultValue returns the EnvelopeStampingDefaultValue field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnvelopeStampingDefaultValue() string {
	if o == nil || IsNil(o.EnvelopeStampingDefaultValue) {
		var ret string
		return ret
	}
	return *o.EnvelopeStampingDefaultValue
}

// GetEnvelopeStampingDefaultValueOk returns a tuple with the EnvelopeStampingDefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnvelopeStampingDefaultValueOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeStampingDefaultValue) {
		return nil, false
	}
	return o.EnvelopeStampingDefaultValue, true
}

// HasEnvelopeStampingDefaultValue returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnvelopeStampingDefaultValue() bool {
	if o != nil && !IsNil(o.EnvelopeStampingDefaultValue) {
		return true
	}

	return false
}

// SetEnvelopeStampingDefaultValue gets a reference to the given string and assigns it to the EnvelopeStampingDefaultValue field.
func (o *AccountSettingsInformation) SetEnvelopeStampingDefaultValue(v string) {
	o.EnvelopeStampingDefaultValue = &v
}

// GetEnvelopeStampingDefaultValueMetadata returns the EnvelopeStampingDefaultValueMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetEnvelopeStampingDefaultValueMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnvelopeStampingDefaultValueMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnvelopeStampingDefaultValueMetadata
}

// GetEnvelopeStampingDefaultValueMetadataOk returns a tuple with the EnvelopeStampingDefaultValueMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetEnvelopeStampingDefaultValueMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnvelopeStampingDefaultValueMetadata) {
		return nil, false
	}
	return o.EnvelopeStampingDefaultValueMetadata, true
}

// HasEnvelopeStampingDefaultValueMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasEnvelopeStampingDefaultValueMetadata() bool {
	if o != nil && !IsNil(o.EnvelopeStampingDefaultValueMetadata) {
		return true
	}

	return false
}

// SetEnvelopeStampingDefaultValueMetadata gets a reference to the given SettingsMetadata and assigns it to the EnvelopeStampingDefaultValueMetadata field.
func (o *AccountSettingsInformation) SetEnvelopeStampingDefaultValueMetadata(v SettingsMetadata) {
	o.EnvelopeStampingDefaultValueMetadata = &v
}

// GetExitPrompt returns the ExitPrompt field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetExitPrompt() string {
	if o == nil || IsNil(o.ExitPrompt) {
		var ret string
		return ret
	}
	return *o.ExitPrompt
}

// GetExitPromptOk returns a tuple with the ExitPrompt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetExitPromptOk() (*string, bool) {
	if o == nil || IsNil(o.ExitPrompt) {
		return nil, false
	}
	return o.ExitPrompt, true
}

// HasExitPrompt returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasExitPrompt() bool {
	if o != nil && !IsNil(o.ExitPrompt) {
		return true
	}

	return false
}

// SetExitPrompt gets a reference to the given string and assigns it to the ExitPrompt field.
func (o *AccountSettingsInformation) SetExitPrompt(v string) {
	o.ExitPrompt = &v
}

// GetExitPromptMetadata returns the ExitPromptMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetExitPromptMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ExitPromptMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ExitPromptMetadata
}

// GetExitPromptMetadataOk returns a tuple with the ExitPromptMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetExitPromptMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ExitPromptMetadata) {
		return nil, false
	}
	return o.ExitPromptMetadata, true
}

// HasExitPromptMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasExitPromptMetadata() bool {
	if o != nil && !IsNil(o.ExitPromptMetadata) {
		return true
	}

	return false
}

// SetExitPromptMetadata gets a reference to the given SettingsMetadata and assigns it to the ExitPromptMetadata field.
func (o *AccountSettingsInformation) SetExitPromptMetadata(v SettingsMetadata) {
	o.ExitPromptMetadata = &v
}

// GetExpressSend returns the ExpressSend field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetExpressSend() string {
	if o == nil || IsNil(o.ExpressSend) {
		var ret string
		return ret
	}
	return *o.ExpressSend
}

// GetExpressSendOk returns a tuple with the ExpressSend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetExpressSendOk() (*string, bool) {
	if o == nil || IsNil(o.ExpressSend) {
		return nil, false
	}
	return o.ExpressSend, true
}

// HasExpressSend returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasExpressSend() bool {
	if o != nil && !IsNil(o.ExpressSend) {
		return true
	}

	return false
}

// SetExpressSend gets a reference to the given string and assigns it to the ExpressSend field.
func (o *AccountSettingsInformation) SetExpressSend(v string) {
	o.ExpressSend = &v
}

// GetExpressSendAllowTabs returns the ExpressSendAllowTabs field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetExpressSendAllowTabs() string {
	if o == nil || IsNil(o.ExpressSendAllowTabs) {
		var ret string
		return ret
	}
	return *o.ExpressSendAllowTabs
}

// GetExpressSendAllowTabsOk returns a tuple with the ExpressSendAllowTabs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetExpressSendAllowTabsOk() (*string, bool) {
	if o == nil || IsNil(o.ExpressSendAllowTabs) {
		return nil, false
	}
	return o.ExpressSendAllowTabs, true
}

// HasExpressSendAllowTabs returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasExpressSendAllowTabs() bool {
	if o != nil && !IsNil(o.ExpressSendAllowTabs) {
		return true
	}

	return false
}

// SetExpressSendAllowTabs gets a reference to the given string and assigns it to the ExpressSendAllowTabs field.
func (o *AccountSettingsInformation) SetExpressSendAllowTabs(v string) {
	o.ExpressSendAllowTabs = &v
}

// GetExpressSendAllowTabsMetadata returns the ExpressSendAllowTabsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetExpressSendAllowTabsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ExpressSendAllowTabsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ExpressSendAllowTabsMetadata
}

// GetExpressSendAllowTabsMetadataOk returns a tuple with the ExpressSendAllowTabsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetExpressSendAllowTabsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ExpressSendAllowTabsMetadata) {
		return nil, false
	}
	return o.ExpressSendAllowTabsMetadata, true
}

// HasExpressSendAllowTabsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasExpressSendAllowTabsMetadata() bool {
	if o != nil && !IsNil(o.ExpressSendAllowTabsMetadata) {
		return true
	}

	return false
}

// SetExpressSendAllowTabsMetadata gets a reference to the given SettingsMetadata and assigns it to the ExpressSendAllowTabsMetadata field.
func (o *AccountSettingsInformation) SetExpressSendAllowTabsMetadata(v SettingsMetadata) {
	o.ExpressSendAllowTabsMetadata = &v
}

// GetExpressSendMetadata returns the ExpressSendMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetExpressSendMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ExpressSendMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ExpressSendMetadata
}

// GetExpressSendMetadataOk returns a tuple with the ExpressSendMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetExpressSendMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ExpressSendMetadata) {
		return nil, false
	}
	return o.ExpressSendMetadata, true
}

// HasExpressSendMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasExpressSendMetadata() bool {
	if o != nil && !IsNil(o.ExpressSendMetadata) {
		return true
	}

	return false
}

// SetExpressSendMetadata gets a reference to the given SettingsMetadata and assigns it to the ExpressSendMetadata field.
func (o *AccountSettingsInformation) SetExpressSendMetadata(v SettingsMetadata) {
	o.ExpressSendMetadata = &v
}

// GetExternalDocumentSources returns the ExternalDocumentSources field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetExternalDocumentSources() ExternalDocumentSources {
	if o == nil || IsNil(o.ExternalDocumentSources) {
		var ret ExternalDocumentSources
		return ret
	}
	return *o.ExternalDocumentSources
}

// GetExternalDocumentSourcesOk returns a tuple with the ExternalDocumentSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetExternalDocumentSourcesOk() (*ExternalDocumentSources, bool) {
	if o == nil || IsNil(o.ExternalDocumentSources) {
		return nil, false
	}
	return o.ExternalDocumentSources, true
}

// HasExternalDocumentSources returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasExternalDocumentSources() bool {
	if o != nil && !IsNil(o.ExternalDocumentSources) {
		return true
	}

	return false
}

// SetExternalDocumentSources gets a reference to the given ExternalDocumentSources and assigns it to the ExternalDocumentSources field.
func (o *AccountSettingsInformation) SetExternalDocumentSources(v ExternalDocumentSources) {
	o.ExternalDocumentSources = &v
}

// GetExternalSignaturePadType returns the ExternalSignaturePadType field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetExternalSignaturePadType() string {
	if o == nil || IsNil(o.ExternalSignaturePadType) {
		var ret string
		return ret
	}
	return *o.ExternalSignaturePadType
}

// GetExternalSignaturePadTypeOk returns a tuple with the ExternalSignaturePadType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetExternalSignaturePadTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalSignaturePadType) {
		return nil, false
	}
	return o.ExternalSignaturePadType, true
}

// HasExternalSignaturePadType returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasExternalSignaturePadType() bool {
	if o != nil && !IsNil(o.ExternalSignaturePadType) {
		return true
	}

	return false
}

// SetExternalSignaturePadType gets a reference to the given string and assigns it to the ExternalSignaturePadType field.
func (o *AccountSettingsInformation) SetExternalSignaturePadType(v string) {
	o.ExternalSignaturePadType = &v
}

// GetExternalSignaturePadTypeMetadata returns the ExternalSignaturePadTypeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetExternalSignaturePadTypeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ExternalSignaturePadTypeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ExternalSignaturePadTypeMetadata
}

// GetExternalSignaturePadTypeMetadataOk returns a tuple with the ExternalSignaturePadTypeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetExternalSignaturePadTypeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ExternalSignaturePadTypeMetadata) {
		return nil, false
	}
	return o.ExternalSignaturePadTypeMetadata, true
}

// HasExternalSignaturePadTypeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasExternalSignaturePadTypeMetadata() bool {
	if o != nil && !IsNil(o.ExternalSignaturePadTypeMetadata) {
		return true
	}

	return false
}

// SetExternalSignaturePadTypeMetadata gets a reference to the given SettingsMetadata and assigns it to the ExternalSignaturePadTypeMetadata field.
func (o *AccountSettingsInformation) SetExternalSignaturePadTypeMetadata(v SettingsMetadata) {
	o.ExternalSignaturePadTypeMetadata = &v
}

// GetFaxOutEnabled returns the FaxOutEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetFaxOutEnabled() string {
	if o == nil || IsNil(o.FaxOutEnabled) {
		var ret string
		return ret
	}
	return *o.FaxOutEnabled
}

// GetFaxOutEnabledOk returns a tuple with the FaxOutEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetFaxOutEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.FaxOutEnabled) {
		return nil, false
	}
	return o.FaxOutEnabled, true
}

// HasFaxOutEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasFaxOutEnabled() bool {
	if o != nil && !IsNil(o.FaxOutEnabled) {
		return true
	}

	return false
}

// SetFaxOutEnabled gets a reference to the given string and assigns it to the FaxOutEnabled field.
func (o *AccountSettingsInformation) SetFaxOutEnabled(v string) {
	o.FaxOutEnabled = &v
}

// GetFaxOutEnabledMetadata returns the FaxOutEnabledMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetFaxOutEnabledMetadata() SettingsMetadata {
	if o == nil || IsNil(o.FaxOutEnabledMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.FaxOutEnabledMetadata
}

// GetFaxOutEnabledMetadataOk returns a tuple with the FaxOutEnabledMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetFaxOutEnabledMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.FaxOutEnabledMetadata) {
		return nil, false
	}
	return o.FaxOutEnabledMetadata, true
}

// HasFaxOutEnabledMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasFaxOutEnabledMetadata() bool {
	if o != nil && !IsNil(o.FaxOutEnabledMetadata) {
		return true
	}

	return false
}

// SetFaxOutEnabledMetadata gets a reference to the given SettingsMetadata and assigns it to the FaxOutEnabledMetadata field.
func (o *AccountSettingsInformation) SetFaxOutEnabledMetadata(v SettingsMetadata) {
	o.FaxOutEnabledMetadata = &v
}

// GetFinishReminder returns the FinishReminder field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetFinishReminder() string {
	if o == nil || IsNil(o.FinishReminder) {
		var ret string
		return ret
	}
	return *o.FinishReminder
}

// GetFinishReminderOk returns a tuple with the FinishReminder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetFinishReminderOk() (*string, bool) {
	if o == nil || IsNil(o.FinishReminder) {
		return nil, false
	}
	return o.FinishReminder, true
}

// HasFinishReminder returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasFinishReminder() bool {
	if o != nil && !IsNil(o.FinishReminder) {
		return true
	}

	return false
}

// SetFinishReminder gets a reference to the given string and assigns it to the FinishReminder field.
func (o *AccountSettingsInformation) SetFinishReminder(v string) {
	o.FinishReminder = &v
}

// GetFinishReminderMetadata returns the FinishReminderMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetFinishReminderMetadata() SettingsMetadata {
	if o == nil || IsNil(o.FinishReminderMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.FinishReminderMetadata
}

// GetFinishReminderMetadataOk returns a tuple with the FinishReminderMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetFinishReminderMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.FinishReminderMetadata) {
		return nil, false
	}
	return o.FinishReminderMetadata, true
}

// HasFinishReminderMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasFinishReminderMetadata() bool {
	if o != nil && !IsNil(o.FinishReminderMetadata) {
		return true
	}

	return false
}

// SetFinishReminderMetadata gets a reference to the given SettingsMetadata and assigns it to the FinishReminderMetadata field.
func (o *AccountSettingsInformation) SetFinishReminderMetadata(v SettingsMetadata) {
	o.FinishReminderMetadata = &v
}

// GetGuidedFormsHtmlAllowed returns the GuidedFormsHtmlAllowed field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetGuidedFormsHtmlAllowed() string {
	if o == nil || IsNil(o.GuidedFormsHtmlAllowed) {
		var ret string
		return ret
	}
	return *o.GuidedFormsHtmlAllowed
}

// GetGuidedFormsHtmlAllowedOk returns a tuple with the GuidedFormsHtmlAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetGuidedFormsHtmlAllowedOk() (*string, bool) {
	if o == nil || IsNil(o.GuidedFormsHtmlAllowed) {
		return nil, false
	}
	return o.GuidedFormsHtmlAllowed, true
}

// HasGuidedFormsHtmlAllowed returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasGuidedFormsHtmlAllowed() bool {
	if o != nil && !IsNil(o.GuidedFormsHtmlAllowed) {
		return true
	}

	return false
}

// SetGuidedFormsHtmlAllowed gets a reference to the given string and assigns it to the GuidedFormsHtmlAllowed field.
func (o *AccountSettingsInformation) SetGuidedFormsHtmlAllowed(v string) {
	o.GuidedFormsHtmlAllowed = &v
}

// GetGuidedFormsHtmlAllowedMetadata returns the GuidedFormsHtmlAllowedMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetGuidedFormsHtmlAllowedMetadata() SettingsMetadata {
	if o == nil || IsNil(o.GuidedFormsHtmlAllowedMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.GuidedFormsHtmlAllowedMetadata
}

// GetGuidedFormsHtmlAllowedMetadataOk returns a tuple with the GuidedFormsHtmlAllowedMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetGuidedFormsHtmlAllowedMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.GuidedFormsHtmlAllowedMetadata) {
		return nil, false
	}
	return o.GuidedFormsHtmlAllowedMetadata, true
}

// HasGuidedFormsHtmlAllowedMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasGuidedFormsHtmlAllowedMetadata() bool {
	if o != nil && !IsNil(o.GuidedFormsHtmlAllowedMetadata) {
		return true
	}

	return false
}

// SetGuidedFormsHtmlAllowedMetadata gets a reference to the given SettingsMetadata and assigns it to the GuidedFormsHtmlAllowedMetadata field.
func (o *AccountSettingsInformation) SetGuidedFormsHtmlAllowedMetadata(v SettingsMetadata) {
	o.GuidedFormsHtmlAllowedMetadata = &v
}

// GetGuidedFormsHtmlConversionPolicy returns the GuidedFormsHtmlConversionPolicy field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetGuidedFormsHtmlConversionPolicy() string {
	if o == nil || IsNil(o.GuidedFormsHtmlConversionPolicy) {
		var ret string
		return ret
	}
	return *o.GuidedFormsHtmlConversionPolicy
}

// GetGuidedFormsHtmlConversionPolicyOk returns a tuple with the GuidedFormsHtmlConversionPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetGuidedFormsHtmlConversionPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.GuidedFormsHtmlConversionPolicy) {
		return nil, false
	}
	return o.GuidedFormsHtmlConversionPolicy, true
}

// HasGuidedFormsHtmlConversionPolicy returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasGuidedFormsHtmlConversionPolicy() bool {
	if o != nil && !IsNil(o.GuidedFormsHtmlConversionPolicy) {
		return true
	}

	return false
}

// SetGuidedFormsHtmlConversionPolicy gets a reference to the given string and assigns it to the GuidedFormsHtmlConversionPolicy field.
func (o *AccountSettingsInformation) SetGuidedFormsHtmlConversionPolicy(v string) {
	o.GuidedFormsHtmlConversionPolicy = &v
}

// GetGuidedFormsHtmlConversionPolicyMetadata returns the GuidedFormsHtmlConversionPolicyMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetGuidedFormsHtmlConversionPolicyMetadata() SettingsMetadata {
	if o == nil || IsNil(o.GuidedFormsHtmlConversionPolicyMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.GuidedFormsHtmlConversionPolicyMetadata
}

// GetGuidedFormsHtmlConversionPolicyMetadataOk returns a tuple with the GuidedFormsHtmlConversionPolicyMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetGuidedFormsHtmlConversionPolicyMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.GuidedFormsHtmlConversionPolicyMetadata) {
		return nil, false
	}
	return o.GuidedFormsHtmlConversionPolicyMetadata, true
}

// HasGuidedFormsHtmlConversionPolicyMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasGuidedFormsHtmlConversionPolicyMetadata() bool {
	if o != nil && !IsNil(o.GuidedFormsHtmlConversionPolicyMetadata) {
		return true
	}

	return false
}

// SetGuidedFormsHtmlConversionPolicyMetadata gets a reference to the given SettingsMetadata and assigns it to the GuidedFormsHtmlConversionPolicyMetadata field.
func (o *AccountSettingsInformation) SetGuidedFormsHtmlConversionPolicyMetadata(v SettingsMetadata) {
	o.GuidedFormsHtmlConversionPolicyMetadata = &v
}

// GetHasRecipientConnectClaimedDomain returns the HasRecipientConnectClaimedDomain field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetHasRecipientConnectClaimedDomain() string {
	if o == nil || IsNil(o.HasRecipientConnectClaimedDomain) {
		var ret string
		return ret
	}
	return *o.HasRecipientConnectClaimedDomain
}

// GetHasRecipientConnectClaimedDomainOk returns a tuple with the HasRecipientConnectClaimedDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetHasRecipientConnectClaimedDomainOk() (*string, bool) {
	if o == nil || IsNil(o.HasRecipientConnectClaimedDomain) {
		return nil, false
	}
	return o.HasRecipientConnectClaimedDomain, true
}

// HasHasRecipientConnectClaimedDomain returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasHasRecipientConnectClaimedDomain() bool {
	if o != nil && !IsNil(o.HasRecipientConnectClaimedDomain) {
		return true
	}

	return false
}

// SetHasRecipientConnectClaimedDomain gets a reference to the given string and assigns it to the HasRecipientConnectClaimedDomain field.
func (o *AccountSettingsInformation) SetHasRecipientConnectClaimedDomain(v string) {
	o.HasRecipientConnectClaimedDomain = &v
}

// GetHideAccountAddressInCoC returns the HideAccountAddressInCoC field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetHideAccountAddressInCoC() string {
	if o == nil || IsNil(o.HideAccountAddressInCoC) {
		var ret string
		return ret
	}
	return *o.HideAccountAddressInCoC
}

// GetHideAccountAddressInCoCOk returns a tuple with the HideAccountAddressInCoC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetHideAccountAddressInCoCOk() (*string, bool) {
	if o == nil || IsNil(o.HideAccountAddressInCoC) {
		return nil, false
	}
	return o.HideAccountAddressInCoC, true
}

// HasHideAccountAddressInCoC returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasHideAccountAddressInCoC() bool {
	if o != nil && !IsNil(o.HideAccountAddressInCoC) {
		return true
	}

	return false
}

// SetHideAccountAddressInCoC gets a reference to the given string and assigns it to the HideAccountAddressInCoC field.
func (o *AccountSettingsInformation) SetHideAccountAddressInCoC(v string) {
	o.HideAccountAddressInCoC = &v
}

// GetHideAccountAddressInCoCMetadata returns the HideAccountAddressInCoCMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetHideAccountAddressInCoCMetadata() SettingsMetadata {
	if o == nil || IsNil(o.HideAccountAddressInCoCMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.HideAccountAddressInCoCMetadata
}

// GetHideAccountAddressInCoCMetadataOk returns a tuple with the HideAccountAddressInCoCMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetHideAccountAddressInCoCMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.HideAccountAddressInCoCMetadata) {
		return nil, false
	}
	return o.HideAccountAddressInCoCMetadata, true
}

// HasHideAccountAddressInCoCMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasHideAccountAddressInCoCMetadata() bool {
	if o != nil && !IsNil(o.HideAccountAddressInCoCMetadata) {
		return true
	}

	return false
}

// SetHideAccountAddressInCoCMetadata gets a reference to the given SettingsMetadata and assigns it to the HideAccountAddressInCoCMetadata field.
func (o *AccountSettingsInformation) SetHideAccountAddressInCoCMetadata(v SettingsMetadata) {
	o.HideAccountAddressInCoCMetadata = &v
}

// GetHidePricing returns the HidePricing field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetHidePricing() string {
	if o == nil || IsNil(o.HidePricing) {
		var ret string
		return ret
	}
	return *o.HidePricing
}

// GetHidePricingOk returns a tuple with the HidePricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetHidePricingOk() (*string, bool) {
	if o == nil || IsNil(o.HidePricing) {
		return nil, false
	}
	return o.HidePricing, true
}

// HasHidePricing returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasHidePricing() bool {
	if o != nil && !IsNil(o.HidePricing) {
		return true
	}

	return false
}

// SetHidePricing gets a reference to the given string and assigns it to the HidePricing field.
func (o *AccountSettingsInformation) SetHidePricing(v string) {
	o.HidePricing = &v
}

// GetHidePricingMetadata returns the HidePricingMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetHidePricingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.HidePricingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.HidePricingMetadata
}

// GetHidePricingMetadataOk returns a tuple with the HidePricingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetHidePricingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.HidePricingMetadata) {
		return nil, false
	}
	return o.HidePricingMetadata, true
}

// HasHidePricingMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasHidePricingMetadata() bool {
	if o != nil && !IsNil(o.HidePricingMetadata) {
		return true
	}

	return false
}

// SetHidePricingMetadata gets a reference to the given SettingsMetadata and assigns it to the HidePricingMetadata field.
func (o *AccountSettingsInformation) SetHidePricingMetadata(v SettingsMetadata) {
	o.HidePricingMetadata = &v
}

// GetIdCheckConfigurations returns the IdCheckConfigurations field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIdCheckConfigurations() []IdCheckConfiguration {
	if o == nil || IsNil(o.IdCheckConfigurations) {
		var ret []IdCheckConfiguration
		return ret
	}
	return o.IdCheckConfigurations
}

// GetIdCheckConfigurationsOk returns a tuple with the IdCheckConfigurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIdCheckConfigurationsOk() ([]IdCheckConfiguration, bool) {
	if o == nil || IsNil(o.IdCheckConfigurations) {
		return nil, false
	}
	return o.IdCheckConfigurations, true
}

// HasIdCheckConfigurations returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIdCheckConfigurations() bool {
	if o != nil && !IsNil(o.IdCheckConfigurations) {
		return true
	}

	return false
}

// SetIdCheckConfigurations gets a reference to the given []IdCheckConfiguration and assigns it to the IdCheckConfigurations field.
func (o *AccountSettingsInformation) SetIdCheckConfigurations(v []IdCheckConfiguration) {
	o.IdCheckConfigurations = v
}

// GetIdCheckExpire returns the IdCheckExpire field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIdCheckExpire() string {
	if o == nil || IsNil(o.IdCheckExpire) {
		var ret string
		return ret
	}
	return *o.IdCheckExpire
}

// GetIdCheckExpireOk returns a tuple with the IdCheckExpire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIdCheckExpireOk() (*string, bool) {
	if o == nil || IsNil(o.IdCheckExpire) {
		return nil, false
	}
	return o.IdCheckExpire, true
}

// HasIdCheckExpire returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIdCheckExpire() bool {
	if o != nil && !IsNil(o.IdCheckExpire) {
		return true
	}

	return false
}

// SetIdCheckExpire gets a reference to the given string and assigns it to the IdCheckExpire field.
func (o *AccountSettingsInformation) SetIdCheckExpire(v string) {
	o.IdCheckExpire = &v
}

// GetIdCheckExpireDays returns the IdCheckExpireDays field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIdCheckExpireDays() string {
	if o == nil || IsNil(o.IdCheckExpireDays) {
		var ret string
		return ret
	}
	return *o.IdCheckExpireDays
}

// GetIdCheckExpireDaysOk returns a tuple with the IdCheckExpireDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIdCheckExpireDaysOk() (*string, bool) {
	if o == nil || IsNil(o.IdCheckExpireDays) {
		return nil, false
	}
	return o.IdCheckExpireDays, true
}

// HasIdCheckExpireDays returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIdCheckExpireDays() bool {
	if o != nil && !IsNil(o.IdCheckExpireDays) {
		return true
	}

	return false
}

// SetIdCheckExpireDays gets a reference to the given string and assigns it to the IdCheckExpireDays field.
func (o *AccountSettingsInformation) SetIdCheckExpireDays(v string) {
	o.IdCheckExpireDays = &v
}

// GetIdCheckExpireDaysMetadata returns the IdCheckExpireDaysMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIdCheckExpireDaysMetadata() SettingsMetadata {
	if o == nil || IsNil(o.IdCheckExpireDaysMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.IdCheckExpireDaysMetadata
}

// GetIdCheckExpireDaysMetadataOk returns a tuple with the IdCheckExpireDaysMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIdCheckExpireDaysMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.IdCheckExpireDaysMetadata) {
		return nil, false
	}
	return o.IdCheckExpireDaysMetadata, true
}

// HasIdCheckExpireDaysMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIdCheckExpireDaysMetadata() bool {
	if o != nil && !IsNil(o.IdCheckExpireDaysMetadata) {
		return true
	}

	return false
}

// SetIdCheckExpireDaysMetadata gets a reference to the given SettingsMetadata and assigns it to the IdCheckExpireDaysMetadata field.
func (o *AccountSettingsInformation) SetIdCheckExpireDaysMetadata(v SettingsMetadata) {
	o.IdCheckExpireDaysMetadata = &v
}

// GetIdCheckExpireMetadata returns the IdCheckExpireMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIdCheckExpireMetadata() SettingsMetadata {
	if o == nil || IsNil(o.IdCheckExpireMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.IdCheckExpireMetadata
}

// GetIdCheckExpireMetadataOk returns a tuple with the IdCheckExpireMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIdCheckExpireMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.IdCheckExpireMetadata) {
		return nil, false
	}
	return o.IdCheckExpireMetadata, true
}

// HasIdCheckExpireMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIdCheckExpireMetadata() bool {
	if o != nil && !IsNil(o.IdCheckExpireMetadata) {
		return true
	}

	return false
}

// SetIdCheckExpireMetadata gets a reference to the given SettingsMetadata and assigns it to the IdCheckExpireMetadata field.
func (o *AccountSettingsInformation) SetIdCheckExpireMetadata(v SettingsMetadata) {
	o.IdCheckExpireMetadata = &v
}

// GetIdCheckExpireMinutes returns the IdCheckExpireMinutes field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIdCheckExpireMinutes() string {
	if o == nil || IsNil(o.IdCheckExpireMinutes) {
		var ret string
		return ret
	}
	return *o.IdCheckExpireMinutes
}

// GetIdCheckExpireMinutesOk returns a tuple with the IdCheckExpireMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIdCheckExpireMinutesOk() (*string, bool) {
	if o == nil || IsNil(o.IdCheckExpireMinutes) {
		return nil, false
	}
	return o.IdCheckExpireMinutes, true
}

// HasIdCheckExpireMinutes returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIdCheckExpireMinutes() bool {
	if o != nil && !IsNil(o.IdCheckExpireMinutes) {
		return true
	}

	return false
}

// SetIdCheckExpireMinutes gets a reference to the given string and assigns it to the IdCheckExpireMinutes field.
func (o *AccountSettingsInformation) SetIdCheckExpireMinutes(v string) {
	o.IdCheckExpireMinutes = &v
}

// GetIdCheckExpireMinutesMetadata returns the IdCheckExpireMinutesMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIdCheckExpireMinutesMetadata() SettingsMetadata {
	if o == nil || IsNil(o.IdCheckExpireMinutesMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.IdCheckExpireMinutesMetadata
}

// GetIdCheckExpireMinutesMetadataOk returns a tuple with the IdCheckExpireMinutesMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIdCheckExpireMinutesMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.IdCheckExpireMinutesMetadata) {
		return nil, false
	}
	return o.IdCheckExpireMinutesMetadata, true
}

// HasIdCheckExpireMinutesMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIdCheckExpireMinutesMetadata() bool {
	if o != nil && !IsNil(o.IdCheckExpireMinutesMetadata) {
		return true
	}

	return false
}

// SetIdCheckExpireMinutesMetadata gets a reference to the given SettingsMetadata and assigns it to the IdCheckExpireMinutesMetadata field.
func (o *AccountSettingsInformation) SetIdCheckExpireMinutesMetadata(v SettingsMetadata) {
	o.IdCheckExpireMinutesMetadata = &v
}

// GetIdCheckRequired returns the IdCheckRequired field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIdCheckRequired() string {
	if o == nil || IsNil(o.IdCheckRequired) {
		var ret string
		return ret
	}
	return *o.IdCheckRequired
}

// GetIdCheckRequiredOk returns a tuple with the IdCheckRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIdCheckRequiredOk() (*string, bool) {
	if o == nil || IsNil(o.IdCheckRequired) {
		return nil, false
	}
	return o.IdCheckRequired, true
}

// HasIdCheckRequired returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIdCheckRequired() bool {
	if o != nil && !IsNil(o.IdCheckRequired) {
		return true
	}

	return false
}

// SetIdCheckRequired gets a reference to the given string and assigns it to the IdCheckRequired field.
func (o *AccountSettingsInformation) SetIdCheckRequired(v string) {
	o.IdCheckRequired = &v
}

// GetIdCheckRequiredMetadata returns the IdCheckRequiredMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIdCheckRequiredMetadata() SettingsMetadata {
	if o == nil || IsNil(o.IdCheckRequiredMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.IdCheckRequiredMetadata
}

// GetIdCheckRequiredMetadataOk returns a tuple with the IdCheckRequiredMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIdCheckRequiredMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.IdCheckRequiredMetadata) {
		return nil, false
	}
	return o.IdCheckRequiredMetadata, true
}

// HasIdCheckRequiredMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIdCheckRequiredMetadata() bool {
	if o != nil && !IsNil(o.IdCheckRequiredMetadata) {
		return true
	}

	return false
}

// SetIdCheckRequiredMetadata gets a reference to the given SettingsMetadata and assigns it to the IdCheckRequiredMetadata field.
func (o *AccountSettingsInformation) SetIdCheckRequiredMetadata(v SettingsMetadata) {
	o.IdCheckRequiredMetadata = &v
}

// GetIdentityVerification returns the IdentityVerification field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIdentityVerification() []AccountIdentityVerificationWorkflow {
	if o == nil || IsNil(o.IdentityVerification) {
		var ret []AccountIdentityVerificationWorkflow
		return ret
	}
	return o.IdentityVerification
}

// GetIdentityVerificationOk returns a tuple with the IdentityVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIdentityVerificationOk() ([]AccountIdentityVerificationWorkflow, bool) {
	if o == nil || IsNil(o.IdentityVerification) {
		return nil, false
	}
	return o.IdentityVerification, true
}

// HasIdentityVerification returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIdentityVerification() bool {
	if o != nil && !IsNil(o.IdentityVerification) {
		return true
	}

	return false
}

// SetIdentityVerification gets a reference to the given []AccountIdentityVerificationWorkflow and assigns it to the IdentityVerification field.
func (o *AccountSettingsInformation) SetIdentityVerification(v []AccountIdentityVerificationWorkflow) {
	o.IdentityVerification = v
}

// GetIdentityVerificationMetadata returns the IdentityVerificationMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIdentityVerificationMetadata() SettingsMetadata {
	if o == nil || IsNil(o.IdentityVerificationMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.IdentityVerificationMetadata
}

// GetIdentityVerificationMetadataOk returns a tuple with the IdentityVerificationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIdentityVerificationMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.IdentityVerificationMetadata) {
		return nil, false
	}
	return o.IdentityVerificationMetadata, true
}

// HasIdentityVerificationMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIdentityVerificationMetadata() bool {
	if o != nil && !IsNil(o.IdentityVerificationMetadata) {
		return true
	}

	return false
}

// SetIdentityVerificationMetadata gets a reference to the given SettingsMetadata and assigns it to the IdentityVerificationMetadata field.
func (o *AccountSettingsInformation) SetIdentityVerificationMetadata(v SettingsMetadata) {
	o.IdentityVerificationMetadata = &v
}

// GetIdfxKBAAuthenticationOverride returns the IdfxKBAAuthenticationOverride field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIdfxKBAAuthenticationOverride() string {
	if o == nil || IsNil(o.IdfxKBAAuthenticationOverride) {
		var ret string
		return ret
	}
	return *o.IdfxKBAAuthenticationOverride
}

// GetIdfxKBAAuthenticationOverrideOk returns a tuple with the IdfxKBAAuthenticationOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIdfxKBAAuthenticationOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.IdfxKBAAuthenticationOverride) {
		return nil, false
	}
	return o.IdfxKBAAuthenticationOverride, true
}

// HasIdfxKBAAuthenticationOverride returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIdfxKBAAuthenticationOverride() bool {
	if o != nil && !IsNil(o.IdfxKBAAuthenticationOverride) {
		return true
	}

	return false
}

// SetIdfxKBAAuthenticationOverride gets a reference to the given string and assigns it to the IdfxKBAAuthenticationOverride field.
func (o *AccountSettingsInformation) SetIdfxKBAAuthenticationOverride(v string) {
	o.IdfxKBAAuthenticationOverride = &v
}

// GetIdfxKBAAuthenticationOverrideMetadata returns the IdfxKBAAuthenticationOverrideMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIdfxKBAAuthenticationOverrideMetadata() SettingsMetadata {
	if o == nil || IsNil(o.IdfxKBAAuthenticationOverrideMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.IdfxKBAAuthenticationOverrideMetadata
}

// GetIdfxKBAAuthenticationOverrideMetadataOk returns a tuple with the IdfxKBAAuthenticationOverrideMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIdfxKBAAuthenticationOverrideMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.IdfxKBAAuthenticationOverrideMetadata) {
		return nil, false
	}
	return o.IdfxKBAAuthenticationOverrideMetadata, true
}

// HasIdfxKBAAuthenticationOverrideMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIdfxKBAAuthenticationOverrideMetadata() bool {
	if o != nil && !IsNil(o.IdfxKBAAuthenticationOverrideMetadata) {
		return true
	}

	return false
}

// SetIdfxKBAAuthenticationOverrideMetadata gets a reference to the given SettingsMetadata and assigns it to the IdfxKBAAuthenticationOverrideMetadata field.
func (o *AccountSettingsInformation) SetIdfxKBAAuthenticationOverrideMetadata(v SettingsMetadata) {
	o.IdfxKBAAuthenticationOverrideMetadata = &v
}

// GetIdfxPhoneAuthenticationOverride returns the IdfxPhoneAuthenticationOverride field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIdfxPhoneAuthenticationOverride() string {
	if o == nil || IsNil(o.IdfxPhoneAuthenticationOverride) {
		var ret string
		return ret
	}
	return *o.IdfxPhoneAuthenticationOverride
}

// GetIdfxPhoneAuthenticationOverrideOk returns a tuple with the IdfxPhoneAuthenticationOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIdfxPhoneAuthenticationOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.IdfxPhoneAuthenticationOverride) {
		return nil, false
	}
	return o.IdfxPhoneAuthenticationOverride, true
}

// HasIdfxPhoneAuthenticationOverride returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIdfxPhoneAuthenticationOverride() bool {
	if o != nil && !IsNil(o.IdfxPhoneAuthenticationOverride) {
		return true
	}

	return false
}

// SetIdfxPhoneAuthenticationOverride gets a reference to the given string and assigns it to the IdfxPhoneAuthenticationOverride field.
func (o *AccountSettingsInformation) SetIdfxPhoneAuthenticationOverride(v string) {
	o.IdfxPhoneAuthenticationOverride = &v
}

// GetIdfxPhoneAuthenticationOverrideMetadata returns the IdfxPhoneAuthenticationOverrideMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIdfxPhoneAuthenticationOverrideMetadata() SettingsMetadata {
	if o == nil || IsNil(o.IdfxPhoneAuthenticationOverrideMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.IdfxPhoneAuthenticationOverrideMetadata
}

// GetIdfxPhoneAuthenticationOverrideMetadataOk returns a tuple with the IdfxPhoneAuthenticationOverrideMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIdfxPhoneAuthenticationOverrideMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.IdfxPhoneAuthenticationOverrideMetadata) {
		return nil, false
	}
	return o.IdfxPhoneAuthenticationOverrideMetadata, true
}

// HasIdfxPhoneAuthenticationOverrideMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIdfxPhoneAuthenticationOverrideMetadata() bool {
	if o != nil && !IsNil(o.IdfxPhoneAuthenticationOverrideMetadata) {
		return true
	}

	return false
}

// SetIdfxPhoneAuthenticationOverrideMetadata gets a reference to the given SettingsMetadata and assigns it to the IdfxPhoneAuthenticationOverrideMetadata field.
func (o *AccountSettingsInformation) SetIdfxPhoneAuthenticationOverrideMetadata(v SettingsMetadata) {
	o.IdfxPhoneAuthenticationOverrideMetadata = &v
}

// GetIgnoreErrorIfAnchorTabNotFound returns the IgnoreErrorIfAnchorTabNotFound field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIgnoreErrorIfAnchorTabNotFound() string {
	if o == nil || IsNil(o.IgnoreErrorIfAnchorTabNotFound) {
		var ret string
		return ret
	}
	return *o.IgnoreErrorIfAnchorTabNotFound
}

// GetIgnoreErrorIfAnchorTabNotFoundOk returns a tuple with the IgnoreErrorIfAnchorTabNotFound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIgnoreErrorIfAnchorTabNotFoundOk() (*string, bool) {
	if o == nil || IsNil(o.IgnoreErrorIfAnchorTabNotFound) {
		return nil, false
	}
	return o.IgnoreErrorIfAnchorTabNotFound, true
}

// HasIgnoreErrorIfAnchorTabNotFound returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIgnoreErrorIfAnchorTabNotFound() bool {
	if o != nil && !IsNil(o.IgnoreErrorIfAnchorTabNotFound) {
		return true
	}

	return false
}

// SetIgnoreErrorIfAnchorTabNotFound gets a reference to the given string and assigns it to the IgnoreErrorIfAnchorTabNotFound field.
func (o *AccountSettingsInformation) SetIgnoreErrorIfAnchorTabNotFound(v string) {
	o.IgnoreErrorIfAnchorTabNotFound = &v
}

// GetIgnoreErrorIfAnchorTabNotFoundMetadataEnabled returns the IgnoreErrorIfAnchorTabNotFoundMetadataEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIgnoreErrorIfAnchorTabNotFoundMetadataEnabled() SettingsMetadata {
	if o == nil || IsNil(o.IgnoreErrorIfAnchorTabNotFoundMetadataEnabled) {
		var ret SettingsMetadata
		return ret
	}
	return *o.IgnoreErrorIfAnchorTabNotFoundMetadataEnabled
}

// GetIgnoreErrorIfAnchorTabNotFoundMetadataEnabledOk returns a tuple with the IgnoreErrorIfAnchorTabNotFoundMetadataEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIgnoreErrorIfAnchorTabNotFoundMetadataEnabledOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.IgnoreErrorIfAnchorTabNotFoundMetadataEnabled) {
		return nil, false
	}
	return o.IgnoreErrorIfAnchorTabNotFoundMetadataEnabled, true
}

// HasIgnoreErrorIfAnchorTabNotFoundMetadataEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIgnoreErrorIfAnchorTabNotFoundMetadataEnabled() bool {
	if o != nil && !IsNil(o.IgnoreErrorIfAnchorTabNotFoundMetadataEnabled) {
		return true
	}

	return false
}

// SetIgnoreErrorIfAnchorTabNotFoundMetadataEnabled gets a reference to the given SettingsMetadata and assigns it to the IgnoreErrorIfAnchorTabNotFoundMetadataEnabled field.
func (o *AccountSettingsInformation) SetIgnoreErrorIfAnchorTabNotFoundMetadataEnabled(v SettingsMetadata) {
	o.IgnoreErrorIfAnchorTabNotFoundMetadataEnabled = &v
}

// GetInPersonIDCheckQuestion returns the InPersonIDCheckQuestion field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetInPersonIDCheckQuestion() string {
	if o == nil || IsNil(o.InPersonIDCheckQuestion) {
		var ret string
		return ret
	}
	return *o.InPersonIDCheckQuestion
}

// GetInPersonIDCheckQuestionOk returns a tuple with the InPersonIDCheckQuestion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetInPersonIDCheckQuestionOk() (*string, bool) {
	if o == nil || IsNil(o.InPersonIDCheckQuestion) {
		return nil, false
	}
	return o.InPersonIDCheckQuestion, true
}

// HasInPersonIDCheckQuestion returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasInPersonIDCheckQuestion() bool {
	if o != nil && !IsNil(o.InPersonIDCheckQuestion) {
		return true
	}

	return false
}

// SetInPersonIDCheckQuestion gets a reference to the given string and assigns it to the InPersonIDCheckQuestion field.
func (o *AccountSettingsInformation) SetInPersonIDCheckQuestion(v string) {
	o.InPersonIDCheckQuestion = &v
}

// GetInPersonIDCheckQuestionMetadata returns the InPersonIDCheckQuestionMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetInPersonIDCheckQuestionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.InPersonIDCheckQuestionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.InPersonIDCheckQuestionMetadata
}

// GetInPersonIDCheckQuestionMetadataOk returns a tuple with the InPersonIDCheckQuestionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetInPersonIDCheckQuestionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.InPersonIDCheckQuestionMetadata) {
		return nil, false
	}
	return o.InPersonIDCheckQuestionMetadata, true
}

// HasInPersonIDCheckQuestionMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasInPersonIDCheckQuestionMetadata() bool {
	if o != nil && !IsNil(o.InPersonIDCheckQuestionMetadata) {
		return true
	}

	return false
}

// SetInPersonIDCheckQuestionMetadata gets a reference to the given SettingsMetadata and assigns it to the InPersonIDCheckQuestionMetadata field.
func (o *AccountSettingsInformation) SetInPersonIDCheckQuestionMetadata(v SettingsMetadata) {
	o.InPersonIDCheckQuestionMetadata = &v
}

// GetInPersonSigningEnabled returns the InPersonSigningEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetInPersonSigningEnabled() string {
	if o == nil || IsNil(o.InPersonSigningEnabled) {
		var ret string
		return ret
	}
	return *o.InPersonSigningEnabled
}

// GetInPersonSigningEnabledOk returns a tuple with the InPersonSigningEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetInPersonSigningEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.InPersonSigningEnabled) {
		return nil, false
	}
	return o.InPersonSigningEnabled, true
}

// HasInPersonSigningEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasInPersonSigningEnabled() bool {
	if o != nil && !IsNil(o.InPersonSigningEnabled) {
		return true
	}

	return false
}

// SetInPersonSigningEnabled gets a reference to the given string and assigns it to the InPersonSigningEnabled field.
func (o *AccountSettingsInformation) SetInPersonSigningEnabled(v string) {
	o.InPersonSigningEnabled = &v
}

// GetInPersonSigningEnabledMetadata returns the InPersonSigningEnabledMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetInPersonSigningEnabledMetadata() SettingsMetadata {
	if o == nil || IsNil(o.InPersonSigningEnabledMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.InPersonSigningEnabledMetadata
}

// GetInPersonSigningEnabledMetadataOk returns a tuple with the InPersonSigningEnabledMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetInPersonSigningEnabledMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.InPersonSigningEnabledMetadata) {
		return nil, false
	}
	return o.InPersonSigningEnabledMetadata, true
}

// HasInPersonSigningEnabledMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasInPersonSigningEnabledMetadata() bool {
	if o != nil && !IsNil(o.InPersonSigningEnabledMetadata) {
		return true
	}

	return false
}

// SetInPersonSigningEnabledMetadata gets a reference to the given SettingsMetadata and assigns it to the InPersonSigningEnabledMetadata field.
func (o *AccountSettingsInformation) SetInPersonSigningEnabledMetadata(v SettingsMetadata) {
	o.InPersonSigningEnabledMetadata = &v
}

// GetInSessionEnabled returns the InSessionEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetInSessionEnabled() string {
	if o == nil || IsNil(o.InSessionEnabled) {
		var ret string
		return ret
	}
	return *o.InSessionEnabled
}

// GetInSessionEnabledOk returns a tuple with the InSessionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetInSessionEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.InSessionEnabled) {
		return nil, false
	}
	return o.InSessionEnabled, true
}

// HasInSessionEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasInSessionEnabled() bool {
	if o != nil && !IsNil(o.InSessionEnabled) {
		return true
	}

	return false
}

// SetInSessionEnabled gets a reference to the given string and assigns it to the InSessionEnabled field.
func (o *AccountSettingsInformation) SetInSessionEnabled(v string) {
	o.InSessionEnabled = &v
}

// GetInSessionEnabledMetadata returns the InSessionEnabledMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetInSessionEnabledMetadata() SettingsMetadata {
	if o == nil || IsNil(o.InSessionEnabledMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.InSessionEnabledMetadata
}

// GetInSessionEnabledMetadataOk returns a tuple with the InSessionEnabledMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetInSessionEnabledMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.InSessionEnabledMetadata) {
		return nil, false
	}
	return o.InSessionEnabledMetadata, true
}

// HasInSessionEnabledMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasInSessionEnabledMetadata() bool {
	if o != nil && !IsNil(o.InSessionEnabledMetadata) {
		return true
	}

	return false
}

// SetInSessionEnabledMetadata gets a reference to the given SettingsMetadata and assigns it to the InSessionEnabledMetadata field.
func (o *AccountSettingsInformation) SetInSessionEnabledMetadata(v SettingsMetadata) {
	o.InSessionEnabledMetadata = &v
}

// GetInSessionSuppressEmails returns the InSessionSuppressEmails field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetInSessionSuppressEmails() string {
	if o == nil || IsNil(o.InSessionSuppressEmails) {
		var ret string
		return ret
	}
	return *o.InSessionSuppressEmails
}

// GetInSessionSuppressEmailsOk returns a tuple with the InSessionSuppressEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetInSessionSuppressEmailsOk() (*string, bool) {
	if o == nil || IsNil(o.InSessionSuppressEmails) {
		return nil, false
	}
	return o.InSessionSuppressEmails, true
}

// HasInSessionSuppressEmails returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasInSessionSuppressEmails() bool {
	if o != nil && !IsNil(o.InSessionSuppressEmails) {
		return true
	}

	return false
}

// SetInSessionSuppressEmails gets a reference to the given string and assigns it to the InSessionSuppressEmails field.
func (o *AccountSettingsInformation) SetInSessionSuppressEmails(v string) {
	o.InSessionSuppressEmails = &v
}

// GetInSessionSuppressEmailsMetadata returns the InSessionSuppressEmailsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetInSessionSuppressEmailsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.InSessionSuppressEmailsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.InSessionSuppressEmailsMetadata
}

// GetInSessionSuppressEmailsMetadataOk returns a tuple with the InSessionSuppressEmailsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetInSessionSuppressEmailsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.InSessionSuppressEmailsMetadata) {
		return nil, false
	}
	return o.InSessionSuppressEmailsMetadata, true
}

// HasInSessionSuppressEmailsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasInSessionSuppressEmailsMetadata() bool {
	if o != nil && !IsNil(o.InSessionSuppressEmailsMetadata) {
		return true
	}

	return false
}

// SetInSessionSuppressEmailsMetadata gets a reference to the given SettingsMetadata and assigns it to the InSessionSuppressEmailsMetadata field.
func (o *AccountSettingsInformation) SetInSessionSuppressEmailsMetadata(v SettingsMetadata) {
	o.InSessionSuppressEmailsMetadata = &v
}

// GetIsConnectDocumentFieldsEnabled returns the IsConnectDocumentFieldsEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetIsConnectDocumentFieldsEnabled() string {
	if o == nil || IsNil(o.IsConnectDocumentFieldsEnabled) {
		var ret string
		return ret
	}
	return *o.IsConnectDocumentFieldsEnabled
}

// GetIsConnectDocumentFieldsEnabledOk returns a tuple with the IsConnectDocumentFieldsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetIsConnectDocumentFieldsEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.IsConnectDocumentFieldsEnabled) {
		return nil, false
	}
	return o.IsConnectDocumentFieldsEnabled, true
}

// HasIsConnectDocumentFieldsEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasIsConnectDocumentFieldsEnabled() bool {
	if o != nil && !IsNil(o.IsConnectDocumentFieldsEnabled) {
		return true
	}

	return false
}

// SetIsConnectDocumentFieldsEnabled gets a reference to the given string and assigns it to the IsConnectDocumentFieldsEnabled field.
func (o *AccountSettingsInformation) SetIsConnectDocumentFieldsEnabled(v string) {
	o.IsConnectDocumentFieldsEnabled = &v
}

// GetLinkedExternalPrimaryAccounts returns the LinkedExternalPrimaryAccounts field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetLinkedExternalPrimaryAccounts() []LinkedExternalPrimaryAccount {
	if o == nil || IsNil(o.LinkedExternalPrimaryAccounts) {
		var ret []LinkedExternalPrimaryAccount
		return ret
	}
	return o.LinkedExternalPrimaryAccounts
}

// GetLinkedExternalPrimaryAccountsOk returns a tuple with the LinkedExternalPrimaryAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetLinkedExternalPrimaryAccountsOk() ([]LinkedExternalPrimaryAccount, bool) {
	if o == nil || IsNil(o.LinkedExternalPrimaryAccounts) {
		return nil, false
	}
	return o.LinkedExternalPrimaryAccounts, true
}

// HasLinkedExternalPrimaryAccounts returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasLinkedExternalPrimaryAccounts() bool {
	if o != nil && !IsNil(o.LinkedExternalPrimaryAccounts) {
		return true
	}

	return false
}

// SetLinkedExternalPrimaryAccounts gets a reference to the given []LinkedExternalPrimaryAccount and assigns it to the LinkedExternalPrimaryAccounts field.
func (o *AccountSettingsInformation) SetLinkedExternalPrimaryAccounts(v []LinkedExternalPrimaryAccount) {
	o.LinkedExternalPrimaryAccounts = v
}

// GetMaximumSigningGroups returns the MaximumSigningGroups field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetMaximumSigningGroups() string {
	if o == nil || IsNil(o.MaximumSigningGroups) {
		var ret string
		return ret
	}
	return *o.MaximumSigningGroups
}

// GetMaximumSigningGroupsOk returns a tuple with the MaximumSigningGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetMaximumSigningGroupsOk() (*string, bool) {
	if o == nil || IsNil(o.MaximumSigningGroups) {
		return nil, false
	}
	return o.MaximumSigningGroups, true
}

// HasMaximumSigningGroups returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasMaximumSigningGroups() bool {
	if o != nil && !IsNil(o.MaximumSigningGroups) {
		return true
	}

	return false
}

// SetMaximumSigningGroups gets a reference to the given string and assigns it to the MaximumSigningGroups field.
func (o *AccountSettingsInformation) SetMaximumSigningGroups(v string) {
	o.MaximumSigningGroups = &v
}

// GetMaximumSigningGroupsMetadata returns the MaximumSigningGroupsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetMaximumSigningGroupsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.MaximumSigningGroupsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.MaximumSigningGroupsMetadata
}

// GetMaximumSigningGroupsMetadataOk returns a tuple with the MaximumSigningGroupsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetMaximumSigningGroupsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.MaximumSigningGroupsMetadata) {
		return nil, false
	}
	return o.MaximumSigningGroupsMetadata, true
}

// HasMaximumSigningGroupsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasMaximumSigningGroupsMetadata() bool {
	if o != nil && !IsNil(o.MaximumSigningGroupsMetadata) {
		return true
	}

	return false
}

// SetMaximumSigningGroupsMetadata gets a reference to the given SettingsMetadata and assigns it to the MaximumSigningGroupsMetadata field.
func (o *AccountSettingsInformation) SetMaximumSigningGroupsMetadata(v SettingsMetadata) {
	o.MaximumSigningGroupsMetadata = &v
}

// GetMaximumUsersPerSigningGroup returns the MaximumUsersPerSigningGroup field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetMaximumUsersPerSigningGroup() string {
	if o == nil || IsNil(o.MaximumUsersPerSigningGroup) {
		var ret string
		return ret
	}
	return *o.MaximumUsersPerSigningGroup
}

// GetMaximumUsersPerSigningGroupOk returns a tuple with the MaximumUsersPerSigningGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetMaximumUsersPerSigningGroupOk() (*string, bool) {
	if o == nil || IsNil(o.MaximumUsersPerSigningGroup) {
		return nil, false
	}
	return o.MaximumUsersPerSigningGroup, true
}

// HasMaximumUsersPerSigningGroup returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasMaximumUsersPerSigningGroup() bool {
	if o != nil && !IsNil(o.MaximumUsersPerSigningGroup) {
		return true
	}

	return false
}

// SetMaximumUsersPerSigningGroup gets a reference to the given string and assigns it to the MaximumUsersPerSigningGroup field.
func (o *AccountSettingsInformation) SetMaximumUsersPerSigningGroup(v string) {
	o.MaximumUsersPerSigningGroup = &v
}

// GetMaximumUsersPerSigningGroupMetadata returns the MaximumUsersPerSigningGroupMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetMaximumUsersPerSigningGroupMetadata() SettingsMetadata {
	if o == nil || IsNil(o.MaximumUsersPerSigningGroupMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.MaximumUsersPerSigningGroupMetadata
}

// GetMaximumUsersPerSigningGroupMetadataOk returns a tuple with the MaximumUsersPerSigningGroupMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetMaximumUsersPerSigningGroupMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.MaximumUsersPerSigningGroupMetadata) {
		return nil, false
	}
	return o.MaximumUsersPerSigningGroupMetadata, true
}

// HasMaximumUsersPerSigningGroupMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasMaximumUsersPerSigningGroupMetadata() bool {
	if o != nil && !IsNil(o.MaximumUsersPerSigningGroupMetadata) {
		return true
	}

	return false
}

// SetMaximumUsersPerSigningGroupMetadata gets a reference to the given SettingsMetadata and assigns it to the MaximumUsersPerSigningGroupMetadata field.
func (o *AccountSettingsInformation) SetMaximumUsersPerSigningGroupMetadata(v SettingsMetadata) {
	o.MaximumUsersPerSigningGroupMetadata = &v
}

// GetMaxNumberOfCustomStamps returns the MaxNumberOfCustomStamps field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetMaxNumberOfCustomStamps() string {
	if o == nil || IsNil(o.MaxNumberOfCustomStamps) {
		var ret string
		return ret
	}
	return *o.MaxNumberOfCustomStamps
}

// GetMaxNumberOfCustomStampsOk returns a tuple with the MaxNumberOfCustomStamps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetMaxNumberOfCustomStampsOk() (*string, bool) {
	if o == nil || IsNil(o.MaxNumberOfCustomStamps) {
		return nil, false
	}
	return o.MaxNumberOfCustomStamps, true
}

// HasMaxNumberOfCustomStamps returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasMaxNumberOfCustomStamps() bool {
	if o != nil && !IsNil(o.MaxNumberOfCustomStamps) {
		return true
	}

	return false
}

// SetMaxNumberOfCustomStamps gets a reference to the given string and assigns it to the MaxNumberOfCustomStamps field.
func (o *AccountSettingsInformation) SetMaxNumberOfCustomStamps(v string) {
	o.MaxNumberOfCustomStamps = &v
}

// GetMergeMixedModeResults returns the MergeMixedModeResults field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetMergeMixedModeResults() string {
	if o == nil || IsNil(o.MergeMixedModeResults) {
		var ret string
		return ret
	}
	return *o.MergeMixedModeResults
}

// GetMergeMixedModeResultsOk returns a tuple with the MergeMixedModeResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetMergeMixedModeResultsOk() (*string, bool) {
	if o == nil || IsNil(o.MergeMixedModeResults) {
		return nil, false
	}
	return o.MergeMixedModeResults, true
}

// HasMergeMixedModeResults returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasMergeMixedModeResults() bool {
	if o != nil && !IsNil(o.MergeMixedModeResults) {
		return true
	}

	return false
}

// SetMergeMixedModeResults gets a reference to the given string and assigns it to the MergeMixedModeResults field.
func (o *AccountSettingsInformation) SetMergeMixedModeResults(v string) {
	o.MergeMixedModeResults = &v
}

// GetMergeMixedModeResultsMetadata returns the MergeMixedModeResultsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetMergeMixedModeResultsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.MergeMixedModeResultsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.MergeMixedModeResultsMetadata
}

// GetMergeMixedModeResultsMetadataOk returns a tuple with the MergeMixedModeResultsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetMergeMixedModeResultsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.MergeMixedModeResultsMetadata) {
		return nil, false
	}
	return o.MergeMixedModeResultsMetadata, true
}

// HasMergeMixedModeResultsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasMergeMixedModeResultsMetadata() bool {
	if o != nil && !IsNil(o.MergeMixedModeResultsMetadata) {
		return true
	}

	return false
}

// SetMergeMixedModeResultsMetadata gets a reference to the given SettingsMetadata and assigns it to the MergeMixedModeResultsMetadata field.
func (o *AccountSettingsInformation) SetMergeMixedModeResultsMetadata(v SettingsMetadata) {
	o.MergeMixedModeResultsMetadata = &v
}

// GetMobileSessionTimeout returns the MobileSessionTimeout field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetMobileSessionTimeout() string {
	if o == nil || IsNil(o.MobileSessionTimeout) {
		var ret string
		return ret
	}
	return *o.MobileSessionTimeout
}

// GetMobileSessionTimeoutOk returns a tuple with the MobileSessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetMobileSessionTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.MobileSessionTimeout) {
		return nil, false
	}
	return o.MobileSessionTimeout, true
}

// HasMobileSessionTimeout returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasMobileSessionTimeout() bool {
	if o != nil && !IsNil(o.MobileSessionTimeout) {
		return true
	}

	return false
}

// SetMobileSessionTimeout gets a reference to the given string and assigns it to the MobileSessionTimeout field.
func (o *AccountSettingsInformation) SetMobileSessionTimeout(v string) {
	o.MobileSessionTimeout = &v
}

// GetMobileSessionTimeoutMetadata returns the MobileSessionTimeoutMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetMobileSessionTimeoutMetadata() SettingsMetadata {
	if o == nil || IsNil(o.MobileSessionTimeoutMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.MobileSessionTimeoutMetadata
}

// GetMobileSessionTimeoutMetadataOk returns a tuple with the MobileSessionTimeoutMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetMobileSessionTimeoutMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.MobileSessionTimeoutMetadata) {
		return nil, false
	}
	return o.MobileSessionTimeoutMetadata, true
}

// HasMobileSessionTimeoutMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasMobileSessionTimeoutMetadata() bool {
	if o != nil && !IsNil(o.MobileSessionTimeoutMetadata) {
		return true
	}

	return false
}

// SetMobileSessionTimeoutMetadata gets a reference to the given SettingsMetadata and assigns it to the MobileSessionTimeoutMetadata field.
func (o *AccountSettingsInformation) SetMobileSessionTimeoutMetadata(v SettingsMetadata) {
	o.MobileSessionTimeoutMetadata = &v
}

// GetNumberOfActiveCustomStamps returns the NumberOfActiveCustomStamps field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetNumberOfActiveCustomStamps() string {
	if o == nil || IsNil(o.NumberOfActiveCustomStamps) {
		var ret string
		return ret
	}
	return *o.NumberOfActiveCustomStamps
}

// GetNumberOfActiveCustomStampsOk returns a tuple with the NumberOfActiveCustomStamps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetNumberOfActiveCustomStampsOk() (*string, bool) {
	if o == nil || IsNil(o.NumberOfActiveCustomStamps) {
		return nil, false
	}
	return o.NumberOfActiveCustomStamps, true
}

// HasNumberOfActiveCustomStamps returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasNumberOfActiveCustomStamps() bool {
	if o != nil && !IsNil(o.NumberOfActiveCustomStamps) {
		return true
	}

	return false
}

// SetNumberOfActiveCustomStamps gets a reference to the given string and assigns it to the NumberOfActiveCustomStamps field.
func (o *AccountSettingsInformation) SetNumberOfActiveCustomStamps(v string) {
	o.NumberOfActiveCustomStamps = &v
}

// GetOptInMobileSigningV02 returns the OptInMobileSigningV02 field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetOptInMobileSigningV02() string {
	if o == nil || IsNil(o.OptInMobileSigningV02) {
		var ret string
		return ret
	}
	return *o.OptInMobileSigningV02
}

// GetOptInMobileSigningV02Ok returns a tuple with the OptInMobileSigningV02 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetOptInMobileSigningV02Ok() (*string, bool) {
	if o == nil || IsNil(o.OptInMobileSigningV02) {
		return nil, false
	}
	return o.OptInMobileSigningV02, true
}

// HasOptInMobileSigningV02 returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasOptInMobileSigningV02() bool {
	if o != nil && !IsNil(o.OptInMobileSigningV02) {
		return true
	}

	return false
}

// SetOptInMobileSigningV02 gets a reference to the given string and assigns it to the OptInMobileSigningV02 field.
func (o *AccountSettingsInformation) SetOptInMobileSigningV02(v string) {
	o.OptInMobileSigningV02 = &v
}

// GetOptInMobileSigningV02Metadata returns the OptInMobileSigningV02Metadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetOptInMobileSigningV02Metadata() SettingsMetadata {
	if o == nil || IsNil(o.OptInMobileSigningV02Metadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.OptInMobileSigningV02Metadata
}

// GetOptInMobileSigningV02MetadataOk returns a tuple with the OptInMobileSigningV02Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetOptInMobileSigningV02MetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.OptInMobileSigningV02Metadata) {
		return nil, false
	}
	return o.OptInMobileSigningV02Metadata, true
}

// HasOptInMobileSigningV02Metadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasOptInMobileSigningV02Metadata() bool {
	if o != nil && !IsNil(o.OptInMobileSigningV02Metadata) {
		return true
	}

	return false
}

// SetOptInMobileSigningV02Metadata gets a reference to the given SettingsMetadata and assigns it to the OptInMobileSigningV02Metadata field.
func (o *AccountSettingsInformation) SetOptInMobileSigningV02Metadata(v SettingsMetadata) {
	o.OptInMobileSigningV02Metadata = &v
}

// GetOptInUniversalSignatures returns the OptInUniversalSignatures field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetOptInUniversalSignatures() string {
	if o == nil || IsNil(o.OptInUniversalSignatures) {
		var ret string
		return ret
	}
	return *o.OptInUniversalSignatures
}

// GetOptInUniversalSignaturesOk returns a tuple with the OptInUniversalSignatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetOptInUniversalSignaturesOk() (*string, bool) {
	if o == nil || IsNil(o.OptInUniversalSignatures) {
		return nil, false
	}
	return o.OptInUniversalSignatures, true
}

// HasOptInUniversalSignatures returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasOptInUniversalSignatures() bool {
	if o != nil && !IsNil(o.OptInUniversalSignatures) {
		return true
	}

	return false
}

// SetOptInUniversalSignatures gets a reference to the given string and assigns it to the OptInUniversalSignatures field.
func (o *AccountSettingsInformation) SetOptInUniversalSignatures(v string) {
	o.OptInUniversalSignatures = &v
}

// GetOptOutAutoNavTextAndTabColorUpdates returns the OptOutAutoNavTextAndTabColorUpdates field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetOptOutAutoNavTextAndTabColorUpdates() string {
	if o == nil || IsNil(o.OptOutAutoNavTextAndTabColorUpdates) {
		var ret string
		return ret
	}
	return *o.OptOutAutoNavTextAndTabColorUpdates
}

// GetOptOutAutoNavTextAndTabColorUpdatesOk returns a tuple with the OptOutAutoNavTextAndTabColorUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetOptOutAutoNavTextAndTabColorUpdatesOk() (*string, bool) {
	if o == nil || IsNil(o.OptOutAutoNavTextAndTabColorUpdates) {
		return nil, false
	}
	return o.OptOutAutoNavTextAndTabColorUpdates, true
}

// HasOptOutAutoNavTextAndTabColorUpdates returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasOptOutAutoNavTextAndTabColorUpdates() bool {
	if o != nil && !IsNil(o.OptOutAutoNavTextAndTabColorUpdates) {
		return true
	}

	return false
}

// SetOptOutAutoNavTextAndTabColorUpdates gets a reference to the given string and assigns it to the OptOutAutoNavTextAndTabColorUpdates field.
func (o *AccountSettingsInformation) SetOptOutAutoNavTextAndTabColorUpdates(v string) {
	o.OptOutAutoNavTextAndTabColorUpdates = &v
}

// GetOptOutAutoNavTextAndTabColorUpdatesMetadata returns the OptOutAutoNavTextAndTabColorUpdatesMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetOptOutAutoNavTextAndTabColorUpdatesMetadata() SettingsMetadata {
	if o == nil || IsNil(o.OptOutAutoNavTextAndTabColorUpdatesMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.OptOutAutoNavTextAndTabColorUpdatesMetadata
}

// GetOptOutAutoNavTextAndTabColorUpdatesMetadataOk returns a tuple with the OptOutAutoNavTextAndTabColorUpdatesMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetOptOutAutoNavTextAndTabColorUpdatesMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.OptOutAutoNavTextAndTabColorUpdatesMetadata) {
		return nil, false
	}
	return o.OptOutAutoNavTextAndTabColorUpdatesMetadata, true
}

// HasOptOutAutoNavTextAndTabColorUpdatesMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasOptOutAutoNavTextAndTabColorUpdatesMetadata() bool {
	if o != nil && !IsNil(o.OptOutAutoNavTextAndTabColorUpdatesMetadata) {
		return true
	}

	return false
}

// SetOptOutAutoNavTextAndTabColorUpdatesMetadata gets a reference to the given SettingsMetadata and assigns it to the OptOutAutoNavTextAndTabColorUpdatesMetadata field.
func (o *AccountSettingsInformation) SetOptOutAutoNavTextAndTabColorUpdatesMetadata(v SettingsMetadata) {
	o.OptOutAutoNavTextAndTabColorUpdatesMetadata = &v
}

// GetOptOutNewPlatformSeal returns the OptOutNewPlatformSeal field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetOptOutNewPlatformSeal() string {
	if o == nil || IsNil(o.OptOutNewPlatformSeal) {
		var ret string
		return ret
	}
	return *o.OptOutNewPlatformSeal
}

// GetOptOutNewPlatformSealOk returns a tuple with the OptOutNewPlatformSeal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetOptOutNewPlatformSealOk() (*string, bool) {
	if o == nil || IsNil(o.OptOutNewPlatformSeal) {
		return nil, false
	}
	return o.OptOutNewPlatformSeal, true
}

// HasOptOutNewPlatformSeal returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasOptOutNewPlatformSeal() bool {
	if o != nil && !IsNil(o.OptOutNewPlatformSeal) {
		return true
	}

	return false
}

// SetOptOutNewPlatformSeal gets a reference to the given string and assigns it to the OptOutNewPlatformSeal field.
func (o *AccountSettingsInformation) SetOptOutNewPlatformSeal(v string) {
	o.OptOutNewPlatformSeal = &v
}

// GetOptOutNewPlatformSealPlatformMetadata returns the OptOutNewPlatformSealPlatformMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetOptOutNewPlatformSealPlatformMetadata() SettingsMetadata {
	if o == nil || IsNil(o.OptOutNewPlatformSealPlatformMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.OptOutNewPlatformSealPlatformMetadata
}

// GetOptOutNewPlatformSealPlatformMetadataOk returns a tuple with the OptOutNewPlatformSealPlatformMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetOptOutNewPlatformSealPlatformMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.OptOutNewPlatformSealPlatformMetadata) {
		return nil, false
	}
	return o.OptOutNewPlatformSealPlatformMetadata, true
}

// HasOptOutNewPlatformSealPlatformMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasOptOutNewPlatformSealPlatformMetadata() bool {
	if o != nil && !IsNil(o.OptOutNewPlatformSealPlatformMetadata) {
		return true
	}

	return false
}

// SetOptOutNewPlatformSealPlatformMetadata gets a reference to the given SettingsMetadata and assigns it to the OptOutNewPlatformSealPlatformMetadata field.
func (o *AccountSettingsInformation) SetOptOutNewPlatformSealPlatformMetadata(v SettingsMetadata) {
	o.OptOutNewPlatformSealPlatformMetadata = &v
}

// GetPdfMaxChunkedUploadPartSize returns the PdfMaxChunkedUploadPartSize field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetPdfMaxChunkedUploadPartSize() string {
	if o == nil || IsNil(o.PdfMaxChunkedUploadPartSize) {
		var ret string
		return ret
	}
	return *o.PdfMaxChunkedUploadPartSize
}

// GetPdfMaxChunkedUploadPartSizeOk returns a tuple with the PdfMaxChunkedUploadPartSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetPdfMaxChunkedUploadPartSizeOk() (*string, bool) {
	if o == nil || IsNil(o.PdfMaxChunkedUploadPartSize) {
		return nil, false
	}
	return o.PdfMaxChunkedUploadPartSize, true
}

// HasPdfMaxChunkedUploadPartSize returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasPdfMaxChunkedUploadPartSize() bool {
	if o != nil && !IsNil(o.PdfMaxChunkedUploadPartSize) {
		return true
	}

	return false
}

// SetPdfMaxChunkedUploadPartSize gets a reference to the given string and assigns it to the PdfMaxChunkedUploadPartSize field.
func (o *AccountSettingsInformation) SetPdfMaxChunkedUploadPartSize(v string) {
	o.PdfMaxChunkedUploadPartSize = &v
}

// GetPdfMaxChunkedUploadPartSizeMetadata returns the PdfMaxChunkedUploadPartSizeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetPdfMaxChunkedUploadPartSizeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.PdfMaxChunkedUploadPartSizeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.PdfMaxChunkedUploadPartSizeMetadata
}

// GetPdfMaxChunkedUploadPartSizeMetadataOk returns a tuple with the PdfMaxChunkedUploadPartSizeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetPdfMaxChunkedUploadPartSizeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.PdfMaxChunkedUploadPartSizeMetadata) {
		return nil, false
	}
	return o.PdfMaxChunkedUploadPartSizeMetadata, true
}

// HasPdfMaxChunkedUploadPartSizeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasPdfMaxChunkedUploadPartSizeMetadata() bool {
	if o != nil && !IsNil(o.PdfMaxChunkedUploadPartSizeMetadata) {
		return true
	}

	return false
}

// SetPdfMaxChunkedUploadPartSizeMetadata gets a reference to the given SettingsMetadata and assigns it to the PdfMaxChunkedUploadPartSizeMetadata field.
func (o *AccountSettingsInformation) SetPdfMaxChunkedUploadPartSizeMetadata(v SettingsMetadata) {
	o.PdfMaxChunkedUploadPartSizeMetadata = &v
}

// GetPdfMaxChunkedUploadTotalSize returns the PdfMaxChunkedUploadTotalSize field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetPdfMaxChunkedUploadTotalSize() string {
	if o == nil || IsNil(o.PdfMaxChunkedUploadTotalSize) {
		var ret string
		return ret
	}
	return *o.PdfMaxChunkedUploadTotalSize
}

// GetPdfMaxChunkedUploadTotalSizeOk returns a tuple with the PdfMaxChunkedUploadTotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetPdfMaxChunkedUploadTotalSizeOk() (*string, bool) {
	if o == nil || IsNil(o.PdfMaxChunkedUploadTotalSize) {
		return nil, false
	}
	return o.PdfMaxChunkedUploadTotalSize, true
}

// HasPdfMaxChunkedUploadTotalSize returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasPdfMaxChunkedUploadTotalSize() bool {
	if o != nil && !IsNil(o.PdfMaxChunkedUploadTotalSize) {
		return true
	}

	return false
}

// SetPdfMaxChunkedUploadTotalSize gets a reference to the given string and assigns it to the PdfMaxChunkedUploadTotalSize field.
func (o *AccountSettingsInformation) SetPdfMaxChunkedUploadTotalSize(v string) {
	o.PdfMaxChunkedUploadTotalSize = &v
}

// GetPdfMaxChunkedUploadTotalSizeMetadata returns the PdfMaxChunkedUploadTotalSizeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetPdfMaxChunkedUploadTotalSizeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.PdfMaxChunkedUploadTotalSizeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.PdfMaxChunkedUploadTotalSizeMetadata
}

// GetPdfMaxChunkedUploadTotalSizeMetadataOk returns a tuple with the PdfMaxChunkedUploadTotalSizeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetPdfMaxChunkedUploadTotalSizeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.PdfMaxChunkedUploadTotalSizeMetadata) {
		return nil, false
	}
	return o.PdfMaxChunkedUploadTotalSizeMetadata, true
}

// HasPdfMaxChunkedUploadTotalSizeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasPdfMaxChunkedUploadTotalSizeMetadata() bool {
	if o != nil && !IsNil(o.PdfMaxChunkedUploadTotalSizeMetadata) {
		return true
	}

	return false
}

// SetPdfMaxChunkedUploadTotalSizeMetadata gets a reference to the given SettingsMetadata and assigns it to the PdfMaxChunkedUploadTotalSizeMetadata field.
func (o *AccountSettingsInformation) SetPdfMaxChunkedUploadTotalSizeMetadata(v SettingsMetadata) {
	o.PdfMaxChunkedUploadTotalSizeMetadata = &v
}

// GetPdfMaxIndividualUploadSize returns the PdfMaxIndividualUploadSize field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetPdfMaxIndividualUploadSize() string {
	if o == nil || IsNil(o.PdfMaxIndividualUploadSize) {
		var ret string
		return ret
	}
	return *o.PdfMaxIndividualUploadSize
}

// GetPdfMaxIndividualUploadSizeOk returns a tuple with the PdfMaxIndividualUploadSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetPdfMaxIndividualUploadSizeOk() (*string, bool) {
	if o == nil || IsNil(o.PdfMaxIndividualUploadSize) {
		return nil, false
	}
	return o.PdfMaxIndividualUploadSize, true
}

// HasPdfMaxIndividualUploadSize returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasPdfMaxIndividualUploadSize() bool {
	if o != nil && !IsNil(o.PdfMaxIndividualUploadSize) {
		return true
	}

	return false
}

// SetPdfMaxIndividualUploadSize gets a reference to the given string and assigns it to the PdfMaxIndividualUploadSize field.
func (o *AccountSettingsInformation) SetPdfMaxIndividualUploadSize(v string) {
	o.PdfMaxIndividualUploadSize = &v
}

// GetPdfMaxIndividualUploadSizeMetadata returns the PdfMaxIndividualUploadSizeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetPdfMaxIndividualUploadSizeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.PdfMaxIndividualUploadSizeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.PdfMaxIndividualUploadSizeMetadata
}

// GetPdfMaxIndividualUploadSizeMetadataOk returns a tuple with the PdfMaxIndividualUploadSizeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetPdfMaxIndividualUploadSizeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.PdfMaxIndividualUploadSizeMetadata) {
		return nil, false
	}
	return o.PdfMaxIndividualUploadSizeMetadata, true
}

// HasPdfMaxIndividualUploadSizeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasPdfMaxIndividualUploadSizeMetadata() bool {
	if o != nil && !IsNil(o.PdfMaxIndividualUploadSizeMetadata) {
		return true
	}

	return false
}

// SetPdfMaxIndividualUploadSizeMetadata gets a reference to the given SettingsMetadata and assigns it to the PdfMaxIndividualUploadSizeMetadata field.
func (o *AccountSettingsInformation) SetPdfMaxIndividualUploadSizeMetadata(v SettingsMetadata) {
	o.PdfMaxIndividualUploadSizeMetadata = &v
}

// GetPhoneAuthRecipientMayProvidePhoneNumber returns the PhoneAuthRecipientMayProvidePhoneNumber field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetPhoneAuthRecipientMayProvidePhoneNumber() string {
	if o == nil || IsNil(o.PhoneAuthRecipientMayProvidePhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneAuthRecipientMayProvidePhoneNumber
}

// GetPhoneAuthRecipientMayProvidePhoneNumberOk returns a tuple with the PhoneAuthRecipientMayProvidePhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetPhoneAuthRecipientMayProvidePhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneAuthRecipientMayProvidePhoneNumber) {
		return nil, false
	}
	return o.PhoneAuthRecipientMayProvidePhoneNumber, true
}

// HasPhoneAuthRecipientMayProvidePhoneNumber returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasPhoneAuthRecipientMayProvidePhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneAuthRecipientMayProvidePhoneNumber) {
		return true
	}

	return false
}

// SetPhoneAuthRecipientMayProvidePhoneNumber gets a reference to the given string and assigns it to the PhoneAuthRecipientMayProvidePhoneNumber field.
func (o *AccountSettingsInformation) SetPhoneAuthRecipientMayProvidePhoneNumber(v string) {
	o.PhoneAuthRecipientMayProvidePhoneNumber = &v
}

// GetPhoneAuthRecipientMayProvidePhoneNumberMetadata returns the PhoneAuthRecipientMayProvidePhoneNumberMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetPhoneAuthRecipientMayProvidePhoneNumberMetadata() SettingsMetadata {
	if o == nil || IsNil(o.PhoneAuthRecipientMayProvidePhoneNumberMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.PhoneAuthRecipientMayProvidePhoneNumberMetadata
}

// GetPhoneAuthRecipientMayProvidePhoneNumberMetadataOk returns a tuple with the PhoneAuthRecipientMayProvidePhoneNumberMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetPhoneAuthRecipientMayProvidePhoneNumberMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.PhoneAuthRecipientMayProvidePhoneNumberMetadata) {
		return nil, false
	}
	return o.PhoneAuthRecipientMayProvidePhoneNumberMetadata, true
}

// HasPhoneAuthRecipientMayProvidePhoneNumberMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasPhoneAuthRecipientMayProvidePhoneNumberMetadata() bool {
	if o != nil && !IsNil(o.PhoneAuthRecipientMayProvidePhoneNumberMetadata) {
		return true
	}

	return false
}

// SetPhoneAuthRecipientMayProvidePhoneNumberMetadata gets a reference to the given SettingsMetadata and assigns it to the PhoneAuthRecipientMayProvidePhoneNumberMetadata field.
func (o *AccountSettingsInformation) SetPhoneAuthRecipientMayProvidePhoneNumberMetadata(v SettingsMetadata) {
	o.PhoneAuthRecipientMayProvidePhoneNumberMetadata = &v
}

// GetPkiSignDownloadedPDFDocs returns the PkiSignDownloadedPDFDocs field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetPkiSignDownloadedPDFDocs() string {
	if o == nil || IsNil(o.PkiSignDownloadedPDFDocs) {
		var ret string
		return ret
	}
	return *o.PkiSignDownloadedPDFDocs
}

// GetPkiSignDownloadedPDFDocsOk returns a tuple with the PkiSignDownloadedPDFDocs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetPkiSignDownloadedPDFDocsOk() (*string, bool) {
	if o == nil || IsNil(o.PkiSignDownloadedPDFDocs) {
		return nil, false
	}
	return o.PkiSignDownloadedPDFDocs, true
}

// HasPkiSignDownloadedPDFDocs returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasPkiSignDownloadedPDFDocs() bool {
	if o != nil && !IsNil(o.PkiSignDownloadedPDFDocs) {
		return true
	}

	return false
}

// SetPkiSignDownloadedPDFDocs gets a reference to the given string and assigns it to the PkiSignDownloadedPDFDocs field.
func (o *AccountSettingsInformation) SetPkiSignDownloadedPDFDocs(v string) {
	o.PkiSignDownloadedPDFDocs = &v
}

// GetPkiSignDownloadedPDFDocsMetadata returns the PkiSignDownloadedPDFDocsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetPkiSignDownloadedPDFDocsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.PkiSignDownloadedPDFDocsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.PkiSignDownloadedPDFDocsMetadata
}

// GetPkiSignDownloadedPDFDocsMetadataOk returns a tuple with the PkiSignDownloadedPDFDocsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetPkiSignDownloadedPDFDocsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.PkiSignDownloadedPDFDocsMetadata) {
		return nil, false
	}
	return o.PkiSignDownloadedPDFDocsMetadata, true
}

// HasPkiSignDownloadedPDFDocsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasPkiSignDownloadedPDFDocsMetadata() bool {
	if o != nil && !IsNil(o.PkiSignDownloadedPDFDocsMetadata) {
		return true
	}

	return false
}

// SetPkiSignDownloadedPDFDocsMetadata gets a reference to the given SettingsMetadata and assigns it to the PkiSignDownloadedPDFDocsMetadata field.
func (o *AccountSettingsInformation) SetPkiSignDownloadedPDFDocsMetadata(v SettingsMetadata) {
	o.PkiSignDownloadedPDFDocsMetadata = &v
}

// GetReadOnlyMode returns the ReadOnlyMode field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetReadOnlyMode() string {
	if o == nil || IsNil(o.ReadOnlyMode) {
		var ret string
		return ret
	}
	return *o.ReadOnlyMode
}

// GetReadOnlyModeOk returns a tuple with the ReadOnlyMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetReadOnlyModeOk() (*string, bool) {
	if o == nil || IsNil(o.ReadOnlyMode) {
		return nil, false
	}
	return o.ReadOnlyMode, true
}

// HasReadOnlyMode returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasReadOnlyMode() bool {
	if o != nil && !IsNil(o.ReadOnlyMode) {
		return true
	}

	return false
}

// SetReadOnlyMode gets a reference to the given string and assigns it to the ReadOnlyMode field.
func (o *AccountSettingsInformation) SetReadOnlyMode(v string) {
	o.ReadOnlyMode = &v
}

// GetReadOnlyModeMetadata returns the ReadOnlyModeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetReadOnlyModeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ReadOnlyModeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ReadOnlyModeMetadata
}

// GetReadOnlyModeMetadataOk returns a tuple with the ReadOnlyModeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetReadOnlyModeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ReadOnlyModeMetadata) {
		return nil, false
	}
	return o.ReadOnlyModeMetadata, true
}

// HasReadOnlyModeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasReadOnlyModeMetadata() bool {
	if o != nil && !IsNil(o.ReadOnlyModeMetadata) {
		return true
	}

	return false
}

// SetReadOnlyModeMetadata gets a reference to the given SettingsMetadata and assigns it to the ReadOnlyModeMetadata field.
func (o *AccountSettingsInformation) SetReadOnlyModeMetadata(v SettingsMetadata) {
	o.ReadOnlyModeMetadata = &v
}

// GetRecipientsCanSignOffline returns the RecipientsCanSignOffline field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetRecipientsCanSignOffline() string {
	if o == nil || IsNil(o.RecipientsCanSignOffline) {
		var ret string
		return ret
	}
	return *o.RecipientsCanSignOffline
}

// GetRecipientsCanSignOfflineOk returns a tuple with the RecipientsCanSignOffline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetRecipientsCanSignOfflineOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientsCanSignOffline) {
		return nil, false
	}
	return o.RecipientsCanSignOffline, true
}

// HasRecipientsCanSignOffline returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasRecipientsCanSignOffline() bool {
	if o != nil && !IsNil(o.RecipientsCanSignOffline) {
		return true
	}

	return false
}

// SetRecipientsCanSignOffline gets a reference to the given string and assigns it to the RecipientsCanSignOffline field.
func (o *AccountSettingsInformation) SetRecipientsCanSignOffline(v string) {
	o.RecipientsCanSignOffline = &v
}

// GetRecipientsCanSignOfflineMetadata returns the RecipientsCanSignOfflineMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetRecipientsCanSignOfflineMetadata() SettingsMetadata {
	if o == nil || IsNil(o.RecipientsCanSignOfflineMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.RecipientsCanSignOfflineMetadata
}

// GetRecipientsCanSignOfflineMetadataOk returns a tuple with the RecipientsCanSignOfflineMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetRecipientsCanSignOfflineMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.RecipientsCanSignOfflineMetadata) {
		return nil, false
	}
	return o.RecipientsCanSignOfflineMetadata, true
}

// HasRecipientsCanSignOfflineMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasRecipientsCanSignOfflineMetadata() bool {
	if o != nil && !IsNil(o.RecipientsCanSignOfflineMetadata) {
		return true
	}

	return false
}

// SetRecipientsCanSignOfflineMetadata gets a reference to the given SettingsMetadata and assigns it to the RecipientsCanSignOfflineMetadata field.
func (o *AccountSettingsInformation) SetRecipientsCanSignOfflineMetadata(v SettingsMetadata) {
	o.RecipientsCanSignOfflineMetadata = &v
}

// GetRecipientSigningAutoNavigationControl returns the RecipientSigningAutoNavigationControl field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetRecipientSigningAutoNavigationControl() string {
	if o == nil || IsNil(o.RecipientSigningAutoNavigationControl) {
		var ret string
		return ret
	}
	return *o.RecipientSigningAutoNavigationControl
}

// GetRecipientSigningAutoNavigationControlOk returns a tuple with the RecipientSigningAutoNavigationControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetRecipientSigningAutoNavigationControlOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientSigningAutoNavigationControl) {
		return nil, false
	}
	return o.RecipientSigningAutoNavigationControl, true
}

// HasRecipientSigningAutoNavigationControl returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasRecipientSigningAutoNavigationControl() bool {
	if o != nil && !IsNil(o.RecipientSigningAutoNavigationControl) {
		return true
	}

	return false
}

// SetRecipientSigningAutoNavigationControl gets a reference to the given string and assigns it to the RecipientSigningAutoNavigationControl field.
func (o *AccountSettingsInformation) SetRecipientSigningAutoNavigationControl(v string) {
	o.RecipientSigningAutoNavigationControl = &v
}

// GetRecipientSigningAutoNavigationControlMetadata returns the RecipientSigningAutoNavigationControlMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetRecipientSigningAutoNavigationControlMetadata() SettingsMetadata {
	if o == nil || IsNil(o.RecipientSigningAutoNavigationControlMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.RecipientSigningAutoNavigationControlMetadata
}

// GetRecipientSigningAutoNavigationControlMetadataOk returns a tuple with the RecipientSigningAutoNavigationControlMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetRecipientSigningAutoNavigationControlMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.RecipientSigningAutoNavigationControlMetadata) {
		return nil, false
	}
	return o.RecipientSigningAutoNavigationControlMetadata, true
}

// HasRecipientSigningAutoNavigationControlMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasRecipientSigningAutoNavigationControlMetadata() bool {
	if o != nil && !IsNil(o.RecipientSigningAutoNavigationControlMetadata) {
		return true
	}

	return false
}

// SetRecipientSigningAutoNavigationControlMetadata gets a reference to the given SettingsMetadata and assigns it to the RecipientSigningAutoNavigationControlMetadata field.
func (o *AccountSettingsInformation) SetRecipientSigningAutoNavigationControlMetadata(v SettingsMetadata) {
	o.RecipientSigningAutoNavigationControlMetadata = &v
}

// GetRequire21CFRpt11Compliance returns the Require21CFRpt11Compliance field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetRequire21CFRpt11Compliance() string {
	if o == nil || IsNil(o.Require21CFRpt11Compliance) {
		var ret string
		return ret
	}
	return *o.Require21CFRpt11Compliance
}

// GetRequire21CFRpt11ComplianceOk returns a tuple with the Require21CFRpt11Compliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetRequire21CFRpt11ComplianceOk() (*string, bool) {
	if o == nil || IsNil(o.Require21CFRpt11Compliance) {
		return nil, false
	}
	return o.Require21CFRpt11Compliance, true
}

// HasRequire21CFRpt11Compliance returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasRequire21CFRpt11Compliance() bool {
	if o != nil && !IsNil(o.Require21CFRpt11Compliance) {
		return true
	}

	return false
}

// SetRequire21CFRpt11Compliance gets a reference to the given string and assigns it to the Require21CFRpt11Compliance field.
func (o *AccountSettingsInformation) SetRequire21CFRpt11Compliance(v string) {
	o.Require21CFRpt11Compliance = &v
}

// GetRequire21CFRpt11ComplianceMetadata returns the Require21CFRpt11ComplianceMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetRequire21CFRpt11ComplianceMetadata() SettingsMetadata {
	if o == nil || IsNil(o.Require21CFRpt11ComplianceMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.Require21CFRpt11ComplianceMetadata
}

// GetRequire21CFRpt11ComplianceMetadataOk returns a tuple with the Require21CFRpt11ComplianceMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetRequire21CFRpt11ComplianceMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.Require21CFRpt11ComplianceMetadata) {
		return nil, false
	}
	return o.Require21CFRpt11ComplianceMetadata, true
}

// HasRequire21CFRpt11ComplianceMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasRequire21CFRpt11ComplianceMetadata() bool {
	if o != nil && !IsNil(o.Require21CFRpt11ComplianceMetadata) {
		return true
	}

	return false
}

// SetRequire21CFRpt11ComplianceMetadata gets a reference to the given SettingsMetadata and assigns it to the Require21CFRpt11ComplianceMetadata field.
func (o *AccountSettingsInformation) SetRequire21CFRpt11ComplianceMetadata(v SettingsMetadata) {
	o.Require21CFRpt11ComplianceMetadata = &v
}

// GetRequireDeclineReason returns the RequireDeclineReason field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetRequireDeclineReason() string {
	if o == nil || IsNil(o.RequireDeclineReason) {
		var ret string
		return ret
	}
	return *o.RequireDeclineReason
}

// GetRequireDeclineReasonOk returns a tuple with the RequireDeclineReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetRequireDeclineReasonOk() (*string, bool) {
	if o == nil || IsNil(o.RequireDeclineReason) {
		return nil, false
	}
	return o.RequireDeclineReason, true
}

// HasRequireDeclineReason returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasRequireDeclineReason() bool {
	if o != nil && !IsNil(o.RequireDeclineReason) {
		return true
	}

	return false
}

// SetRequireDeclineReason gets a reference to the given string and assigns it to the RequireDeclineReason field.
func (o *AccountSettingsInformation) SetRequireDeclineReason(v string) {
	o.RequireDeclineReason = &v
}

// GetRequireDeclineReasonMetadata returns the RequireDeclineReasonMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetRequireDeclineReasonMetadata() SettingsMetadata {
	if o == nil || IsNil(o.RequireDeclineReasonMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.RequireDeclineReasonMetadata
}

// GetRequireDeclineReasonMetadataOk returns a tuple with the RequireDeclineReasonMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetRequireDeclineReasonMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.RequireDeclineReasonMetadata) {
		return nil, false
	}
	return o.RequireDeclineReasonMetadata, true
}

// HasRequireDeclineReasonMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasRequireDeclineReasonMetadata() bool {
	if o != nil && !IsNil(o.RequireDeclineReasonMetadata) {
		return true
	}

	return false
}

// SetRequireDeclineReasonMetadata gets a reference to the given SettingsMetadata and assigns it to the RequireDeclineReasonMetadata field.
func (o *AccountSettingsInformation) SetRequireDeclineReasonMetadata(v SettingsMetadata) {
	o.RequireDeclineReasonMetadata = &v
}

// GetRequireExternalUserManagement returns the RequireExternalUserManagement field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetRequireExternalUserManagement() string {
	if o == nil || IsNil(o.RequireExternalUserManagement) {
		var ret string
		return ret
	}
	return *o.RequireExternalUserManagement
}

// GetRequireExternalUserManagementOk returns a tuple with the RequireExternalUserManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetRequireExternalUserManagementOk() (*string, bool) {
	if o == nil || IsNil(o.RequireExternalUserManagement) {
		return nil, false
	}
	return o.RequireExternalUserManagement, true
}

// HasRequireExternalUserManagement returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasRequireExternalUserManagement() bool {
	if o != nil && !IsNil(o.RequireExternalUserManagement) {
		return true
	}

	return false
}

// SetRequireExternalUserManagement gets a reference to the given string and assigns it to the RequireExternalUserManagement field.
func (o *AccountSettingsInformation) SetRequireExternalUserManagement(v string) {
	o.RequireExternalUserManagement = &v
}

// GetRequireExternalUserManagementMetadata returns the RequireExternalUserManagementMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetRequireExternalUserManagementMetadata() SettingsMetadata {
	if o == nil || IsNil(o.RequireExternalUserManagementMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.RequireExternalUserManagementMetadata
}

// GetRequireExternalUserManagementMetadataOk returns a tuple with the RequireExternalUserManagementMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetRequireExternalUserManagementMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.RequireExternalUserManagementMetadata) {
		return nil, false
	}
	return o.RequireExternalUserManagementMetadata, true
}

// HasRequireExternalUserManagementMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasRequireExternalUserManagementMetadata() bool {
	if o != nil && !IsNil(o.RequireExternalUserManagementMetadata) {
		return true
	}

	return false
}

// SetRequireExternalUserManagementMetadata gets a reference to the given SettingsMetadata and assigns it to the RequireExternalUserManagementMetadata field.
func (o *AccountSettingsInformation) SetRequireExternalUserManagementMetadata(v SettingsMetadata) {
	o.RequireExternalUserManagementMetadata = &v
}

// GetRequireSignerCertificateType returns the RequireSignerCertificateType field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetRequireSignerCertificateType() string {
	if o == nil || IsNil(o.RequireSignerCertificateType) {
		var ret string
		return ret
	}
	return *o.RequireSignerCertificateType
}

// GetRequireSignerCertificateTypeOk returns a tuple with the RequireSignerCertificateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetRequireSignerCertificateTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RequireSignerCertificateType) {
		return nil, false
	}
	return o.RequireSignerCertificateType, true
}

// HasRequireSignerCertificateType returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasRequireSignerCertificateType() bool {
	if o != nil && !IsNil(o.RequireSignerCertificateType) {
		return true
	}

	return false
}

// SetRequireSignerCertificateType gets a reference to the given string and assigns it to the RequireSignerCertificateType field.
func (o *AccountSettingsInformation) SetRequireSignerCertificateType(v string) {
	o.RequireSignerCertificateType = &v
}

// GetRequireSignerCertificateTypeMetadata returns the RequireSignerCertificateTypeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetRequireSignerCertificateTypeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.RequireSignerCertificateTypeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.RequireSignerCertificateTypeMetadata
}

// GetRequireSignerCertificateTypeMetadataOk returns a tuple with the RequireSignerCertificateTypeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetRequireSignerCertificateTypeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.RequireSignerCertificateTypeMetadata) {
		return nil, false
	}
	return o.RequireSignerCertificateTypeMetadata, true
}

// HasRequireSignerCertificateTypeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasRequireSignerCertificateTypeMetadata() bool {
	if o != nil && !IsNil(o.RequireSignerCertificateTypeMetadata) {
		return true
	}

	return false
}

// SetRequireSignerCertificateTypeMetadata gets a reference to the given SettingsMetadata and assigns it to the RequireSignerCertificateTypeMetadata field.
func (o *AccountSettingsInformation) SetRequireSignerCertificateTypeMetadata(v SettingsMetadata) {
	o.RequireSignerCertificateTypeMetadata = &v
}

// GetRsaVeridAccountName returns the RsaVeridAccountName field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetRsaVeridAccountName() string {
	if o == nil || IsNil(o.RsaVeridAccountName) {
		var ret string
		return ret
	}
	return *o.RsaVeridAccountName
}

// GetRsaVeridAccountNameOk returns a tuple with the RsaVeridAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetRsaVeridAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.RsaVeridAccountName) {
		return nil, false
	}
	return o.RsaVeridAccountName, true
}

// HasRsaVeridAccountName returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasRsaVeridAccountName() bool {
	if o != nil && !IsNil(o.RsaVeridAccountName) {
		return true
	}

	return false
}

// SetRsaVeridAccountName gets a reference to the given string and assigns it to the RsaVeridAccountName field.
func (o *AccountSettingsInformation) SetRsaVeridAccountName(v string) {
	o.RsaVeridAccountName = &v
}

// GetRsaVeridPassword returns the RsaVeridPassword field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetRsaVeridPassword() string {
	if o == nil || IsNil(o.RsaVeridPassword) {
		var ret string
		return ret
	}
	return *o.RsaVeridPassword
}

// GetRsaVeridPasswordOk returns a tuple with the RsaVeridPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetRsaVeridPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.RsaVeridPassword) {
		return nil, false
	}
	return o.RsaVeridPassword, true
}

// HasRsaVeridPassword returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasRsaVeridPassword() bool {
	if o != nil && !IsNil(o.RsaVeridPassword) {
		return true
	}

	return false
}

// SetRsaVeridPassword gets a reference to the given string and assigns it to the RsaVeridPassword field.
func (o *AccountSettingsInformation) SetRsaVeridPassword(v string) {
	o.RsaVeridPassword = &v
}

// GetRsaVeridRuleset returns the RsaVeridRuleset field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetRsaVeridRuleset() string {
	if o == nil || IsNil(o.RsaVeridRuleset) {
		var ret string
		return ret
	}
	return *o.RsaVeridRuleset
}

// GetRsaVeridRulesetOk returns a tuple with the RsaVeridRuleset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetRsaVeridRulesetOk() (*string, bool) {
	if o == nil || IsNil(o.RsaVeridRuleset) {
		return nil, false
	}
	return o.RsaVeridRuleset, true
}

// HasRsaVeridRuleset returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasRsaVeridRuleset() bool {
	if o != nil && !IsNil(o.RsaVeridRuleset) {
		return true
	}

	return false
}

// SetRsaVeridRuleset gets a reference to the given string and assigns it to the RsaVeridRuleset field.
func (o *AccountSettingsInformation) SetRsaVeridRuleset(v string) {
	o.RsaVeridRuleset = &v
}

// GetRsaVeridUserId returns the RsaVeridUserId field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetRsaVeridUserId() string {
	if o == nil || IsNil(o.RsaVeridUserId) {
		var ret string
		return ret
	}
	return *o.RsaVeridUserId
}

// GetRsaVeridUserIdOk returns a tuple with the RsaVeridUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetRsaVeridUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.RsaVeridUserId) {
		return nil, false
	}
	return o.RsaVeridUserId, true
}

// HasRsaVeridUserId returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasRsaVeridUserId() bool {
	if o != nil && !IsNil(o.RsaVeridUserId) {
		return true
	}

	return false
}

// SetRsaVeridUserId gets a reference to the given string and assigns it to the RsaVeridUserId field.
func (o *AccountSettingsInformation) SetRsaVeridUserId(v string) {
	o.RsaVeridUserId = &v
}

// GetSbsTransactionLevel returns the SbsTransactionLevel field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSbsTransactionLevel() string {
	if o == nil || IsNil(o.SbsTransactionLevel) {
		var ret string
		return ret
	}
	return *o.SbsTransactionLevel
}

// GetSbsTransactionLevelOk returns a tuple with the SbsTransactionLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSbsTransactionLevelOk() (*string, bool) {
	if o == nil || IsNil(o.SbsTransactionLevel) {
		return nil, false
	}
	return o.SbsTransactionLevel, true
}

// HasSbsTransactionLevel returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSbsTransactionLevel() bool {
	if o != nil && !IsNil(o.SbsTransactionLevel) {
		return true
	}

	return false
}

// SetSbsTransactionLevel gets a reference to the given string and assigns it to the SbsTransactionLevel field.
func (o *AccountSettingsInformation) SetSbsTransactionLevel(v string) {
	o.SbsTransactionLevel = &v
}

// GetSelfSignedRecipientEmailDocument returns the SelfSignedRecipientEmailDocument field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSelfSignedRecipientEmailDocument() string {
	if o == nil || IsNil(o.SelfSignedRecipientEmailDocument) {
		var ret string
		return ret
	}
	return *o.SelfSignedRecipientEmailDocument
}

// GetSelfSignedRecipientEmailDocumentOk returns a tuple with the SelfSignedRecipientEmailDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSelfSignedRecipientEmailDocumentOk() (*string, bool) {
	if o == nil || IsNil(o.SelfSignedRecipientEmailDocument) {
		return nil, false
	}
	return o.SelfSignedRecipientEmailDocument, true
}

// HasSelfSignedRecipientEmailDocument returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSelfSignedRecipientEmailDocument() bool {
	if o != nil && !IsNil(o.SelfSignedRecipientEmailDocument) {
		return true
	}

	return false
}

// SetSelfSignedRecipientEmailDocument gets a reference to the given string and assigns it to the SelfSignedRecipientEmailDocument field.
func (o *AccountSettingsInformation) SetSelfSignedRecipientEmailDocument(v string) {
	o.SelfSignedRecipientEmailDocument = &v
}

// GetSelfSignedRecipientEmailDocumentMetadata returns the SelfSignedRecipientEmailDocumentMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSelfSignedRecipientEmailDocumentMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SelfSignedRecipientEmailDocumentMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SelfSignedRecipientEmailDocumentMetadata
}

// GetSelfSignedRecipientEmailDocumentMetadataOk returns a tuple with the SelfSignedRecipientEmailDocumentMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSelfSignedRecipientEmailDocumentMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SelfSignedRecipientEmailDocumentMetadata) {
		return nil, false
	}
	return o.SelfSignedRecipientEmailDocumentMetadata, true
}

// HasSelfSignedRecipientEmailDocumentMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSelfSignedRecipientEmailDocumentMetadata() bool {
	if o != nil && !IsNil(o.SelfSignedRecipientEmailDocumentMetadata) {
		return true
	}

	return false
}

// SetSelfSignedRecipientEmailDocumentMetadata gets a reference to the given SettingsMetadata and assigns it to the SelfSignedRecipientEmailDocumentMetadata field.
func (o *AccountSettingsInformation) SetSelfSignedRecipientEmailDocumentMetadata(v SettingsMetadata) {
	o.SelfSignedRecipientEmailDocumentMetadata = &v
}

// GetSelfSignedRecipientEmailDocumentUserOverride returns the SelfSignedRecipientEmailDocumentUserOverride field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSelfSignedRecipientEmailDocumentUserOverride() string {
	if o == nil || IsNil(o.SelfSignedRecipientEmailDocumentUserOverride) {
		var ret string
		return ret
	}
	return *o.SelfSignedRecipientEmailDocumentUserOverride
}

// GetSelfSignedRecipientEmailDocumentUserOverrideOk returns a tuple with the SelfSignedRecipientEmailDocumentUserOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSelfSignedRecipientEmailDocumentUserOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.SelfSignedRecipientEmailDocumentUserOverride) {
		return nil, false
	}
	return o.SelfSignedRecipientEmailDocumentUserOverride, true
}

// HasSelfSignedRecipientEmailDocumentUserOverride returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSelfSignedRecipientEmailDocumentUserOverride() bool {
	if o != nil && !IsNil(o.SelfSignedRecipientEmailDocumentUserOverride) {
		return true
	}

	return false
}

// SetSelfSignedRecipientEmailDocumentUserOverride gets a reference to the given string and assigns it to the SelfSignedRecipientEmailDocumentUserOverride field.
func (o *AccountSettingsInformation) SetSelfSignedRecipientEmailDocumentUserOverride(v string) {
	o.SelfSignedRecipientEmailDocumentUserOverride = &v
}

// GetSelfSignedRecipientEmailDocumentUserOverrideMetadata returns the SelfSignedRecipientEmailDocumentUserOverrideMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSelfSignedRecipientEmailDocumentUserOverrideMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SelfSignedRecipientEmailDocumentUserOverrideMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SelfSignedRecipientEmailDocumentUserOverrideMetadata
}

// GetSelfSignedRecipientEmailDocumentUserOverrideMetadataOk returns a tuple with the SelfSignedRecipientEmailDocumentUserOverrideMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSelfSignedRecipientEmailDocumentUserOverrideMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SelfSignedRecipientEmailDocumentUserOverrideMetadata) {
		return nil, false
	}
	return o.SelfSignedRecipientEmailDocumentUserOverrideMetadata, true
}

// HasSelfSignedRecipientEmailDocumentUserOverrideMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSelfSignedRecipientEmailDocumentUserOverrideMetadata() bool {
	if o != nil && !IsNil(o.SelfSignedRecipientEmailDocumentUserOverrideMetadata) {
		return true
	}

	return false
}

// SetSelfSignedRecipientEmailDocumentUserOverrideMetadata gets a reference to the given SettingsMetadata and assigns it to the SelfSignedRecipientEmailDocumentUserOverrideMetadata field.
func (o *AccountSettingsInformation) SetSelfSignedRecipientEmailDocumentUserOverrideMetadata(v SettingsMetadata) {
	o.SelfSignedRecipientEmailDocumentUserOverrideMetadata = &v
}

// GetSenderCanSignInEachLocation returns the SenderCanSignInEachLocation field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSenderCanSignInEachLocation() string {
	if o == nil || IsNil(o.SenderCanSignInEachLocation) {
		var ret string
		return ret
	}
	return *o.SenderCanSignInEachLocation
}

// GetSenderCanSignInEachLocationOk returns a tuple with the SenderCanSignInEachLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSenderCanSignInEachLocationOk() (*string, bool) {
	if o == nil || IsNil(o.SenderCanSignInEachLocation) {
		return nil, false
	}
	return o.SenderCanSignInEachLocation, true
}

// HasSenderCanSignInEachLocation returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSenderCanSignInEachLocation() bool {
	if o != nil && !IsNil(o.SenderCanSignInEachLocation) {
		return true
	}

	return false
}

// SetSenderCanSignInEachLocation gets a reference to the given string and assigns it to the SenderCanSignInEachLocation field.
func (o *AccountSettingsInformation) SetSenderCanSignInEachLocation(v string) {
	o.SenderCanSignInEachLocation = &v
}

// GetSenderCanSignInEachLocationMetadata returns the SenderCanSignInEachLocationMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSenderCanSignInEachLocationMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SenderCanSignInEachLocationMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SenderCanSignInEachLocationMetadata
}

// GetSenderCanSignInEachLocationMetadataOk returns a tuple with the SenderCanSignInEachLocationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSenderCanSignInEachLocationMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SenderCanSignInEachLocationMetadata) {
		return nil, false
	}
	return o.SenderCanSignInEachLocationMetadata, true
}

// HasSenderCanSignInEachLocationMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSenderCanSignInEachLocationMetadata() bool {
	if o != nil && !IsNil(o.SenderCanSignInEachLocationMetadata) {
		return true
	}

	return false
}

// SetSenderCanSignInEachLocationMetadata gets a reference to the given SettingsMetadata and assigns it to the SenderCanSignInEachLocationMetadata field.
func (o *AccountSettingsInformation) SetSenderCanSignInEachLocationMetadata(v SettingsMetadata) {
	o.SenderCanSignInEachLocationMetadata = &v
}

// GetSenderMustAuthenticateSigning returns the SenderMustAuthenticateSigning field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSenderMustAuthenticateSigning() string {
	if o == nil || IsNil(o.SenderMustAuthenticateSigning) {
		var ret string
		return ret
	}
	return *o.SenderMustAuthenticateSigning
}

// GetSenderMustAuthenticateSigningOk returns a tuple with the SenderMustAuthenticateSigning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSenderMustAuthenticateSigningOk() (*string, bool) {
	if o == nil || IsNil(o.SenderMustAuthenticateSigning) {
		return nil, false
	}
	return o.SenderMustAuthenticateSigning, true
}

// HasSenderMustAuthenticateSigning returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSenderMustAuthenticateSigning() bool {
	if o != nil && !IsNil(o.SenderMustAuthenticateSigning) {
		return true
	}

	return false
}

// SetSenderMustAuthenticateSigning gets a reference to the given string and assigns it to the SenderMustAuthenticateSigning field.
func (o *AccountSettingsInformation) SetSenderMustAuthenticateSigning(v string) {
	o.SenderMustAuthenticateSigning = &v
}

// GetSenderMustAuthenticateSigningMetadata returns the SenderMustAuthenticateSigningMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSenderMustAuthenticateSigningMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SenderMustAuthenticateSigningMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SenderMustAuthenticateSigningMetadata
}

// GetSenderMustAuthenticateSigningMetadataOk returns a tuple with the SenderMustAuthenticateSigningMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSenderMustAuthenticateSigningMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SenderMustAuthenticateSigningMetadata) {
		return nil, false
	}
	return o.SenderMustAuthenticateSigningMetadata, true
}

// HasSenderMustAuthenticateSigningMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSenderMustAuthenticateSigningMetadata() bool {
	if o != nil && !IsNil(o.SenderMustAuthenticateSigningMetadata) {
		return true
	}

	return false
}

// SetSenderMustAuthenticateSigningMetadata gets a reference to the given SettingsMetadata and assigns it to the SenderMustAuthenticateSigningMetadata field.
func (o *AccountSettingsInformation) SetSenderMustAuthenticateSigningMetadata(v SettingsMetadata) {
	o.SenderMustAuthenticateSigningMetadata = &v
}

// GetSendingTagsFontColor returns the SendingTagsFontColor field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSendingTagsFontColor() string {
	if o == nil || IsNil(o.SendingTagsFontColor) {
		var ret string
		return ret
	}
	return *o.SendingTagsFontColor
}

// GetSendingTagsFontColorOk returns a tuple with the SendingTagsFontColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSendingTagsFontColorOk() (*string, bool) {
	if o == nil || IsNil(o.SendingTagsFontColor) {
		return nil, false
	}
	return o.SendingTagsFontColor, true
}

// HasSendingTagsFontColor returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSendingTagsFontColor() bool {
	if o != nil && !IsNil(o.SendingTagsFontColor) {
		return true
	}

	return false
}

// SetSendingTagsFontColor gets a reference to the given string and assigns it to the SendingTagsFontColor field.
func (o *AccountSettingsInformation) SetSendingTagsFontColor(v string) {
	o.SendingTagsFontColor = &v
}

// GetSendingTagsFontColorMetadata returns the SendingTagsFontColorMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSendingTagsFontColorMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SendingTagsFontColorMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SendingTagsFontColorMetadata
}

// GetSendingTagsFontColorMetadataOk returns a tuple with the SendingTagsFontColorMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSendingTagsFontColorMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SendingTagsFontColorMetadata) {
		return nil, false
	}
	return o.SendingTagsFontColorMetadata, true
}

// HasSendingTagsFontColorMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSendingTagsFontColorMetadata() bool {
	if o != nil && !IsNil(o.SendingTagsFontColorMetadata) {
		return true
	}

	return false
}

// SetSendingTagsFontColorMetadata gets a reference to the given SettingsMetadata and assigns it to the SendingTagsFontColorMetadata field.
func (o *AccountSettingsInformation) SetSendingTagsFontColorMetadata(v SettingsMetadata) {
	o.SendingTagsFontColorMetadata = &v
}

// GetSendingTagsFontName returns the SendingTagsFontName field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSendingTagsFontName() string {
	if o == nil || IsNil(o.SendingTagsFontName) {
		var ret string
		return ret
	}
	return *o.SendingTagsFontName
}

// GetSendingTagsFontNameOk returns a tuple with the SendingTagsFontName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSendingTagsFontNameOk() (*string, bool) {
	if o == nil || IsNil(o.SendingTagsFontName) {
		return nil, false
	}
	return o.SendingTagsFontName, true
}

// HasSendingTagsFontName returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSendingTagsFontName() bool {
	if o != nil && !IsNil(o.SendingTagsFontName) {
		return true
	}

	return false
}

// SetSendingTagsFontName gets a reference to the given string and assigns it to the SendingTagsFontName field.
func (o *AccountSettingsInformation) SetSendingTagsFontName(v string) {
	o.SendingTagsFontName = &v
}

// GetSendingTagsFontNameMetadata returns the SendingTagsFontNameMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSendingTagsFontNameMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SendingTagsFontNameMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SendingTagsFontNameMetadata
}

// GetSendingTagsFontNameMetadataOk returns a tuple with the SendingTagsFontNameMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSendingTagsFontNameMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SendingTagsFontNameMetadata) {
		return nil, false
	}
	return o.SendingTagsFontNameMetadata, true
}

// HasSendingTagsFontNameMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSendingTagsFontNameMetadata() bool {
	if o != nil && !IsNil(o.SendingTagsFontNameMetadata) {
		return true
	}

	return false
}

// SetSendingTagsFontNameMetadata gets a reference to the given SettingsMetadata and assigns it to the SendingTagsFontNameMetadata field.
func (o *AccountSettingsInformation) SetSendingTagsFontNameMetadata(v SettingsMetadata) {
	o.SendingTagsFontNameMetadata = &v
}

// GetSendingTagsFontSize returns the SendingTagsFontSize field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSendingTagsFontSize() string {
	if o == nil || IsNil(o.SendingTagsFontSize) {
		var ret string
		return ret
	}
	return *o.SendingTagsFontSize
}

// GetSendingTagsFontSizeOk returns a tuple with the SendingTagsFontSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSendingTagsFontSizeOk() (*string, bool) {
	if o == nil || IsNil(o.SendingTagsFontSize) {
		return nil, false
	}
	return o.SendingTagsFontSize, true
}

// HasSendingTagsFontSize returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSendingTagsFontSize() bool {
	if o != nil && !IsNil(o.SendingTagsFontSize) {
		return true
	}

	return false
}

// SetSendingTagsFontSize gets a reference to the given string and assigns it to the SendingTagsFontSize field.
func (o *AccountSettingsInformation) SetSendingTagsFontSize(v string) {
	o.SendingTagsFontSize = &v
}

// GetSendingTagsFontSizeMetadata returns the SendingTagsFontSizeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSendingTagsFontSizeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SendingTagsFontSizeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SendingTagsFontSizeMetadata
}

// GetSendingTagsFontSizeMetadataOk returns a tuple with the SendingTagsFontSizeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSendingTagsFontSizeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SendingTagsFontSizeMetadata) {
		return nil, false
	}
	return o.SendingTagsFontSizeMetadata, true
}

// HasSendingTagsFontSizeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSendingTagsFontSizeMetadata() bool {
	if o != nil && !IsNil(o.SendingTagsFontSizeMetadata) {
		return true
	}

	return false
}

// SetSendingTagsFontSizeMetadata gets a reference to the given SettingsMetadata and assigns it to the SendingTagsFontSizeMetadata field.
func (o *AccountSettingsInformation) SetSendingTagsFontSizeMetadata(v SettingsMetadata) {
	o.SendingTagsFontSizeMetadata = &v
}

// GetSendLockoutRecipientNotification returns the SendLockoutRecipientNotification field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSendLockoutRecipientNotification() string {
	if o == nil || IsNil(o.SendLockoutRecipientNotification) {
		var ret string
		return ret
	}
	return *o.SendLockoutRecipientNotification
}

// GetSendLockoutRecipientNotificationOk returns a tuple with the SendLockoutRecipientNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSendLockoutRecipientNotificationOk() (*string, bool) {
	if o == nil || IsNil(o.SendLockoutRecipientNotification) {
		return nil, false
	}
	return o.SendLockoutRecipientNotification, true
}

// HasSendLockoutRecipientNotification returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSendLockoutRecipientNotification() bool {
	if o != nil && !IsNil(o.SendLockoutRecipientNotification) {
		return true
	}

	return false
}

// SetSendLockoutRecipientNotification gets a reference to the given string and assigns it to the SendLockoutRecipientNotification field.
func (o *AccountSettingsInformation) SetSendLockoutRecipientNotification(v string) {
	o.SendLockoutRecipientNotification = &v
}

// GetSendLockoutRecipientNotificationMetadata returns the SendLockoutRecipientNotificationMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSendLockoutRecipientNotificationMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SendLockoutRecipientNotificationMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SendLockoutRecipientNotificationMetadata
}

// GetSendLockoutRecipientNotificationMetadataOk returns a tuple with the SendLockoutRecipientNotificationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSendLockoutRecipientNotificationMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SendLockoutRecipientNotificationMetadata) {
		return nil, false
	}
	return o.SendLockoutRecipientNotificationMetadata, true
}

// HasSendLockoutRecipientNotificationMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSendLockoutRecipientNotificationMetadata() bool {
	if o != nil && !IsNil(o.SendLockoutRecipientNotificationMetadata) {
		return true
	}

	return false
}

// SetSendLockoutRecipientNotificationMetadata gets a reference to the given SettingsMetadata and assigns it to the SendLockoutRecipientNotificationMetadata field.
func (o *AccountSettingsInformation) SetSendLockoutRecipientNotificationMetadata(v SettingsMetadata) {
	o.SendLockoutRecipientNotificationMetadata = &v
}

// GetSendToCertifiedDeliveryEnabled returns the SendToCertifiedDeliveryEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSendToCertifiedDeliveryEnabled() string {
	if o == nil || IsNil(o.SendToCertifiedDeliveryEnabled) {
		var ret string
		return ret
	}
	return *o.SendToCertifiedDeliveryEnabled
}

// GetSendToCertifiedDeliveryEnabledOk returns a tuple with the SendToCertifiedDeliveryEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSendToCertifiedDeliveryEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.SendToCertifiedDeliveryEnabled) {
		return nil, false
	}
	return o.SendToCertifiedDeliveryEnabled, true
}

// HasSendToCertifiedDeliveryEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSendToCertifiedDeliveryEnabled() bool {
	if o != nil && !IsNil(o.SendToCertifiedDeliveryEnabled) {
		return true
	}

	return false
}

// SetSendToCertifiedDeliveryEnabled gets a reference to the given string and assigns it to the SendToCertifiedDeliveryEnabled field.
func (o *AccountSettingsInformation) SetSendToCertifiedDeliveryEnabled(v string) {
	o.SendToCertifiedDeliveryEnabled = &v
}

// GetSendToCertifiedDeliveryEnabledMetadata returns the SendToCertifiedDeliveryEnabledMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSendToCertifiedDeliveryEnabledMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SendToCertifiedDeliveryEnabledMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SendToCertifiedDeliveryEnabledMetadata
}

// GetSendToCertifiedDeliveryEnabledMetadataOk returns a tuple with the SendToCertifiedDeliveryEnabledMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSendToCertifiedDeliveryEnabledMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SendToCertifiedDeliveryEnabledMetadata) {
		return nil, false
	}
	return o.SendToCertifiedDeliveryEnabledMetadata, true
}

// HasSendToCertifiedDeliveryEnabledMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSendToCertifiedDeliveryEnabledMetadata() bool {
	if o != nil && !IsNil(o.SendToCertifiedDeliveryEnabledMetadata) {
		return true
	}

	return false
}

// SetSendToCertifiedDeliveryEnabledMetadata gets a reference to the given SettingsMetadata and assigns it to the SendToCertifiedDeliveryEnabledMetadata field.
func (o *AccountSettingsInformation) SetSendToCertifiedDeliveryEnabledMetadata(v SettingsMetadata) {
	o.SendToCertifiedDeliveryEnabledMetadata = &v
}

// GetSessionTimeout returns the SessionTimeout field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSessionTimeout() string {
	if o == nil || IsNil(o.SessionTimeout) {
		var ret string
		return ret
	}
	return *o.SessionTimeout
}

// GetSessionTimeoutOk returns a tuple with the SessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSessionTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.SessionTimeout) {
		return nil, false
	}
	return o.SessionTimeout, true
}

// HasSessionTimeout returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSessionTimeout() bool {
	if o != nil && !IsNil(o.SessionTimeout) {
		return true
	}

	return false
}

// SetSessionTimeout gets a reference to the given string and assigns it to the SessionTimeout field.
func (o *AccountSettingsInformation) SetSessionTimeout(v string) {
	o.SessionTimeout = &v
}

// GetSessionTimeoutMetadata returns the SessionTimeoutMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSessionTimeoutMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SessionTimeoutMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SessionTimeoutMetadata
}

// GetSessionTimeoutMetadataOk returns a tuple with the SessionTimeoutMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSessionTimeoutMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SessionTimeoutMetadata) {
		return nil, false
	}
	return o.SessionTimeoutMetadata, true
}

// HasSessionTimeoutMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSessionTimeoutMetadata() bool {
	if o != nil && !IsNil(o.SessionTimeoutMetadata) {
		return true
	}

	return false
}

// SetSessionTimeoutMetadata gets a reference to the given SettingsMetadata and assigns it to the SessionTimeoutMetadata field.
func (o *AccountSettingsInformation) SetSessionTimeoutMetadata(v SettingsMetadata) {
	o.SessionTimeoutMetadata = &v
}

// GetSetRecipEmailLang returns the SetRecipEmailLang field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSetRecipEmailLang() string {
	if o == nil || IsNil(o.SetRecipEmailLang) {
		var ret string
		return ret
	}
	return *o.SetRecipEmailLang
}

// GetSetRecipEmailLangOk returns a tuple with the SetRecipEmailLang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSetRecipEmailLangOk() (*string, bool) {
	if o == nil || IsNil(o.SetRecipEmailLang) {
		return nil, false
	}
	return o.SetRecipEmailLang, true
}

// HasSetRecipEmailLang returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSetRecipEmailLang() bool {
	if o != nil && !IsNil(o.SetRecipEmailLang) {
		return true
	}

	return false
}

// SetSetRecipEmailLang gets a reference to the given string and assigns it to the SetRecipEmailLang field.
func (o *AccountSettingsInformation) SetSetRecipEmailLang(v string) {
	o.SetRecipEmailLang = &v
}

// GetSetRecipEmailLangMetadata returns the SetRecipEmailLangMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSetRecipEmailLangMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SetRecipEmailLangMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SetRecipEmailLangMetadata
}

// GetSetRecipEmailLangMetadataOk returns a tuple with the SetRecipEmailLangMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSetRecipEmailLangMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SetRecipEmailLangMetadata) {
		return nil, false
	}
	return o.SetRecipEmailLangMetadata, true
}

// HasSetRecipEmailLangMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSetRecipEmailLangMetadata() bool {
	if o != nil && !IsNil(o.SetRecipEmailLangMetadata) {
		return true
	}

	return false
}

// SetSetRecipEmailLangMetadata gets a reference to the given SettingsMetadata and assigns it to the SetRecipEmailLangMetadata field.
func (o *AccountSettingsInformation) SetSetRecipEmailLangMetadata(v SettingsMetadata) {
	o.SetRecipEmailLangMetadata = &v
}

// GetSetRecipSignLang returns the SetRecipSignLang field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSetRecipSignLang() string {
	if o == nil || IsNil(o.SetRecipSignLang) {
		var ret string
		return ret
	}
	return *o.SetRecipSignLang
}

// GetSetRecipSignLangOk returns a tuple with the SetRecipSignLang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSetRecipSignLangOk() (*string, bool) {
	if o == nil || IsNil(o.SetRecipSignLang) {
		return nil, false
	}
	return o.SetRecipSignLang, true
}

// HasSetRecipSignLang returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSetRecipSignLang() bool {
	if o != nil && !IsNil(o.SetRecipSignLang) {
		return true
	}

	return false
}

// SetSetRecipSignLang gets a reference to the given string and assigns it to the SetRecipSignLang field.
func (o *AccountSettingsInformation) SetSetRecipSignLang(v string) {
	o.SetRecipSignLang = &v
}

// GetSetRecipSignLangMetadata returns the SetRecipSignLangMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSetRecipSignLangMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SetRecipSignLangMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SetRecipSignLangMetadata
}

// GetSetRecipSignLangMetadataOk returns a tuple with the SetRecipSignLangMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSetRecipSignLangMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SetRecipSignLangMetadata) {
		return nil, false
	}
	return o.SetRecipSignLangMetadata, true
}

// HasSetRecipSignLangMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSetRecipSignLangMetadata() bool {
	if o != nil && !IsNil(o.SetRecipSignLangMetadata) {
		return true
	}

	return false
}

// SetSetRecipSignLangMetadata gets a reference to the given SettingsMetadata and assigns it to the SetRecipSignLangMetadata field.
func (o *AccountSettingsInformation) SetSetRecipSignLangMetadata(v SettingsMetadata) {
	o.SetRecipSignLangMetadata = &v
}

// GetSharedTemplateFolders returns the SharedTemplateFolders field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSharedTemplateFolders() string {
	if o == nil || IsNil(o.SharedTemplateFolders) {
		var ret string
		return ret
	}
	return *o.SharedTemplateFolders
}

// GetSharedTemplateFoldersOk returns a tuple with the SharedTemplateFolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSharedTemplateFoldersOk() (*string, bool) {
	if o == nil || IsNil(o.SharedTemplateFolders) {
		return nil, false
	}
	return o.SharedTemplateFolders, true
}

// HasSharedTemplateFolders returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSharedTemplateFolders() bool {
	if o != nil && !IsNil(o.SharedTemplateFolders) {
		return true
	}

	return false
}

// SetSharedTemplateFolders gets a reference to the given string and assigns it to the SharedTemplateFolders field.
func (o *AccountSettingsInformation) SetSharedTemplateFolders(v string) {
	o.SharedTemplateFolders = &v
}

// GetSharedTemplateFoldersMetadata returns the SharedTemplateFoldersMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSharedTemplateFoldersMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SharedTemplateFoldersMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SharedTemplateFoldersMetadata
}

// GetSharedTemplateFoldersMetadataOk returns a tuple with the SharedTemplateFoldersMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSharedTemplateFoldersMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SharedTemplateFoldersMetadata) {
		return nil, false
	}
	return o.SharedTemplateFoldersMetadata, true
}

// HasSharedTemplateFoldersMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSharedTemplateFoldersMetadata() bool {
	if o != nil && !IsNil(o.SharedTemplateFoldersMetadata) {
		return true
	}

	return false
}

// SetSharedTemplateFoldersMetadata gets a reference to the given SettingsMetadata and assigns it to the SharedTemplateFoldersMetadata field.
func (o *AccountSettingsInformation) SetSharedTemplateFoldersMetadata(v SettingsMetadata) {
	o.SharedTemplateFoldersMetadata = &v
}

// GetShowCompleteDialogInEmbeddedSession returns the ShowCompleteDialogInEmbeddedSession field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetShowCompleteDialogInEmbeddedSession() string {
	if o == nil || IsNil(o.ShowCompleteDialogInEmbeddedSession) {
		var ret string
		return ret
	}
	return *o.ShowCompleteDialogInEmbeddedSession
}

// GetShowCompleteDialogInEmbeddedSessionOk returns a tuple with the ShowCompleteDialogInEmbeddedSession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetShowCompleteDialogInEmbeddedSessionOk() (*string, bool) {
	if o == nil || IsNil(o.ShowCompleteDialogInEmbeddedSession) {
		return nil, false
	}
	return o.ShowCompleteDialogInEmbeddedSession, true
}

// HasShowCompleteDialogInEmbeddedSession returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasShowCompleteDialogInEmbeddedSession() bool {
	if o != nil && !IsNil(o.ShowCompleteDialogInEmbeddedSession) {
		return true
	}

	return false
}

// SetShowCompleteDialogInEmbeddedSession gets a reference to the given string and assigns it to the ShowCompleteDialogInEmbeddedSession field.
func (o *AccountSettingsInformation) SetShowCompleteDialogInEmbeddedSession(v string) {
	o.ShowCompleteDialogInEmbeddedSession = &v
}

// GetShowCompleteDialogInEmbeddedSessionMetadata returns the ShowCompleteDialogInEmbeddedSessionMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetShowCompleteDialogInEmbeddedSessionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ShowCompleteDialogInEmbeddedSessionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ShowCompleteDialogInEmbeddedSessionMetadata
}

// GetShowCompleteDialogInEmbeddedSessionMetadataOk returns a tuple with the ShowCompleteDialogInEmbeddedSessionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetShowCompleteDialogInEmbeddedSessionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ShowCompleteDialogInEmbeddedSessionMetadata) {
		return nil, false
	}
	return o.ShowCompleteDialogInEmbeddedSessionMetadata, true
}

// HasShowCompleteDialogInEmbeddedSessionMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasShowCompleteDialogInEmbeddedSessionMetadata() bool {
	if o != nil && !IsNil(o.ShowCompleteDialogInEmbeddedSessionMetadata) {
		return true
	}

	return false
}

// SetShowCompleteDialogInEmbeddedSessionMetadata gets a reference to the given SettingsMetadata and assigns it to the ShowCompleteDialogInEmbeddedSessionMetadata field.
func (o *AccountSettingsInformation) SetShowCompleteDialogInEmbeddedSessionMetadata(v SettingsMetadata) {
	o.ShowCompleteDialogInEmbeddedSessionMetadata = &v
}

// GetShowConditionalRoutingOnSend returns the ShowConditionalRoutingOnSend field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetShowConditionalRoutingOnSend() string {
	if o == nil || IsNil(o.ShowConditionalRoutingOnSend) {
		var ret string
		return ret
	}
	return *o.ShowConditionalRoutingOnSend
}

// GetShowConditionalRoutingOnSendOk returns a tuple with the ShowConditionalRoutingOnSend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetShowConditionalRoutingOnSendOk() (*string, bool) {
	if o == nil || IsNil(o.ShowConditionalRoutingOnSend) {
		return nil, false
	}
	return o.ShowConditionalRoutingOnSend, true
}

// HasShowConditionalRoutingOnSend returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasShowConditionalRoutingOnSend() bool {
	if o != nil && !IsNil(o.ShowConditionalRoutingOnSend) {
		return true
	}

	return false
}

// SetShowConditionalRoutingOnSend gets a reference to the given string and assigns it to the ShowConditionalRoutingOnSend field.
func (o *AccountSettingsInformation) SetShowConditionalRoutingOnSend(v string) {
	o.ShowConditionalRoutingOnSend = &v
}

// GetShowConditionalRoutingOnSendMetadata returns the ShowConditionalRoutingOnSendMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetShowConditionalRoutingOnSendMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ShowConditionalRoutingOnSendMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ShowConditionalRoutingOnSendMetadata
}

// GetShowConditionalRoutingOnSendMetadataOk returns a tuple with the ShowConditionalRoutingOnSendMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetShowConditionalRoutingOnSendMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ShowConditionalRoutingOnSendMetadata) {
		return nil, false
	}
	return o.ShowConditionalRoutingOnSendMetadata, true
}

// HasShowConditionalRoutingOnSendMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasShowConditionalRoutingOnSendMetadata() bool {
	if o != nil && !IsNil(o.ShowConditionalRoutingOnSendMetadata) {
		return true
	}

	return false
}

// SetShowConditionalRoutingOnSendMetadata gets a reference to the given SettingsMetadata and assigns it to the ShowConditionalRoutingOnSendMetadata field.
func (o *AccountSettingsInformation) SetShowConditionalRoutingOnSendMetadata(v SettingsMetadata) {
	o.ShowConditionalRoutingOnSendMetadata = &v
}

// GetShowInitialConditionalFields returns the ShowInitialConditionalFields field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetShowInitialConditionalFields() string {
	if o == nil || IsNil(o.ShowInitialConditionalFields) {
		var ret string
		return ret
	}
	return *o.ShowInitialConditionalFields
}

// GetShowInitialConditionalFieldsOk returns a tuple with the ShowInitialConditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetShowInitialConditionalFieldsOk() (*string, bool) {
	if o == nil || IsNil(o.ShowInitialConditionalFields) {
		return nil, false
	}
	return o.ShowInitialConditionalFields, true
}

// HasShowInitialConditionalFields returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasShowInitialConditionalFields() bool {
	if o != nil && !IsNil(o.ShowInitialConditionalFields) {
		return true
	}

	return false
}

// SetShowInitialConditionalFields gets a reference to the given string and assigns it to the ShowInitialConditionalFields field.
func (o *AccountSettingsInformation) SetShowInitialConditionalFields(v string) {
	o.ShowInitialConditionalFields = &v
}

// GetShowInitialConditionalFieldsMetadata returns the ShowInitialConditionalFieldsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetShowInitialConditionalFieldsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ShowInitialConditionalFieldsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ShowInitialConditionalFieldsMetadata
}

// GetShowInitialConditionalFieldsMetadataOk returns a tuple with the ShowInitialConditionalFieldsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetShowInitialConditionalFieldsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ShowInitialConditionalFieldsMetadata) {
		return nil, false
	}
	return o.ShowInitialConditionalFieldsMetadata, true
}

// HasShowInitialConditionalFieldsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasShowInitialConditionalFieldsMetadata() bool {
	if o != nil && !IsNil(o.ShowInitialConditionalFieldsMetadata) {
		return true
	}

	return false
}

// SetShowInitialConditionalFieldsMetadata gets a reference to the given SettingsMetadata and assigns it to the ShowInitialConditionalFieldsMetadata field.
func (o *AccountSettingsInformation) SetShowInitialConditionalFieldsMetadata(v SettingsMetadata) {
	o.ShowInitialConditionalFieldsMetadata = &v
}

// GetShowLocalizedWatermarks returns the ShowLocalizedWatermarks field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetShowLocalizedWatermarks() string {
	if o == nil || IsNil(o.ShowLocalizedWatermarks) {
		var ret string
		return ret
	}
	return *o.ShowLocalizedWatermarks
}

// GetShowLocalizedWatermarksOk returns a tuple with the ShowLocalizedWatermarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetShowLocalizedWatermarksOk() (*string, bool) {
	if o == nil || IsNil(o.ShowLocalizedWatermarks) {
		return nil, false
	}
	return o.ShowLocalizedWatermarks, true
}

// HasShowLocalizedWatermarks returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasShowLocalizedWatermarks() bool {
	if o != nil && !IsNil(o.ShowLocalizedWatermarks) {
		return true
	}

	return false
}

// SetShowLocalizedWatermarks gets a reference to the given string and assigns it to the ShowLocalizedWatermarks field.
func (o *AccountSettingsInformation) SetShowLocalizedWatermarks(v string) {
	o.ShowLocalizedWatermarks = &v
}

// GetShowLocalizedWatermarksMetadata returns the ShowLocalizedWatermarksMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetShowLocalizedWatermarksMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ShowLocalizedWatermarksMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ShowLocalizedWatermarksMetadata
}

// GetShowLocalizedWatermarksMetadataOk returns a tuple with the ShowLocalizedWatermarksMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetShowLocalizedWatermarksMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ShowLocalizedWatermarksMetadata) {
		return nil, false
	}
	return o.ShowLocalizedWatermarksMetadata, true
}

// HasShowLocalizedWatermarksMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasShowLocalizedWatermarksMetadata() bool {
	if o != nil && !IsNil(o.ShowLocalizedWatermarksMetadata) {
		return true
	}

	return false
}

// SetShowLocalizedWatermarksMetadata gets a reference to the given SettingsMetadata and assigns it to the ShowLocalizedWatermarksMetadata field.
func (o *AccountSettingsInformation) SetShowLocalizedWatermarksMetadata(v SettingsMetadata) {
	o.ShowLocalizedWatermarksMetadata = &v
}

// GetShowMaskedFieldsWhenDownloadingDocumentAsSender returns the ShowMaskedFieldsWhenDownloadingDocumentAsSender field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetShowMaskedFieldsWhenDownloadingDocumentAsSender() string {
	if o == nil || IsNil(o.ShowMaskedFieldsWhenDownloadingDocumentAsSender) {
		var ret string
		return ret
	}
	return *o.ShowMaskedFieldsWhenDownloadingDocumentAsSender
}

// GetShowMaskedFieldsWhenDownloadingDocumentAsSenderOk returns a tuple with the ShowMaskedFieldsWhenDownloadingDocumentAsSender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetShowMaskedFieldsWhenDownloadingDocumentAsSenderOk() (*string, bool) {
	if o == nil || IsNil(o.ShowMaskedFieldsWhenDownloadingDocumentAsSender) {
		return nil, false
	}
	return o.ShowMaskedFieldsWhenDownloadingDocumentAsSender, true
}

// HasShowMaskedFieldsWhenDownloadingDocumentAsSender returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasShowMaskedFieldsWhenDownloadingDocumentAsSender() bool {
	if o != nil && !IsNil(o.ShowMaskedFieldsWhenDownloadingDocumentAsSender) {
		return true
	}

	return false
}

// SetShowMaskedFieldsWhenDownloadingDocumentAsSender gets a reference to the given string and assigns it to the ShowMaskedFieldsWhenDownloadingDocumentAsSender field.
func (o *AccountSettingsInformation) SetShowMaskedFieldsWhenDownloadingDocumentAsSender(v string) {
	o.ShowMaskedFieldsWhenDownloadingDocumentAsSender = &v
}

// GetShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata returns the ShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata
}

// GetShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadataOk returns a tuple with the ShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata) {
		return nil, false
	}
	return o.ShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata, true
}

// HasShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata() bool {
	if o != nil && !IsNil(o.ShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata) {
		return true
	}

	return false
}

// SetShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata gets a reference to the given SettingsMetadata and assigns it to the ShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata field.
func (o *AccountSettingsInformation) SetShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata(v SettingsMetadata) {
	o.ShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata = &v
}

// GetShowTutorials returns the ShowTutorials field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetShowTutorials() string {
	if o == nil || IsNil(o.ShowTutorials) {
		var ret string
		return ret
	}
	return *o.ShowTutorials
}

// GetShowTutorialsOk returns a tuple with the ShowTutorials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetShowTutorialsOk() (*string, bool) {
	if o == nil || IsNil(o.ShowTutorials) {
		return nil, false
	}
	return o.ShowTutorials, true
}

// HasShowTutorials returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasShowTutorials() bool {
	if o != nil && !IsNil(o.ShowTutorials) {
		return true
	}

	return false
}

// SetShowTutorials gets a reference to the given string and assigns it to the ShowTutorials field.
func (o *AccountSettingsInformation) SetShowTutorials(v string) {
	o.ShowTutorials = &v
}

// GetShowTutorialsMetadata returns the ShowTutorialsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetShowTutorialsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ShowTutorialsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ShowTutorialsMetadata
}

// GetShowTutorialsMetadataOk returns a tuple with the ShowTutorialsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetShowTutorialsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ShowTutorialsMetadata) {
		return nil, false
	}
	return o.ShowTutorialsMetadata, true
}

// HasShowTutorialsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasShowTutorialsMetadata() bool {
	if o != nil && !IsNil(o.ShowTutorialsMetadata) {
		return true
	}

	return false
}

// SetShowTutorialsMetadata gets a reference to the given SettingsMetadata and assigns it to the ShowTutorialsMetadata field.
func (o *AccountSettingsInformation) SetShowTutorialsMetadata(v SettingsMetadata) {
	o.ShowTutorialsMetadata = &v
}

// GetSignatureProviders returns the SignatureProviders field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignatureProviders() []string {
	if o == nil || IsNil(o.SignatureProviders) {
		var ret []string
		return ret
	}
	return o.SignatureProviders
}

// GetSignatureProvidersOk returns a tuple with the SignatureProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignatureProvidersOk() ([]string, bool) {
	if o == nil || IsNil(o.SignatureProviders) {
		return nil, false
	}
	return o.SignatureProviders, true
}

// HasSignatureProviders returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignatureProviders() bool {
	if o != nil && !IsNil(o.SignatureProviders) {
		return true
	}

	return false
}

// SetSignatureProviders gets a reference to the given []string and assigns it to the SignatureProviders field.
func (o *AccountSettingsInformation) SetSignatureProviders(v []string) {
	o.SignatureProviders = v
}

// GetSignatureProvidersMetadata returns the SignatureProvidersMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignatureProvidersMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SignatureProvidersMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SignatureProvidersMetadata
}

// GetSignatureProvidersMetadataOk returns a tuple with the SignatureProvidersMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignatureProvidersMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SignatureProvidersMetadata) {
		return nil, false
	}
	return o.SignatureProvidersMetadata, true
}

// HasSignatureProvidersMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignatureProvidersMetadata() bool {
	if o != nil && !IsNil(o.SignatureProvidersMetadata) {
		return true
	}

	return false
}

// SetSignatureProvidersMetadata gets a reference to the given SettingsMetadata and assigns it to the SignatureProvidersMetadata field.
func (o *AccountSettingsInformation) SetSignatureProvidersMetadata(v SettingsMetadata) {
	o.SignatureProvidersMetadata = &v
}

// GetSignDateFormat returns the SignDateFormat field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignDateFormat() string {
	if o == nil || IsNil(o.SignDateFormat) {
		var ret string
		return ret
	}
	return *o.SignDateFormat
}

// GetSignDateFormatOk returns a tuple with the SignDateFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignDateFormatOk() (*string, bool) {
	if o == nil || IsNil(o.SignDateFormat) {
		return nil, false
	}
	return o.SignDateFormat, true
}

// HasSignDateFormat returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignDateFormat() bool {
	if o != nil && !IsNil(o.SignDateFormat) {
		return true
	}

	return false
}

// SetSignDateFormat gets a reference to the given string and assigns it to the SignDateFormat field.
func (o *AccountSettingsInformation) SetSignDateFormat(v string) {
	o.SignDateFormat = &v
}

// GetSignDateFormatMetadata returns the SignDateFormatMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignDateFormatMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SignDateFormatMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SignDateFormatMetadata
}

// GetSignDateFormatMetadataOk returns a tuple with the SignDateFormatMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignDateFormatMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SignDateFormatMetadata) {
		return nil, false
	}
	return o.SignDateFormatMetadata, true
}

// HasSignDateFormatMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignDateFormatMetadata() bool {
	if o != nil && !IsNil(o.SignDateFormatMetadata) {
		return true
	}

	return false
}

// SetSignDateFormatMetadata gets a reference to the given SettingsMetadata and assigns it to the SignDateFormatMetadata field.
func (o *AccountSettingsInformation) SetSignDateFormatMetadata(v SettingsMetadata) {
	o.SignDateFormatMetadata = &v
}

// GetSignDateTimeAccountLanguageOverride returns the SignDateTimeAccountLanguageOverride field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignDateTimeAccountLanguageOverride() string {
	if o == nil || IsNil(o.SignDateTimeAccountLanguageOverride) {
		var ret string
		return ret
	}
	return *o.SignDateTimeAccountLanguageOverride
}

// GetSignDateTimeAccountLanguageOverrideOk returns a tuple with the SignDateTimeAccountLanguageOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignDateTimeAccountLanguageOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.SignDateTimeAccountLanguageOverride) {
		return nil, false
	}
	return o.SignDateTimeAccountLanguageOverride, true
}

// HasSignDateTimeAccountLanguageOverride returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignDateTimeAccountLanguageOverride() bool {
	if o != nil && !IsNil(o.SignDateTimeAccountLanguageOverride) {
		return true
	}

	return false
}

// SetSignDateTimeAccountLanguageOverride gets a reference to the given string and assigns it to the SignDateTimeAccountLanguageOverride field.
func (o *AccountSettingsInformation) SetSignDateTimeAccountLanguageOverride(v string) {
	o.SignDateTimeAccountLanguageOverride = &v
}

// GetSignDateTimeAccountLanguageOverrideMetadata returns the SignDateTimeAccountLanguageOverrideMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignDateTimeAccountLanguageOverrideMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SignDateTimeAccountLanguageOverrideMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SignDateTimeAccountLanguageOverrideMetadata
}

// GetSignDateTimeAccountLanguageOverrideMetadataOk returns a tuple with the SignDateTimeAccountLanguageOverrideMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignDateTimeAccountLanguageOverrideMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SignDateTimeAccountLanguageOverrideMetadata) {
		return nil, false
	}
	return o.SignDateTimeAccountLanguageOverrideMetadata, true
}

// HasSignDateTimeAccountLanguageOverrideMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignDateTimeAccountLanguageOverrideMetadata() bool {
	if o != nil && !IsNil(o.SignDateTimeAccountLanguageOverrideMetadata) {
		return true
	}

	return false
}

// SetSignDateTimeAccountLanguageOverrideMetadata gets a reference to the given SettingsMetadata and assigns it to the SignDateTimeAccountLanguageOverrideMetadata field.
func (o *AccountSettingsInformation) SetSignDateTimeAccountLanguageOverrideMetadata(v SettingsMetadata) {
	o.SignDateTimeAccountLanguageOverrideMetadata = &v
}

// GetSignDateTimeAccountTimezoneOverride returns the SignDateTimeAccountTimezoneOverride field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignDateTimeAccountTimezoneOverride() string {
	if o == nil || IsNil(o.SignDateTimeAccountTimezoneOverride) {
		var ret string
		return ret
	}
	return *o.SignDateTimeAccountTimezoneOverride
}

// GetSignDateTimeAccountTimezoneOverrideOk returns a tuple with the SignDateTimeAccountTimezoneOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignDateTimeAccountTimezoneOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.SignDateTimeAccountTimezoneOverride) {
		return nil, false
	}
	return o.SignDateTimeAccountTimezoneOverride, true
}

// HasSignDateTimeAccountTimezoneOverride returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignDateTimeAccountTimezoneOverride() bool {
	if o != nil && !IsNil(o.SignDateTimeAccountTimezoneOverride) {
		return true
	}

	return false
}

// SetSignDateTimeAccountTimezoneOverride gets a reference to the given string and assigns it to the SignDateTimeAccountTimezoneOverride field.
func (o *AccountSettingsInformation) SetSignDateTimeAccountTimezoneOverride(v string) {
	o.SignDateTimeAccountTimezoneOverride = &v
}

// GetSignDateTimeAccountTimezoneOverrideMetadata returns the SignDateTimeAccountTimezoneOverrideMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignDateTimeAccountTimezoneOverrideMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SignDateTimeAccountTimezoneOverrideMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SignDateTimeAccountTimezoneOverrideMetadata
}

// GetSignDateTimeAccountTimezoneOverrideMetadataOk returns a tuple with the SignDateTimeAccountTimezoneOverrideMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignDateTimeAccountTimezoneOverrideMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SignDateTimeAccountTimezoneOverrideMetadata) {
		return nil, false
	}
	return o.SignDateTimeAccountTimezoneOverrideMetadata, true
}

// HasSignDateTimeAccountTimezoneOverrideMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignDateTimeAccountTimezoneOverrideMetadata() bool {
	if o != nil && !IsNil(o.SignDateTimeAccountTimezoneOverrideMetadata) {
		return true
	}

	return false
}

// SetSignDateTimeAccountTimezoneOverrideMetadata gets a reference to the given SettingsMetadata and assigns it to the SignDateTimeAccountTimezoneOverrideMetadata field.
func (o *AccountSettingsInformation) SetSignDateTimeAccountTimezoneOverrideMetadata(v SettingsMetadata) {
	o.SignDateTimeAccountTimezoneOverrideMetadata = &v
}

// GetSignerAttachCertificateToEnvelopePDF returns the SignerAttachCertificateToEnvelopePDF field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerAttachCertificateToEnvelopePDF() string {
	if o == nil || IsNil(o.SignerAttachCertificateToEnvelopePDF) {
		var ret string
		return ret
	}
	return *o.SignerAttachCertificateToEnvelopePDF
}

// GetSignerAttachCertificateToEnvelopePDFOk returns a tuple with the SignerAttachCertificateToEnvelopePDF field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerAttachCertificateToEnvelopePDFOk() (*string, bool) {
	if o == nil || IsNil(o.SignerAttachCertificateToEnvelopePDF) {
		return nil, false
	}
	return o.SignerAttachCertificateToEnvelopePDF, true
}

// HasSignerAttachCertificateToEnvelopePDF returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerAttachCertificateToEnvelopePDF() bool {
	if o != nil && !IsNil(o.SignerAttachCertificateToEnvelopePDF) {
		return true
	}

	return false
}

// SetSignerAttachCertificateToEnvelopePDF gets a reference to the given string and assigns it to the SignerAttachCertificateToEnvelopePDF field.
func (o *AccountSettingsInformation) SetSignerAttachCertificateToEnvelopePDF(v string) {
	o.SignerAttachCertificateToEnvelopePDF = &v
}

// GetSignerAttachCertificateToEnvelopePDFMetadata returns the SignerAttachCertificateToEnvelopePDFMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerAttachCertificateToEnvelopePDFMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SignerAttachCertificateToEnvelopePDFMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SignerAttachCertificateToEnvelopePDFMetadata
}

// GetSignerAttachCertificateToEnvelopePDFMetadataOk returns a tuple with the SignerAttachCertificateToEnvelopePDFMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerAttachCertificateToEnvelopePDFMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SignerAttachCertificateToEnvelopePDFMetadata) {
		return nil, false
	}
	return o.SignerAttachCertificateToEnvelopePDFMetadata, true
}

// HasSignerAttachCertificateToEnvelopePDFMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerAttachCertificateToEnvelopePDFMetadata() bool {
	if o != nil && !IsNil(o.SignerAttachCertificateToEnvelopePDFMetadata) {
		return true
	}

	return false
}

// SetSignerAttachCertificateToEnvelopePDFMetadata gets a reference to the given SettingsMetadata and assigns it to the SignerAttachCertificateToEnvelopePDFMetadata field.
func (o *AccountSettingsInformation) SetSignerAttachCertificateToEnvelopePDFMetadata(v SettingsMetadata) {
	o.SignerAttachCertificateToEnvelopePDFMetadata = &v
}

// GetSignerAttachConcat returns the SignerAttachConcat field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerAttachConcat() string {
	if o == nil || IsNil(o.SignerAttachConcat) {
		var ret string
		return ret
	}
	return *o.SignerAttachConcat
}

// GetSignerAttachConcatOk returns a tuple with the SignerAttachConcat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerAttachConcatOk() (*string, bool) {
	if o == nil || IsNil(o.SignerAttachConcat) {
		return nil, false
	}
	return o.SignerAttachConcat, true
}

// HasSignerAttachConcat returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerAttachConcat() bool {
	if o != nil && !IsNil(o.SignerAttachConcat) {
		return true
	}

	return false
}

// SetSignerAttachConcat gets a reference to the given string and assigns it to the SignerAttachConcat field.
func (o *AccountSettingsInformation) SetSignerAttachConcat(v string) {
	o.SignerAttachConcat = &v
}

// GetSignerAttachConcatMetadata returns the SignerAttachConcatMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerAttachConcatMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SignerAttachConcatMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SignerAttachConcatMetadata
}

// GetSignerAttachConcatMetadataOk returns a tuple with the SignerAttachConcatMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerAttachConcatMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SignerAttachConcatMetadata) {
		return nil, false
	}
	return o.SignerAttachConcatMetadata, true
}

// HasSignerAttachConcatMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerAttachConcatMetadata() bool {
	if o != nil && !IsNil(o.SignerAttachConcatMetadata) {
		return true
	}

	return false
}

// SetSignerAttachConcatMetadata gets a reference to the given SettingsMetadata and assigns it to the SignerAttachConcatMetadata field.
func (o *AccountSettingsInformation) SetSignerAttachConcatMetadata(v SettingsMetadata) {
	o.SignerAttachConcatMetadata = &v
}

// GetSignerCanCreateAccount returns the SignerCanCreateAccount field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerCanCreateAccount() string {
	if o == nil || IsNil(o.SignerCanCreateAccount) {
		var ret string
		return ret
	}
	return *o.SignerCanCreateAccount
}

// GetSignerCanCreateAccountOk returns a tuple with the SignerCanCreateAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerCanCreateAccountOk() (*string, bool) {
	if o == nil || IsNil(o.SignerCanCreateAccount) {
		return nil, false
	}
	return o.SignerCanCreateAccount, true
}

// HasSignerCanCreateAccount returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerCanCreateAccount() bool {
	if o != nil && !IsNil(o.SignerCanCreateAccount) {
		return true
	}

	return false
}

// SetSignerCanCreateAccount gets a reference to the given string and assigns it to the SignerCanCreateAccount field.
func (o *AccountSettingsInformation) SetSignerCanCreateAccount(v string) {
	o.SignerCanCreateAccount = &v
}

// GetSignerCanCreateAccountMetadata returns the SignerCanCreateAccountMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerCanCreateAccountMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SignerCanCreateAccountMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SignerCanCreateAccountMetadata
}

// GetSignerCanCreateAccountMetadataOk returns a tuple with the SignerCanCreateAccountMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerCanCreateAccountMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SignerCanCreateAccountMetadata) {
		return nil, false
	}
	return o.SignerCanCreateAccountMetadata, true
}

// HasSignerCanCreateAccountMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerCanCreateAccountMetadata() bool {
	if o != nil && !IsNil(o.SignerCanCreateAccountMetadata) {
		return true
	}

	return false
}

// SetSignerCanCreateAccountMetadata gets a reference to the given SettingsMetadata and assigns it to the SignerCanCreateAccountMetadata field.
func (o *AccountSettingsInformation) SetSignerCanCreateAccountMetadata(v SettingsMetadata) {
	o.SignerCanCreateAccountMetadata = &v
}

// GetSignerCanSignOnMobile returns the SignerCanSignOnMobile field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerCanSignOnMobile() string {
	if o == nil || IsNil(o.SignerCanSignOnMobile) {
		var ret string
		return ret
	}
	return *o.SignerCanSignOnMobile
}

// GetSignerCanSignOnMobileOk returns a tuple with the SignerCanSignOnMobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerCanSignOnMobileOk() (*string, bool) {
	if o == nil || IsNil(o.SignerCanSignOnMobile) {
		return nil, false
	}
	return o.SignerCanSignOnMobile, true
}

// HasSignerCanSignOnMobile returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerCanSignOnMobile() bool {
	if o != nil && !IsNil(o.SignerCanSignOnMobile) {
		return true
	}

	return false
}

// SetSignerCanSignOnMobile gets a reference to the given string and assigns it to the SignerCanSignOnMobile field.
func (o *AccountSettingsInformation) SetSignerCanSignOnMobile(v string) {
	o.SignerCanSignOnMobile = &v
}

// GetSignerCanSignOnMobileMetadata returns the SignerCanSignOnMobileMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerCanSignOnMobileMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SignerCanSignOnMobileMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SignerCanSignOnMobileMetadata
}

// GetSignerCanSignOnMobileMetadataOk returns a tuple with the SignerCanSignOnMobileMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerCanSignOnMobileMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SignerCanSignOnMobileMetadata) {
		return nil, false
	}
	return o.SignerCanSignOnMobileMetadata, true
}

// HasSignerCanSignOnMobileMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerCanSignOnMobileMetadata() bool {
	if o != nil && !IsNil(o.SignerCanSignOnMobileMetadata) {
		return true
	}

	return false
}

// SetSignerCanSignOnMobileMetadata gets a reference to the given SettingsMetadata and assigns it to the SignerCanSignOnMobileMetadata field.
func (o *AccountSettingsInformation) SetSignerCanSignOnMobileMetadata(v SettingsMetadata) {
	o.SignerCanSignOnMobileMetadata = &v
}

// GetSignerInSessionUseEnvelopeCompleteEmail returns the SignerInSessionUseEnvelopeCompleteEmail field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerInSessionUseEnvelopeCompleteEmail() string {
	if o == nil || IsNil(o.SignerInSessionUseEnvelopeCompleteEmail) {
		var ret string
		return ret
	}
	return *o.SignerInSessionUseEnvelopeCompleteEmail
}

// GetSignerInSessionUseEnvelopeCompleteEmailOk returns a tuple with the SignerInSessionUseEnvelopeCompleteEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerInSessionUseEnvelopeCompleteEmailOk() (*string, bool) {
	if o == nil || IsNil(o.SignerInSessionUseEnvelopeCompleteEmail) {
		return nil, false
	}
	return o.SignerInSessionUseEnvelopeCompleteEmail, true
}

// HasSignerInSessionUseEnvelopeCompleteEmail returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerInSessionUseEnvelopeCompleteEmail() bool {
	if o != nil && !IsNil(o.SignerInSessionUseEnvelopeCompleteEmail) {
		return true
	}

	return false
}

// SetSignerInSessionUseEnvelopeCompleteEmail gets a reference to the given string and assigns it to the SignerInSessionUseEnvelopeCompleteEmail field.
func (o *AccountSettingsInformation) SetSignerInSessionUseEnvelopeCompleteEmail(v string) {
	o.SignerInSessionUseEnvelopeCompleteEmail = &v
}

// GetSignerInSessionUseEnvelopeCompleteEmailMetadata returns the SignerInSessionUseEnvelopeCompleteEmailMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerInSessionUseEnvelopeCompleteEmailMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SignerInSessionUseEnvelopeCompleteEmailMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SignerInSessionUseEnvelopeCompleteEmailMetadata
}

// GetSignerInSessionUseEnvelopeCompleteEmailMetadataOk returns a tuple with the SignerInSessionUseEnvelopeCompleteEmailMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerInSessionUseEnvelopeCompleteEmailMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SignerInSessionUseEnvelopeCompleteEmailMetadata) {
		return nil, false
	}
	return o.SignerInSessionUseEnvelopeCompleteEmailMetadata, true
}

// HasSignerInSessionUseEnvelopeCompleteEmailMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerInSessionUseEnvelopeCompleteEmailMetadata() bool {
	if o != nil && !IsNil(o.SignerInSessionUseEnvelopeCompleteEmailMetadata) {
		return true
	}

	return false
}

// SetSignerInSessionUseEnvelopeCompleteEmailMetadata gets a reference to the given SettingsMetadata and assigns it to the SignerInSessionUseEnvelopeCompleteEmailMetadata field.
func (o *AccountSettingsInformation) SetSignerInSessionUseEnvelopeCompleteEmailMetadata(v SettingsMetadata) {
	o.SignerInSessionUseEnvelopeCompleteEmailMetadata = &v
}

// GetSignerLoginRequirements returns the SignerLoginRequirements field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerLoginRequirements() string {
	if o == nil || IsNil(o.SignerLoginRequirements) {
		var ret string
		return ret
	}
	return *o.SignerLoginRequirements
}

// GetSignerLoginRequirementsOk returns a tuple with the SignerLoginRequirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerLoginRequirementsOk() (*string, bool) {
	if o == nil || IsNil(o.SignerLoginRequirements) {
		return nil, false
	}
	return o.SignerLoginRequirements, true
}

// HasSignerLoginRequirements returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerLoginRequirements() bool {
	if o != nil && !IsNil(o.SignerLoginRequirements) {
		return true
	}

	return false
}

// SetSignerLoginRequirements gets a reference to the given string and assigns it to the SignerLoginRequirements field.
func (o *AccountSettingsInformation) SetSignerLoginRequirements(v string) {
	o.SignerLoginRequirements = &v
}

// GetSignerLoginRequirementsMetadata returns the SignerLoginRequirementsMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerLoginRequirementsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SignerLoginRequirementsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SignerLoginRequirementsMetadata
}

// GetSignerLoginRequirementsMetadataOk returns a tuple with the SignerLoginRequirementsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerLoginRequirementsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SignerLoginRequirementsMetadata) {
		return nil, false
	}
	return o.SignerLoginRequirementsMetadata, true
}

// HasSignerLoginRequirementsMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerLoginRequirementsMetadata() bool {
	if o != nil && !IsNil(o.SignerLoginRequirementsMetadata) {
		return true
	}

	return false
}

// SetSignerLoginRequirementsMetadata gets a reference to the given SettingsMetadata and assigns it to the SignerLoginRequirementsMetadata field.
func (o *AccountSettingsInformation) SetSignerLoginRequirementsMetadata(v SettingsMetadata) {
	o.SignerLoginRequirementsMetadata = &v
}

// GetSignerMustHaveAccount returns the SignerMustHaveAccount field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerMustHaveAccount() string {
	if o == nil || IsNil(o.SignerMustHaveAccount) {
		var ret string
		return ret
	}
	return *o.SignerMustHaveAccount
}

// GetSignerMustHaveAccountOk returns a tuple with the SignerMustHaveAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerMustHaveAccountOk() (*string, bool) {
	if o == nil || IsNil(o.SignerMustHaveAccount) {
		return nil, false
	}
	return o.SignerMustHaveAccount, true
}

// HasSignerMustHaveAccount returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerMustHaveAccount() bool {
	if o != nil && !IsNil(o.SignerMustHaveAccount) {
		return true
	}

	return false
}

// SetSignerMustHaveAccount gets a reference to the given string and assigns it to the SignerMustHaveAccount field.
func (o *AccountSettingsInformation) SetSignerMustHaveAccount(v string) {
	o.SignerMustHaveAccount = &v
}

// GetSignerMustHaveAccountMetadata returns the SignerMustHaveAccountMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerMustHaveAccountMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SignerMustHaveAccountMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SignerMustHaveAccountMetadata
}

// GetSignerMustHaveAccountMetadataOk returns a tuple with the SignerMustHaveAccountMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerMustHaveAccountMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SignerMustHaveAccountMetadata) {
		return nil, false
	}
	return o.SignerMustHaveAccountMetadata, true
}

// HasSignerMustHaveAccountMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerMustHaveAccountMetadata() bool {
	if o != nil && !IsNil(o.SignerMustHaveAccountMetadata) {
		return true
	}

	return false
}

// SetSignerMustHaveAccountMetadata gets a reference to the given SettingsMetadata and assigns it to the SignerMustHaveAccountMetadata field.
func (o *AccountSettingsInformation) SetSignerMustHaveAccountMetadata(v SettingsMetadata) {
	o.SignerMustHaveAccountMetadata = &v
}

// GetSignerMustLoginToSign returns the SignerMustLoginToSign field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerMustLoginToSign() string {
	if o == nil || IsNil(o.SignerMustLoginToSign) {
		var ret string
		return ret
	}
	return *o.SignerMustLoginToSign
}

// GetSignerMustLoginToSignOk returns a tuple with the SignerMustLoginToSign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerMustLoginToSignOk() (*string, bool) {
	if o == nil || IsNil(o.SignerMustLoginToSign) {
		return nil, false
	}
	return o.SignerMustLoginToSign, true
}

// HasSignerMustLoginToSign returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerMustLoginToSign() bool {
	if o != nil && !IsNil(o.SignerMustLoginToSign) {
		return true
	}

	return false
}

// SetSignerMustLoginToSign gets a reference to the given string and assigns it to the SignerMustLoginToSign field.
func (o *AccountSettingsInformation) SetSignerMustLoginToSign(v string) {
	o.SignerMustLoginToSign = &v
}

// GetSignerMustLoginToSignMetadata returns the SignerMustLoginToSignMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerMustLoginToSignMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SignerMustLoginToSignMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SignerMustLoginToSignMetadata
}

// GetSignerMustLoginToSignMetadataOk returns a tuple with the SignerMustLoginToSignMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerMustLoginToSignMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SignerMustLoginToSignMetadata) {
		return nil, false
	}
	return o.SignerMustLoginToSignMetadata, true
}

// HasSignerMustLoginToSignMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerMustLoginToSignMetadata() bool {
	if o != nil && !IsNil(o.SignerMustLoginToSignMetadata) {
		return true
	}

	return false
}

// SetSignerMustLoginToSignMetadata gets a reference to the given SettingsMetadata and assigns it to the SignerMustLoginToSignMetadata field.
func (o *AccountSettingsInformation) SetSignerMustLoginToSignMetadata(v SettingsMetadata) {
	o.SignerMustLoginToSignMetadata = &v
}

// GetSignerShowSecureFieldInitialValues returns the SignerShowSecureFieldInitialValues field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerShowSecureFieldInitialValues() string {
	if o == nil || IsNil(o.SignerShowSecureFieldInitialValues) {
		var ret string
		return ret
	}
	return *o.SignerShowSecureFieldInitialValues
}

// GetSignerShowSecureFieldInitialValuesOk returns a tuple with the SignerShowSecureFieldInitialValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerShowSecureFieldInitialValuesOk() (*string, bool) {
	if o == nil || IsNil(o.SignerShowSecureFieldInitialValues) {
		return nil, false
	}
	return o.SignerShowSecureFieldInitialValues, true
}

// HasSignerShowSecureFieldInitialValues returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerShowSecureFieldInitialValues() bool {
	if o != nil && !IsNil(o.SignerShowSecureFieldInitialValues) {
		return true
	}

	return false
}

// SetSignerShowSecureFieldInitialValues gets a reference to the given string and assigns it to the SignerShowSecureFieldInitialValues field.
func (o *AccountSettingsInformation) SetSignerShowSecureFieldInitialValues(v string) {
	o.SignerShowSecureFieldInitialValues = &v
}

// GetSignerShowSecureFieldInitialValuesMetadata returns the SignerShowSecureFieldInitialValuesMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignerShowSecureFieldInitialValuesMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SignerShowSecureFieldInitialValuesMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SignerShowSecureFieldInitialValuesMetadata
}

// GetSignerShowSecureFieldInitialValuesMetadataOk returns a tuple with the SignerShowSecureFieldInitialValuesMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignerShowSecureFieldInitialValuesMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SignerShowSecureFieldInitialValuesMetadata) {
		return nil, false
	}
	return o.SignerShowSecureFieldInitialValuesMetadata, true
}

// HasSignerShowSecureFieldInitialValuesMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignerShowSecureFieldInitialValuesMetadata() bool {
	if o != nil && !IsNil(o.SignerShowSecureFieldInitialValuesMetadata) {
		return true
	}

	return false
}

// SetSignerShowSecureFieldInitialValuesMetadata gets a reference to the given SettingsMetadata and assigns it to the SignerShowSecureFieldInitialValuesMetadata field.
func (o *AccountSettingsInformation) SetSignerShowSecureFieldInitialValuesMetadata(v SettingsMetadata) {
	o.SignerShowSecureFieldInitialValuesMetadata = &v
}

// GetSigningSessionTimeout returns the SigningSessionTimeout field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSigningSessionTimeout() string {
	if o == nil || IsNil(o.SigningSessionTimeout) {
		var ret string
		return ret
	}
	return *o.SigningSessionTimeout
}

// GetSigningSessionTimeoutOk returns a tuple with the SigningSessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSigningSessionTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.SigningSessionTimeout) {
		return nil, false
	}
	return o.SigningSessionTimeout, true
}

// HasSigningSessionTimeout returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSigningSessionTimeout() bool {
	if o != nil && !IsNil(o.SigningSessionTimeout) {
		return true
	}

	return false
}

// SetSigningSessionTimeout gets a reference to the given string and assigns it to the SigningSessionTimeout field.
func (o *AccountSettingsInformation) SetSigningSessionTimeout(v string) {
	o.SigningSessionTimeout = &v
}

// GetSigningSessionTimeoutMetadata returns the SigningSessionTimeoutMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSigningSessionTimeoutMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SigningSessionTimeoutMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SigningSessionTimeoutMetadata
}

// GetSigningSessionTimeoutMetadataOk returns a tuple with the SigningSessionTimeoutMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSigningSessionTimeoutMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SigningSessionTimeoutMetadata) {
		return nil, false
	}
	return o.SigningSessionTimeoutMetadata, true
}

// HasSigningSessionTimeoutMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSigningSessionTimeoutMetadata() bool {
	if o != nil && !IsNil(o.SigningSessionTimeoutMetadata) {
		return true
	}

	return false
}

// SetSigningSessionTimeoutMetadata gets a reference to the given SettingsMetadata and assigns it to the SigningSessionTimeoutMetadata field.
func (o *AccountSettingsInformation) SetSigningSessionTimeoutMetadata(v SettingsMetadata) {
	o.SigningSessionTimeoutMetadata = &v
}

// GetSigningUiVersion returns the SigningUiVersion field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSigningUiVersion() string {
	if o == nil || IsNil(o.SigningUiVersion) {
		var ret string
		return ret
	}
	return *o.SigningUiVersion
}

// GetSigningUiVersionOk returns a tuple with the SigningUiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSigningUiVersionOk() (*string, bool) {
	if o == nil || IsNil(o.SigningUiVersion) {
		return nil, false
	}
	return o.SigningUiVersion, true
}

// HasSigningUiVersion returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSigningUiVersion() bool {
	if o != nil && !IsNil(o.SigningUiVersion) {
		return true
	}

	return false
}

// SetSigningUiVersion gets a reference to the given string and assigns it to the SigningUiVersion field.
func (o *AccountSettingsInformation) SetSigningUiVersion(v string) {
	o.SigningUiVersion = &v
}

// GetSigningUiVersionMetadata returns the SigningUiVersionMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSigningUiVersionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SigningUiVersionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SigningUiVersionMetadata
}

// GetSigningUiVersionMetadataOk returns a tuple with the SigningUiVersionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSigningUiVersionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SigningUiVersionMetadata) {
		return nil, false
	}
	return o.SigningUiVersionMetadata, true
}

// HasSigningUiVersionMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSigningUiVersionMetadata() bool {
	if o != nil && !IsNil(o.SigningUiVersionMetadata) {
		return true
	}

	return false
}

// SetSigningUiVersionMetadata gets a reference to the given SettingsMetadata and assigns it to the SigningUiVersionMetadata field.
func (o *AccountSettingsInformation) SetSigningUiVersionMetadata(v SettingsMetadata) {
	o.SigningUiVersionMetadata = &v
}

// GetSignTimeFormat returns the SignTimeFormat field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignTimeFormat() string {
	if o == nil || IsNil(o.SignTimeFormat) {
		var ret string
		return ret
	}
	return *o.SignTimeFormat
}

// GetSignTimeFormatOk returns a tuple with the SignTimeFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignTimeFormatOk() (*string, bool) {
	if o == nil || IsNil(o.SignTimeFormat) {
		return nil, false
	}
	return o.SignTimeFormat, true
}

// HasSignTimeFormat returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignTimeFormat() bool {
	if o != nil && !IsNil(o.SignTimeFormat) {
		return true
	}

	return false
}

// SetSignTimeFormat gets a reference to the given string and assigns it to the SignTimeFormat field.
func (o *AccountSettingsInformation) SetSignTimeFormat(v string) {
	o.SignTimeFormat = &v
}

// GetSignTimeFormatMetadata returns the SignTimeFormatMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignTimeFormatMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SignTimeFormatMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SignTimeFormatMetadata
}

// GetSignTimeFormatMetadataOk returns a tuple with the SignTimeFormatMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignTimeFormatMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SignTimeFormatMetadata) {
		return nil, false
	}
	return o.SignTimeFormatMetadata, true
}

// HasSignTimeFormatMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignTimeFormatMetadata() bool {
	if o != nil && !IsNil(o.SignTimeFormatMetadata) {
		return true
	}

	return false
}

// SetSignTimeFormatMetadata gets a reference to the given SettingsMetadata and assigns it to the SignTimeFormatMetadata field.
func (o *AccountSettingsInformation) SetSignTimeFormatMetadata(v SettingsMetadata) {
	o.SignTimeFormatMetadata = &v
}

// GetSignTimeShowAmPm returns the SignTimeShowAmPm field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignTimeShowAmPm() string {
	if o == nil || IsNil(o.SignTimeShowAmPm) {
		var ret string
		return ret
	}
	return *o.SignTimeShowAmPm
}

// GetSignTimeShowAmPmOk returns a tuple with the SignTimeShowAmPm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignTimeShowAmPmOk() (*string, bool) {
	if o == nil || IsNil(o.SignTimeShowAmPm) {
		return nil, false
	}
	return o.SignTimeShowAmPm, true
}

// HasSignTimeShowAmPm returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignTimeShowAmPm() bool {
	if o != nil && !IsNil(o.SignTimeShowAmPm) {
		return true
	}

	return false
}

// SetSignTimeShowAmPm gets a reference to the given string and assigns it to the SignTimeShowAmPm field.
func (o *AccountSettingsInformation) SetSignTimeShowAmPm(v string) {
	o.SignTimeShowAmPm = &v
}

// GetSignTimeShowAmPmMetadata returns the SignTimeShowAmPmMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSignTimeShowAmPmMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SignTimeShowAmPmMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SignTimeShowAmPmMetadata
}

// GetSignTimeShowAmPmMetadataOk returns a tuple with the SignTimeShowAmPmMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSignTimeShowAmPmMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SignTimeShowAmPmMetadata) {
		return nil, false
	}
	return o.SignTimeShowAmPmMetadata, true
}

// HasSignTimeShowAmPmMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSignTimeShowAmPmMetadata() bool {
	if o != nil && !IsNil(o.SignTimeShowAmPmMetadata) {
		return true
	}

	return false
}

// SetSignTimeShowAmPmMetadata gets a reference to the given SettingsMetadata and assigns it to the SignTimeShowAmPmMetadata field.
func (o *AccountSettingsInformation) SetSignTimeShowAmPmMetadata(v SettingsMetadata) {
	o.SignTimeShowAmPmMetadata = &v
}

// GetSimplifiedSendingEnabled returns the SimplifiedSendingEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSimplifiedSendingEnabled() string {
	if o == nil || IsNil(o.SimplifiedSendingEnabled) {
		var ret string
		return ret
	}
	return *o.SimplifiedSendingEnabled
}

// GetSimplifiedSendingEnabledOk returns a tuple with the SimplifiedSendingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSimplifiedSendingEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.SimplifiedSendingEnabled) {
		return nil, false
	}
	return o.SimplifiedSendingEnabled, true
}

// HasSimplifiedSendingEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSimplifiedSendingEnabled() bool {
	if o != nil && !IsNil(o.SimplifiedSendingEnabled) {
		return true
	}

	return false
}

// SetSimplifiedSendingEnabled gets a reference to the given string and assigns it to the SimplifiedSendingEnabled field.
func (o *AccountSettingsInformation) SetSimplifiedSendingEnabled(v string) {
	o.SimplifiedSendingEnabled = &v
}

// GetSimplifiedSendingEnabledMetadata returns the SimplifiedSendingEnabledMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSimplifiedSendingEnabledMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SimplifiedSendingEnabledMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SimplifiedSendingEnabledMetadata
}

// GetSimplifiedSendingEnabledMetadataOk returns a tuple with the SimplifiedSendingEnabledMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSimplifiedSendingEnabledMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SimplifiedSendingEnabledMetadata) {
		return nil, false
	}
	return o.SimplifiedSendingEnabledMetadata, true
}

// HasSimplifiedSendingEnabledMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSimplifiedSendingEnabledMetadata() bool {
	if o != nil && !IsNil(o.SimplifiedSendingEnabledMetadata) {
		return true
	}

	return false
}

// SetSimplifiedSendingEnabledMetadata gets a reference to the given SettingsMetadata and assigns it to the SimplifiedSendingEnabledMetadata field.
func (o *AccountSettingsInformation) SetSimplifiedSendingEnabledMetadata(v SettingsMetadata) {
	o.SimplifiedSendingEnabledMetadata = &v
}

// GetSingleSignOnEnabled returns the SingleSignOnEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSingleSignOnEnabled() string {
	if o == nil || IsNil(o.SingleSignOnEnabled) {
		var ret string
		return ret
	}
	return *o.SingleSignOnEnabled
}

// GetSingleSignOnEnabledOk returns a tuple with the SingleSignOnEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSingleSignOnEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.SingleSignOnEnabled) {
		return nil, false
	}
	return o.SingleSignOnEnabled, true
}

// HasSingleSignOnEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSingleSignOnEnabled() bool {
	if o != nil && !IsNil(o.SingleSignOnEnabled) {
		return true
	}

	return false
}

// SetSingleSignOnEnabled gets a reference to the given string and assigns it to the SingleSignOnEnabled field.
func (o *AccountSettingsInformation) SetSingleSignOnEnabled(v string) {
	o.SingleSignOnEnabled = &v
}

// GetSingleSignOnEnabledMetadata returns the SingleSignOnEnabledMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSingleSignOnEnabledMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SingleSignOnEnabledMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SingleSignOnEnabledMetadata
}

// GetSingleSignOnEnabledMetadataOk returns a tuple with the SingleSignOnEnabledMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSingleSignOnEnabledMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SingleSignOnEnabledMetadata) {
		return nil, false
	}
	return o.SingleSignOnEnabledMetadata, true
}

// HasSingleSignOnEnabledMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSingleSignOnEnabledMetadata() bool {
	if o != nil && !IsNil(o.SingleSignOnEnabledMetadata) {
		return true
	}

	return false
}

// SetSingleSignOnEnabledMetadata gets a reference to the given SettingsMetadata and assigns it to the SingleSignOnEnabledMetadata field.
func (o *AccountSettingsInformation) SetSingleSignOnEnabledMetadata(v SettingsMetadata) {
	o.SingleSignOnEnabledMetadata = &v
}

// GetSkipAuthCompletedEnvelopes returns the SkipAuthCompletedEnvelopes field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSkipAuthCompletedEnvelopes() string {
	if o == nil || IsNil(o.SkipAuthCompletedEnvelopes) {
		var ret string
		return ret
	}
	return *o.SkipAuthCompletedEnvelopes
}

// GetSkipAuthCompletedEnvelopesOk returns a tuple with the SkipAuthCompletedEnvelopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSkipAuthCompletedEnvelopesOk() (*string, bool) {
	if o == nil || IsNil(o.SkipAuthCompletedEnvelopes) {
		return nil, false
	}
	return o.SkipAuthCompletedEnvelopes, true
}

// HasSkipAuthCompletedEnvelopes returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSkipAuthCompletedEnvelopes() bool {
	if o != nil && !IsNil(o.SkipAuthCompletedEnvelopes) {
		return true
	}

	return false
}

// SetSkipAuthCompletedEnvelopes gets a reference to the given string and assigns it to the SkipAuthCompletedEnvelopes field.
func (o *AccountSettingsInformation) SetSkipAuthCompletedEnvelopes(v string) {
	o.SkipAuthCompletedEnvelopes = &v
}

// GetSkipAuthCompletedEnvelopesMetadata returns the SkipAuthCompletedEnvelopesMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSkipAuthCompletedEnvelopesMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SkipAuthCompletedEnvelopesMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SkipAuthCompletedEnvelopesMetadata
}

// GetSkipAuthCompletedEnvelopesMetadataOk returns a tuple with the SkipAuthCompletedEnvelopesMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSkipAuthCompletedEnvelopesMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SkipAuthCompletedEnvelopesMetadata) {
		return nil, false
	}
	return o.SkipAuthCompletedEnvelopesMetadata, true
}

// HasSkipAuthCompletedEnvelopesMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSkipAuthCompletedEnvelopesMetadata() bool {
	if o != nil && !IsNil(o.SkipAuthCompletedEnvelopesMetadata) {
		return true
	}

	return false
}

// SetSkipAuthCompletedEnvelopesMetadata gets a reference to the given SettingsMetadata and assigns it to the SkipAuthCompletedEnvelopesMetadata field.
func (o *AccountSettingsInformation) SetSkipAuthCompletedEnvelopesMetadata(v SettingsMetadata) {
	o.SkipAuthCompletedEnvelopesMetadata = &v
}

// GetSocialIdRecipAuth returns the SocialIdRecipAuth field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSocialIdRecipAuth() string {
	if o == nil || IsNil(o.SocialIdRecipAuth) {
		var ret string
		return ret
	}
	return *o.SocialIdRecipAuth
}

// GetSocialIdRecipAuthOk returns a tuple with the SocialIdRecipAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSocialIdRecipAuthOk() (*string, bool) {
	if o == nil || IsNil(o.SocialIdRecipAuth) {
		return nil, false
	}
	return o.SocialIdRecipAuth, true
}

// HasSocialIdRecipAuth returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSocialIdRecipAuth() bool {
	if o != nil && !IsNil(o.SocialIdRecipAuth) {
		return true
	}

	return false
}

// SetSocialIdRecipAuth gets a reference to the given string and assigns it to the SocialIdRecipAuth field.
func (o *AccountSettingsInformation) SetSocialIdRecipAuth(v string) {
	o.SocialIdRecipAuth = &v
}

// GetSocialIdRecipAuthMetadata returns the SocialIdRecipAuthMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSocialIdRecipAuthMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SocialIdRecipAuthMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SocialIdRecipAuthMetadata
}

// GetSocialIdRecipAuthMetadataOk returns a tuple with the SocialIdRecipAuthMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSocialIdRecipAuthMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SocialIdRecipAuthMetadata) {
		return nil, false
	}
	return o.SocialIdRecipAuthMetadata, true
}

// HasSocialIdRecipAuthMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSocialIdRecipAuthMetadata() bool {
	if o != nil && !IsNil(o.SocialIdRecipAuthMetadata) {
		return true
	}

	return false
}

// SetSocialIdRecipAuthMetadata gets a reference to the given SettingsMetadata and assigns it to the SocialIdRecipAuthMetadata field.
func (o *AccountSettingsInformation) SetSocialIdRecipAuthMetadata(v SettingsMetadata) {
	o.SocialIdRecipAuthMetadata = &v
}

// GetSpecifyDocumentVisibility returns the SpecifyDocumentVisibility field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSpecifyDocumentVisibility() string {
	if o == nil || IsNil(o.SpecifyDocumentVisibility) {
		var ret string
		return ret
	}
	return *o.SpecifyDocumentVisibility
}

// GetSpecifyDocumentVisibilityOk returns a tuple with the SpecifyDocumentVisibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSpecifyDocumentVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.SpecifyDocumentVisibility) {
		return nil, false
	}
	return o.SpecifyDocumentVisibility, true
}

// HasSpecifyDocumentVisibility returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSpecifyDocumentVisibility() bool {
	if o != nil && !IsNil(o.SpecifyDocumentVisibility) {
		return true
	}

	return false
}

// SetSpecifyDocumentVisibility gets a reference to the given string and assigns it to the SpecifyDocumentVisibility field.
func (o *AccountSettingsInformation) SetSpecifyDocumentVisibility(v string) {
	o.SpecifyDocumentVisibility = &v
}

// GetSpecifyDocumentVisibilityMetadata returns the SpecifyDocumentVisibilityMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSpecifyDocumentVisibilityMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SpecifyDocumentVisibilityMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SpecifyDocumentVisibilityMetadata
}

// GetSpecifyDocumentVisibilityMetadataOk returns a tuple with the SpecifyDocumentVisibilityMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSpecifyDocumentVisibilityMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SpecifyDocumentVisibilityMetadata) {
		return nil, false
	}
	return o.SpecifyDocumentVisibilityMetadata, true
}

// HasSpecifyDocumentVisibilityMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSpecifyDocumentVisibilityMetadata() bool {
	if o != nil && !IsNil(o.SpecifyDocumentVisibilityMetadata) {
		return true
	}

	return false
}

// SetSpecifyDocumentVisibilityMetadata gets a reference to the given SettingsMetadata and assigns it to the SpecifyDocumentVisibilityMetadata field.
func (o *AccountSettingsInformation) SetSpecifyDocumentVisibilityMetadata(v SettingsMetadata) {
	o.SpecifyDocumentVisibilityMetadata = &v
}

// GetStartInAdvancedCorrect returns the StartInAdvancedCorrect field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetStartInAdvancedCorrect() string {
	if o == nil || IsNil(o.StartInAdvancedCorrect) {
		var ret string
		return ret
	}
	return *o.StartInAdvancedCorrect
}

// GetStartInAdvancedCorrectOk returns a tuple with the StartInAdvancedCorrect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetStartInAdvancedCorrectOk() (*string, bool) {
	if o == nil || IsNil(o.StartInAdvancedCorrect) {
		return nil, false
	}
	return o.StartInAdvancedCorrect, true
}

// HasStartInAdvancedCorrect returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasStartInAdvancedCorrect() bool {
	if o != nil && !IsNil(o.StartInAdvancedCorrect) {
		return true
	}

	return false
}

// SetStartInAdvancedCorrect gets a reference to the given string and assigns it to the StartInAdvancedCorrect field.
func (o *AccountSettingsInformation) SetStartInAdvancedCorrect(v string) {
	o.StartInAdvancedCorrect = &v
}

// GetStartInAdvancedCorrectMetadata returns the StartInAdvancedCorrectMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetStartInAdvancedCorrectMetadata() SettingsMetadata {
	if o == nil || IsNil(o.StartInAdvancedCorrectMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.StartInAdvancedCorrectMetadata
}

// GetStartInAdvancedCorrectMetadataOk returns a tuple with the StartInAdvancedCorrectMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetStartInAdvancedCorrectMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.StartInAdvancedCorrectMetadata) {
		return nil, false
	}
	return o.StartInAdvancedCorrectMetadata, true
}

// HasStartInAdvancedCorrectMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasStartInAdvancedCorrectMetadata() bool {
	if o != nil && !IsNil(o.StartInAdvancedCorrectMetadata) {
		return true
	}

	return false
}

// SetStartInAdvancedCorrectMetadata gets a reference to the given SettingsMetadata and assigns it to the StartInAdvancedCorrectMetadata field.
func (o *AccountSettingsInformation) SetStartInAdvancedCorrectMetadata(v SettingsMetadata) {
	o.StartInAdvancedCorrectMetadata = &v
}

// GetSupplementalDocumentsMustAccept returns the SupplementalDocumentsMustAccept field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSupplementalDocumentsMustAccept() string {
	if o == nil || IsNil(o.SupplementalDocumentsMustAccept) {
		var ret string
		return ret
	}
	return *o.SupplementalDocumentsMustAccept
}

// GetSupplementalDocumentsMustAcceptOk returns a tuple with the SupplementalDocumentsMustAccept field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSupplementalDocumentsMustAcceptOk() (*string, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustAccept) {
		return nil, false
	}
	return o.SupplementalDocumentsMustAccept, true
}

// HasSupplementalDocumentsMustAccept returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSupplementalDocumentsMustAccept() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustAccept) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustAccept gets a reference to the given string and assigns it to the SupplementalDocumentsMustAccept field.
func (o *AccountSettingsInformation) SetSupplementalDocumentsMustAccept(v string) {
	o.SupplementalDocumentsMustAccept = &v
}

// GetSupplementalDocumentsMustAcceptMetadata returns the SupplementalDocumentsMustAcceptMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSupplementalDocumentsMustAcceptMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SupplementalDocumentsMustAcceptMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SupplementalDocumentsMustAcceptMetadata
}

// GetSupplementalDocumentsMustAcceptMetadataOk returns a tuple with the SupplementalDocumentsMustAcceptMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSupplementalDocumentsMustAcceptMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustAcceptMetadata) {
		return nil, false
	}
	return o.SupplementalDocumentsMustAcceptMetadata, true
}

// HasSupplementalDocumentsMustAcceptMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSupplementalDocumentsMustAcceptMetadata() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustAcceptMetadata) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustAcceptMetadata gets a reference to the given SettingsMetadata and assigns it to the SupplementalDocumentsMustAcceptMetadata field.
func (o *AccountSettingsInformation) SetSupplementalDocumentsMustAcceptMetadata(v SettingsMetadata) {
	o.SupplementalDocumentsMustAcceptMetadata = &v
}

// GetSupplementalDocumentsMustRead returns the SupplementalDocumentsMustRead field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSupplementalDocumentsMustRead() string {
	if o == nil || IsNil(o.SupplementalDocumentsMustRead) {
		var ret string
		return ret
	}
	return *o.SupplementalDocumentsMustRead
}

// GetSupplementalDocumentsMustReadOk returns a tuple with the SupplementalDocumentsMustRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSupplementalDocumentsMustReadOk() (*string, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustRead) {
		return nil, false
	}
	return o.SupplementalDocumentsMustRead, true
}

// HasSupplementalDocumentsMustRead returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSupplementalDocumentsMustRead() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustRead) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustRead gets a reference to the given string and assigns it to the SupplementalDocumentsMustRead field.
func (o *AccountSettingsInformation) SetSupplementalDocumentsMustRead(v string) {
	o.SupplementalDocumentsMustRead = &v
}

// GetSupplementalDocumentsMustReadMetadata returns the SupplementalDocumentsMustReadMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSupplementalDocumentsMustReadMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SupplementalDocumentsMustReadMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SupplementalDocumentsMustReadMetadata
}

// GetSupplementalDocumentsMustReadMetadataOk returns a tuple with the SupplementalDocumentsMustReadMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSupplementalDocumentsMustReadMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustReadMetadata) {
		return nil, false
	}
	return o.SupplementalDocumentsMustReadMetadata, true
}

// HasSupplementalDocumentsMustReadMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSupplementalDocumentsMustReadMetadata() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustReadMetadata) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustReadMetadata gets a reference to the given SettingsMetadata and assigns it to the SupplementalDocumentsMustReadMetadata field.
func (o *AccountSettingsInformation) SetSupplementalDocumentsMustReadMetadata(v SettingsMetadata) {
	o.SupplementalDocumentsMustReadMetadata = &v
}

// GetSupplementalDocumentsMustView returns the SupplementalDocumentsMustView field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSupplementalDocumentsMustView() string {
	if o == nil || IsNil(o.SupplementalDocumentsMustView) {
		var ret string
		return ret
	}
	return *o.SupplementalDocumentsMustView
}

// GetSupplementalDocumentsMustViewOk returns a tuple with the SupplementalDocumentsMustView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSupplementalDocumentsMustViewOk() (*string, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustView) {
		return nil, false
	}
	return o.SupplementalDocumentsMustView, true
}

// HasSupplementalDocumentsMustView returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSupplementalDocumentsMustView() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustView) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustView gets a reference to the given string and assigns it to the SupplementalDocumentsMustView field.
func (o *AccountSettingsInformation) SetSupplementalDocumentsMustView(v string) {
	o.SupplementalDocumentsMustView = &v
}

// GetSupplementalDocumentsMustViewMetadata returns the SupplementalDocumentsMustViewMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSupplementalDocumentsMustViewMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SupplementalDocumentsMustViewMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SupplementalDocumentsMustViewMetadata
}

// GetSupplementalDocumentsMustViewMetadataOk returns a tuple with the SupplementalDocumentsMustViewMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSupplementalDocumentsMustViewMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustViewMetadata) {
		return nil, false
	}
	return o.SupplementalDocumentsMustViewMetadata, true
}

// HasSupplementalDocumentsMustViewMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSupplementalDocumentsMustViewMetadata() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustViewMetadata) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustViewMetadata gets a reference to the given SettingsMetadata and assigns it to the SupplementalDocumentsMustViewMetadata field.
func (o *AccountSettingsInformation) SetSupplementalDocumentsMustViewMetadata(v SettingsMetadata) {
	o.SupplementalDocumentsMustViewMetadata = &v
}

// GetSuppressCertificateEnforcement returns the SuppressCertificateEnforcement field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSuppressCertificateEnforcement() string {
	if o == nil || IsNil(o.SuppressCertificateEnforcement) {
		var ret string
		return ret
	}
	return *o.SuppressCertificateEnforcement
}

// GetSuppressCertificateEnforcementOk returns a tuple with the SuppressCertificateEnforcement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSuppressCertificateEnforcementOk() (*string, bool) {
	if o == nil || IsNil(o.SuppressCertificateEnforcement) {
		return nil, false
	}
	return o.SuppressCertificateEnforcement, true
}

// HasSuppressCertificateEnforcement returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSuppressCertificateEnforcement() bool {
	if o != nil && !IsNil(o.SuppressCertificateEnforcement) {
		return true
	}

	return false
}

// SetSuppressCertificateEnforcement gets a reference to the given string and assigns it to the SuppressCertificateEnforcement field.
func (o *AccountSettingsInformation) SetSuppressCertificateEnforcement(v string) {
	o.SuppressCertificateEnforcement = &v
}

// GetSuppressCertificateEnforcementMetadata returns the SuppressCertificateEnforcementMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetSuppressCertificateEnforcementMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SuppressCertificateEnforcementMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SuppressCertificateEnforcementMetadata
}

// GetSuppressCertificateEnforcementMetadataOk returns a tuple with the SuppressCertificateEnforcementMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetSuppressCertificateEnforcementMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SuppressCertificateEnforcementMetadata) {
		return nil, false
	}
	return o.SuppressCertificateEnforcementMetadata, true
}

// HasSuppressCertificateEnforcementMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasSuppressCertificateEnforcementMetadata() bool {
	if o != nil && !IsNil(o.SuppressCertificateEnforcementMetadata) {
		return true
	}

	return false
}

// SetSuppressCertificateEnforcementMetadata gets a reference to the given SettingsMetadata and assigns it to the SuppressCertificateEnforcementMetadata field.
func (o *AccountSettingsInformation) SetSuppressCertificateEnforcementMetadata(v SettingsMetadata) {
	o.SuppressCertificateEnforcementMetadata = &v
}

// GetTabAccountSettings returns the TabAccountSettings field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetTabAccountSettings() TabAccountSettings {
	if o == nil || IsNil(o.TabAccountSettings) {
		var ret TabAccountSettings
		return ret
	}
	return *o.TabAccountSettings
}

// GetTabAccountSettingsOk returns a tuple with the TabAccountSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetTabAccountSettingsOk() (*TabAccountSettings, bool) {
	if o == nil || IsNil(o.TabAccountSettings) {
		return nil, false
	}
	return o.TabAccountSettings, true
}

// HasTabAccountSettings returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasTabAccountSettings() bool {
	if o != nil && !IsNil(o.TabAccountSettings) {
		return true
	}

	return false
}

// SetTabAccountSettings gets a reference to the given TabAccountSettings and assigns it to the TabAccountSettings field.
func (o *AccountSettingsInformation) SetTabAccountSettings(v TabAccountSettings) {
	o.TabAccountSettings = &v
}

// GetTimezoneOffsetAPI returns the TimezoneOffsetAPI field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetTimezoneOffsetAPI() string {
	if o == nil || IsNil(o.TimezoneOffsetAPI) {
		var ret string
		return ret
	}
	return *o.TimezoneOffsetAPI
}

// GetTimezoneOffsetAPIOk returns a tuple with the TimezoneOffsetAPI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetTimezoneOffsetAPIOk() (*string, bool) {
	if o == nil || IsNil(o.TimezoneOffsetAPI) {
		return nil, false
	}
	return o.TimezoneOffsetAPI, true
}

// HasTimezoneOffsetAPI returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasTimezoneOffsetAPI() bool {
	if o != nil && !IsNil(o.TimezoneOffsetAPI) {
		return true
	}

	return false
}

// SetTimezoneOffsetAPI gets a reference to the given string and assigns it to the TimezoneOffsetAPI field.
func (o *AccountSettingsInformation) SetTimezoneOffsetAPI(v string) {
	o.TimezoneOffsetAPI = &v
}

// GetTimezoneOffsetAPIMetadata returns the TimezoneOffsetAPIMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetTimezoneOffsetAPIMetadata() SettingsMetadata {
	if o == nil || IsNil(o.TimezoneOffsetAPIMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.TimezoneOffsetAPIMetadata
}

// GetTimezoneOffsetAPIMetadataOk returns a tuple with the TimezoneOffsetAPIMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetTimezoneOffsetAPIMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.TimezoneOffsetAPIMetadata) {
		return nil, false
	}
	return o.TimezoneOffsetAPIMetadata, true
}

// HasTimezoneOffsetAPIMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasTimezoneOffsetAPIMetadata() bool {
	if o != nil && !IsNil(o.TimezoneOffsetAPIMetadata) {
		return true
	}

	return false
}

// SetTimezoneOffsetAPIMetadata gets a reference to the given SettingsMetadata and assigns it to the TimezoneOffsetAPIMetadata field.
func (o *AccountSettingsInformation) SetTimezoneOffsetAPIMetadata(v SettingsMetadata) {
	o.TimezoneOffsetAPIMetadata = &v
}

// GetTimezoneOffsetUI returns the TimezoneOffsetUI field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetTimezoneOffsetUI() string {
	if o == nil || IsNil(o.TimezoneOffsetUI) {
		var ret string
		return ret
	}
	return *o.TimezoneOffsetUI
}

// GetTimezoneOffsetUIOk returns a tuple with the TimezoneOffsetUI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetTimezoneOffsetUIOk() (*string, bool) {
	if o == nil || IsNil(o.TimezoneOffsetUI) {
		return nil, false
	}
	return o.TimezoneOffsetUI, true
}

// HasTimezoneOffsetUI returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasTimezoneOffsetUI() bool {
	if o != nil && !IsNil(o.TimezoneOffsetUI) {
		return true
	}

	return false
}

// SetTimezoneOffsetUI gets a reference to the given string and assigns it to the TimezoneOffsetUI field.
func (o *AccountSettingsInformation) SetTimezoneOffsetUI(v string) {
	o.TimezoneOffsetUI = &v
}

// GetTimezoneOffsetUIMetadata returns the TimezoneOffsetUIMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetTimezoneOffsetUIMetadata() SettingsMetadata {
	if o == nil || IsNil(o.TimezoneOffsetUIMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.TimezoneOffsetUIMetadata
}

// GetTimezoneOffsetUIMetadataOk returns a tuple with the TimezoneOffsetUIMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetTimezoneOffsetUIMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.TimezoneOffsetUIMetadata) {
		return nil, false
	}
	return o.TimezoneOffsetUIMetadata, true
}

// HasTimezoneOffsetUIMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasTimezoneOffsetUIMetadata() bool {
	if o != nil && !IsNil(o.TimezoneOffsetUIMetadata) {
		return true
	}

	return false
}

// SetTimezoneOffsetUIMetadata gets a reference to the given SettingsMetadata and assigns it to the TimezoneOffsetUIMetadata field.
func (o *AccountSettingsInformation) SetTimezoneOffsetUIMetadata(v SettingsMetadata) {
	o.TimezoneOffsetUIMetadata = &v
}

// GetUniversalSignatureOptIn returns the UniversalSignatureOptIn field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUniversalSignatureOptIn() string {
	if o == nil || IsNil(o.UniversalSignatureOptIn) {
		var ret string
		return ret
	}
	return *o.UniversalSignatureOptIn
}

// GetUniversalSignatureOptInOk returns a tuple with the UniversalSignatureOptIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUniversalSignatureOptInOk() (*string, bool) {
	if o == nil || IsNil(o.UniversalSignatureOptIn) {
		return nil, false
	}
	return o.UniversalSignatureOptIn, true
}

// HasUniversalSignatureOptIn returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUniversalSignatureOptIn() bool {
	if o != nil && !IsNil(o.UniversalSignatureOptIn) {
		return true
	}

	return false
}

// SetUniversalSignatureOptIn gets a reference to the given string and assigns it to the UniversalSignatureOptIn field.
func (o *AccountSettingsInformation) SetUniversalSignatureOptIn(v string) {
	o.UniversalSignatureOptIn = &v
}

// GetUseAccountLevelEmail returns the UseAccountLevelEmail field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseAccountLevelEmail() string {
	if o == nil || IsNil(o.UseAccountLevelEmail) {
		var ret string
		return ret
	}
	return *o.UseAccountLevelEmail
}

// GetUseAccountLevelEmailOk returns a tuple with the UseAccountLevelEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseAccountLevelEmailOk() (*string, bool) {
	if o == nil || IsNil(o.UseAccountLevelEmail) {
		return nil, false
	}
	return o.UseAccountLevelEmail, true
}

// HasUseAccountLevelEmail returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseAccountLevelEmail() bool {
	if o != nil && !IsNil(o.UseAccountLevelEmail) {
		return true
	}

	return false
}

// SetUseAccountLevelEmail gets a reference to the given string and assigns it to the UseAccountLevelEmail field.
func (o *AccountSettingsInformation) SetUseAccountLevelEmail(v string) {
	o.UseAccountLevelEmail = &v
}

// GetUseAccountLevelEmailMetadata returns the UseAccountLevelEmailMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseAccountLevelEmailMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UseAccountLevelEmailMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UseAccountLevelEmailMetadata
}

// GetUseAccountLevelEmailMetadataOk returns a tuple with the UseAccountLevelEmailMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseAccountLevelEmailMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UseAccountLevelEmailMetadata) {
		return nil, false
	}
	return o.UseAccountLevelEmailMetadata, true
}

// HasUseAccountLevelEmailMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseAccountLevelEmailMetadata() bool {
	if o != nil && !IsNil(o.UseAccountLevelEmailMetadata) {
		return true
	}

	return false
}

// SetUseAccountLevelEmailMetadata gets a reference to the given SettingsMetadata and assigns it to the UseAccountLevelEmailMetadata field.
func (o *AccountSettingsInformation) SetUseAccountLevelEmailMetadata(v SettingsMetadata) {
	o.UseAccountLevelEmailMetadata = &v
}

// GetUseConsumerDisclosure returns the UseConsumerDisclosure field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseConsumerDisclosure() string {
	if o == nil || IsNil(o.UseConsumerDisclosure) {
		var ret string
		return ret
	}
	return *o.UseConsumerDisclosure
}

// GetUseConsumerDisclosureOk returns a tuple with the UseConsumerDisclosure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseConsumerDisclosureOk() (*string, bool) {
	if o == nil || IsNil(o.UseConsumerDisclosure) {
		return nil, false
	}
	return o.UseConsumerDisclosure, true
}

// HasUseConsumerDisclosure returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseConsumerDisclosure() bool {
	if o != nil && !IsNil(o.UseConsumerDisclosure) {
		return true
	}

	return false
}

// SetUseConsumerDisclosure gets a reference to the given string and assigns it to the UseConsumerDisclosure field.
func (o *AccountSettingsInformation) SetUseConsumerDisclosure(v string) {
	o.UseConsumerDisclosure = &v
}

// GetUseConsumerDisclosureMetadata returns the UseConsumerDisclosureMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseConsumerDisclosureMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UseConsumerDisclosureMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UseConsumerDisclosureMetadata
}

// GetUseConsumerDisclosureMetadataOk returns a tuple with the UseConsumerDisclosureMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseConsumerDisclosureMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UseConsumerDisclosureMetadata) {
		return nil, false
	}
	return o.UseConsumerDisclosureMetadata, true
}

// HasUseConsumerDisclosureMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseConsumerDisclosureMetadata() bool {
	if o != nil && !IsNil(o.UseConsumerDisclosureMetadata) {
		return true
	}

	return false
}

// SetUseConsumerDisclosureMetadata gets a reference to the given SettingsMetadata and assigns it to the UseConsumerDisclosureMetadata field.
func (o *AccountSettingsInformation) SetUseConsumerDisclosureMetadata(v SettingsMetadata) {
	o.UseConsumerDisclosureMetadata = &v
}

// GetUseConsumerDisclosureWithinAccount returns the UseConsumerDisclosureWithinAccount field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseConsumerDisclosureWithinAccount() string {
	if o == nil || IsNil(o.UseConsumerDisclosureWithinAccount) {
		var ret string
		return ret
	}
	return *o.UseConsumerDisclosureWithinAccount
}

// GetUseConsumerDisclosureWithinAccountOk returns a tuple with the UseConsumerDisclosureWithinAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseConsumerDisclosureWithinAccountOk() (*string, bool) {
	if o == nil || IsNil(o.UseConsumerDisclosureWithinAccount) {
		return nil, false
	}
	return o.UseConsumerDisclosureWithinAccount, true
}

// HasUseConsumerDisclosureWithinAccount returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseConsumerDisclosureWithinAccount() bool {
	if o != nil && !IsNil(o.UseConsumerDisclosureWithinAccount) {
		return true
	}

	return false
}

// SetUseConsumerDisclosureWithinAccount gets a reference to the given string and assigns it to the UseConsumerDisclosureWithinAccount field.
func (o *AccountSettingsInformation) SetUseConsumerDisclosureWithinAccount(v string) {
	o.UseConsumerDisclosureWithinAccount = &v
}

// GetUseConsumerDisclosureWithinAccountMetadata returns the UseConsumerDisclosureWithinAccountMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseConsumerDisclosureWithinAccountMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UseConsumerDisclosureWithinAccountMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UseConsumerDisclosureWithinAccountMetadata
}

// GetUseConsumerDisclosureWithinAccountMetadataOk returns a tuple with the UseConsumerDisclosureWithinAccountMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseConsumerDisclosureWithinAccountMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UseConsumerDisclosureWithinAccountMetadata) {
		return nil, false
	}
	return o.UseConsumerDisclosureWithinAccountMetadata, true
}

// HasUseConsumerDisclosureWithinAccountMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseConsumerDisclosureWithinAccountMetadata() bool {
	if o != nil && !IsNil(o.UseConsumerDisclosureWithinAccountMetadata) {
		return true
	}

	return false
}

// SetUseConsumerDisclosureWithinAccountMetadata gets a reference to the given SettingsMetadata and assigns it to the UseConsumerDisclosureWithinAccountMetadata field.
func (o *AccountSettingsInformation) SetUseConsumerDisclosureWithinAccountMetadata(v SettingsMetadata) {
	o.UseConsumerDisclosureWithinAccountMetadata = &v
}

// GetUseDerivedKeys returns the UseDerivedKeys field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseDerivedKeys() string {
	if o == nil || IsNil(o.UseDerivedKeys) {
		var ret string
		return ret
	}
	return *o.UseDerivedKeys
}

// GetUseDerivedKeysOk returns a tuple with the UseDerivedKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseDerivedKeysOk() (*string, bool) {
	if o == nil || IsNil(o.UseDerivedKeys) {
		return nil, false
	}
	return o.UseDerivedKeys, true
}

// HasUseDerivedKeys returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseDerivedKeys() bool {
	if o != nil && !IsNil(o.UseDerivedKeys) {
		return true
	}

	return false
}

// SetUseDerivedKeys gets a reference to the given string and assigns it to the UseDerivedKeys field.
func (o *AccountSettingsInformation) SetUseDerivedKeys(v string) {
	o.UseDerivedKeys = &v
}

// GetUseDerivedKeysMetadata returns the UseDerivedKeysMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseDerivedKeysMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UseDerivedKeysMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UseDerivedKeysMetadata
}

// GetUseDerivedKeysMetadataOk returns a tuple with the UseDerivedKeysMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseDerivedKeysMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UseDerivedKeysMetadata) {
		return nil, false
	}
	return o.UseDerivedKeysMetadata, true
}

// HasUseDerivedKeysMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseDerivedKeysMetadata() bool {
	if o != nil && !IsNil(o.UseDerivedKeysMetadata) {
		return true
	}

	return false
}

// SetUseDerivedKeysMetadata gets a reference to the given SettingsMetadata and assigns it to the UseDerivedKeysMetadata field.
func (o *AccountSettingsInformation) SetUseDerivedKeysMetadata(v SettingsMetadata) {
	o.UseDerivedKeysMetadata = &v
}

// GetUseDocuSignExpressSignerCertificate returns the UseDocuSignExpressSignerCertificate field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseDocuSignExpressSignerCertificate() string {
	if o == nil || IsNil(o.UseDocuSignExpressSignerCertificate) {
		var ret string
		return ret
	}
	return *o.UseDocuSignExpressSignerCertificate
}

// GetUseDocuSignExpressSignerCertificateOk returns a tuple with the UseDocuSignExpressSignerCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseDocuSignExpressSignerCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.UseDocuSignExpressSignerCertificate) {
		return nil, false
	}
	return o.UseDocuSignExpressSignerCertificate, true
}

// HasUseDocuSignExpressSignerCertificate returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseDocuSignExpressSignerCertificate() bool {
	if o != nil && !IsNil(o.UseDocuSignExpressSignerCertificate) {
		return true
	}

	return false
}

// SetUseDocuSignExpressSignerCertificate gets a reference to the given string and assigns it to the UseDocuSignExpressSignerCertificate field.
func (o *AccountSettingsInformation) SetUseDocuSignExpressSignerCertificate(v string) {
	o.UseDocuSignExpressSignerCertificate = &v
}

// GetUseDocuSignExpressSignerCertificateMetadata returns the UseDocuSignExpressSignerCertificateMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseDocuSignExpressSignerCertificateMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UseDocuSignExpressSignerCertificateMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UseDocuSignExpressSignerCertificateMetadata
}

// GetUseDocuSignExpressSignerCertificateMetadataOk returns a tuple with the UseDocuSignExpressSignerCertificateMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseDocuSignExpressSignerCertificateMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UseDocuSignExpressSignerCertificateMetadata) {
		return nil, false
	}
	return o.UseDocuSignExpressSignerCertificateMetadata, true
}

// HasUseDocuSignExpressSignerCertificateMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseDocuSignExpressSignerCertificateMetadata() bool {
	if o != nil && !IsNil(o.UseDocuSignExpressSignerCertificateMetadata) {
		return true
	}

	return false
}

// SetUseDocuSignExpressSignerCertificateMetadata gets a reference to the given SettingsMetadata and assigns it to the UseDocuSignExpressSignerCertificateMetadata field.
func (o *AccountSettingsInformation) SetUseDocuSignExpressSignerCertificateMetadata(v SettingsMetadata) {
	o.UseDocuSignExpressSignerCertificateMetadata = &v
}

// GetUseEnvelopeSearchMixedMode returns the UseEnvelopeSearchMixedMode field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseEnvelopeSearchMixedMode() string {
	if o == nil || IsNil(o.UseEnvelopeSearchMixedMode) {
		var ret string
		return ret
	}
	return *o.UseEnvelopeSearchMixedMode
}

// GetUseEnvelopeSearchMixedModeOk returns a tuple with the UseEnvelopeSearchMixedMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseEnvelopeSearchMixedModeOk() (*string, bool) {
	if o == nil || IsNil(o.UseEnvelopeSearchMixedMode) {
		return nil, false
	}
	return o.UseEnvelopeSearchMixedMode, true
}

// HasUseEnvelopeSearchMixedMode returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseEnvelopeSearchMixedMode() bool {
	if o != nil && !IsNil(o.UseEnvelopeSearchMixedMode) {
		return true
	}

	return false
}

// SetUseEnvelopeSearchMixedMode gets a reference to the given string and assigns it to the UseEnvelopeSearchMixedMode field.
func (o *AccountSettingsInformation) SetUseEnvelopeSearchMixedMode(v string) {
	o.UseEnvelopeSearchMixedMode = &v
}

// GetUseEnvelopeSearchMixedModeMetadata returns the UseEnvelopeSearchMixedModeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseEnvelopeSearchMixedModeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UseEnvelopeSearchMixedModeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UseEnvelopeSearchMixedModeMetadata
}

// GetUseEnvelopeSearchMixedModeMetadataOk returns a tuple with the UseEnvelopeSearchMixedModeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseEnvelopeSearchMixedModeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UseEnvelopeSearchMixedModeMetadata) {
		return nil, false
	}
	return o.UseEnvelopeSearchMixedModeMetadata, true
}

// HasUseEnvelopeSearchMixedModeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseEnvelopeSearchMixedModeMetadata() bool {
	if o != nil && !IsNil(o.UseEnvelopeSearchMixedModeMetadata) {
		return true
	}

	return false
}

// SetUseEnvelopeSearchMixedModeMetadata gets a reference to the given SettingsMetadata and assigns it to the UseEnvelopeSearchMixedModeMetadata field.
func (o *AccountSettingsInformation) SetUseEnvelopeSearchMixedModeMetadata(v SettingsMetadata) {
	o.UseEnvelopeSearchMixedModeMetadata = &v
}

// GetUseMultiAppGroupsData returns the UseMultiAppGroupsData field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseMultiAppGroupsData() string {
	if o == nil || IsNil(o.UseMultiAppGroupsData) {
		var ret string
		return ret
	}
	return *o.UseMultiAppGroupsData
}

// GetUseMultiAppGroupsDataOk returns a tuple with the UseMultiAppGroupsData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseMultiAppGroupsDataOk() (*string, bool) {
	if o == nil || IsNil(o.UseMultiAppGroupsData) {
		return nil, false
	}
	return o.UseMultiAppGroupsData, true
}

// HasUseMultiAppGroupsData returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseMultiAppGroupsData() bool {
	if o != nil && !IsNil(o.UseMultiAppGroupsData) {
		return true
	}

	return false
}

// SetUseMultiAppGroupsData gets a reference to the given string and assigns it to the UseMultiAppGroupsData field.
func (o *AccountSettingsInformation) SetUseMultiAppGroupsData(v string) {
	o.UseMultiAppGroupsData = &v
}

// GetUseMultiAppGroupsDataMetadata returns the UseMultiAppGroupsDataMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseMultiAppGroupsDataMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UseMultiAppGroupsDataMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UseMultiAppGroupsDataMetadata
}

// GetUseMultiAppGroupsDataMetadataOk returns a tuple with the UseMultiAppGroupsDataMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseMultiAppGroupsDataMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UseMultiAppGroupsDataMetadata) {
		return nil, false
	}
	return o.UseMultiAppGroupsDataMetadata, true
}

// HasUseMultiAppGroupsDataMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseMultiAppGroupsDataMetadata() bool {
	if o != nil && !IsNil(o.UseMultiAppGroupsDataMetadata) {
		return true
	}

	return false
}

// SetUseMultiAppGroupsDataMetadata gets a reference to the given SettingsMetadata and assigns it to the UseMultiAppGroupsDataMetadata field.
func (o *AccountSettingsInformation) SetUseMultiAppGroupsDataMetadata(v SettingsMetadata) {
	o.UseMultiAppGroupsDataMetadata = &v
}

// GetUseNewBlobForPdf returns the UseNewBlobForPdf field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseNewBlobForPdf() string {
	if o == nil || IsNil(o.UseNewBlobForPdf) {
		var ret string
		return ret
	}
	return *o.UseNewBlobForPdf
}

// GetUseNewBlobForPdfOk returns a tuple with the UseNewBlobForPdf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseNewBlobForPdfOk() (*string, bool) {
	if o == nil || IsNil(o.UseNewBlobForPdf) {
		return nil, false
	}
	return o.UseNewBlobForPdf, true
}

// HasUseNewBlobForPdf returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseNewBlobForPdf() bool {
	if o != nil && !IsNil(o.UseNewBlobForPdf) {
		return true
	}

	return false
}

// SetUseNewBlobForPdf gets a reference to the given string and assigns it to the UseNewBlobForPdf field.
func (o *AccountSettingsInformation) SetUseNewBlobForPdf(v string) {
	o.UseNewBlobForPdf = &v
}

// GetUseNewBlobForPdfMetadata returns the UseNewBlobForPdfMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseNewBlobForPdfMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UseNewBlobForPdfMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UseNewBlobForPdfMetadata
}

// GetUseNewBlobForPdfMetadataOk returns a tuple with the UseNewBlobForPdfMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseNewBlobForPdfMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UseNewBlobForPdfMetadata) {
		return nil, false
	}
	return o.UseNewBlobForPdfMetadata, true
}

// HasUseNewBlobForPdfMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseNewBlobForPdfMetadata() bool {
	if o != nil && !IsNil(o.UseNewBlobForPdfMetadata) {
		return true
	}

	return false
}

// SetUseNewBlobForPdfMetadata gets a reference to the given SettingsMetadata and assigns it to the UseNewBlobForPdfMetadata field.
func (o *AccountSettingsInformation) SetUseNewBlobForPdfMetadata(v SettingsMetadata) {
	o.UseNewBlobForPdfMetadata = &v
}

// GetUseNewEnvelopeSearch returns the UseNewEnvelopeSearch field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseNewEnvelopeSearch() string {
	if o == nil || IsNil(o.UseNewEnvelopeSearch) {
		var ret string
		return ret
	}
	return *o.UseNewEnvelopeSearch
}

// GetUseNewEnvelopeSearchOk returns a tuple with the UseNewEnvelopeSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseNewEnvelopeSearchOk() (*string, bool) {
	if o == nil || IsNil(o.UseNewEnvelopeSearch) {
		return nil, false
	}
	return o.UseNewEnvelopeSearch, true
}

// HasUseNewEnvelopeSearch returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseNewEnvelopeSearch() bool {
	if o != nil && !IsNil(o.UseNewEnvelopeSearch) {
		return true
	}

	return false
}

// SetUseNewEnvelopeSearch gets a reference to the given string and assigns it to the UseNewEnvelopeSearch field.
func (o *AccountSettingsInformation) SetUseNewEnvelopeSearch(v string) {
	o.UseNewEnvelopeSearch = &v
}

// GetUseNewEnvelopeSearchMetadata returns the UseNewEnvelopeSearchMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseNewEnvelopeSearchMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UseNewEnvelopeSearchMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UseNewEnvelopeSearchMetadata
}

// GetUseNewEnvelopeSearchMetadataOk returns a tuple with the UseNewEnvelopeSearchMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseNewEnvelopeSearchMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UseNewEnvelopeSearchMetadata) {
		return nil, false
	}
	return o.UseNewEnvelopeSearchMetadata, true
}

// HasUseNewEnvelopeSearchMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseNewEnvelopeSearchMetadata() bool {
	if o != nil && !IsNil(o.UseNewEnvelopeSearchMetadata) {
		return true
	}

	return false
}

// SetUseNewEnvelopeSearchMetadata gets a reference to the given SettingsMetadata and assigns it to the UseNewEnvelopeSearchMetadata field.
func (o *AccountSettingsInformation) SetUseNewEnvelopeSearchMetadata(v SettingsMetadata) {
	o.UseNewEnvelopeSearchMetadata = &v
}

// GetUseNewEnvelopeSearchOnlyWhenSearchingAfterDate returns the UseNewEnvelopeSearchOnlyWhenSearchingAfterDate field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseNewEnvelopeSearchOnlyWhenSearchingAfterDate() string {
	if o == nil || IsNil(o.UseNewEnvelopeSearchOnlyWhenSearchingAfterDate) {
		var ret string
		return ret
	}
	return *o.UseNewEnvelopeSearchOnlyWhenSearchingAfterDate
}

// GetUseNewEnvelopeSearchOnlyWhenSearchingAfterDateOk returns a tuple with the UseNewEnvelopeSearchOnlyWhenSearchingAfterDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseNewEnvelopeSearchOnlyWhenSearchingAfterDateOk() (*string, bool) {
	if o == nil || IsNil(o.UseNewEnvelopeSearchOnlyWhenSearchingAfterDate) {
		return nil, false
	}
	return o.UseNewEnvelopeSearchOnlyWhenSearchingAfterDate, true
}

// HasUseNewEnvelopeSearchOnlyWhenSearchingAfterDate returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseNewEnvelopeSearchOnlyWhenSearchingAfterDate() bool {
	if o != nil && !IsNil(o.UseNewEnvelopeSearchOnlyWhenSearchingAfterDate) {
		return true
	}

	return false
}

// SetUseNewEnvelopeSearchOnlyWhenSearchingAfterDate gets a reference to the given string and assigns it to the UseNewEnvelopeSearchOnlyWhenSearchingAfterDate field.
func (o *AccountSettingsInformation) SetUseNewEnvelopeSearchOnlyWhenSearchingAfterDate(v string) {
	o.UseNewEnvelopeSearchOnlyWhenSearchingAfterDate = &v
}

// GetUseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata returns the UseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata
}

// GetUseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadataOk returns a tuple with the UseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata) {
		return nil, false
	}
	return o.UseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata, true
}

// HasUseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata() bool {
	if o != nil && !IsNil(o.UseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata) {
		return true
	}

	return false
}

// SetUseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata gets a reference to the given SettingsMetadata and assigns it to the UseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata field.
func (o *AccountSettingsInformation) SetUseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata(v SettingsMetadata) {
	o.UseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata = &v
}

// GetUseNewEnvelopeSearchOnlyWithSearchTerm returns the UseNewEnvelopeSearchOnlyWithSearchTerm field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseNewEnvelopeSearchOnlyWithSearchTerm() string {
	if o == nil || IsNil(o.UseNewEnvelopeSearchOnlyWithSearchTerm) {
		var ret string
		return ret
	}
	return *o.UseNewEnvelopeSearchOnlyWithSearchTerm
}

// GetUseNewEnvelopeSearchOnlyWithSearchTermOk returns a tuple with the UseNewEnvelopeSearchOnlyWithSearchTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseNewEnvelopeSearchOnlyWithSearchTermOk() (*string, bool) {
	if o == nil || IsNil(o.UseNewEnvelopeSearchOnlyWithSearchTerm) {
		return nil, false
	}
	return o.UseNewEnvelopeSearchOnlyWithSearchTerm, true
}

// HasUseNewEnvelopeSearchOnlyWithSearchTerm returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseNewEnvelopeSearchOnlyWithSearchTerm() bool {
	if o != nil && !IsNil(o.UseNewEnvelopeSearchOnlyWithSearchTerm) {
		return true
	}

	return false
}

// SetUseNewEnvelopeSearchOnlyWithSearchTerm gets a reference to the given string and assigns it to the UseNewEnvelopeSearchOnlyWithSearchTerm field.
func (o *AccountSettingsInformation) SetUseNewEnvelopeSearchOnlyWithSearchTerm(v string) {
	o.UseNewEnvelopeSearchOnlyWithSearchTerm = &v
}

// GetUseNewEnvelopeSearchOnlyWithSearchTermMetadata returns the UseNewEnvelopeSearchOnlyWithSearchTermMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseNewEnvelopeSearchOnlyWithSearchTermMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UseNewEnvelopeSearchOnlyWithSearchTermMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UseNewEnvelopeSearchOnlyWithSearchTermMetadata
}

// GetUseNewEnvelopeSearchOnlyWithSearchTermMetadataOk returns a tuple with the UseNewEnvelopeSearchOnlyWithSearchTermMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseNewEnvelopeSearchOnlyWithSearchTermMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UseNewEnvelopeSearchOnlyWithSearchTermMetadata) {
		return nil, false
	}
	return o.UseNewEnvelopeSearchOnlyWithSearchTermMetadata, true
}

// HasUseNewEnvelopeSearchOnlyWithSearchTermMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseNewEnvelopeSearchOnlyWithSearchTermMetadata() bool {
	if o != nil && !IsNil(o.UseNewEnvelopeSearchOnlyWithSearchTermMetadata) {
		return true
	}

	return false
}

// SetUseNewEnvelopeSearchOnlyWithSearchTermMetadata gets a reference to the given SettingsMetadata and assigns it to the UseNewEnvelopeSearchOnlyWithSearchTermMetadata field.
func (o *AccountSettingsInformation) SetUseNewEnvelopeSearchOnlyWithSearchTermMetadata(v SettingsMetadata) {
	o.UseNewEnvelopeSearchOnlyWithSearchTermMetadata = &v
}

// GetUseSAFESignerCertificates returns the UseSAFESignerCertificates field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseSAFESignerCertificates() string {
	if o == nil || IsNil(o.UseSAFESignerCertificates) {
		var ret string
		return ret
	}
	return *o.UseSAFESignerCertificates
}

// GetUseSAFESignerCertificatesOk returns a tuple with the UseSAFESignerCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseSAFESignerCertificatesOk() (*string, bool) {
	if o == nil || IsNil(o.UseSAFESignerCertificates) {
		return nil, false
	}
	return o.UseSAFESignerCertificates, true
}

// HasUseSAFESignerCertificates returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseSAFESignerCertificates() bool {
	if o != nil && !IsNil(o.UseSAFESignerCertificates) {
		return true
	}

	return false
}

// SetUseSAFESignerCertificates gets a reference to the given string and assigns it to the UseSAFESignerCertificates field.
func (o *AccountSettingsInformation) SetUseSAFESignerCertificates(v string) {
	o.UseSAFESignerCertificates = &v
}

// GetUseSAFESignerCertificatesMetadata returns the UseSAFESignerCertificatesMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseSAFESignerCertificatesMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UseSAFESignerCertificatesMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UseSAFESignerCertificatesMetadata
}

// GetUseSAFESignerCertificatesMetadataOk returns a tuple with the UseSAFESignerCertificatesMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseSAFESignerCertificatesMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UseSAFESignerCertificatesMetadata) {
		return nil, false
	}
	return o.UseSAFESignerCertificatesMetadata, true
}

// HasUseSAFESignerCertificatesMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseSAFESignerCertificatesMetadata() bool {
	if o != nil && !IsNil(o.UseSAFESignerCertificatesMetadata) {
		return true
	}

	return false
}

// SetUseSAFESignerCertificatesMetadata gets a reference to the given SettingsMetadata and assigns it to the UseSAFESignerCertificatesMetadata field.
func (o *AccountSettingsInformation) SetUseSAFESignerCertificatesMetadata(v SettingsMetadata) {
	o.UseSAFESignerCertificatesMetadata = &v
}

// GetUsesAPI returns the UsesAPI field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUsesAPI() string {
	if o == nil || IsNil(o.UsesAPI) {
		var ret string
		return ret
	}
	return *o.UsesAPI
}

// GetUsesAPIOk returns a tuple with the UsesAPI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUsesAPIOk() (*string, bool) {
	if o == nil || IsNil(o.UsesAPI) {
		return nil, false
	}
	return o.UsesAPI, true
}

// HasUsesAPI returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUsesAPI() bool {
	if o != nil && !IsNil(o.UsesAPI) {
		return true
	}

	return false
}

// SetUsesAPI gets a reference to the given string and assigns it to the UsesAPI field.
func (o *AccountSettingsInformation) SetUsesAPI(v string) {
	o.UsesAPI = &v
}

// GetUsesAPIMetadata returns the UsesAPIMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUsesAPIMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UsesAPIMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UsesAPIMetadata
}

// GetUsesAPIMetadataOk returns a tuple with the UsesAPIMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUsesAPIMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UsesAPIMetadata) {
		return nil, false
	}
	return o.UsesAPIMetadata, true
}

// HasUsesAPIMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUsesAPIMetadata() bool {
	if o != nil && !IsNil(o.UsesAPIMetadata) {
		return true
	}

	return false
}

// SetUsesAPIMetadata gets a reference to the given SettingsMetadata and assigns it to the UsesAPIMetadata field.
func (o *AccountSettingsInformation) SetUsesAPIMetadata(v SettingsMetadata) {
	o.UsesAPIMetadata = &v
}

// GetUseSignatureProviderPlatform returns the UseSignatureProviderPlatform field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseSignatureProviderPlatform() string {
	if o == nil || IsNil(o.UseSignatureProviderPlatform) {
		var ret string
		return ret
	}
	return *o.UseSignatureProviderPlatform
}

// GetUseSignatureProviderPlatformOk returns a tuple with the UseSignatureProviderPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseSignatureProviderPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.UseSignatureProviderPlatform) {
		return nil, false
	}
	return o.UseSignatureProviderPlatform, true
}

// HasUseSignatureProviderPlatform returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseSignatureProviderPlatform() bool {
	if o != nil && !IsNil(o.UseSignatureProviderPlatform) {
		return true
	}

	return false
}

// SetUseSignatureProviderPlatform gets a reference to the given string and assigns it to the UseSignatureProviderPlatform field.
func (o *AccountSettingsInformation) SetUseSignatureProviderPlatform(v string) {
	o.UseSignatureProviderPlatform = &v
}

// GetUseSignatureProviderPlatformMetadata returns the UseSignatureProviderPlatformMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseSignatureProviderPlatformMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UseSignatureProviderPlatformMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UseSignatureProviderPlatformMetadata
}

// GetUseSignatureProviderPlatformMetadataOk returns a tuple with the UseSignatureProviderPlatformMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseSignatureProviderPlatformMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UseSignatureProviderPlatformMetadata) {
		return nil, false
	}
	return o.UseSignatureProviderPlatformMetadata, true
}

// HasUseSignatureProviderPlatformMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseSignatureProviderPlatformMetadata() bool {
	if o != nil && !IsNil(o.UseSignatureProviderPlatformMetadata) {
		return true
	}

	return false
}

// SetUseSignatureProviderPlatformMetadata gets a reference to the given SettingsMetadata and assigns it to the UseSignatureProviderPlatformMetadata field.
func (o *AccountSettingsInformation) SetUseSignatureProviderPlatformMetadata(v SettingsMetadata) {
	o.UseSignatureProviderPlatformMetadata = &v
}

// GetUseSmartContractsV1 returns the UseSmartContractsV1 field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetUseSmartContractsV1() string {
	if o == nil || IsNil(o.UseSmartContractsV1) {
		var ret string
		return ret
	}
	return *o.UseSmartContractsV1
}

// GetUseSmartContractsV1Ok returns a tuple with the UseSmartContractsV1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetUseSmartContractsV1Ok() (*string, bool) {
	if o == nil || IsNil(o.UseSmartContractsV1) {
		return nil, false
	}
	return o.UseSmartContractsV1, true
}

// HasUseSmartContractsV1 returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasUseSmartContractsV1() bool {
	if o != nil && !IsNil(o.UseSmartContractsV1) {
		return true
	}

	return false
}

// SetUseSmartContractsV1 gets a reference to the given string and assigns it to the UseSmartContractsV1 field.
func (o *AccountSettingsInformation) SetUseSmartContractsV1(v string) {
	o.UseSmartContractsV1 = &v
}

// GetValidationsAllowed returns the ValidationsAllowed field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetValidationsAllowed() string {
	if o == nil || IsNil(o.ValidationsAllowed) {
		var ret string
		return ret
	}
	return *o.ValidationsAllowed
}

// GetValidationsAllowedOk returns a tuple with the ValidationsAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetValidationsAllowedOk() (*string, bool) {
	if o == nil || IsNil(o.ValidationsAllowed) {
		return nil, false
	}
	return o.ValidationsAllowed, true
}

// HasValidationsAllowed returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasValidationsAllowed() bool {
	if o != nil && !IsNil(o.ValidationsAllowed) {
		return true
	}

	return false
}

// SetValidationsAllowed gets a reference to the given string and assigns it to the ValidationsAllowed field.
func (o *AccountSettingsInformation) SetValidationsAllowed(v string) {
	o.ValidationsAllowed = &v
}

// GetValidationsAllowedMetadata returns the ValidationsAllowedMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetValidationsAllowedMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ValidationsAllowedMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ValidationsAllowedMetadata
}

// GetValidationsAllowedMetadataOk returns a tuple with the ValidationsAllowedMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetValidationsAllowedMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ValidationsAllowedMetadata) {
		return nil, false
	}
	return o.ValidationsAllowedMetadata, true
}

// HasValidationsAllowedMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasValidationsAllowedMetadata() bool {
	if o != nil && !IsNil(o.ValidationsAllowedMetadata) {
		return true
	}

	return false
}

// SetValidationsAllowedMetadata gets a reference to the given SettingsMetadata and assigns it to the ValidationsAllowedMetadata field.
func (o *AccountSettingsInformation) SetValidationsAllowedMetadata(v SettingsMetadata) {
	o.ValidationsAllowedMetadata = &v
}

// GetValidationsBrand returns the ValidationsBrand field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetValidationsBrand() string {
	if o == nil || IsNil(o.ValidationsBrand) {
		var ret string
		return ret
	}
	return *o.ValidationsBrand
}

// GetValidationsBrandOk returns a tuple with the ValidationsBrand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetValidationsBrandOk() (*string, bool) {
	if o == nil || IsNil(o.ValidationsBrand) {
		return nil, false
	}
	return o.ValidationsBrand, true
}

// HasValidationsBrand returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasValidationsBrand() bool {
	if o != nil && !IsNil(o.ValidationsBrand) {
		return true
	}

	return false
}

// SetValidationsBrand gets a reference to the given string and assigns it to the ValidationsBrand field.
func (o *AccountSettingsInformation) SetValidationsBrand(v string) {
	o.ValidationsBrand = &v
}

// GetValidationsBrandMetadata returns the ValidationsBrandMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetValidationsBrandMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ValidationsBrandMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ValidationsBrandMetadata
}

// GetValidationsBrandMetadataOk returns a tuple with the ValidationsBrandMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetValidationsBrandMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ValidationsBrandMetadata) {
		return nil, false
	}
	return o.ValidationsBrandMetadata, true
}

// HasValidationsBrandMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasValidationsBrandMetadata() bool {
	if o != nil && !IsNil(o.ValidationsBrandMetadata) {
		return true
	}

	return false
}

// SetValidationsBrandMetadata gets a reference to the given SettingsMetadata and assigns it to the ValidationsBrandMetadata field.
func (o *AccountSettingsInformation) SetValidationsBrandMetadata(v SettingsMetadata) {
	o.ValidationsBrandMetadata = &v
}

// GetValidationsCadence returns the ValidationsCadence field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetValidationsCadence() string {
	if o == nil || IsNil(o.ValidationsCadence) {
		var ret string
		return ret
	}
	return *o.ValidationsCadence
}

// GetValidationsCadenceOk returns a tuple with the ValidationsCadence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetValidationsCadenceOk() (*string, bool) {
	if o == nil || IsNil(o.ValidationsCadence) {
		return nil, false
	}
	return o.ValidationsCadence, true
}

// HasValidationsCadence returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasValidationsCadence() bool {
	if o != nil && !IsNil(o.ValidationsCadence) {
		return true
	}

	return false
}

// SetValidationsCadence gets a reference to the given string and assigns it to the ValidationsCadence field.
func (o *AccountSettingsInformation) SetValidationsCadence(v string) {
	o.ValidationsCadence = &v
}

// GetValidationsCadenceMetadata returns the ValidationsCadenceMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetValidationsCadenceMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ValidationsCadenceMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ValidationsCadenceMetadata
}

// GetValidationsCadenceMetadataOk returns a tuple with the ValidationsCadenceMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetValidationsCadenceMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ValidationsCadenceMetadata) {
		return nil, false
	}
	return o.ValidationsCadenceMetadata, true
}

// HasValidationsCadenceMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasValidationsCadenceMetadata() bool {
	if o != nil && !IsNil(o.ValidationsCadenceMetadata) {
		return true
	}

	return false
}

// SetValidationsCadenceMetadata gets a reference to the given SettingsMetadata and assigns it to the ValidationsCadenceMetadata field.
func (o *AccountSettingsInformation) SetValidationsCadenceMetadata(v SettingsMetadata) {
	o.ValidationsCadenceMetadata = &v
}

// GetValidationsEnabled returns the ValidationsEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetValidationsEnabled() string {
	if o == nil || IsNil(o.ValidationsEnabled) {
		var ret string
		return ret
	}
	return *o.ValidationsEnabled
}

// GetValidationsEnabledOk returns a tuple with the ValidationsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetValidationsEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.ValidationsEnabled) {
		return nil, false
	}
	return o.ValidationsEnabled, true
}

// HasValidationsEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasValidationsEnabled() bool {
	if o != nil && !IsNil(o.ValidationsEnabled) {
		return true
	}

	return false
}

// SetValidationsEnabled gets a reference to the given string and assigns it to the ValidationsEnabled field.
func (o *AccountSettingsInformation) SetValidationsEnabled(v string) {
	o.ValidationsEnabled = &v
}

// GetValidationsEnabledMetadata returns the ValidationsEnabledMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetValidationsEnabledMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ValidationsEnabledMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ValidationsEnabledMetadata
}

// GetValidationsEnabledMetadataOk returns a tuple with the ValidationsEnabledMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetValidationsEnabledMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ValidationsEnabledMetadata) {
		return nil, false
	}
	return o.ValidationsEnabledMetadata, true
}

// HasValidationsEnabledMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasValidationsEnabledMetadata() bool {
	if o != nil && !IsNil(o.ValidationsEnabledMetadata) {
		return true
	}

	return false
}

// SetValidationsEnabledMetadata gets a reference to the given SettingsMetadata and assigns it to the ValidationsEnabledMetadata field.
func (o *AccountSettingsInformation) SetValidationsEnabledMetadata(v SettingsMetadata) {
	o.ValidationsEnabledMetadata = &v
}

// GetValidationsReport returns the ValidationsReport field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetValidationsReport() string {
	if o == nil || IsNil(o.ValidationsReport) {
		var ret string
		return ret
	}
	return *o.ValidationsReport
}

// GetValidationsReportOk returns a tuple with the ValidationsReport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetValidationsReportOk() (*string, bool) {
	if o == nil || IsNil(o.ValidationsReport) {
		return nil, false
	}
	return o.ValidationsReport, true
}

// HasValidationsReport returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasValidationsReport() bool {
	if o != nil && !IsNil(o.ValidationsReport) {
		return true
	}

	return false
}

// SetValidationsReport gets a reference to the given string and assigns it to the ValidationsReport field.
func (o *AccountSettingsInformation) SetValidationsReport(v string) {
	o.ValidationsReport = &v
}

// GetValidationsReportMetadata returns the ValidationsReportMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetValidationsReportMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ValidationsReportMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ValidationsReportMetadata
}

// GetValidationsReportMetadataOk returns a tuple with the ValidationsReportMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetValidationsReportMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ValidationsReportMetadata) {
		return nil, false
	}
	return o.ValidationsReportMetadata, true
}

// HasValidationsReportMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasValidationsReportMetadata() bool {
	if o != nil && !IsNil(o.ValidationsReportMetadata) {
		return true
	}

	return false
}

// SetValidationsReportMetadata gets a reference to the given SettingsMetadata and assigns it to the ValidationsReportMetadata field.
func (o *AccountSettingsInformation) SetValidationsReportMetadata(v SettingsMetadata) {
	o.ValidationsReportMetadata = &v
}

// GetWaterMarkEnabled returns the WaterMarkEnabled field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetWaterMarkEnabled() string {
	if o == nil || IsNil(o.WaterMarkEnabled) {
		var ret string
		return ret
	}
	return *o.WaterMarkEnabled
}

// GetWaterMarkEnabledOk returns a tuple with the WaterMarkEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetWaterMarkEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.WaterMarkEnabled) {
		return nil, false
	}
	return o.WaterMarkEnabled, true
}

// HasWaterMarkEnabled returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasWaterMarkEnabled() bool {
	if o != nil && !IsNil(o.WaterMarkEnabled) {
		return true
	}

	return false
}

// SetWaterMarkEnabled gets a reference to the given string and assigns it to the WaterMarkEnabled field.
func (o *AccountSettingsInformation) SetWaterMarkEnabled(v string) {
	o.WaterMarkEnabled = &v
}

// GetWaterMarkEnabledMetadata returns the WaterMarkEnabledMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetWaterMarkEnabledMetadata() SettingsMetadata {
	if o == nil || IsNil(o.WaterMarkEnabledMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.WaterMarkEnabledMetadata
}

// GetWaterMarkEnabledMetadataOk returns a tuple with the WaterMarkEnabledMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetWaterMarkEnabledMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.WaterMarkEnabledMetadata) {
		return nil, false
	}
	return o.WaterMarkEnabledMetadata, true
}

// HasWaterMarkEnabledMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasWaterMarkEnabledMetadata() bool {
	if o != nil && !IsNil(o.WaterMarkEnabledMetadata) {
		return true
	}

	return false
}

// SetWaterMarkEnabledMetadata gets a reference to the given SettingsMetadata and assigns it to the WaterMarkEnabledMetadata field.
func (o *AccountSettingsInformation) SetWaterMarkEnabledMetadata(v SettingsMetadata) {
	o.WaterMarkEnabledMetadata = &v
}

// GetWriteReminderToEnvelopeHistory returns the WriteReminderToEnvelopeHistory field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetWriteReminderToEnvelopeHistory() string {
	if o == nil || IsNil(o.WriteReminderToEnvelopeHistory) {
		var ret string
		return ret
	}
	return *o.WriteReminderToEnvelopeHistory
}

// GetWriteReminderToEnvelopeHistoryOk returns a tuple with the WriteReminderToEnvelopeHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetWriteReminderToEnvelopeHistoryOk() (*string, bool) {
	if o == nil || IsNil(o.WriteReminderToEnvelopeHistory) {
		return nil, false
	}
	return o.WriteReminderToEnvelopeHistory, true
}

// HasWriteReminderToEnvelopeHistory returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasWriteReminderToEnvelopeHistory() bool {
	if o != nil && !IsNil(o.WriteReminderToEnvelopeHistory) {
		return true
	}

	return false
}

// SetWriteReminderToEnvelopeHistory gets a reference to the given string and assigns it to the WriteReminderToEnvelopeHistory field.
func (o *AccountSettingsInformation) SetWriteReminderToEnvelopeHistory(v string) {
	o.WriteReminderToEnvelopeHistory = &v
}

// GetWriteReminderToEnvelopeHistoryMetadata returns the WriteReminderToEnvelopeHistoryMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetWriteReminderToEnvelopeHistoryMetadata() SettingsMetadata {
	if o == nil || IsNil(o.WriteReminderToEnvelopeHistoryMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.WriteReminderToEnvelopeHistoryMetadata
}

// GetWriteReminderToEnvelopeHistoryMetadataOk returns a tuple with the WriteReminderToEnvelopeHistoryMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetWriteReminderToEnvelopeHistoryMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.WriteReminderToEnvelopeHistoryMetadata) {
		return nil, false
	}
	return o.WriteReminderToEnvelopeHistoryMetadata, true
}

// HasWriteReminderToEnvelopeHistoryMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasWriteReminderToEnvelopeHistoryMetadata() bool {
	if o != nil && !IsNil(o.WriteReminderToEnvelopeHistoryMetadata) {
		return true
	}

	return false
}

// SetWriteReminderToEnvelopeHistoryMetadata gets a reference to the given SettingsMetadata and assigns it to the WriteReminderToEnvelopeHistoryMetadata field.
func (o *AccountSettingsInformation) SetWriteReminderToEnvelopeHistoryMetadata(v SettingsMetadata) {
	o.WriteReminderToEnvelopeHistoryMetadata = &v
}

// GetWurflMinAllowableScreenSize returns the WurflMinAllowableScreenSize field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetWurflMinAllowableScreenSize() string {
	if o == nil || IsNil(o.WurflMinAllowableScreenSize) {
		var ret string
		return ret
	}
	return *o.WurflMinAllowableScreenSize
}

// GetWurflMinAllowableScreenSizeOk returns a tuple with the WurflMinAllowableScreenSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetWurflMinAllowableScreenSizeOk() (*string, bool) {
	if o == nil || IsNil(o.WurflMinAllowableScreenSize) {
		return nil, false
	}
	return o.WurflMinAllowableScreenSize, true
}

// HasWurflMinAllowableScreenSize returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasWurflMinAllowableScreenSize() bool {
	if o != nil && !IsNil(o.WurflMinAllowableScreenSize) {
		return true
	}

	return false
}

// SetWurflMinAllowableScreenSize gets a reference to the given string and assigns it to the WurflMinAllowableScreenSize field.
func (o *AccountSettingsInformation) SetWurflMinAllowableScreenSize(v string) {
	o.WurflMinAllowableScreenSize = &v
}

// GetWurflMinAllowableScreenSizeMetadata returns the WurflMinAllowableScreenSizeMetadata field value if set, zero value otherwise.
func (o *AccountSettingsInformation) GetWurflMinAllowableScreenSizeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.WurflMinAllowableScreenSizeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.WurflMinAllowableScreenSizeMetadata
}

// GetWurflMinAllowableScreenSizeMetadataOk returns a tuple with the WurflMinAllowableScreenSizeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSettingsInformation) GetWurflMinAllowableScreenSizeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.WurflMinAllowableScreenSizeMetadata) {
		return nil, false
	}
	return o.WurflMinAllowableScreenSizeMetadata, true
}

// HasWurflMinAllowableScreenSizeMetadata returns a boolean if a field has been set.
func (o *AccountSettingsInformation) HasWurflMinAllowableScreenSizeMetadata() bool {
	if o != nil && !IsNil(o.WurflMinAllowableScreenSizeMetadata) {
		return true
	}

	return false
}

// SetWurflMinAllowableScreenSizeMetadata gets a reference to the given SettingsMetadata and assigns it to the WurflMinAllowableScreenSizeMetadata field.
func (o *AccountSettingsInformation) SetWurflMinAllowableScreenSizeMetadata(v SettingsMetadata) {
	o.WurflMinAllowableScreenSizeMetadata = &v
}

func (o AccountSettingsInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountSettingsInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessCodeFormat) {
		toSerialize["accessCodeFormat"] = o.AccessCodeFormat
	}
	if !IsNil(o.AccountDateTimeFormat) {
		toSerialize["accountDateTimeFormat"] = o.AccountDateTimeFormat
	}
	if !IsNil(o.AccountDateTimeFormatMetadata) {
		toSerialize["accountDateTimeFormatMetadata"] = o.AccountDateTimeFormatMetadata
	}
	if !IsNil(o.AccountDefaultLanguage) {
		toSerialize["accountDefaultLanguage"] = o.AccountDefaultLanguage
	}
	if !IsNil(o.AccountDefaultLanguageMetadata) {
		toSerialize["accountDefaultLanguageMetadata"] = o.AccountDefaultLanguageMetadata
	}
	if !IsNil(o.AccountName) {
		toSerialize["accountName"] = o.AccountName
	}
	if !IsNil(o.AccountNameMetadata) {
		toSerialize["accountNameMetadata"] = o.AccountNameMetadata
	}
	if !IsNil(o.AccountNotification) {
		toSerialize["accountNotification"] = o.AccountNotification
	}
	if !IsNil(o.AccountUISettings) {
		toSerialize["accountUISettings"] = o.AccountUISettings
	}
	if !IsNil(o.AdoptSigConfig) {
		toSerialize["adoptSigConfig"] = o.AdoptSigConfig
	}
	if !IsNil(o.AdoptSigConfigMetadata) {
		toSerialize["adoptSigConfigMetadata"] = o.AdoptSigConfigMetadata
	}
	if !IsNil(o.AdvancedCorrect) {
		toSerialize["advancedCorrect"] = o.AdvancedCorrect
	}
	if !IsNil(o.AdvancedCorrectMetadata) {
		toSerialize["advancedCorrectMetadata"] = o.AdvancedCorrectMetadata
	}
	if !IsNil(o.AdvancedSearchEnableTabField) {
		toSerialize["advancedSearchEnableTabField"] = o.AdvancedSearchEnableTabField
	}
	if !IsNil(o.AdvancedSearchEnableTabFieldMetadata) {
		toSerialize["advancedSearchEnableTabFieldMetadata"] = o.AdvancedSearchEnableTabFieldMetadata
	}
	if !IsNil(o.AdvancedSearchEnableTemplateIdField) {
		toSerialize["advancedSearchEnableTemplateIdField"] = o.AdvancedSearchEnableTemplateIdField
	}
	if !IsNil(o.AdvancedSearchEnableTemplateIdFieldMetadata) {
		toSerialize["advancedSearchEnableTemplateIdFieldMetadata"] = o.AdvancedSearchEnableTemplateIdFieldMetadata
	}
	if !IsNil(o.AdvancedSearchEnableTemplateNameField) {
		toSerialize["advancedSearchEnableTemplateNameField"] = o.AdvancedSearchEnableTemplateNameField
	}
	if !IsNil(o.AdvancedSearchEnableTemplateNameFieldMetadata) {
		toSerialize["advancedSearchEnableTemplateNameFieldMetadata"] = o.AdvancedSearchEnableTemplateNameFieldMetadata
	}
	if !IsNil(o.AllowAccessCodeFormat) {
		toSerialize["allowAccessCodeFormat"] = o.AllowAccessCodeFormat
	}
	if !IsNil(o.AllowAccessCodeFormatMetadata) {
		toSerialize["allowAccessCodeFormatMetadata"] = o.AllowAccessCodeFormatMetadata
	}
	if !IsNil(o.AllowAccountManagementGranular) {
		toSerialize["allowAccountManagementGranular"] = o.AllowAccountManagementGranular
	}
	if !IsNil(o.AllowAccountManagementGranularMetadata) {
		toSerialize["allowAccountManagementGranularMetadata"] = o.AllowAccountManagementGranularMetadata
	}
	if !IsNil(o.AllowAccountMemberNameChange) {
		toSerialize["allowAccountMemberNameChange"] = o.AllowAccountMemberNameChange
	}
	if !IsNil(o.AllowAccountMemberNameChangeMetadata) {
		toSerialize["allowAccountMemberNameChangeMetadata"] = o.AllowAccountMemberNameChangeMetadata
	}
	if !IsNil(o.AllowACE) {
		toSerialize["allowACE"] = o.AllowACE
	}
	if !IsNil(o.AllowACEMetadata) {
		toSerialize["allowACEMetadata"] = o.AllowACEMetadata
	}
	if !IsNil(o.AllowAdvancedRecipientRoutingConditional) {
		toSerialize["allowAdvancedRecipientRoutingConditional"] = o.AllowAdvancedRecipientRoutingConditional
	}
	if !IsNil(o.AllowAdvancedRecipientRoutingConditionalMetadata) {
		toSerialize["allowAdvancedRecipientRoutingConditionalMetadata"] = o.AllowAdvancedRecipientRoutingConditionalMetadata
	}
	if !IsNil(o.AllowAgentNameEmailEdit) {
		toSerialize["allowAgentNameEmailEdit"] = o.AllowAgentNameEmailEdit
	}
	if !IsNil(o.AllowAgentNameEmailEditMetadata) {
		toSerialize["allowAgentNameEmailEditMetadata"] = o.AllowAgentNameEmailEditMetadata
	}
	if !IsNil(o.AllowAgreementActions) {
		toSerialize["allowAgreementActions"] = o.AllowAgreementActions
	}
	if !IsNil(o.AllowAgreementActionsMetadata) {
		toSerialize["allowAgreementActionsMetadata"] = o.AllowAgreementActionsMetadata
	}
	if !IsNil(o.AllowAgreementOrchestrations) {
		toSerialize["allowAgreementOrchestrations"] = o.AllowAgreementOrchestrations
	}
	if !IsNil(o.AllowAgreementOrchestrationsMetadata) {
		toSerialize["allowAgreementOrchestrationsMetadata"] = o.AllowAgreementOrchestrationsMetadata
	}
	if !IsNil(o.AllowAutoNavSettings) {
		toSerialize["allowAutoNavSettings"] = o.AllowAutoNavSettings
	}
	if !IsNil(o.AllowAutoNavSettingsMetadata) {
		toSerialize["allowAutoNavSettingsMetadata"] = o.AllowAutoNavSettingsMetadata
	}
	if !IsNil(o.AllowAutoTagging) {
		toSerialize["allowAutoTagging"] = o.AllowAutoTagging
	}
	if !IsNil(o.AllowAutoTaggingMetadata) {
		toSerialize["allowAutoTaggingMetadata"] = o.AllowAutoTaggingMetadata
	}
	if !IsNil(o.AllowBulkSend) {
		toSerialize["allowBulkSend"] = o.AllowBulkSend
	}
	if !IsNil(o.AllowBulkSendMetadata) {
		toSerialize["allowBulkSendMetadata"] = o.AllowBulkSendMetadata
	}
	if !IsNil(o.AllowCDWithdraw) {
		toSerialize["allowCDWithdraw"] = o.AllowCDWithdraw
	}
	if !IsNil(o.AllowCDWithdrawMetadata) {
		toSerialize["allowCDWithdrawMetadata"] = o.AllowCDWithdrawMetadata
	}
	if !IsNil(o.AllowConnectHttpListenerConfigs) {
		toSerialize["allowConnectHttpListenerConfigs"] = o.AllowConnectHttpListenerConfigs
	}
	if !IsNil(o.AllowConnectIdentityVerificationUI) {
		toSerialize["AllowConnectIdentityVerificationUI"] = o.AllowConnectIdentityVerificationUI
	}
	if !IsNil(o.AllowConnectOAuthUI) {
		toSerialize["allowConnectOAuthUI"] = o.AllowConnectOAuthUI
	}
	if !IsNil(o.AllowConnectSendFinishLater) {
		toSerialize["allowConnectSendFinishLater"] = o.AllowConnectSendFinishLater
	}
	if !IsNil(o.AllowConnectSendFinishLaterMetadata) {
		toSerialize["allowConnectSendFinishLaterMetadata"] = o.AllowConnectSendFinishLaterMetadata
	}
	if !IsNil(o.AllowConnectUnifiedPayloadUI) {
		toSerialize["allowConnectUnifiedPayloadUI"] = o.AllowConnectUnifiedPayloadUI
	}
	if !IsNil(o.AllowConsumerDisclosureOverride) {
		toSerialize["allowConsumerDisclosureOverride"] = o.AllowConsumerDisclosureOverride
	}
	if !IsNil(o.AllowConsumerDisclosureOverrideMetadata) {
		toSerialize["allowConsumerDisclosureOverrideMetadata"] = o.AllowConsumerDisclosureOverrideMetadata
	}
	if !IsNil(o.AllowDataDownload) {
		toSerialize["allowDataDownload"] = o.AllowDataDownload
	}
	if !IsNil(o.AllowDataDownloadMetadata) {
		toSerialize["allowDataDownloadMetadata"] = o.AllowDataDownloadMetadata
	}
	if !IsNil(o.AllowDelayedRouting) {
		toSerialize["allowDelayedRouting"] = o.AllowDelayedRouting
	}
	if !IsNil(o.AllowDelayedRoutingMetadata) {
		toSerialize["allowDelayedRoutingMetadata"] = o.AllowDelayedRoutingMetadata
	}
	if !IsNil(o.AllowDelegatedSigning) {
		toSerialize["allowDelegatedSigning"] = o.AllowDelegatedSigning
	}
	if !IsNil(o.AllowDelegatedSigningMetadata) {
		toSerialize["allowDelegatedSigningMetadata"] = o.AllowDelegatedSigningMetadata
	}
	if !IsNil(o.AllowDocGenDocuments) {
		toSerialize["allowDocGenDocuments"] = o.AllowDocGenDocuments
	}
	if !IsNil(o.AllowDocGenDocumentsMetadata) {
		toSerialize["allowDocGenDocumentsMetadata"] = o.AllowDocGenDocumentsMetadata
	}
	if !IsNil(o.AllowDocumentDisclosures) {
		toSerialize["allowDocumentDisclosures"] = o.AllowDocumentDisclosures
	}
	if !IsNil(o.AllowDocumentDisclosuresMetadata) {
		toSerialize["allowDocumentDisclosuresMetadata"] = o.AllowDocumentDisclosuresMetadata
	}
	if !IsNil(o.AllowDocumentsOnSignedEnvelopes) {
		toSerialize["allowDocumentsOnSignedEnvelopes"] = o.AllowDocumentsOnSignedEnvelopes
	}
	if !IsNil(o.AllowDocumentsOnSignedEnvelopesMetadata) {
		toSerialize["allowDocumentsOnSignedEnvelopesMetadata"] = o.AllowDocumentsOnSignedEnvelopesMetadata
	}
	if !IsNil(o.AllowDocumentVisibility) {
		toSerialize["allowDocumentVisibility"] = o.AllowDocumentVisibility
	}
	if !IsNil(o.AllowDocumentVisibilityMetadata) {
		toSerialize["allowDocumentVisibilityMetadata"] = o.AllowDocumentVisibilityMetadata
	}
	if !IsNil(o.AllowEditingEnvelopesOnBehalfOfOthers) {
		toSerialize["allowEditingEnvelopesOnBehalfOfOthers"] = o.AllowEditingEnvelopesOnBehalfOfOthers
	}
	if !IsNil(o.AllowEditingEnvelopesOnBehalfOfOthersMetadata) {
		toSerialize["allowEditingEnvelopesOnBehalfOfOthersMetadata"] = o.AllowEditingEnvelopesOnBehalfOfOthersMetadata
	}
	if !IsNil(o.AllowEHankoStamps) {
		toSerialize["allowEHankoStamps"] = o.AllowEHankoStamps
	}
	if !IsNil(o.AllowEHankoStampsMetadata) {
		toSerialize["allowEHankoStampsMetadata"] = o.AllowEHankoStampsMetadata
	}
	if !IsNil(o.AllowENoteEOriginal) {
		toSerialize["allowENoteEOriginal"] = o.AllowENoteEOriginal
	}
	if !IsNil(o.AllowENoteEOriginalMetadata) {
		toSerialize["allowENoteEOriginalMetadata"] = o.AllowENoteEOriginalMetadata
	}
	if !IsNil(o.AllowEnvelopeCorrect) {
		toSerialize["allowEnvelopeCorrect"] = o.AllowEnvelopeCorrect
	}
	if !IsNil(o.AllowEnvelopeCorrectMetadata) {
		toSerialize["allowEnvelopeCorrectMetadata"] = o.AllowEnvelopeCorrectMetadata
	}
	if !IsNil(o.AllowEnvelopeCustodyTransfer) {
		toSerialize["allowEnvelopeCustodyTransfer"] = o.AllowEnvelopeCustodyTransfer
	}
	if !IsNil(o.AllowEnvelopeCustodyTransferMetadata) {
		toSerialize["allowEnvelopeCustodyTransferMetadata"] = o.AllowEnvelopeCustodyTransferMetadata
	}
	if !IsNil(o.AllowEnvelopeCustomFields) {
		toSerialize["allowEnvelopeCustomFields"] = o.AllowEnvelopeCustomFields
	}
	if !IsNil(o.AllowEnvelopeCustomFieldsMetadata) {
		toSerialize["allowEnvelopeCustomFieldsMetadata"] = o.AllowEnvelopeCustomFieldsMetadata
	}
	if !IsNil(o.AllowEnvelopePublishReporting) {
		toSerialize["allowEnvelopePublishReporting"] = o.AllowEnvelopePublishReporting
	}
	if !IsNil(o.AllowEnvelopePublishReportingMetadata) {
		toSerialize["allowEnvelopePublishReportingMetadata"] = o.AllowEnvelopePublishReportingMetadata
	}
	if !IsNil(o.AllowEnvelopeReporting) {
		toSerialize["allowEnvelopeReporting"] = o.AllowEnvelopeReporting
	}
	if !IsNil(o.AllowEnvelopeReportingMetadata) {
		toSerialize["allowEnvelopeReportingMetadata"] = o.AllowEnvelopeReportingMetadata
	}
	if !IsNil(o.AllowExpression) {
		toSerialize["allowExpression"] = o.AllowExpression
	}
	if !IsNil(o.AllowExpressionMetadata) {
		toSerialize["allowExpressionMetadata"] = o.AllowExpressionMetadata
	}
	if !IsNil(o.AllowExpressSignerCertificate) {
		toSerialize["allowExpressSignerCertificate"] = o.AllowExpressSignerCertificate
	}
	if !IsNil(o.AllowExpressSignerCertificateMetadata) {
		toSerialize["allowExpressSignerCertificateMetadata"] = o.AllowExpressSignerCertificateMetadata
	}
	if !IsNil(o.AllowExtendedSendingResourceFile) {
		toSerialize["allowExtendedSendingResourceFile"] = o.AllowExtendedSendingResourceFile
	}
	if !IsNil(o.AllowExtendedSendingResourceFileMetadata) {
		toSerialize["allowExtendedSendingResourceFileMetadata"] = o.AllowExtendedSendingResourceFileMetadata
	}
	if !IsNil(o.AllowExternalLinkedAccounts) {
		toSerialize["allowExternalLinkedAccounts"] = o.AllowExternalLinkedAccounts
	}
	if !IsNil(o.AllowExternalLinkedAccountsMetadata) {
		toSerialize["allowExternalLinkedAccountsMetadata"] = o.AllowExternalLinkedAccountsMetadata
	}
	if !IsNil(o.AllowExternalSignaturePad) {
		toSerialize["allowExternalSignaturePad"] = o.AllowExternalSignaturePad
	}
	if !IsNil(o.AllowExternalSignaturePadMetadata) {
		toSerialize["allowExternalSignaturePadMetadata"] = o.AllowExternalSignaturePadMetadata
	}
	if !IsNil(o.AllowIDVForEUQualifiedSignatures) {
		toSerialize["allowIDVForEUQualifiedSignatures"] = o.AllowIDVForEUQualifiedSignatures
	}
	if !IsNil(o.AllowIDVForEUQualifiedSignaturesMetadata) {
		toSerialize["allowIDVForEUQualifiedSignaturesMetadata"] = o.AllowIDVForEUQualifiedSignaturesMetadata
	}
	if !IsNil(o.AllowIDVLevel1) {
		toSerialize["allowIDVLevel1"] = o.AllowIDVLevel1
	}
	if !IsNil(o.AllowIDVLevel1Metadata) {
		toSerialize["allowIDVLevel1Metadata"] = o.AllowIDVLevel1Metadata
	}
	if !IsNil(o.AllowIDVLevel1Trial) {
		toSerialize["allowIDVLevel1Trial"] = o.AllowIDVLevel1Trial
	}
	if !IsNil(o.AllowIDVLevel1TrialMetadata) {
		toSerialize["allowIDVLevel1TrialMetadata"] = o.AllowIDVLevel1TrialMetadata
	}
	if !IsNil(o.AllowIDVLevel2) {
		toSerialize["allowIDVLevel2"] = o.AllowIDVLevel2
	}
	if !IsNil(o.AllowIDVLevel2Metadata) {
		toSerialize["allowIDVLevel2Metadata"] = o.AllowIDVLevel2Metadata
	}
	if !IsNil(o.AllowIDVLevel3) {
		toSerialize["allowIDVLevel3"] = o.AllowIDVLevel3
	}
	if !IsNil(o.AllowIDVLevel3Metadata) {
		toSerialize["allowIDVLevel3Metadata"] = o.AllowIDVLevel3Metadata
	}
	if !IsNil(o.AllowIDVPlatform) {
		toSerialize["allowIDVPlatform"] = o.AllowIDVPlatform
	}
	if !IsNil(o.AllowIDVPlatformMetadata) {
		toSerialize["allowIDVPlatformMetadata"] = o.AllowIDVPlatformMetadata
	}
	if !IsNil(o.AllowInPerson) {
		toSerialize["allowInPerson"] = o.AllowInPerson
	}
	if !IsNil(o.AllowInPersonElectronicNotary) {
		toSerialize["allowInPersonElectronicNotary"] = o.AllowInPersonElectronicNotary
	}
	if !IsNil(o.AllowInPersonElectronicNotaryMetadata) {
		toSerialize["allowInPersonElectronicNotaryMetadata"] = o.AllowInPersonElectronicNotaryMetadata
	}
	if !IsNil(o.AllowInPersonMetadata) {
		toSerialize["allowInPersonMetadata"] = o.AllowInPersonMetadata
	}
	if !IsNil(o.AllowManagedStamps) {
		toSerialize["allowManagedStamps"] = o.AllowManagedStamps
	}
	if !IsNil(o.AllowManagedStampsMetadata) {
		toSerialize["allowManagedStampsMetadata"] = o.AllowManagedStampsMetadata
	}
	if !IsNil(o.AllowManagingEnvelopesOnBehalfOfOthers) {
		toSerialize["allowManagingEnvelopesOnBehalfOfOthers"] = o.AllowManagingEnvelopesOnBehalfOfOthers
	}
	if !IsNil(o.AllowManagingEnvelopesOnBehalfOfOthersMetadata) {
		toSerialize["allowManagingEnvelopesOnBehalfOfOthersMetadata"] = o.AllowManagingEnvelopesOnBehalfOfOthersMetadata
	}
	if !IsNil(o.AllowMarkup) {
		toSerialize["allowMarkup"] = o.AllowMarkup
	}
	if !IsNil(o.AllowMarkupMetadata) {
		toSerialize["allowMarkupMetadata"] = o.AllowMarkupMetadata
	}
	if !IsNil(o.AllowMemberTimeZone) {
		toSerialize["allowMemberTimeZone"] = o.AllowMemberTimeZone
	}
	if !IsNil(o.AllowMemberTimeZoneMetadata) {
		toSerialize["allowMemberTimeZoneMetadata"] = o.AllowMemberTimeZoneMetadata
	}
	if !IsNil(o.AllowMergeFields) {
		toSerialize["allowMergeFields"] = o.AllowMergeFields
	}
	if !IsNil(o.AllowMergeFieldsMetadata) {
		toSerialize["allowMergeFieldsMetadata"] = o.AllowMergeFieldsMetadata
	}
	if !IsNil(o.AllowMultipleBrandProfiles) {
		toSerialize["allowMultipleBrandProfiles"] = o.AllowMultipleBrandProfiles
	}
	if !IsNil(o.AllowMultipleBrandProfilesMetadata) {
		toSerialize["allowMultipleBrandProfilesMetadata"] = o.AllowMultipleBrandProfilesMetadata
	}
	if !IsNil(o.AllowMultipleSignerAttachments) {
		toSerialize["allowMultipleSignerAttachments"] = o.AllowMultipleSignerAttachments
	}
	if !IsNil(o.AllowMultipleSignerAttachmentsMetadata) {
		toSerialize["allowMultipleSignerAttachmentsMetadata"] = o.AllowMultipleSignerAttachmentsMetadata
	}
	if !IsNil(o.AllowNonUSPhoneAuth) {
		toSerialize["allowNonUSPhoneAuth"] = o.AllowNonUSPhoneAuth
	}
	if !IsNil(o.AllowNonUSPhoneAuthMetadata) {
		toSerialize["allowNonUSPhoneAuthMetadata"] = o.AllowNonUSPhoneAuthMetadata
	}
	if !IsNil(o.AllowOcrOfEnvelopeDocuments) {
		toSerialize["allowOcrOfEnvelopeDocuments"] = o.AllowOcrOfEnvelopeDocuments
	}
	if !IsNil(o.AllowOcrOfEnvelopeDocumentsMetadata) {
		toSerialize["allowOcrOfEnvelopeDocumentsMetadata"] = o.AllowOcrOfEnvelopeDocumentsMetadata
	}
	if !IsNil(o.AllowOfflineSigning) {
		toSerialize["allowOfflineSigning"] = o.AllowOfflineSigning
	}
	if !IsNil(o.AllowOfflineSigningMetadata) {
		toSerialize["allowOfflineSigningMetadata"] = o.AllowOfflineSigningMetadata
	}
	if !IsNil(o.AllowOpenTrustSignerCertificate) {
		toSerialize["allowOpenTrustSignerCertificate"] = o.AllowOpenTrustSignerCertificate
	}
	if !IsNil(o.AllowOpenTrustSignerCertificateMetadata) {
		toSerialize["allowOpenTrustSignerCertificateMetadata"] = o.AllowOpenTrustSignerCertificateMetadata
	}
	if !IsNil(o.AllowOrganizationDocusignMonitor) {
		toSerialize["allowOrganizationDocusignMonitor"] = o.AllowOrganizationDocusignMonitor
	}
	if !IsNil(o.AllowOrganizationDocusignMonitorFree) {
		toSerialize["allowOrganizationDocusignMonitorFree"] = o.AllowOrganizationDocusignMonitorFree
	}
	if !IsNil(o.AllowOrganizationDocusignMonitorFreeMetadata) {
		toSerialize["allowOrganizationDocusignMonitorFreeMetadata"] = o.AllowOrganizationDocusignMonitorFreeMetadata
	}
	if !IsNil(o.AllowOrganizationDocusignMonitorMetadata) {
		toSerialize["allowOrganizationDocusignMonitorMetadata"] = o.AllowOrganizationDocusignMonitorMetadata
	}
	if !IsNil(o.AllowOrganizationDomainUserManagement) {
		toSerialize["allowOrganizationDomainUserManagement"] = o.AllowOrganizationDomainUserManagement
	}
	if !IsNil(o.AllowOrganizationDomainUserManagementMetadata) {
		toSerialize["allowOrganizationDomainUserManagementMetadata"] = o.AllowOrganizationDomainUserManagementMetadata
	}
	if !IsNil(o.AllowOrganizations) {
		toSerialize["allowOrganizations"] = o.AllowOrganizations
	}
	if !IsNil(o.AllowOrganizationsMetadata) {
		toSerialize["allowOrganizationsMetadata"] = o.AllowOrganizationsMetadata
	}
	if !IsNil(o.AllowOrganizationSsoManagement) {
		toSerialize["allowOrganizationSsoManagement"] = o.AllowOrganizationSsoManagement
	}
	if !IsNil(o.AllowOrganizationSsoManagementMetadata) {
		toSerialize["allowOrganizationSsoManagementMetadata"] = o.AllowOrganizationSsoManagementMetadata
	}
	if !IsNil(o.AllowOrganizationToUseInPersonElectronicNotary) {
		toSerialize["allowOrganizationToUseInPersonElectronicNotary"] = o.AllowOrganizationToUseInPersonElectronicNotary
	}
	if !IsNil(o.AllowOrganizationToUseInPersonElectronicNotaryMetadata) {
		toSerialize["allowOrganizationToUseInPersonElectronicNotaryMetadata"] = o.AllowOrganizationToUseInPersonElectronicNotaryMetadata
	}
	if !IsNil(o.AllowOrganizationToUseRemoteNotary) {
		toSerialize["allowOrganizationToUseRemoteNotary"] = o.AllowOrganizationToUseRemoteNotary
	}
	if !IsNil(o.AllowOrganizationToUseRemoteNotaryMetadata) {
		toSerialize["allowOrganizationToUseRemoteNotaryMetadata"] = o.AllowOrganizationToUseRemoteNotaryMetadata
	}
	if !IsNil(o.AllowOrganizationToUseThirdPartyElectronicNotary) {
		toSerialize["allowOrganizationToUseThirdPartyElectronicNotary"] = o.AllowOrganizationToUseThirdPartyElectronicNotary
	}
	if !IsNil(o.AllowOrganizationToUseThirdPartyElectronicNotaryMetadata) {
		toSerialize["allowOrganizationToUseThirdPartyElectronicNotaryMetadata"] = o.AllowOrganizationToUseThirdPartyElectronicNotaryMetadata
	}
	if !IsNil(o.AllowParticipantRecipientType) {
		toSerialize["allowParticipantRecipientType"] = o.AllowParticipantRecipientType
	}
	if !IsNil(o.AllowParticipantRecipientTypeMetadata) {
		toSerialize["allowParticipantRecipientTypeMetadata"] = o.AllowParticipantRecipientTypeMetadata
	}
	if !IsNil(o.AllowPaymentProcessing) {
		toSerialize["allowPaymentProcessing"] = o.AllowPaymentProcessing
	}
	if !IsNil(o.AllowPaymentProcessingMetadata) {
		toSerialize["allowPaymentProcessingMetadata"] = o.AllowPaymentProcessingMetadata
	}
	if !IsNil(o.AllowPerformanceAnalytics) {
		toSerialize["allowPerformanceAnalytics"] = o.AllowPerformanceAnalytics
	}
	if !IsNil(o.AllowPerformanceAnalyticsMetadata) {
		toSerialize["allowPerformanceAnalyticsMetadata"] = o.AllowPerformanceAnalyticsMetadata
	}
	if !IsNil(o.AllowPhoneAuthentication) {
		toSerialize["allowPhoneAuthentication"] = o.AllowPhoneAuthentication
	}
	if !IsNil(o.AllowPhoneAuthenticationMetadata) {
		toSerialize["allowPhoneAuthenticationMetadata"] = o.AllowPhoneAuthenticationMetadata
	}
	if !IsNil(o.AllowPhoneAuthOverride) {
		toSerialize["allowPhoneAuthOverride"] = o.AllowPhoneAuthOverride
	}
	if !IsNil(o.AllowPhoneAuthOverrideMetadata) {
		toSerialize["allowPhoneAuthOverrideMetadata"] = o.AllowPhoneAuthOverrideMetadata
	}
	if !IsNil(o.AllowPrivateSigningGroups) {
		toSerialize["allowPrivateSigningGroups"] = o.AllowPrivateSigningGroups
	}
	if !IsNil(o.AllowPrivateSigningGroupsMetadata) {
		toSerialize["allowPrivateSigningGroupsMetadata"] = o.AllowPrivateSigningGroupsMetadata
	}
	if !IsNil(o.AllowRecipientConnect) {
		toSerialize["allowRecipientConnect"] = o.AllowRecipientConnect
	}
	if !IsNil(o.AllowRecipientConnectMetadata) {
		toSerialize["allowRecipientConnectMetadata"] = o.AllowRecipientConnectMetadata
	}
	if !IsNil(o.AllowReminders) {
		toSerialize["allowReminders"] = o.AllowReminders
	}
	if !IsNil(o.AllowRemindersMetadata) {
		toSerialize["allowRemindersMetadata"] = o.AllowRemindersMetadata
	}
	if !IsNil(o.AllowRemoteNotary) {
		toSerialize["allowRemoteNotary"] = o.AllowRemoteNotary
	}
	if !IsNil(o.AllowRemoteNotaryMetadata) {
		toSerialize["allowRemoteNotaryMetadata"] = o.AllowRemoteNotaryMetadata
	}
	if !IsNil(o.AllowResourceFileBranding) {
		toSerialize["allowResourceFileBranding"] = o.AllowResourceFileBranding
	}
	if !IsNil(o.AllowResourceFileBrandingMetadata) {
		toSerialize["allowResourceFileBrandingMetadata"] = o.AllowResourceFileBrandingMetadata
	}
	if !IsNil(o.AllowSafeBioPharmaSignerCertificate) {
		toSerialize["allowSafeBioPharmaSignerCertificate"] = o.AllowSafeBioPharmaSignerCertificate
	}
	if !IsNil(o.AllowSafeBioPharmaSignerCertificateMetadata) {
		toSerialize["allowSafeBioPharmaSignerCertificateMetadata"] = o.AllowSafeBioPharmaSignerCertificateMetadata
	}
	if !IsNil(o.AllowScheduledSending) {
		toSerialize["allowScheduledSending"] = o.AllowScheduledSending
	}
	if !IsNil(o.AllowScheduledSendingMetadata) {
		toSerialize["allowScheduledSendingMetadata"] = o.AllowScheduledSendingMetadata
	}
	if !IsNil(o.AllowSecurityAppliance) {
		toSerialize["allowSecurityAppliance"] = o.AllowSecurityAppliance
	}
	if !IsNil(o.AllowSecurityApplianceMetadata) {
		toSerialize["allowSecurityApplianceMetadata"] = o.AllowSecurityApplianceMetadata
	}
	if !IsNil(o.AllowSendingEnvelopesOnBehalfOfOthers) {
		toSerialize["allowSendingEnvelopesOnBehalfOfOthers"] = o.AllowSendingEnvelopesOnBehalfOfOthers
	}
	if !IsNil(o.AllowSendingEnvelopesOnBehalfOfOthersMetadata) {
		toSerialize["allowSendingEnvelopesOnBehalfOfOthersMetadata"] = o.AllowSendingEnvelopesOnBehalfOfOthersMetadata
	}
	if !IsNil(o.AllowSendToCertifiedDelivery) {
		toSerialize["allowSendToCertifiedDelivery"] = o.AllowSendToCertifiedDelivery
	}
	if !IsNil(o.AllowSendToCertifiedDeliveryMetadata) {
		toSerialize["allowSendToCertifiedDeliveryMetadata"] = o.AllowSendToCertifiedDeliveryMetadata
	}
	if !IsNil(o.AllowSendToIntermediary) {
		toSerialize["allowSendToIntermediary"] = o.AllowSendToIntermediary
	}
	if !IsNil(o.AllowSendToIntermediaryMetadata) {
		toSerialize["allowSendToIntermediaryMetadata"] = o.AllowSendToIntermediaryMetadata
	}
	if !IsNil(o.AllowServerTemplates) {
		toSerialize["allowServerTemplates"] = o.AllowServerTemplates
	}
	if !IsNil(o.AllowServerTemplatesMetadata) {
		toSerialize["allowServerTemplatesMetadata"] = o.AllowServerTemplatesMetadata
	}
	if !IsNil(o.AllowSetEmbeddedRecipientStartURL) {
		toSerialize["allowSetEmbeddedRecipientStartURL"] = o.AllowSetEmbeddedRecipientStartURL
	}
	if !IsNil(o.AllowSetEmbeddedRecipientStartURLMetadata) {
		toSerialize["allowSetEmbeddedRecipientStartURLMetadata"] = o.AllowSetEmbeddedRecipientStartURLMetadata
	}
	if !IsNil(o.AllowSharedTabs) {
		toSerialize["allowSharedTabs"] = o.AllowSharedTabs
	}
	if !IsNil(o.AllowSharedTabsMetadata) {
		toSerialize["allowSharedTabsMetadata"] = o.AllowSharedTabsMetadata
	}
	if !IsNil(o.AllowSignatureStamps) {
		toSerialize["allowSignatureStamps"] = o.AllowSignatureStamps
	}
	if !IsNil(o.AllowSignatureStampsMetadata) {
		toSerialize["allowSignatureStampsMetadata"] = o.AllowSignatureStampsMetadata
	}
	if !IsNil(o.AllowSignDocumentFromHomePage) {
		toSerialize["allowSignDocumentFromHomePage"] = o.AllowSignDocumentFromHomePage
	}
	if !IsNil(o.AllowSignDocumentFromHomePageMetadata) {
		toSerialize["allowSignDocumentFromHomePageMetadata"] = o.AllowSignDocumentFromHomePageMetadata
	}
	if !IsNil(o.AllowSignerReassign) {
		toSerialize["allowSignerReassign"] = o.AllowSignerReassign
	}
	if !IsNil(o.AllowSignerReassignMetadata) {
		toSerialize["allowSignerReassignMetadata"] = o.AllowSignerReassignMetadata
	}
	if !IsNil(o.AllowSignerReassignOverride) {
		toSerialize["allowSignerReassignOverride"] = o.AllowSignerReassignOverride
	}
	if !IsNil(o.AllowSignerReassignOverrideMetadata) {
		toSerialize["allowSignerReassignOverrideMetadata"] = o.AllowSignerReassignOverrideMetadata
	}
	if !IsNil(o.AllowSigningExtensions) {
		toSerialize["allowSigningExtensions"] = o.AllowSigningExtensions
	}
	if !IsNil(o.AllowSigningExtensionsMetadata) {
		toSerialize["allowSigningExtensionsMetadata"] = o.AllowSigningExtensionsMetadata
	}
	if !IsNil(o.AllowSigningGroups) {
		toSerialize["allowSigningGroups"] = o.AllowSigningGroups
	}
	if !IsNil(o.AllowSigningGroupsMetadata) {
		toSerialize["allowSigningGroupsMetadata"] = o.AllowSigningGroupsMetadata
	}
	if !IsNil(o.AllowSigningInsights) {
		toSerialize["allowSigningInsights"] = o.AllowSigningInsights
	}
	if !IsNil(o.AllowSigningInsightsMetadata) {
		toSerialize["allowSigningInsightsMetadata"] = o.AllowSigningInsightsMetadata
	}
	if !IsNil(o.AllowSigningRadioDeselect) {
		toSerialize["allowSigningRadioDeselect"] = o.AllowSigningRadioDeselect
	}
	if !IsNil(o.AllowSigningRadioDeselectMetadata) {
		toSerialize["allowSigningRadioDeselectMetadata"] = o.AllowSigningRadioDeselectMetadata
	}
	if !IsNil(o.AllowSignNow) {
		toSerialize["allowSignNow"] = o.AllowSignNow
	}
	if !IsNil(o.AllowSignNowMetadata) {
		toSerialize["allowSignNowMetadata"] = o.AllowSignNowMetadata
	}
	if !IsNil(o.AllowSMSDelivery) {
		toSerialize["allowSMSDelivery"] = o.AllowSMSDelivery
	}
	if !IsNil(o.AllowSMSDeliveryMetadata) {
		toSerialize["allowSMSDeliveryMetadata"] = o.AllowSMSDeliveryMetadata
	}
	if !IsNil(o.AllowSocialIdLogin) {
		toSerialize["allowSocialIdLogin"] = o.AllowSocialIdLogin
	}
	if !IsNil(o.AllowSocialIdLoginMetadata) {
		toSerialize["allowSocialIdLoginMetadata"] = o.AllowSocialIdLoginMetadata
	}
	if !IsNil(o.AllowSupplementalDocuments) {
		toSerialize["allowSupplementalDocuments"] = o.AllowSupplementalDocuments
	}
	if !IsNil(o.AllowSupplementalDocumentsMetadata) {
		toSerialize["allowSupplementalDocumentsMetadata"] = o.AllowSupplementalDocumentsMetadata
	}
	if !IsNil(o.AllowThirdPartyElectronicNotary) {
		toSerialize["allowThirdPartyElectronicNotary"] = o.AllowThirdPartyElectronicNotary
	}
	if !IsNil(o.AllowThirdPartyElectronicNotaryMetadata) {
		toSerialize["allowThirdPartyElectronicNotaryMetadata"] = o.AllowThirdPartyElectronicNotaryMetadata
	}
	if !IsNil(o.AllowTransactionsWorkspace) {
		toSerialize["allowTransactionsWorkspace"] = o.AllowTransactionsWorkspace
	}
	if !IsNil(o.AllowTransactionsWorkspaceMetadata) {
		toSerialize["allowTransactionsWorkspaceMetadata"] = o.AllowTransactionsWorkspaceMetadata
	}
	if !IsNil(o.AllowTransactionsWorkspaceOriginal) {
		toSerialize["allowTransactionsWorkspaceOriginal"] = o.AllowTransactionsWorkspaceOriginal
	}
	if !IsNil(o.AllowTransactionsWorkspaceOriginalMetadata) {
		toSerialize["allowTransactionsWorkspaceOriginalMetadata"] = o.AllowTransactionsWorkspaceOriginalMetadata
	}
	if !IsNil(o.AllowUsersToAccessDirectory) {
		toSerialize["allowUsersToAccessDirectory"] = o.AllowUsersToAccessDirectory
	}
	if !IsNil(o.AllowUsersToAccessDirectoryMetadata) {
		toSerialize["allowUsersToAccessDirectoryMetadata"] = o.AllowUsersToAccessDirectoryMetadata
	}
	if !IsNil(o.AllowValueInsights) {
		toSerialize["allowValueInsights"] = o.AllowValueInsights
	}
	if !IsNil(o.AllowValueInsightsMetadata) {
		toSerialize["allowValueInsightsMetadata"] = o.AllowValueInsightsMetadata
	}
	if !IsNil(o.AllowWebForms) {
		toSerialize["allowWebForms"] = o.AllowWebForms
	}
	if !IsNil(o.AllowWebFormsMetadata) {
		toSerialize["allowWebFormsMetadata"] = o.AllowWebFormsMetadata
	}
	if !IsNil(o.AllowWhatsAppDelivery) {
		toSerialize["allowWhatsAppDelivery"] = o.AllowWhatsAppDelivery
	}
	if !IsNil(o.AllowWhatsAppDeliveryMetadata) {
		toSerialize["allowWhatsAppDeliveryMetadata"] = o.AllowWhatsAppDeliveryMetadata
	}
	if !IsNil(o.AnchorPopulationScope) {
		toSerialize["anchorPopulationScope"] = o.AnchorPopulationScope
	}
	if !IsNil(o.AnchorPopulationScopeMetadata) {
		toSerialize["anchorPopulationScopeMetadata"] = o.AnchorPopulationScopeMetadata
	}
	if !IsNil(o.AnchorTagVersionedPlacementEnabled) {
		toSerialize["anchorTagVersionedPlacementEnabled"] = o.AnchorTagVersionedPlacementEnabled
	}
	if !IsNil(o.AnchorTagVersionedPlacementMetadataEnabled) {
		toSerialize["anchorTagVersionedPlacementMetadataEnabled"] = o.AnchorTagVersionedPlacementMetadataEnabled
	}
	if !IsNil(o.AttachCompletedEnvelope) {
		toSerialize["attachCompletedEnvelope"] = o.AttachCompletedEnvelope
	}
	if !IsNil(o.AttachCompletedEnvelopeMetadata) {
		toSerialize["attachCompletedEnvelopeMetadata"] = o.AttachCompletedEnvelopeMetadata
	}
	if !IsNil(o.AuthenticationCheck) {
		toSerialize["authenticationCheck"] = o.AuthenticationCheck
	}
	if !IsNil(o.AuthenticationCheckMetadata) {
		toSerialize["authenticationCheckMetadata"] = o.AuthenticationCheckMetadata
	}
	if !IsNil(o.AutoNavRule) {
		toSerialize["autoNavRule"] = o.AutoNavRule
	}
	if !IsNil(o.AutoNavRuleMetadata) {
		toSerialize["autoNavRuleMetadata"] = o.AutoNavRuleMetadata
	}
	if !IsNil(o.AutoProvisionSignerAccount) {
		toSerialize["autoProvisionSignerAccount"] = o.AutoProvisionSignerAccount
	}
	if !IsNil(o.AutoProvisionSignerAccountMetadata) {
		toSerialize["autoProvisionSignerAccountMetadata"] = o.AutoProvisionSignerAccountMetadata
	}
	if !IsNil(o.BccEmailArchive) {
		toSerialize["bccEmailArchive"] = o.BccEmailArchive
	}
	if !IsNil(o.BccEmailArchiveMetadata) {
		toSerialize["bccEmailArchiveMetadata"] = o.BccEmailArchiveMetadata
	}
	if !IsNil(o.BetaSwitchConfiguration) {
		toSerialize["betaSwitchConfiguration"] = o.BetaSwitchConfiguration
	}
	if !IsNil(o.BetaSwitchConfigurationMetadata) {
		toSerialize["betaSwitchConfigurationMetadata"] = o.BetaSwitchConfigurationMetadata
	}
	if !IsNil(o.BillingAddress) {
		toSerialize["billingAddress"] = o.BillingAddress
	}
	if !IsNil(o.BillingAddressMetadata) {
		toSerialize["billingAddressMetadata"] = o.BillingAddressMetadata
	}
	if !IsNil(o.BulkSend) {
		toSerialize["bulkSend"] = o.BulkSend
	}
	if !IsNil(o.BulkSendActionResendLimit) {
		toSerialize["bulkSendActionResendLimit"] = o.BulkSendActionResendLimit
	}
	if !IsNil(o.BulkSendMaxCopiesInBatch) {
		toSerialize["bulkSendMaxCopiesInBatch"] = o.BulkSendMaxCopiesInBatch
	}
	if !IsNil(o.BulkSendMaxUnprocessedEnvelopesCount) {
		toSerialize["bulkSendMaxUnprocessedEnvelopesCount"] = o.BulkSendMaxUnprocessedEnvelopesCount
	}
	if !IsNil(o.BulkSendMetadata) {
		toSerialize["bulkSendMetadata"] = o.BulkSendMetadata
	}
	if !IsNil(o.CanSelfBrandSend) {
		toSerialize["canSelfBrandSend"] = o.CanSelfBrandSend
	}
	if !IsNil(o.CanSelfBrandSendMetadata) {
		toSerialize["canSelfBrandSendMetadata"] = o.CanSelfBrandSendMetadata
	}
	if !IsNil(o.CanSelfBrandSign) {
		toSerialize["canSelfBrandSign"] = o.CanSelfBrandSign
	}
	if !IsNil(o.CanSelfBrandSignMetadata) {
		toSerialize["canSelfBrandSignMetadata"] = o.CanSelfBrandSignMetadata
	}
	if !IsNil(o.CanUseSalesforceOAuth) {
		toSerialize["canUseSalesforceOAuth"] = o.CanUseSalesforceOAuth
	}
	if !IsNil(o.CanUseSalesforceOAuthMetadata) {
		toSerialize["canUseSalesforceOAuthMetadata"] = o.CanUseSalesforceOAuthMetadata
	}
	if !IsNil(o.CaptureVoiceRecording) {
		toSerialize["captureVoiceRecording"] = o.CaptureVoiceRecording
	}
	if !IsNil(o.CaptureVoiceRecordingMetadata) {
		toSerialize["captureVoiceRecordingMetadata"] = o.CaptureVoiceRecordingMetadata
	}
	if !IsNil(o.Cfr21SimplifiedSigningEnabled) {
		toSerialize["cfr21SimplifiedSigningEnabled"] = o.Cfr21SimplifiedSigningEnabled
	}
	if !IsNil(o.Cfr21SimplifiedSigningEnabledMetadata) {
		toSerialize["cfr21SimplifiedSigningEnabledMetadata"] = o.Cfr21SimplifiedSigningEnabledMetadata
	}
	if !IsNil(o.CfrUseWideImage) {
		toSerialize["cfrUseWideImage"] = o.CfrUseWideImage
	}
	if !IsNil(o.CfrUseWideImageMetadata) {
		toSerialize["cfrUseWideImageMetadata"] = o.CfrUseWideImageMetadata
	}
	if !IsNil(o.CheckForMultipleAdminsOnAccount) {
		toSerialize["checkForMultipleAdminsOnAccount"] = o.CheckForMultipleAdminsOnAccount
	}
	if !IsNil(o.CheckForMultipleAdminsOnAccountMetadata) {
		toSerialize["checkForMultipleAdminsOnAccountMetadata"] = o.CheckForMultipleAdminsOnAccountMetadata
	}
	if !IsNil(o.ChromeSignatureEnabled) {
		toSerialize["chromeSignatureEnabled"] = o.ChromeSignatureEnabled
	}
	if !IsNil(o.ChromeSignatureEnabledMetadata) {
		toSerialize["chromeSignatureEnabledMetadata"] = o.ChromeSignatureEnabledMetadata
	}
	if !IsNil(o.CommentEmailShowMessageText) {
		toSerialize["commentEmailShowMessageText"] = o.CommentEmailShowMessageText
	}
	if !IsNil(o.CommentEmailShowMessageTextMetadata) {
		toSerialize["commentEmailShowMessageTextMetadata"] = o.CommentEmailShowMessageTextMetadata
	}
	if !IsNil(o.CommentsAllowEnvelopeOverride) {
		toSerialize["commentsAllowEnvelopeOverride"] = o.CommentsAllowEnvelopeOverride
	}
	if !IsNil(o.CommentsAllowEnvelopeOverrideMetadata) {
		toSerialize["commentsAllowEnvelopeOverrideMetadata"] = o.CommentsAllowEnvelopeOverrideMetadata
	}
	if !IsNil(o.ConditionalFieldsEnabled) {
		toSerialize["conditionalFieldsEnabled"] = o.ConditionalFieldsEnabled
	}
	if !IsNil(o.ConditionalFieldsEnabledMetadata) {
		toSerialize["conditionalFieldsEnabledMetadata"] = o.ConditionalFieldsEnabledMetadata
	}
	if !IsNil(o.ConsumerDisclosureFrequency) {
		toSerialize["consumerDisclosureFrequency"] = o.ConsumerDisclosureFrequency
	}
	if !IsNil(o.ConsumerDisclosureFrequencyMetadata) {
		toSerialize["consumerDisclosureFrequencyMetadata"] = o.ConsumerDisclosureFrequencyMetadata
	}
	if !IsNil(o.ConvertPdfFields) {
		toSerialize["convertPdfFields"] = o.ConvertPdfFields
	}
	if !IsNil(o.ConvertPdfFieldsMetadata) {
		toSerialize["convertPdfFieldsMetadata"] = o.ConvertPdfFieldsMetadata
	}
	if !IsNil(o.DataPopulationScope) {
		toSerialize["dataPopulationScope"] = o.DataPopulationScope
	}
	if !IsNil(o.DataPopulationScopeMetadata) {
		toSerialize["dataPopulationScopeMetadata"] = o.DataPopulationScopeMetadata
	}
	if !IsNil(o.DefaultToAdvancedEnvelopesFilterForm) {
		toSerialize["defaultToAdvancedEnvelopesFilterForm"] = o.DefaultToAdvancedEnvelopesFilterForm
	}
	if !IsNil(o.DefaultToAdvancedEnvelopesFilterFormMetadata) {
		toSerialize["defaultToAdvancedEnvelopesFilterFormMetadata"] = o.DefaultToAdvancedEnvelopesFilterFormMetadata
	}
	if !IsNil(o.DisableAutoTemplateMatching) {
		toSerialize["disableAutoTemplateMatching"] = o.DisableAutoTemplateMatching
	}
	if !IsNil(o.DisableAutoTemplateMatchingMetadata) {
		toSerialize["disableAutoTemplateMatchingMetadata"] = o.DisableAutoTemplateMatchingMetadata
	}
	if !IsNil(o.DisableMobileApp) {
		toSerialize["disableMobileApp"] = o.DisableMobileApp
	}
	if !IsNil(o.DisableMobileAppMetadata) {
		toSerialize["disableMobileAppMetadata"] = o.DisableMobileAppMetadata
	}
	if !IsNil(o.DisableMobilePushNotifications) {
		toSerialize["disableMobilePushNotifications"] = o.DisableMobilePushNotifications
	}
	if !IsNil(o.DisableMobilePushNotificationsMetadata) {
		toSerialize["disableMobilePushNotificationsMetadata"] = o.DisableMobilePushNotificationsMetadata
	}
	if !IsNil(o.DisableMobileSending) {
		toSerialize["disableMobileSending"] = o.DisableMobileSending
	}
	if !IsNil(o.DisableMobileSendingMetadata) {
		toSerialize["disableMobileSendingMetadata"] = o.DisableMobileSendingMetadata
	}
	if !IsNil(o.DisableMultipleSessions) {
		toSerialize["disableMultipleSessions"] = o.DisableMultipleSessions
	}
	if !IsNil(o.DisableMultipleSessionsMetadata) {
		toSerialize["disableMultipleSessionsMetadata"] = o.DisableMultipleSessionsMetadata
	}
	if !IsNil(o.DisablePurgeNotificationsForSenderMetadata) {
		toSerialize["disablePurgeNotificationsForSenderMetadata"] = o.DisablePurgeNotificationsForSenderMetadata
	}
	if !IsNil(o.DisableSignerCertView) {
		toSerialize["disableSignerCertView"] = o.DisableSignerCertView
	}
	if !IsNil(o.DisableSignerCertViewMetadata) {
		toSerialize["disableSignerCertViewMetadata"] = o.DisableSignerCertViewMetadata
	}
	if !IsNil(o.DisableSignerHistoryView) {
		toSerialize["disableSignerHistoryView"] = o.DisableSignerHistoryView
	}
	if !IsNil(o.DisableSignerHistoryViewMetadata) {
		toSerialize["disableSignerHistoryViewMetadata"] = o.DisableSignerHistoryViewMetadata
	}
	if !IsNil(o.DisableStyleSignature) {
		toSerialize["disableStyleSignature"] = o.DisableStyleSignature
	}
	if !IsNil(o.DisableStyleSignatureMetadata) {
		toSerialize["disableStyleSignatureMetadata"] = o.DisableStyleSignatureMetadata
	}
	if !IsNil(o.DisableUploadSignature) {
		toSerialize["disableUploadSignature"] = o.DisableUploadSignature
	}
	if !IsNil(o.DisableUploadSignatureMetadata) {
		toSerialize["disableUploadSignatureMetadata"] = o.DisableUploadSignatureMetadata
	}
	if !IsNil(o.DisableUserSharing) {
		toSerialize["disableUserSharing"] = o.DisableUserSharing
	}
	if !IsNil(o.DisableUserSharingMetadata) {
		toSerialize["disableUserSharingMetadata"] = o.DisableUserSharingMetadata
	}
	if !IsNil(o.DisplayBetaSwitch) {
		toSerialize["displayBetaSwitch"] = o.DisplayBetaSwitch
	}
	if !IsNil(o.DisplayBetaSwitchMetadata) {
		toSerialize["displayBetaSwitchMetadata"] = o.DisplayBetaSwitchMetadata
	}
	if !IsNil(o.DocumentConversionRestrictions) {
		toSerialize["documentConversionRestrictions"] = o.DocumentConversionRestrictions
	}
	if !IsNil(o.DocumentConversionRestrictionsMetadata) {
		toSerialize["documentConversionRestrictionsMetadata"] = o.DocumentConversionRestrictionsMetadata
	}
	if !IsNil(o.DocumentRetention) {
		toSerialize["documentRetention"] = o.DocumentRetention
	}
	if !IsNil(o.DocumentRetentionMetadata) {
		toSerialize["documentRetentionMetadata"] = o.DocumentRetentionMetadata
	}
	if !IsNil(o.DocumentRetentionPurgeTabs) {
		toSerialize["documentRetentionPurgeTabs"] = o.DocumentRetentionPurgeTabs
	}
	if !IsNil(o.DocumentVisibility) {
		toSerialize["documentVisibility"] = o.DocumentVisibility
	}
	if !IsNil(o.DocumentVisibilityMetadata) {
		toSerialize["documentVisibilityMetadata"] = o.DocumentVisibilityMetadata
	}
	if !IsNil(o.DraftEnvelopeRetention) {
		toSerialize["draftEnvelopeRetention"] = o.DraftEnvelopeRetention
	}
	if !IsNil(o.DraftEnvelopeRetentionMetadata) {
		toSerialize["draftEnvelopeRetentionMetadata"] = o.DraftEnvelopeRetentionMetadata
	}
	if !IsNil(o.DssEnableProvisioningPenConfigurationRadminOption) {
		toSerialize["dss_EnableProvisioningPenConfiguration_RadminOption"] = o.DssEnableProvisioningPenConfigurationRadminOption
	}
	if !IsNil(o.DssSIGN28411EnableLeavePagePromptRadminOption) {
		toSerialize["dss_SIGN_28411_EnableLeavePagePrompt_RadminOption"] = o.DssSIGN28411EnableLeavePagePromptRadminOption
	}
	if !IsNil(o.DssSIGN29182SlideUpBarRadminOption) {
		toSerialize["dss_SIGN_29182_SlideUpBar_RadminOption"] = o.DssSIGN29182SlideUpBarRadminOption
	}
	if !IsNil(o.EmailTemplateVersion) {
		toSerialize["emailTemplateVersion"] = o.EmailTemplateVersion
	}
	if !IsNil(o.EmailTemplateVersionMetadata) {
		toSerialize["emailTemplateVersionMetadata"] = o.EmailTemplateVersionMetadata
	}
	if !IsNil(o.EnableAccessCodeGenerator) {
		toSerialize["enableAccessCodeGenerator"] = o.EnableAccessCodeGenerator
	}
	if !IsNil(o.EnableAccessCodeGeneratorMetadata) {
		toSerialize["enableAccessCodeGeneratorMetadata"] = o.EnableAccessCodeGeneratorMetadata
	}
	if !IsNil(o.EnableAccountWideSearch) {
		toSerialize["enableAccountWideSearch"] = o.EnableAccountWideSearch
	}
	if !IsNil(o.EnableAccountWideSearchMetadata) {
		toSerialize["enableAccountWideSearchMetadata"] = o.EnableAccountWideSearchMetadata
	}
	if !IsNil(o.EnableAdmHealthcare) {
		toSerialize["enableAdmHealthcare"] = o.EnableAdmHealthcare
	}
	if !IsNil(o.EnableAdmHealthcareMetadata) {
		toSerialize["enableAdmHealthcareMetadata"] = o.EnableAdmHealthcareMetadata
	}
	if !IsNil(o.EnableAdvancedEnvelopesSearch) {
		toSerialize["enableAdvancedEnvelopesSearch"] = o.EnableAdvancedEnvelopesSearch
	}
	if !IsNil(o.EnableAdvancedEnvelopesSearchMetadata) {
		toSerialize["enableAdvancedEnvelopesSearchMetadata"] = o.EnableAdvancedEnvelopesSearchMetadata
	}
	if !IsNil(o.EnableAdvancedPayments) {
		toSerialize["enableAdvancedPayments"] = o.EnableAdvancedPayments
	}
	if !IsNil(o.EnableAdvancedPaymentsMetadata) {
		toSerialize["enableAdvancedPaymentsMetadata"] = o.EnableAdvancedPaymentsMetadata
	}
	if !IsNil(o.EnableAdvancedPowerForms) {
		toSerialize["enableAdvancedPowerForms"] = o.EnableAdvancedPowerForms
	}
	if !IsNil(o.EnableAdvancedPowerFormsMetadata) {
		toSerialize["enableAdvancedPowerFormsMetadata"] = o.EnableAdvancedPowerFormsMetadata
	}
	if !IsNil(o.EnableAgreementActionsForCLM) {
		toSerialize["enableAgreementActionsForCLM"] = o.EnableAgreementActionsForCLM
	}
	if !IsNil(o.EnableAgreementActionsForCLMMetadata) {
		toSerialize["enableAgreementActionsForCLMMetadata"] = o.EnableAgreementActionsForCLMMetadata
	}
	if !IsNil(o.EnableAgreementActionsForESign) {
		toSerialize["enableAgreementActionsForESign"] = o.EnableAgreementActionsForESign
	}
	if !IsNil(o.EnableAgreementActionsForESignMetadata) {
		toSerialize["enableAgreementActionsForESignMetadata"] = o.EnableAgreementActionsForESignMetadata
	}
	if !IsNil(o.EnableAutoNav) {
		toSerialize["enableAutoNav"] = o.EnableAutoNav
	}
	if !IsNil(o.EnableAutoNavMetadata) {
		toSerialize["enableAutoNavMetadata"] = o.EnableAutoNavMetadata
	}
	if !IsNil(o.EnableBccDummyLink) {
		toSerialize["enableBccDummyLink"] = o.EnableBccDummyLink
	}
	if !IsNil(o.EnableBccDummyLinkMetadata) {
		toSerialize["enableBccDummyLinkMetadata"] = o.EnableBccDummyLinkMetadata
	}
	if !IsNil(o.EnableCalculatedFields) {
		toSerialize["enableCalculatedFields"] = o.EnableCalculatedFields
	}
	if !IsNil(o.EnableCalculatedFieldsMetadata) {
		toSerialize["enableCalculatedFieldsMetadata"] = o.EnableCalculatedFieldsMetadata
	}
	if !IsNil(o.EnableClickPlus) {
		toSerialize["enableClickPlus"] = o.EnableClickPlus
	}
	if !IsNil(o.EnableClickPlusConditionalContent) {
		toSerialize["enableClickPlusConditionalContent"] = o.EnableClickPlusConditionalContent
	}
	if !IsNil(o.EnableClickPlusConditionalContentMetaData) {
		toSerialize["enableClickPlusConditionalContentMetaData"] = o.EnableClickPlusConditionalContentMetaData
	}
	if !IsNil(o.EnableClickPlusCustomFields) {
		toSerialize["enableClickPlusCustomFields"] = o.EnableClickPlusCustomFields
	}
	if !IsNil(o.EnableClickPlusCustomFieldsMetaData) {
		toSerialize["enableClickPlusCustomFieldsMetaData"] = o.EnableClickPlusCustomFieldsMetaData
	}
	if !IsNil(o.EnableClickPlusCustomStyle) {
		toSerialize["enableClickPlusCustomStyle"] = o.EnableClickPlusCustomStyle
	}
	if !IsNil(o.EnableClickPlusCustomStyleMetaData) {
		toSerialize["enableClickPlusCustomStyleMetaData"] = o.EnableClickPlusCustomStyleMetaData
	}
	if !IsNil(o.EnableClickPlusDynamicContent) {
		toSerialize["enableClickPlusDynamicContent"] = o.EnableClickPlusDynamicContent
	}
	if !IsNil(o.EnableClickPlusDynamicContentMetaData) {
		toSerialize["enableClickPlusDynamicContentMetaData"] = o.EnableClickPlusDynamicContentMetaData
	}
	if !IsNil(o.EnableClickPlusMetaData) {
		toSerialize["enableClickPlusMetaData"] = o.EnableClickPlusMetaData
	}
	if !IsNil(o.EnableClickwraps) {
		toSerialize["enableClickwraps"] = o.EnableClickwraps
	}
	if !IsNil(o.EnableClickwrapsMetadata) {
		toSerialize["enableClickwrapsMetadata"] = o.EnableClickwrapsMetadata
	}
	if !IsNil(o.EnableCombinedPDFDownloadForSBS) {
		toSerialize["enableCombinedPDFDownloadForSBS"] = o.EnableCombinedPDFDownloadForSBS
	}
	if !IsNil(o.EnableCommentsHistoryDownloadInSigning) {
		toSerialize["enableCommentsHistoryDownloadInSigning"] = o.EnableCommentsHistoryDownloadInSigning
	}
	if !IsNil(o.EnableCommentsHistoryDownloadInSigningMetadata) {
		toSerialize["enableCommentsHistoryDownloadInSigningMetadata"] = o.EnableCommentsHistoryDownloadInSigningMetadata
	}
	if !IsNil(o.EnableContactSuggestions) {
		toSerialize["enableContactSuggestions"] = o.EnableContactSuggestions
	}
	if !IsNil(o.EnableContactSuggestionsMetadata) {
		toSerialize["enableContactSuggestionsMetadata"] = o.EnableContactSuggestionsMetadata
	}
	if !IsNil(o.EnableCustomerSatisfactionMetricTracking) {
		toSerialize["enableCustomerSatisfactionMetricTracking"] = o.EnableCustomerSatisfactionMetricTracking
	}
	if !IsNil(o.EnableCustomerSatisfactionMetricTrackingMetadata) {
		toSerialize["enableCustomerSatisfactionMetricTrackingMetadata"] = o.EnableCustomerSatisfactionMetricTrackingMetadata
	}
	if !IsNil(o.EnableDSigEUAdvancedPens) {
		toSerialize["enableDSigEUAdvancedPens"] = o.EnableDSigEUAdvancedPens
	}
	if !IsNil(o.EnableDSigEUAdvancedPensMetadata) {
		toSerialize["enableDSigEUAdvancedPensMetadata"] = o.EnableDSigEUAdvancedPensMetadata
	}
	if !IsNil(o.EnableDSigExpressPens) {
		toSerialize["enableDSigExpressPens"] = o.EnableDSigExpressPens
	}
	if !IsNil(o.EnableDSigExpressPensMetadata) {
		toSerialize["enableDSigExpressPensMetadata"] = o.EnableDSigExpressPensMetadata
	}
	if !IsNil(o.EnableDSigIDCheckForAESPens) {
		toSerialize["enableDSigIDCheckForAESPens"] = o.EnableDSigIDCheckForAESPens
	}
	if !IsNil(o.EnableDSigIDCheckForAESPensMetadata) {
		toSerialize["enableDSigIDCheckForAESPensMetadata"] = o.EnableDSigIDCheckForAESPensMetadata
	}
	if !IsNil(o.EnableDSigIDCheckInPersonForQESPens) {
		toSerialize["enableDSigIDCheckInPersonForQESPens"] = o.EnableDSigIDCheckInPersonForQESPens
	}
	if !IsNil(o.EnableDSigIDCheckInPersonForQESPensMetadata) {
		toSerialize["enableDSigIDCheckInPersonForQESPensMetadata"] = o.EnableDSigIDCheckInPersonForQESPensMetadata
	}
	if !IsNil(o.EnableDSigIDCheckRemoteForQESPens) {
		toSerialize["enableDSigIDCheckRemoteForQESPens"] = o.EnableDSigIDCheckRemoteForQESPens
	}
	if !IsNil(o.EnableDSigIDCheckRemoteForQESPensMetadata) {
		toSerialize["enableDSigIDCheckRemoteForQESPensMetadata"] = o.EnableDSigIDCheckRemoteForQESPensMetadata
	}
	if !IsNil(o.EnableDSigIDVerificationPens) {
		toSerialize["enableDSigIDVerificationPens"] = o.EnableDSigIDVerificationPens
	}
	if !IsNil(o.EnableDSigIDVerificationPensMetadata) {
		toSerialize["enableDSigIDVerificationPensMetadata"] = o.EnableDSigIDVerificationPensMetadata
	}
	if !IsNil(o.EnableDSigIDVerificationPremierPens) {
		toSerialize["enableDSigIDVerificationPremierPens"] = o.EnableDSigIDVerificationPremierPens
	}
	if !IsNil(o.EnableDSigIDVerificationPremierPensMetadata) {
		toSerialize["enableDSigIDVerificationPremierPensMetadata"] = o.EnableDSigIDVerificationPremierPensMetadata
	}
	if !IsNil(o.EnableDSPro) {
		toSerialize["enableDSPro"] = o.EnableDSPro
	}
	if !IsNil(o.EnableDSProMetadata) {
		toSerialize["enableDSProMetadata"] = o.EnableDSProMetadata
	}
	if !IsNil(o.EnableEnforceTlsEmailsSettingMetadata) {
		toSerialize["enableEnforceTlsEmailsSettingMetadata"] = o.EnableEnforceTlsEmailsSettingMetadata
	}
	if !IsNil(o.EnableEnvelopeStampingByAccountAdmin) {
		toSerialize["enableEnvelopeStampingByAccountAdmin"] = o.EnableEnvelopeStampingByAccountAdmin
	}
	if !IsNil(o.EnableEnvelopeStampingByAccountAdminMetadata) {
		toSerialize["enableEnvelopeStampingByAccountAdminMetadata"] = o.EnableEnvelopeStampingByAccountAdminMetadata
	}
	if !IsNil(o.EnableEnvelopeStampingByDSAdmin) {
		toSerialize["enableEnvelopeStampingByDSAdmin"] = o.EnableEnvelopeStampingByDSAdmin
	}
	if !IsNil(o.EnableEnvelopeStampingByDSAdminMetadata) {
		toSerialize["enableEnvelopeStampingByDSAdminMetadata"] = o.EnableEnvelopeStampingByDSAdminMetadata
	}
	if !IsNil(o.EnableESignAPIHourlyLimitManagement) {
		toSerialize["enableESignAPIHourlyLimitManagement"] = o.EnableESignAPIHourlyLimitManagement
	}
	if !IsNil(o.EnableESignAPIHourlyLimitManagementMetadata) {
		toSerialize["enableESignAPIHourlyLimitManagementMetadata"] = o.EnableESignAPIHourlyLimitManagementMetadata
	}
	if !IsNil(o.EnableEsignCommunities) {
		toSerialize["enableEsignCommunities"] = o.EnableEsignCommunities
	}
	if !IsNil(o.EnableEsignCommunitiesMetadata) {
		toSerialize["enableEsignCommunitiesMetadata"] = o.EnableEsignCommunitiesMetadata
	}
	if !IsNil(o.EnableIDFxAccountlessSMSAuthForPart11) {
		toSerialize["enableIDFxAccountlessSMSAuthForPart11"] = o.EnableIDFxAccountlessSMSAuthForPart11
	}
	if !IsNil(o.EnableIDFxAccountlessSMSAuthForPart11Metadata) {
		toSerialize["enableIDFxAccountlessSMSAuthForPart11Metadata"] = o.EnableIDFxAccountlessSMSAuthForPart11Metadata
	}
	if !IsNil(o.EnableIDFxIntuitKBA) {
		toSerialize["enableIDFxIntuitKBA"] = o.EnableIDFxIntuitKBA
	}
	if !IsNil(o.EnableIDFxIntuitKBAMetadata) {
		toSerialize["enableIDFxIntuitKBAMetadata"] = o.EnableIDFxIntuitKBAMetadata
	}
	if !IsNil(o.EnableIDFxPhoneAuthentication) {
		toSerialize["enableIDFxPhoneAuthentication"] = o.EnableIDFxPhoneAuthentication
	}
	if !IsNil(o.EnableIDFxPhoneAuthenticationMetadata) {
		toSerialize["enableIDFxPhoneAuthenticationMetadata"] = o.EnableIDFxPhoneAuthenticationMetadata
	}
	if !IsNil(o.EnableIdfxPhoneAuthSignatureAuthStatus) {
		toSerialize["enableIdfxPhoneAuthSignatureAuthStatus"] = o.EnableIdfxPhoneAuthSignatureAuthStatus
	}
	if !IsNil(o.EnableIdfxPhoneAuthSignatureAuthStatusMetadata) {
		toSerialize["enableIdfxPhoneAuthSignatureAuthStatusMetadata"] = o.EnableIdfxPhoneAuthSignatureAuthStatusMetadata
	}
	if !IsNil(o.EnableInboxBrowseViewsPoweredByElasticSearch) {
		toSerialize["enableInboxBrowseViewsPoweredByElasticSearch"] = o.EnableInboxBrowseViewsPoweredByElasticSearch
	}
	if !IsNil(o.EnableInboxBrowseViewsPoweredByElasticSearchMetadata) {
		toSerialize["enableInboxBrowseViewsPoweredByElasticSearchMetadata"] = o.EnableInboxBrowseViewsPoweredByElasticSearchMetadata
	}
	if !IsNil(o.EnableInboxRelevanceSort) {
		toSerialize["enableInboxRelevanceSort"] = o.EnableInboxRelevanceSort
	}
	if !IsNil(o.EnableInboxRelevanceSortForRecentAccounts) {
		toSerialize["enableInboxRelevanceSortForRecentAccounts"] = o.EnableInboxRelevanceSortForRecentAccounts
	}
	if !IsNil(o.EnableInboxRelevanceSortForRecentAccountsMetadata) {
		toSerialize["enableInboxRelevanceSortForRecentAccountsMetadata"] = o.EnableInboxRelevanceSortForRecentAccountsMetadata
	}
	if !IsNil(o.EnableInboxRelevanceSortMetadata) {
		toSerialize["enableInboxRelevanceSortMetadata"] = o.EnableInboxRelevanceSortMetadata
	}
	if !IsNil(o.EnableInBrowserEditor) {
		toSerialize["enableInBrowserEditor"] = o.EnableInBrowserEditor
	}
	if !IsNil(o.EnableInBrowserEditorMetadata) {
		toSerialize["enableInBrowserEditorMetadata"] = o.EnableInBrowserEditorMetadata
	}
	if !IsNil(o.EnableKeyTermsSuggestionsByDocumentType) {
		toSerialize["enableKeyTermsSuggestionsByDocumentType"] = o.EnableKeyTermsSuggestionsByDocumentType
	}
	if !IsNil(o.EnableKeyTermsSuggestionsByDocumentTypeMetadata) {
		toSerialize["enableKeyTermsSuggestionsByDocumentTypeMetadata"] = o.EnableKeyTermsSuggestionsByDocumentTypeMetadata
	}
	if !IsNil(o.EnableParticipantRecipientSettingMetadata) {
		toSerialize["enableParticipantRecipientSettingMetadata"] = o.EnableParticipantRecipientSettingMetadata
	}
	if !IsNil(o.EnablePaymentProcessing) {
		toSerialize["enablePaymentProcessing"] = o.EnablePaymentProcessing
	}
	if !IsNil(o.EnablePaymentProcessingMetadata) {
		toSerialize["enablePaymentProcessingMetadata"] = o.EnablePaymentProcessingMetadata
	}
	if !IsNil(o.EnablePDFAConversion) {
		toSerialize["enablePDFAConversion"] = o.EnablePDFAConversion
	}
	if !IsNil(o.EnablePDFAConversionMetadata) {
		toSerialize["enablePDFAConversionMetadata"] = o.EnablePDFAConversionMetadata
	}
	if !IsNil(o.EnablePowerForm) {
		toSerialize["enablePowerForm"] = o.EnablePowerForm
	}
	if !IsNil(o.EnablePowerFormDirect) {
		toSerialize["enablePowerFormDirect"] = o.EnablePowerFormDirect
	}
	if !IsNil(o.EnablePowerFormDirectMetadata) {
		toSerialize["enablePowerFormDirectMetadata"] = o.EnablePowerFormDirectMetadata
	}
	if !IsNil(o.EnablePowerFormMetadata) {
		toSerialize["enablePowerFormMetadata"] = o.EnablePowerFormMetadata
	}
	if !IsNil(o.EnableRecipientDomainValidation) {
		toSerialize["enableRecipientDomainValidation"] = o.EnableRecipientDomainValidation
	}
	if !IsNil(o.EnableRecipientDomainValidationMetadata) {
		toSerialize["enableRecipientDomainValidationMetadata"] = o.EnableRecipientDomainValidationMetadata
	}
	if !IsNil(o.EnableRecipientMayProvidePhoneNumber) {
		toSerialize["enableRecipientMayProvidePhoneNumber"] = o.EnableRecipientMayProvidePhoneNumber
	}
	if !IsNil(o.EnableRecipientMayProvidePhoneNumberMetadata) {
		toSerialize["enableRecipientMayProvidePhoneNumberMetadata"] = o.EnableRecipientMayProvidePhoneNumberMetadata
	}
	if !IsNil(o.EnableReportLinks) {
		toSerialize["enableReportLinks"] = o.EnableReportLinks
	}
	if !IsNil(o.EnableReportLinksMetadata) {
		toSerialize["enableReportLinksMetadata"] = o.EnableReportLinksMetadata
	}
	if !IsNil(o.EnableRequireSignOnPaper) {
		toSerialize["enableRequireSignOnPaper"] = o.EnableRequireSignOnPaper
	}
	if !IsNil(o.EnableRequireSignOnPaperMetadata) {
		toSerialize["enableRequireSignOnPaperMetadata"] = o.EnableRequireSignOnPaperMetadata
	}
	if !IsNil(o.EnableReservedDomain) {
		toSerialize["enableReservedDomain"] = o.EnableReservedDomain
	}
	if !IsNil(o.EnableReservedDomainMetadata) {
		toSerialize["enableReservedDomainMetadata"] = o.EnableReservedDomainMetadata
	}
	if !IsNil(o.EnableResponsiveSigning) {
		toSerialize["enableResponsiveSigning"] = o.EnableResponsiveSigning
	}
	if !IsNil(o.EnableResponsiveSigningMetadata) {
		toSerialize["enableResponsiveSigningMetadata"] = o.EnableResponsiveSigningMetadata
	}
	if !IsNil(o.EnableScheduledRelease) {
		toSerialize["enableScheduledRelease"] = o.EnableScheduledRelease
	}
	if !IsNil(o.EnableScheduledReleaseMetadata) {
		toSerialize["enableScheduledReleaseMetadata"] = o.EnableScheduledReleaseMetadata
	}
	if !IsNil(o.EnableSearch) {
		toSerialize["enableSearch"] = o.EnableSearch
	}
	if !IsNil(o.EnableSearchMetadata) {
		toSerialize["enableSearchMetadata"] = o.EnableSearchMetadata
	}
	if !IsNil(o.EnableSearchServiceAzureUri) {
		toSerialize["enableSearchServiceAzureUri"] = o.EnableSearchServiceAzureUri
	}
	if !IsNil(o.EnableSearchServiceAzureUriMetadata) {
		toSerialize["enableSearchServiceAzureUriMetadata"] = o.EnableSearchServiceAzureUriMetadata
	}
	if !IsNil(o.EnableSearchSiteSpecificApi) {
		toSerialize["enableSearchSiteSpecificApi"] = o.EnableSearchSiteSpecificApi
	}
	if !IsNil(o.EnableSearchSiteSpecificApiMetadata) {
		toSerialize["enableSearchSiteSpecificApiMetadata"] = o.EnableSearchSiteSpecificApiMetadata
	}
	if !IsNil(o.EnableSearchUI) {
		toSerialize["enableSearchUI"] = o.EnableSearchUI
	}
	if !IsNil(o.EnableSearchUIMetadata) {
		toSerialize["enableSearchUIMetadata"] = o.EnableSearchUIMetadata
	}
	if !IsNil(o.EnableSendingTagsFontSettings) {
		toSerialize["enableSendingTagsFontSettings"] = o.EnableSendingTagsFontSettings
	}
	if !IsNil(o.EnableSendingTagsFontSettingsMetadata) {
		toSerialize["enableSendingTagsFontSettingsMetadata"] = o.EnableSendingTagsFontSettingsMetadata
	}
	if !IsNil(o.EnableSendToAgent) {
		toSerialize["enableSendToAgent"] = o.EnableSendToAgent
	}
	if !IsNil(o.EnableSendToAgentMetadata) {
		toSerialize["enableSendToAgentMetadata"] = o.EnableSendToAgentMetadata
	}
	if !IsNil(o.EnableSendToIntermediary) {
		toSerialize["enableSendToIntermediary"] = o.EnableSendToIntermediary
	}
	if !IsNil(o.EnableSendToIntermediaryMetadata) {
		toSerialize["enableSendToIntermediaryMetadata"] = o.EnableSendToIntermediaryMetadata
	}
	if !IsNil(o.EnableSendToManage) {
		toSerialize["enableSendToManage"] = o.EnableSendToManage
	}
	if !IsNil(o.EnableSendToManageMetadata) {
		toSerialize["enableSendToManageMetadata"] = o.EnableSendToManageMetadata
	}
	if !IsNil(o.EnableSequentialSigningAPI) {
		toSerialize["enableSequentialSigningAPI"] = o.EnableSequentialSigningAPI
	}
	if !IsNil(o.EnableSequentialSigningAPIMetadata) {
		toSerialize["enableSequentialSigningAPIMetadata"] = o.EnableSequentialSigningAPIMetadata
	}
	if !IsNil(o.EnableSequentialSigningUI) {
		toSerialize["enableSequentialSigningUI"] = o.EnableSequentialSigningUI
	}
	if !IsNil(o.EnableSequentialSigningUIMetadata) {
		toSerialize["enableSequentialSigningUIMetadata"] = o.EnableSequentialSigningUIMetadata
	}
	if !IsNil(o.EnableSignerAttachments) {
		toSerialize["enableSignerAttachments"] = o.EnableSignerAttachments
	}
	if !IsNil(o.EnableSignerAttachmentsMetadata) {
		toSerialize["enableSignerAttachmentsMetadata"] = o.EnableSignerAttachmentsMetadata
	}
	if !IsNil(o.EnableSigningExtensionComments) {
		toSerialize["enableSigningExtensionComments"] = o.EnableSigningExtensionComments
	}
	if !IsNil(o.EnableSigningExtensionCommentsMetadata) {
		toSerialize["enableSigningExtensionCommentsMetadata"] = o.EnableSigningExtensionCommentsMetadata
	}
	if !IsNil(o.EnableSigningExtensionConversations) {
		toSerialize["enableSigningExtensionConversations"] = o.EnableSigningExtensionConversations
	}
	if !IsNil(o.EnableSigningExtensionConversationsMetadata) {
		toSerialize["enableSigningExtensionConversationsMetadata"] = o.EnableSigningExtensionConversationsMetadata
	}
	if !IsNil(o.EnableSigningOrderSettingsForAccount) {
		toSerialize["enableSigningOrderSettingsForAccount"] = o.EnableSigningOrderSettingsForAccount
	}
	if !IsNil(o.EnableSigningOrderSettingsForAccountMetadata) {
		toSerialize["enableSigningOrderSettingsForAccountMetadata"] = o.EnableSigningOrderSettingsForAccountMetadata
	}
	if !IsNil(o.EnableSignOnPaper) {
		toSerialize["enableSignOnPaper"] = o.EnableSignOnPaper
	}
	if !IsNil(o.EnableSignOnPaperMetadata) {
		toSerialize["enableSignOnPaperMetadata"] = o.EnableSignOnPaperMetadata
	}
	if !IsNil(o.EnableSignOnPaperOverride) {
		toSerialize["enableSignOnPaperOverride"] = o.EnableSignOnPaperOverride
	}
	if !IsNil(o.EnableSignOnPaperOverrideMetadata) {
		toSerialize["enableSignOnPaperOverrideMetadata"] = o.EnableSignOnPaperOverrideMetadata
	}
	if !IsNil(o.EnableSignWithNotary) {
		toSerialize["enableSignWithNotary"] = o.EnableSignWithNotary
	}
	if !IsNil(o.EnableSignWithNotaryMetadata) {
		toSerialize["enableSignWithNotaryMetadata"] = o.EnableSignWithNotaryMetadata
	}
	if !IsNil(o.EnableSmartContracts) {
		toSerialize["enableSmartContracts"] = o.EnableSmartContracts
	}
	if !IsNil(o.EnableSmartContractsMetadata) {
		toSerialize["enableSmartContractsMetadata"] = o.EnableSmartContractsMetadata
	}
	if !IsNil(o.EnableSMSAuthentication) {
		toSerialize["enableSMSAuthentication"] = o.EnableSMSAuthentication
	}
	if !IsNil(o.EnableSMSAuthenticationMetadata) {
		toSerialize["enableSMSAuthenticationMetadata"] = o.EnableSMSAuthenticationMetadata
	}
	if !IsNil(o.EnableSMSDeliveryAdditionalNotification) {
		toSerialize["enableSMSDeliveryAdditionalNotification"] = o.EnableSMSDeliveryAdditionalNotification
	}
	if !IsNil(o.EnableSMSDeliveryAdditionalNotificationMetadata) {
		toSerialize["enableSMSDeliveryAdditionalNotificationMetadata"] = o.EnableSMSDeliveryAdditionalNotificationMetadata
	}
	if !IsNil(o.EnableSMSDeliveryPrimary) {
		toSerialize["enableSMSDeliveryPrimary"] = o.EnableSMSDeliveryPrimary
	}
	if !IsNil(o.EnableSocialIdLogin) {
		toSerialize["enableSocialIdLogin"] = o.EnableSocialIdLogin
	}
	if !IsNil(o.EnableSocialIdLoginMetadata) {
		toSerialize["enableSocialIdLoginMetadata"] = o.EnableSocialIdLoginMetadata
	}
	if !IsNil(o.EnableStrikeThrough) {
		toSerialize["enableStrikeThrough"] = o.EnableStrikeThrough
	}
	if !IsNil(o.EnableStrikeThroughMetadata) {
		toSerialize["enableStrikeThroughMetadata"] = o.EnableStrikeThroughMetadata
	}
	if !IsNil(o.EnableTransactionPoint) {
		toSerialize["enableTransactionPoint"] = o.EnableTransactionPoint
	}
	if !IsNil(o.EnableTransactionPointMetadata) {
		toSerialize["enableTransactionPointMetadata"] = o.EnableTransactionPointMetadata
	}
	if !IsNil(o.EnableVaulting) {
		toSerialize["enableVaulting"] = o.EnableVaulting
	}
	if !IsNil(o.EnableVaultingMetadata) {
		toSerialize["enableVaultingMetadata"] = o.EnableVaultingMetadata
	}
	if !IsNil(o.EnableWebFormsSeparateUserPermissions) {
		toSerialize["enableWebFormsSeparateUserPermissions"] = o.EnableWebFormsSeparateUserPermissions
	}
	if !IsNil(o.EnableWebFormsSeparateUserPermissionsMetadata) {
		toSerialize["enableWebFormsSeparateUserPermissionsMetadata"] = o.EnableWebFormsSeparateUserPermissionsMetadata
	}
	if !IsNil(o.EnableWitnessing) {
		toSerialize["enableWitnessing"] = o.EnableWitnessing
	}
	if !IsNil(o.EnableWitnessingMetadata) {
		toSerialize["enableWitnessingMetadata"] = o.EnableWitnessingMetadata
	}
	if !IsNil(o.EnforceTemplateNameUniqueness) {
		toSerialize["enforceTemplateNameUniqueness"] = o.EnforceTemplateNameUniqueness
	}
	if !IsNil(o.EnforceTemplateNameUniquenessMetadata) {
		toSerialize["enforceTemplateNameUniquenessMetadata"] = o.EnforceTemplateNameUniquenessMetadata
	}
	if !IsNil(o.EnforceTlsEmails) {
		toSerialize["enforceTlsEmails"] = o.EnforceTlsEmails
	}
	if !IsNil(o.EnforceTlsEmailsMetadata) {
		toSerialize["enforceTlsEmailsMetadata"] = o.EnforceTlsEmailsMetadata
	}
	if !IsNil(o.EnvelopeIntegrationAllowed) {
		toSerialize["envelopeIntegrationAllowed"] = o.EnvelopeIntegrationAllowed
	}
	if !IsNil(o.EnvelopeIntegrationAllowedMetadata) {
		toSerialize["envelopeIntegrationAllowedMetadata"] = o.EnvelopeIntegrationAllowedMetadata
	}
	if !IsNil(o.EnvelopeIntegrationEnabled) {
		toSerialize["envelopeIntegrationEnabled"] = o.EnvelopeIntegrationEnabled
	}
	if !IsNil(o.EnvelopeIntegrationEnabledMetadata) {
		toSerialize["envelopeIntegrationEnabledMetadata"] = o.EnvelopeIntegrationEnabledMetadata
	}
	if !IsNil(o.EnvelopeLimitsTotalDocumentSizeAllowedInMB) {
		toSerialize["EnvelopeLimitsTotalDocumentSizeAllowedInMB"] = o.EnvelopeLimitsTotalDocumentSizeAllowedInMB
	}
	if !IsNil(o.EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled) {
		toSerialize["EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled"] = o.EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled
	}
	if !IsNil(o.EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata) {
		toSerialize["EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata"] = o.EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata
	}
	if !IsNil(o.EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata) {
		toSerialize["EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata"] = o.EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata
	}
	if !IsNil(o.EnvelopeSearchMode) {
		toSerialize["envelopeSearchMode"] = o.EnvelopeSearchMode
	}
	if !IsNil(o.EnvelopeSearchModeMetadata) {
		toSerialize["envelopeSearchModeMetadata"] = o.EnvelopeSearchModeMetadata
	}
	if !IsNil(o.EnvelopeStampingDefaultValue) {
		toSerialize["envelopeStampingDefaultValue"] = o.EnvelopeStampingDefaultValue
	}
	if !IsNil(o.EnvelopeStampingDefaultValueMetadata) {
		toSerialize["envelopeStampingDefaultValueMetadata"] = o.EnvelopeStampingDefaultValueMetadata
	}
	if !IsNil(o.ExitPrompt) {
		toSerialize["exitPrompt"] = o.ExitPrompt
	}
	if !IsNil(o.ExitPromptMetadata) {
		toSerialize["exitPromptMetadata"] = o.ExitPromptMetadata
	}
	if !IsNil(o.ExpressSend) {
		toSerialize["expressSend"] = o.ExpressSend
	}
	if !IsNil(o.ExpressSendAllowTabs) {
		toSerialize["expressSendAllowTabs"] = o.ExpressSendAllowTabs
	}
	if !IsNil(o.ExpressSendAllowTabsMetadata) {
		toSerialize["expressSendAllowTabsMetadata"] = o.ExpressSendAllowTabsMetadata
	}
	if !IsNil(o.ExpressSendMetadata) {
		toSerialize["expressSendMetadata"] = o.ExpressSendMetadata
	}
	if !IsNil(o.ExternalDocumentSources) {
		toSerialize["externalDocumentSources"] = o.ExternalDocumentSources
	}
	if !IsNil(o.ExternalSignaturePadType) {
		toSerialize["externalSignaturePadType"] = o.ExternalSignaturePadType
	}
	if !IsNil(o.ExternalSignaturePadTypeMetadata) {
		toSerialize["externalSignaturePadTypeMetadata"] = o.ExternalSignaturePadTypeMetadata
	}
	if !IsNil(o.FaxOutEnabled) {
		toSerialize["faxOutEnabled"] = o.FaxOutEnabled
	}
	if !IsNil(o.FaxOutEnabledMetadata) {
		toSerialize["faxOutEnabledMetadata"] = o.FaxOutEnabledMetadata
	}
	if !IsNil(o.FinishReminder) {
		toSerialize["finishReminder"] = o.FinishReminder
	}
	if !IsNil(o.FinishReminderMetadata) {
		toSerialize["finishReminderMetadata"] = o.FinishReminderMetadata
	}
	if !IsNil(o.GuidedFormsHtmlAllowed) {
		toSerialize["guidedFormsHtmlAllowed"] = o.GuidedFormsHtmlAllowed
	}
	if !IsNil(o.GuidedFormsHtmlAllowedMetadata) {
		toSerialize["guidedFormsHtmlAllowedMetadata"] = o.GuidedFormsHtmlAllowedMetadata
	}
	if !IsNil(o.GuidedFormsHtmlConversionPolicy) {
		toSerialize["guidedFormsHtmlConversionPolicy"] = o.GuidedFormsHtmlConversionPolicy
	}
	if !IsNil(o.GuidedFormsHtmlConversionPolicyMetadata) {
		toSerialize["guidedFormsHtmlConversionPolicyMetadata"] = o.GuidedFormsHtmlConversionPolicyMetadata
	}
	if !IsNil(o.HasRecipientConnectClaimedDomain) {
		toSerialize["hasRecipientConnectClaimedDomain"] = o.HasRecipientConnectClaimedDomain
	}
	if !IsNil(o.HideAccountAddressInCoC) {
		toSerialize["hideAccountAddressInCoC"] = o.HideAccountAddressInCoC
	}
	if !IsNil(o.HideAccountAddressInCoCMetadata) {
		toSerialize["hideAccountAddressInCoCMetadata"] = o.HideAccountAddressInCoCMetadata
	}
	if !IsNil(o.HidePricing) {
		toSerialize["hidePricing"] = o.HidePricing
	}
	if !IsNil(o.HidePricingMetadata) {
		toSerialize["hidePricingMetadata"] = o.HidePricingMetadata
	}
	if !IsNil(o.IdCheckConfigurations) {
		toSerialize["idCheckConfigurations"] = o.IdCheckConfigurations
	}
	if !IsNil(o.IdCheckExpire) {
		toSerialize["idCheckExpire"] = o.IdCheckExpire
	}
	if !IsNil(o.IdCheckExpireDays) {
		toSerialize["idCheckExpireDays"] = o.IdCheckExpireDays
	}
	if !IsNil(o.IdCheckExpireDaysMetadata) {
		toSerialize["idCheckExpireDaysMetadata"] = o.IdCheckExpireDaysMetadata
	}
	if !IsNil(o.IdCheckExpireMetadata) {
		toSerialize["idCheckExpireMetadata"] = o.IdCheckExpireMetadata
	}
	if !IsNil(o.IdCheckExpireMinutes) {
		toSerialize["idCheckExpireMinutes"] = o.IdCheckExpireMinutes
	}
	if !IsNil(o.IdCheckExpireMinutesMetadata) {
		toSerialize["idCheckExpireMinutesMetadata"] = o.IdCheckExpireMinutesMetadata
	}
	if !IsNil(o.IdCheckRequired) {
		toSerialize["idCheckRequired"] = o.IdCheckRequired
	}
	if !IsNil(o.IdCheckRequiredMetadata) {
		toSerialize["idCheckRequiredMetadata"] = o.IdCheckRequiredMetadata
	}
	if !IsNil(o.IdentityVerification) {
		toSerialize["identityVerification"] = o.IdentityVerification
	}
	if !IsNil(o.IdentityVerificationMetadata) {
		toSerialize["identityVerificationMetadata"] = o.IdentityVerificationMetadata
	}
	if !IsNil(o.IdfxKBAAuthenticationOverride) {
		toSerialize["idfxKBAAuthenticationOverride"] = o.IdfxKBAAuthenticationOverride
	}
	if !IsNil(o.IdfxKBAAuthenticationOverrideMetadata) {
		toSerialize["idfxKBAAuthenticationOverrideMetadata"] = o.IdfxKBAAuthenticationOverrideMetadata
	}
	if !IsNil(o.IdfxPhoneAuthenticationOverride) {
		toSerialize["idfxPhoneAuthenticationOverride"] = o.IdfxPhoneAuthenticationOverride
	}
	if !IsNil(o.IdfxPhoneAuthenticationOverrideMetadata) {
		toSerialize["idfxPhoneAuthenticationOverrideMetadata"] = o.IdfxPhoneAuthenticationOverrideMetadata
	}
	if !IsNil(o.IgnoreErrorIfAnchorTabNotFound) {
		toSerialize["ignoreErrorIfAnchorTabNotFound"] = o.IgnoreErrorIfAnchorTabNotFound
	}
	if !IsNil(o.IgnoreErrorIfAnchorTabNotFoundMetadataEnabled) {
		toSerialize["ignoreErrorIfAnchorTabNotFoundMetadataEnabled"] = o.IgnoreErrorIfAnchorTabNotFoundMetadataEnabled
	}
	if !IsNil(o.InPersonIDCheckQuestion) {
		toSerialize["inPersonIDCheckQuestion"] = o.InPersonIDCheckQuestion
	}
	if !IsNil(o.InPersonIDCheckQuestionMetadata) {
		toSerialize["inPersonIDCheckQuestionMetadata"] = o.InPersonIDCheckQuestionMetadata
	}
	if !IsNil(o.InPersonSigningEnabled) {
		toSerialize["inPersonSigningEnabled"] = o.InPersonSigningEnabled
	}
	if !IsNil(o.InPersonSigningEnabledMetadata) {
		toSerialize["inPersonSigningEnabledMetadata"] = o.InPersonSigningEnabledMetadata
	}
	if !IsNil(o.InSessionEnabled) {
		toSerialize["inSessionEnabled"] = o.InSessionEnabled
	}
	if !IsNil(o.InSessionEnabledMetadata) {
		toSerialize["inSessionEnabledMetadata"] = o.InSessionEnabledMetadata
	}
	if !IsNil(o.InSessionSuppressEmails) {
		toSerialize["inSessionSuppressEmails"] = o.InSessionSuppressEmails
	}
	if !IsNil(o.InSessionSuppressEmailsMetadata) {
		toSerialize["inSessionSuppressEmailsMetadata"] = o.InSessionSuppressEmailsMetadata
	}
	if !IsNil(o.IsConnectDocumentFieldsEnabled) {
		toSerialize["isConnectDocumentFieldsEnabled"] = o.IsConnectDocumentFieldsEnabled
	}
	if !IsNil(o.LinkedExternalPrimaryAccounts) {
		toSerialize["linkedExternalPrimaryAccounts"] = o.LinkedExternalPrimaryAccounts
	}
	if !IsNil(o.MaximumSigningGroups) {
		toSerialize["maximumSigningGroups"] = o.MaximumSigningGroups
	}
	if !IsNil(o.MaximumSigningGroupsMetadata) {
		toSerialize["maximumSigningGroupsMetadata"] = o.MaximumSigningGroupsMetadata
	}
	if !IsNil(o.MaximumUsersPerSigningGroup) {
		toSerialize["maximumUsersPerSigningGroup"] = o.MaximumUsersPerSigningGroup
	}
	if !IsNil(o.MaximumUsersPerSigningGroupMetadata) {
		toSerialize["maximumUsersPerSigningGroupMetadata"] = o.MaximumUsersPerSigningGroupMetadata
	}
	if !IsNil(o.MaxNumberOfCustomStamps) {
		toSerialize["maxNumberOfCustomStamps"] = o.MaxNumberOfCustomStamps
	}
	if !IsNil(o.MergeMixedModeResults) {
		toSerialize["mergeMixedModeResults"] = o.MergeMixedModeResults
	}
	if !IsNil(o.MergeMixedModeResultsMetadata) {
		toSerialize["mergeMixedModeResultsMetadata"] = o.MergeMixedModeResultsMetadata
	}
	if !IsNil(o.MobileSessionTimeout) {
		toSerialize["mobileSessionTimeout"] = o.MobileSessionTimeout
	}
	if !IsNil(o.MobileSessionTimeoutMetadata) {
		toSerialize["mobileSessionTimeoutMetadata"] = o.MobileSessionTimeoutMetadata
	}
	if !IsNil(o.NumberOfActiveCustomStamps) {
		toSerialize["numberOfActiveCustomStamps"] = o.NumberOfActiveCustomStamps
	}
	if !IsNil(o.OptInMobileSigningV02) {
		toSerialize["optInMobileSigningV02"] = o.OptInMobileSigningV02
	}
	if !IsNil(o.OptInMobileSigningV02Metadata) {
		toSerialize["optInMobileSigningV02Metadata"] = o.OptInMobileSigningV02Metadata
	}
	if !IsNil(o.OptInUniversalSignatures) {
		toSerialize["optInUniversalSignatures"] = o.OptInUniversalSignatures
	}
	if !IsNil(o.OptOutAutoNavTextAndTabColorUpdates) {
		toSerialize["optOutAutoNavTextAndTabColorUpdates"] = o.OptOutAutoNavTextAndTabColorUpdates
	}
	if !IsNil(o.OptOutAutoNavTextAndTabColorUpdatesMetadata) {
		toSerialize["optOutAutoNavTextAndTabColorUpdatesMetadata"] = o.OptOutAutoNavTextAndTabColorUpdatesMetadata
	}
	if !IsNil(o.OptOutNewPlatformSeal) {
		toSerialize["optOutNewPlatformSeal"] = o.OptOutNewPlatformSeal
	}
	if !IsNil(o.OptOutNewPlatformSealPlatformMetadata) {
		toSerialize["optOutNewPlatformSealPlatformMetadata"] = o.OptOutNewPlatformSealPlatformMetadata
	}
	if !IsNil(o.PdfMaxChunkedUploadPartSize) {
		toSerialize["pdfMaxChunkedUploadPartSize"] = o.PdfMaxChunkedUploadPartSize
	}
	if !IsNil(o.PdfMaxChunkedUploadPartSizeMetadata) {
		toSerialize["pdfMaxChunkedUploadPartSizeMetadata"] = o.PdfMaxChunkedUploadPartSizeMetadata
	}
	if !IsNil(o.PdfMaxChunkedUploadTotalSize) {
		toSerialize["pdfMaxChunkedUploadTotalSize"] = o.PdfMaxChunkedUploadTotalSize
	}
	if !IsNil(o.PdfMaxChunkedUploadTotalSizeMetadata) {
		toSerialize["pdfMaxChunkedUploadTotalSizeMetadata"] = o.PdfMaxChunkedUploadTotalSizeMetadata
	}
	if !IsNil(o.PdfMaxIndividualUploadSize) {
		toSerialize["pdfMaxIndividualUploadSize"] = o.PdfMaxIndividualUploadSize
	}
	if !IsNil(o.PdfMaxIndividualUploadSizeMetadata) {
		toSerialize["pdfMaxIndividualUploadSizeMetadata"] = o.PdfMaxIndividualUploadSizeMetadata
	}
	if !IsNil(o.PhoneAuthRecipientMayProvidePhoneNumber) {
		toSerialize["phoneAuthRecipientMayProvidePhoneNumber"] = o.PhoneAuthRecipientMayProvidePhoneNumber
	}
	if !IsNil(o.PhoneAuthRecipientMayProvidePhoneNumberMetadata) {
		toSerialize["phoneAuthRecipientMayProvidePhoneNumberMetadata"] = o.PhoneAuthRecipientMayProvidePhoneNumberMetadata
	}
	if !IsNil(o.PkiSignDownloadedPDFDocs) {
		toSerialize["pkiSignDownloadedPDFDocs"] = o.PkiSignDownloadedPDFDocs
	}
	if !IsNil(o.PkiSignDownloadedPDFDocsMetadata) {
		toSerialize["pkiSignDownloadedPDFDocsMetadata"] = o.PkiSignDownloadedPDFDocsMetadata
	}
	if !IsNil(o.ReadOnlyMode) {
		toSerialize["readOnlyMode"] = o.ReadOnlyMode
	}
	if !IsNil(o.ReadOnlyModeMetadata) {
		toSerialize["readOnlyModeMetadata"] = o.ReadOnlyModeMetadata
	}
	if !IsNil(o.RecipientsCanSignOffline) {
		toSerialize["recipientsCanSignOffline"] = o.RecipientsCanSignOffline
	}
	if !IsNil(o.RecipientsCanSignOfflineMetadata) {
		toSerialize["recipientsCanSignOfflineMetadata"] = o.RecipientsCanSignOfflineMetadata
	}
	if !IsNil(o.RecipientSigningAutoNavigationControl) {
		toSerialize["recipientSigningAutoNavigationControl"] = o.RecipientSigningAutoNavigationControl
	}
	if !IsNil(o.RecipientSigningAutoNavigationControlMetadata) {
		toSerialize["recipientSigningAutoNavigationControlMetadata"] = o.RecipientSigningAutoNavigationControlMetadata
	}
	if !IsNil(o.Require21CFRpt11Compliance) {
		toSerialize["require21CFRpt11Compliance"] = o.Require21CFRpt11Compliance
	}
	if !IsNil(o.Require21CFRpt11ComplianceMetadata) {
		toSerialize["require21CFRpt11ComplianceMetadata"] = o.Require21CFRpt11ComplianceMetadata
	}
	if !IsNil(o.RequireDeclineReason) {
		toSerialize["requireDeclineReason"] = o.RequireDeclineReason
	}
	if !IsNil(o.RequireDeclineReasonMetadata) {
		toSerialize["requireDeclineReasonMetadata"] = o.RequireDeclineReasonMetadata
	}
	if !IsNil(o.RequireExternalUserManagement) {
		toSerialize["requireExternalUserManagement"] = o.RequireExternalUserManagement
	}
	if !IsNil(o.RequireExternalUserManagementMetadata) {
		toSerialize["requireExternalUserManagementMetadata"] = o.RequireExternalUserManagementMetadata
	}
	if !IsNil(o.RequireSignerCertificateType) {
		toSerialize["requireSignerCertificateType"] = o.RequireSignerCertificateType
	}
	if !IsNil(o.RequireSignerCertificateTypeMetadata) {
		toSerialize["requireSignerCertificateTypeMetadata"] = o.RequireSignerCertificateTypeMetadata
	}
	if !IsNil(o.RsaVeridAccountName) {
		toSerialize["rsaVeridAccountName"] = o.RsaVeridAccountName
	}
	if !IsNil(o.RsaVeridPassword) {
		toSerialize["rsaVeridPassword"] = o.RsaVeridPassword
	}
	if !IsNil(o.RsaVeridRuleset) {
		toSerialize["rsaVeridRuleset"] = o.RsaVeridRuleset
	}
	if !IsNil(o.RsaVeridUserId) {
		toSerialize["rsaVeridUserId"] = o.RsaVeridUserId
	}
	if !IsNil(o.SbsTransactionLevel) {
		toSerialize["sbsTransactionLevel"] = o.SbsTransactionLevel
	}
	if !IsNil(o.SelfSignedRecipientEmailDocument) {
		toSerialize["selfSignedRecipientEmailDocument"] = o.SelfSignedRecipientEmailDocument
	}
	if !IsNil(o.SelfSignedRecipientEmailDocumentMetadata) {
		toSerialize["selfSignedRecipientEmailDocumentMetadata"] = o.SelfSignedRecipientEmailDocumentMetadata
	}
	if !IsNil(o.SelfSignedRecipientEmailDocumentUserOverride) {
		toSerialize["selfSignedRecipientEmailDocumentUserOverride"] = o.SelfSignedRecipientEmailDocumentUserOverride
	}
	if !IsNil(o.SelfSignedRecipientEmailDocumentUserOverrideMetadata) {
		toSerialize["selfSignedRecipientEmailDocumentUserOverrideMetadata"] = o.SelfSignedRecipientEmailDocumentUserOverrideMetadata
	}
	if !IsNil(o.SenderCanSignInEachLocation) {
		toSerialize["senderCanSignInEachLocation"] = o.SenderCanSignInEachLocation
	}
	if !IsNil(o.SenderCanSignInEachLocationMetadata) {
		toSerialize["senderCanSignInEachLocationMetadata"] = o.SenderCanSignInEachLocationMetadata
	}
	if !IsNil(o.SenderMustAuthenticateSigning) {
		toSerialize["senderMustAuthenticateSigning"] = o.SenderMustAuthenticateSigning
	}
	if !IsNil(o.SenderMustAuthenticateSigningMetadata) {
		toSerialize["senderMustAuthenticateSigningMetadata"] = o.SenderMustAuthenticateSigningMetadata
	}
	if !IsNil(o.SendingTagsFontColor) {
		toSerialize["sendingTagsFontColor"] = o.SendingTagsFontColor
	}
	if !IsNil(o.SendingTagsFontColorMetadata) {
		toSerialize["sendingTagsFontColorMetadata"] = o.SendingTagsFontColorMetadata
	}
	if !IsNil(o.SendingTagsFontName) {
		toSerialize["sendingTagsFontName"] = o.SendingTagsFontName
	}
	if !IsNil(o.SendingTagsFontNameMetadata) {
		toSerialize["sendingTagsFontNameMetadata"] = o.SendingTagsFontNameMetadata
	}
	if !IsNil(o.SendingTagsFontSize) {
		toSerialize["sendingTagsFontSize"] = o.SendingTagsFontSize
	}
	if !IsNil(o.SendingTagsFontSizeMetadata) {
		toSerialize["sendingTagsFontSizeMetadata"] = o.SendingTagsFontSizeMetadata
	}
	if !IsNil(o.SendLockoutRecipientNotification) {
		toSerialize["sendLockoutRecipientNotification"] = o.SendLockoutRecipientNotification
	}
	if !IsNil(o.SendLockoutRecipientNotificationMetadata) {
		toSerialize["sendLockoutRecipientNotificationMetadata"] = o.SendLockoutRecipientNotificationMetadata
	}
	if !IsNil(o.SendToCertifiedDeliveryEnabled) {
		toSerialize["sendToCertifiedDeliveryEnabled"] = o.SendToCertifiedDeliveryEnabled
	}
	if !IsNil(o.SendToCertifiedDeliveryEnabledMetadata) {
		toSerialize["sendToCertifiedDeliveryEnabledMetadata"] = o.SendToCertifiedDeliveryEnabledMetadata
	}
	if !IsNil(o.SessionTimeout) {
		toSerialize["sessionTimeout"] = o.SessionTimeout
	}
	if !IsNil(o.SessionTimeoutMetadata) {
		toSerialize["sessionTimeoutMetadata"] = o.SessionTimeoutMetadata
	}
	if !IsNil(o.SetRecipEmailLang) {
		toSerialize["setRecipEmailLang"] = o.SetRecipEmailLang
	}
	if !IsNil(o.SetRecipEmailLangMetadata) {
		toSerialize["setRecipEmailLangMetadata"] = o.SetRecipEmailLangMetadata
	}
	if !IsNil(o.SetRecipSignLang) {
		toSerialize["setRecipSignLang"] = o.SetRecipSignLang
	}
	if !IsNil(o.SetRecipSignLangMetadata) {
		toSerialize["setRecipSignLangMetadata"] = o.SetRecipSignLangMetadata
	}
	if !IsNil(o.SharedTemplateFolders) {
		toSerialize["sharedTemplateFolders"] = o.SharedTemplateFolders
	}
	if !IsNil(o.SharedTemplateFoldersMetadata) {
		toSerialize["sharedTemplateFoldersMetadata"] = o.SharedTemplateFoldersMetadata
	}
	if !IsNil(o.ShowCompleteDialogInEmbeddedSession) {
		toSerialize["showCompleteDialogInEmbeddedSession"] = o.ShowCompleteDialogInEmbeddedSession
	}
	if !IsNil(o.ShowCompleteDialogInEmbeddedSessionMetadata) {
		toSerialize["showCompleteDialogInEmbeddedSessionMetadata"] = o.ShowCompleteDialogInEmbeddedSessionMetadata
	}
	if !IsNil(o.ShowConditionalRoutingOnSend) {
		toSerialize["showConditionalRoutingOnSend"] = o.ShowConditionalRoutingOnSend
	}
	if !IsNil(o.ShowConditionalRoutingOnSendMetadata) {
		toSerialize["showConditionalRoutingOnSendMetadata"] = o.ShowConditionalRoutingOnSendMetadata
	}
	if !IsNil(o.ShowInitialConditionalFields) {
		toSerialize["showInitialConditionalFields"] = o.ShowInitialConditionalFields
	}
	if !IsNil(o.ShowInitialConditionalFieldsMetadata) {
		toSerialize["showInitialConditionalFieldsMetadata"] = o.ShowInitialConditionalFieldsMetadata
	}
	if !IsNil(o.ShowLocalizedWatermarks) {
		toSerialize["showLocalizedWatermarks"] = o.ShowLocalizedWatermarks
	}
	if !IsNil(o.ShowLocalizedWatermarksMetadata) {
		toSerialize["showLocalizedWatermarksMetadata"] = o.ShowLocalizedWatermarksMetadata
	}
	if !IsNil(o.ShowMaskedFieldsWhenDownloadingDocumentAsSender) {
		toSerialize["showMaskedFieldsWhenDownloadingDocumentAsSender"] = o.ShowMaskedFieldsWhenDownloadingDocumentAsSender
	}
	if !IsNil(o.ShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata) {
		toSerialize["showMaskedFieldsWhenDownloadingDocumentAsSenderMetadata"] = o.ShowMaskedFieldsWhenDownloadingDocumentAsSenderMetadata
	}
	if !IsNil(o.ShowTutorials) {
		toSerialize["showTutorials"] = o.ShowTutorials
	}
	if !IsNil(o.ShowTutorialsMetadata) {
		toSerialize["showTutorialsMetadata"] = o.ShowTutorialsMetadata
	}
	if !IsNil(o.SignatureProviders) {
		toSerialize["signatureProviders"] = o.SignatureProviders
	}
	if !IsNil(o.SignatureProvidersMetadata) {
		toSerialize["signatureProvidersMetadata"] = o.SignatureProvidersMetadata
	}
	if !IsNil(o.SignDateFormat) {
		toSerialize["signDateFormat"] = o.SignDateFormat
	}
	if !IsNil(o.SignDateFormatMetadata) {
		toSerialize["signDateFormatMetadata"] = o.SignDateFormatMetadata
	}
	if !IsNil(o.SignDateTimeAccountLanguageOverride) {
		toSerialize["signDateTimeAccountLanguageOverride"] = o.SignDateTimeAccountLanguageOverride
	}
	if !IsNil(o.SignDateTimeAccountLanguageOverrideMetadata) {
		toSerialize["signDateTimeAccountLanguageOverrideMetadata"] = o.SignDateTimeAccountLanguageOverrideMetadata
	}
	if !IsNil(o.SignDateTimeAccountTimezoneOverride) {
		toSerialize["signDateTimeAccountTimezoneOverride"] = o.SignDateTimeAccountTimezoneOverride
	}
	if !IsNil(o.SignDateTimeAccountTimezoneOverrideMetadata) {
		toSerialize["signDateTimeAccountTimezoneOverrideMetadata"] = o.SignDateTimeAccountTimezoneOverrideMetadata
	}
	if !IsNil(o.SignerAttachCertificateToEnvelopePDF) {
		toSerialize["signerAttachCertificateToEnvelopePDF"] = o.SignerAttachCertificateToEnvelopePDF
	}
	if !IsNil(o.SignerAttachCertificateToEnvelopePDFMetadata) {
		toSerialize["signerAttachCertificateToEnvelopePDFMetadata"] = o.SignerAttachCertificateToEnvelopePDFMetadata
	}
	if !IsNil(o.SignerAttachConcat) {
		toSerialize["signerAttachConcat"] = o.SignerAttachConcat
	}
	if !IsNil(o.SignerAttachConcatMetadata) {
		toSerialize["signerAttachConcatMetadata"] = o.SignerAttachConcatMetadata
	}
	if !IsNil(o.SignerCanCreateAccount) {
		toSerialize["signerCanCreateAccount"] = o.SignerCanCreateAccount
	}
	if !IsNil(o.SignerCanCreateAccountMetadata) {
		toSerialize["signerCanCreateAccountMetadata"] = o.SignerCanCreateAccountMetadata
	}
	if !IsNil(o.SignerCanSignOnMobile) {
		toSerialize["signerCanSignOnMobile"] = o.SignerCanSignOnMobile
	}
	if !IsNil(o.SignerCanSignOnMobileMetadata) {
		toSerialize["signerCanSignOnMobileMetadata"] = o.SignerCanSignOnMobileMetadata
	}
	if !IsNil(o.SignerInSessionUseEnvelopeCompleteEmail) {
		toSerialize["signerInSessionUseEnvelopeCompleteEmail"] = o.SignerInSessionUseEnvelopeCompleteEmail
	}
	if !IsNil(o.SignerInSessionUseEnvelopeCompleteEmailMetadata) {
		toSerialize["signerInSessionUseEnvelopeCompleteEmailMetadata"] = o.SignerInSessionUseEnvelopeCompleteEmailMetadata
	}
	if !IsNil(o.SignerLoginRequirements) {
		toSerialize["signerLoginRequirements"] = o.SignerLoginRequirements
	}
	if !IsNil(o.SignerLoginRequirementsMetadata) {
		toSerialize["signerLoginRequirementsMetadata"] = o.SignerLoginRequirementsMetadata
	}
	if !IsNil(o.SignerMustHaveAccount) {
		toSerialize["signerMustHaveAccount"] = o.SignerMustHaveAccount
	}
	if !IsNil(o.SignerMustHaveAccountMetadata) {
		toSerialize["signerMustHaveAccountMetadata"] = o.SignerMustHaveAccountMetadata
	}
	if !IsNil(o.SignerMustLoginToSign) {
		toSerialize["signerMustLoginToSign"] = o.SignerMustLoginToSign
	}
	if !IsNil(o.SignerMustLoginToSignMetadata) {
		toSerialize["signerMustLoginToSignMetadata"] = o.SignerMustLoginToSignMetadata
	}
	if !IsNil(o.SignerShowSecureFieldInitialValues) {
		toSerialize["signerShowSecureFieldInitialValues"] = o.SignerShowSecureFieldInitialValues
	}
	if !IsNil(o.SignerShowSecureFieldInitialValuesMetadata) {
		toSerialize["signerShowSecureFieldInitialValuesMetadata"] = o.SignerShowSecureFieldInitialValuesMetadata
	}
	if !IsNil(o.SigningSessionTimeout) {
		toSerialize["signingSessionTimeout"] = o.SigningSessionTimeout
	}
	if !IsNil(o.SigningSessionTimeoutMetadata) {
		toSerialize["signingSessionTimeoutMetadata"] = o.SigningSessionTimeoutMetadata
	}
	if !IsNil(o.SigningUiVersion) {
		toSerialize["signingUiVersion"] = o.SigningUiVersion
	}
	if !IsNil(o.SigningUiVersionMetadata) {
		toSerialize["signingUiVersionMetadata"] = o.SigningUiVersionMetadata
	}
	if !IsNil(o.SignTimeFormat) {
		toSerialize["signTimeFormat"] = o.SignTimeFormat
	}
	if !IsNil(o.SignTimeFormatMetadata) {
		toSerialize["signTimeFormatMetadata"] = o.SignTimeFormatMetadata
	}
	if !IsNil(o.SignTimeShowAmPm) {
		toSerialize["signTimeShowAmPm"] = o.SignTimeShowAmPm
	}
	if !IsNil(o.SignTimeShowAmPmMetadata) {
		toSerialize["signTimeShowAmPmMetadata"] = o.SignTimeShowAmPmMetadata
	}
	if !IsNil(o.SimplifiedSendingEnabled) {
		toSerialize["simplifiedSendingEnabled"] = o.SimplifiedSendingEnabled
	}
	if !IsNil(o.SimplifiedSendingEnabledMetadata) {
		toSerialize["simplifiedSendingEnabledMetadata"] = o.SimplifiedSendingEnabledMetadata
	}
	if !IsNil(o.SingleSignOnEnabled) {
		toSerialize["singleSignOnEnabled"] = o.SingleSignOnEnabled
	}
	if !IsNil(o.SingleSignOnEnabledMetadata) {
		toSerialize["singleSignOnEnabledMetadata"] = o.SingleSignOnEnabledMetadata
	}
	if !IsNil(o.SkipAuthCompletedEnvelopes) {
		toSerialize["skipAuthCompletedEnvelopes"] = o.SkipAuthCompletedEnvelopes
	}
	if !IsNil(o.SkipAuthCompletedEnvelopesMetadata) {
		toSerialize["skipAuthCompletedEnvelopesMetadata"] = o.SkipAuthCompletedEnvelopesMetadata
	}
	if !IsNil(o.SocialIdRecipAuth) {
		toSerialize["socialIdRecipAuth"] = o.SocialIdRecipAuth
	}
	if !IsNil(o.SocialIdRecipAuthMetadata) {
		toSerialize["socialIdRecipAuthMetadata"] = o.SocialIdRecipAuthMetadata
	}
	if !IsNil(o.SpecifyDocumentVisibility) {
		toSerialize["specifyDocumentVisibility"] = o.SpecifyDocumentVisibility
	}
	if !IsNil(o.SpecifyDocumentVisibilityMetadata) {
		toSerialize["specifyDocumentVisibilityMetadata"] = o.SpecifyDocumentVisibilityMetadata
	}
	if !IsNil(o.StartInAdvancedCorrect) {
		toSerialize["startInAdvancedCorrect"] = o.StartInAdvancedCorrect
	}
	if !IsNil(o.StartInAdvancedCorrectMetadata) {
		toSerialize["startInAdvancedCorrectMetadata"] = o.StartInAdvancedCorrectMetadata
	}
	if !IsNil(o.SupplementalDocumentsMustAccept) {
		toSerialize["supplementalDocumentsMustAccept"] = o.SupplementalDocumentsMustAccept
	}
	if !IsNil(o.SupplementalDocumentsMustAcceptMetadata) {
		toSerialize["supplementalDocumentsMustAcceptMetadata"] = o.SupplementalDocumentsMustAcceptMetadata
	}
	if !IsNil(o.SupplementalDocumentsMustRead) {
		toSerialize["supplementalDocumentsMustRead"] = o.SupplementalDocumentsMustRead
	}
	if !IsNil(o.SupplementalDocumentsMustReadMetadata) {
		toSerialize["supplementalDocumentsMustReadMetadata"] = o.SupplementalDocumentsMustReadMetadata
	}
	if !IsNil(o.SupplementalDocumentsMustView) {
		toSerialize["supplementalDocumentsMustView"] = o.SupplementalDocumentsMustView
	}
	if !IsNil(o.SupplementalDocumentsMustViewMetadata) {
		toSerialize["supplementalDocumentsMustViewMetadata"] = o.SupplementalDocumentsMustViewMetadata
	}
	if !IsNil(o.SuppressCertificateEnforcement) {
		toSerialize["suppressCertificateEnforcement"] = o.SuppressCertificateEnforcement
	}
	if !IsNil(o.SuppressCertificateEnforcementMetadata) {
		toSerialize["suppressCertificateEnforcementMetadata"] = o.SuppressCertificateEnforcementMetadata
	}
	if !IsNil(o.TabAccountSettings) {
		toSerialize["tabAccountSettings"] = o.TabAccountSettings
	}
	if !IsNil(o.TimezoneOffsetAPI) {
		toSerialize["timezoneOffsetAPI"] = o.TimezoneOffsetAPI
	}
	if !IsNil(o.TimezoneOffsetAPIMetadata) {
		toSerialize["timezoneOffsetAPIMetadata"] = o.TimezoneOffsetAPIMetadata
	}
	if !IsNil(o.TimezoneOffsetUI) {
		toSerialize["timezoneOffsetUI"] = o.TimezoneOffsetUI
	}
	if !IsNil(o.TimezoneOffsetUIMetadata) {
		toSerialize["timezoneOffsetUIMetadata"] = o.TimezoneOffsetUIMetadata
	}
	if !IsNil(o.UniversalSignatureOptIn) {
		toSerialize["universalSignatureOptIn"] = o.UniversalSignatureOptIn
	}
	if !IsNil(o.UseAccountLevelEmail) {
		toSerialize["useAccountLevelEmail"] = o.UseAccountLevelEmail
	}
	if !IsNil(o.UseAccountLevelEmailMetadata) {
		toSerialize["useAccountLevelEmailMetadata"] = o.UseAccountLevelEmailMetadata
	}
	if !IsNil(o.UseConsumerDisclosure) {
		toSerialize["useConsumerDisclosure"] = o.UseConsumerDisclosure
	}
	if !IsNil(o.UseConsumerDisclosureMetadata) {
		toSerialize["useConsumerDisclosureMetadata"] = o.UseConsumerDisclosureMetadata
	}
	if !IsNil(o.UseConsumerDisclosureWithinAccount) {
		toSerialize["useConsumerDisclosureWithinAccount"] = o.UseConsumerDisclosureWithinAccount
	}
	if !IsNil(o.UseConsumerDisclosureWithinAccountMetadata) {
		toSerialize["useConsumerDisclosureWithinAccountMetadata"] = o.UseConsumerDisclosureWithinAccountMetadata
	}
	if !IsNil(o.UseDerivedKeys) {
		toSerialize["useDerivedKeys"] = o.UseDerivedKeys
	}
	if !IsNil(o.UseDerivedKeysMetadata) {
		toSerialize["useDerivedKeysMetadata"] = o.UseDerivedKeysMetadata
	}
	if !IsNil(o.UseDocuSignExpressSignerCertificate) {
		toSerialize["useDocuSignExpressSignerCertificate"] = o.UseDocuSignExpressSignerCertificate
	}
	if !IsNil(o.UseDocuSignExpressSignerCertificateMetadata) {
		toSerialize["useDocuSignExpressSignerCertificateMetadata"] = o.UseDocuSignExpressSignerCertificateMetadata
	}
	if !IsNil(o.UseEnvelopeSearchMixedMode) {
		toSerialize["useEnvelopeSearchMixedMode"] = o.UseEnvelopeSearchMixedMode
	}
	if !IsNil(o.UseEnvelopeSearchMixedModeMetadata) {
		toSerialize["useEnvelopeSearchMixedModeMetadata"] = o.UseEnvelopeSearchMixedModeMetadata
	}
	if !IsNil(o.UseMultiAppGroupsData) {
		toSerialize["useMultiAppGroupsData"] = o.UseMultiAppGroupsData
	}
	if !IsNil(o.UseMultiAppGroupsDataMetadata) {
		toSerialize["useMultiAppGroupsDataMetadata"] = o.UseMultiAppGroupsDataMetadata
	}
	if !IsNil(o.UseNewBlobForPdf) {
		toSerialize["useNewBlobForPdf"] = o.UseNewBlobForPdf
	}
	if !IsNil(o.UseNewBlobForPdfMetadata) {
		toSerialize["useNewBlobForPdfMetadata"] = o.UseNewBlobForPdfMetadata
	}
	if !IsNil(o.UseNewEnvelopeSearch) {
		toSerialize["useNewEnvelopeSearch"] = o.UseNewEnvelopeSearch
	}
	if !IsNil(o.UseNewEnvelopeSearchMetadata) {
		toSerialize["useNewEnvelopeSearchMetadata"] = o.UseNewEnvelopeSearchMetadata
	}
	if !IsNil(o.UseNewEnvelopeSearchOnlyWhenSearchingAfterDate) {
		toSerialize["useNewEnvelopeSearchOnlyWhenSearchingAfterDate"] = o.UseNewEnvelopeSearchOnlyWhenSearchingAfterDate
	}
	if !IsNil(o.UseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata) {
		toSerialize["useNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata"] = o.UseNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata
	}
	if !IsNil(o.UseNewEnvelopeSearchOnlyWithSearchTerm) {
		toSerialize["useNewEnvelopeSearchOnlyWithSearchTerm"] = o.UseNewEnvelopeSearchOnlyWithSearchTerm
	}
	if !IsNil(o.UseNewEnvelopeSearchOnlyWithSearchTermMetadata) {
		toSerialize["useNewEnvelopeSearchOnlyWithSearchTermMetadata"] = o.UseNewEnvelopeSearchOnlyWithSearchTermMetadata
	}
	if !IsNil(o.UseSAFESignerCertificates) {
		toSerialize["useSAFESignerCertificates"] = o.UseSAFESignerCertificates
	}
	if !IsNil(o.UseSAFESignerCertificatesMetadata) {
		toSerialize["useSAFESignerCertificatesMetadata"] = o.UseSAFESignerCertificatesMetadata
	}
	if !IsNil(o.UsesAPI) {
		toSerialize["usesAPI"] = o.UsesAPI
	}
	if !IsNil(o.UsesAPIMetadata) {
		toSerialize["usesAPIMetadata"] = o.UsesAPIMetadata
	}
	if !IsNil(o.UseSignatureProviderPlatform) {
		toSerialize["useSignatureProviderPlatform"] = o.UseSignatureProviderPlatform
	}
	if !IsNil(o.UseSignatureProviderPlatformMetadata) {
		toSerialize["useSignatureProviderPlatformMetadata"] = o.UseSignatureProviderPlatformMetadata
	}
	if !IsNil(o.UseSmartContractsV1) {
		toSerialize["useSmartContractsV1"] = o.UseSmartContractsV1
	}
	if !IsNil(o.ValidationsAllowed) {
		toSerialize["validationsAllowed"] = o.ValidationsAllowed
	}
	if !IsNil(o.ValidationsAllowedMetadata) {
		toSerialize["validationsAllowedMetadata"] = o.ValidationsAllowedMetadata
	}
	if !IsNil(o.ValidationsBrand) {
		toSerialize["validationsBrand"] = o.ValidationsBrand
	}
	if !IsNil(o.ValidationsBrandMetadata) {
		toSerialize["validationsBrandMetadata"] = o.ValidationsBrandMetadata
	}
	if !IsNil(o.ValidationsCadence) {
		toSerialize["validationsCadence"] = o.ValidationsCadence
	}
	if !IsNil(o.ValidationsCadenceMetadata) {
		toSerialize["validationsCadenceMetadata"] = o.ValidationsCadenceMetadata
	}
	if !IsNil(o.ValidationsEnabled) {
		toSerialize["validationsEnabled"] = o.ValidationsEnabled
	}
	if !IsNil(o.ValidationsEnabledMetadata) {
		toSerialize["validationsEnabledMetadata"] = o.ValidationsEnabledMetadata
	}
	if !IsNil(o.ValidationsReport) {
		toSerialize["validationsReport"] = o.ValidationsReport
	}
	if !IsNil(o.ValidationsReportMetadata) {
		toSerialize["validationsReportMetadata"] = o.ValidationsReportMetadata
	}
	if !IsNil(o.WaterMarkEnabled) {
		toSerialize["waterMarkEnabled"] = o.WaterMarkEnabled
	}
	if !IsNil(o.WaterMarkEnabledMetadata) {
		toSerialize["waterMarkEnabledMetadata"] = o.WaterMarkEnabledMetadata
	}
	if !IsNil(o.WriteReminderToEnvelopeHistory) {
		toSerialize["writeReminderToEnvelopeHistory"] = o.WriteReminderToEnvelopeHistory
	}
	if !IsNil(o.WriteReminderToEnvelopeHistoryMetadata) {
		toSerialize["writeReminderToEnvelopeHistoryMetadata"] = o.WriteReminderToEnvelopeHistoryMetadata
	}
	if !IsNil(o.WurflMinAllowableScreenSize) {
		toSerialize["wurflMinAllowableScreenSize"] = o.WurflMinAllowableScreenSize
	}
	if !IsNil(o.WurflMinAllowableScreenSizeMetadata) {
		toSerialize["wurflMinAllowableScreenSizeMetadata"] = o.WurflMinAllowableScreenSizeMetadata
	}
	return toSerialize, nil
}

type NullableAccountSettingsInformation struct {
	value *AccountSettingsInformation
	isSet bool
}

func (v NullableAccountSettingsInformation) Get() *AccountSettingsInformation {
	return v.value
}

func (v *NullableAccountSettingsInformation) Set(val *AccountSettingsInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountSettingsInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountSettingsInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountSettingsInformation(val *AccountSettingsInformation) *NullableAccountSettingsInformation {
	return &NullableAccountSettingsInformation{value: val, isSet: true}
}

func (v NullableAccountSettingsInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountSettingsInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


