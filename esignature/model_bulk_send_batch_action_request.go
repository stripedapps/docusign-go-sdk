/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BulkSendBatchActionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkSendBatchActionRequest{}

// BulkSendBatchActionRequest 
type BulkSendBatchActionRequest struct {
	// The action to apply. Valid values:  * `Resend` * `Correct` * `Void`  This property is required and case-sensitive. The value must correspond to the `bulkAction` query parameter. 
	Action *string `json:"action,omitempty"`
	Notification *Notification `json:"notification,omitempty"`
	// A string explaining why the envelope is voided. This value is shown in a message to the recipients.  This property is required if `action` is `Void`. 
	VoidReason *string `json:"voidReason,omitempty"`
}

// NewBulkSendBatchActionRequest instantiates a new BulkSendBatchActionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkSendBatchActionRequest() *BulkSendBatchActionRequest {
	this := BulkSendBatchActionRequest{}
	return &this
}

// NewBulkSendBatchActionRequestWithDefaults instantiates a new BulkSendBatchActionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkSendBatchActionRequestWithDefaults() *BulkSendBatchActionRequest {
	this := BulkSendBatchActionRequest{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *BulkSendBatchActionRequest) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchActionRequest) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *BulkSendBatchActionRequest) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *BulkSendBatchActionRequest) SetAction(v string) {
	o.Action = &v
}

// GetNotification returns the Notification field value if set, zero value otherwise.
func (o *BulkSendBatchActionRequest) GetNotification() Notification {
	if o == nil || IsNil(o.Notification) {
		var ret Notification
		return ret
	}
	return *o.Notification
}

// GetNotificationOk returns a tuple with the Notification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchActionRequest) GetNotificationOk() (*Notification, bool) {
	if o == nil || IsNil(o.Notification) {
		return nil, false
	}
	return o.Notification, true
}

// HasNotification returns a boolean if a field has been set.
func (o *BulkSendBatchActionRequest) HasNotification() bool {
	if o != nil && !IsNil(o.Notification) {
		return true
	}

	return false
}

// SetNotification gets a reference to the given Notification and assigns it to the Notification field.
func (o *BulkSendBatchActionRequest) SetNotification(v Notification) {
	o.Notification = &v
}

// GetVoidReason returns the VoidReason field value if set, zero value otherwise.
func (o *BulkSendBatchActionRequest) GetVoidReason() string {
	if o == nil || IsNil(o.VoidReason) {
		var ret string
		return ret
	}
	return *o.VoidReason
}

// GetVoidReasonOk returns a tuple with the VoidReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchActionRequest) GetVoidReasonOk() (*string, bool) {
	if o == nil || IsNil(o.VoidReason) {
		return nil, false
	}
	return o.VoidReason, true
}

// HasVoidReason returns a boolean if a field has been set.
func (o *BulkSendBatchActionRequest) HasVoidReason() bool {
	if o != nil && !IsNil(o.VoidReason) {
		return true
	}

	return false
}

// SetVoidReason gets a reference to the given string and assigns it to the VoidReason field.
func (o *BulkSendBatchActionRequest) SetVoidReason(v string) {
	o.VoidReason = &v
}

func (o BulkSendBatchActionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkSendBatchActionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Notification) {
		toSerialize["notification"] = o.Notification
	}
	if !IsNil(o.VoidReason) {
		toSerialize["voidReason"] = o.VoidReason
	}
	return toSerialize, nil
}

type NullableBulkSendBatchActionRequest struct {
	value *BulkSendBatchActionRequest
	isSet bool
}

func (v NullableBulkSendBatchActionRequest) Get() *BulkSendBatchActionRequest {
	return v.value
}

func (v *NullableBulkSendBatchActionRequest) Set(val *BulkSendBatchActionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkSendBatchActionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkSendBatchActionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkSendBatchActionRequest(val *BulkSendBatchActionRequest) *NullableBulkSendBatchActionRequest {
	return &NullableBulkSendBatchActionRequest{value: val, isSet: true}
}

func (v NullableBulkSendBatchActionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkSendBatchActionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


