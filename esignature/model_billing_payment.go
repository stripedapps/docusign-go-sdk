/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BillingPayment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingPayment{}

// BillingPayment Contains information on a billing plan.
type BillingPayment struct {
	// Reserved for DocuSign.
	Amount *string `json:"amount,omitempty"`
	// Reserved for DocuSign.
	InvoiceId *string `json:"invoiceId,omitempty"`
	// The ID of the payment.
	PaymentId *string `json:"paymentId,omitempty"`
}

// NewBillingPayment instantiates a new BillingPayment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingPayment() *BillingPayment {
	this := BillingPayment{}
	return &this
}

// NewBillingPaymentWithDefaults instantiates a new BillingPayment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingPaymentWithDefaults() *BillingPayment {
	this := BillingPayment{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *BillingPayment) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPayment) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *BillingPayment) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *BillingPayment) SetAmount(v string) {
	o.Amount = &v
}

// GetInvoiceId returns the InvoiceId field value if set, zero value otherwise.
func (o *BillingPayment) GetInvoiceId() string {
	if o == nil || IsNil(o.InvoiceId) {
		var ret string
		return ret
	}
	return *o.InvoiceId
}

// GetInvoiceIdOk returns a tuple with the InvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPayment) GetInvoiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceId) {
		return nil, false
	}
	return o.InvoiceId, true
}

// HasInvoiceId returns a boolean if a field has been set.
func (o *BillingPayment) HasInvoiceId() bool {
	if o != nil && !IsNil(o.InvoiceId) {
		return true
	}

	return false
}

// SetInvoiceId gets a reference to the given string and assigns it to the InvoiceId field.
func (o *BillingPayment) SetInvoiceId(v string) {
	o.InvoiceId = &v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *BillingPayment) GetPaymentId() string {
	if o == nil || IsNil(o.PaymentId) {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPayment) GetPaymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *BillingPayment) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *BillingPayment) SetPaymentId(v string) {
	o.PaymentId = &v
}

func (o BillingPayment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingPayment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.InvoiceId) {
		toSerialize["invoiceId"] = o.InvoiceId
	}
	if !IsNil(o.PaymentId) {
		toSerialize["paymentId"] = o.PaymentId
	}
	return toSerialize, nil
}

type NullableBillingPayment struct {
	value *BillingPayment
	isSet bool
}

func (v NullableBillingPayment) Get() *BillingPayment {
	return v.value
}

func (v *NullableBillingPayment) Set(val *BillingPayment) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingPayment) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingPayment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingPayment(val *BillingPayment) *NullableBillingPayment {
	return &NullableBillingPayment{value: val, isSet: true}
}

func (v NullableBillingPayment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingPayment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


