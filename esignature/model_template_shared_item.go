/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TemplateSharedItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateSharedItem{}

// TemplateSharedItem Information about shared templates.
type TemplateSharedItem struct {
	ErrorDetails *ErrorDetails `json:"errorDetails,omitempty"`
	Owner *UserInfo `json:"owner,omitempty"`
	// The user's encrypted password hash.
	Password *string `json:"password,omitempty"`
	// How the template is shared. One of:  - `not_shared` - `shared_to` 
	Shared *string `json:"shared,omitempty"`
	// List of groups that share the template.
	SharedGroups []MemberGroupSharedItem `json:"sharedGroups,omitempty"`
	// List of users that share the template.
	SharedUsers []UserSharedItem `json:"sharedUsers,omitempty"`
	// The unique identifier of the template. If this is not provided, DocuSign will generate a value. 
	TemplateId *string `json:"templateId,omitempty"`
	// The name of the shared template.
	TemplateName *string `json:"templateName,omitempty"`
}

// NewTemplateSharedItem instantiates a new TemplateSharedItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateSharedItem() *TemplateSharedItem {
	this := TemplateSharedItem{}
	return &this
}

// NewTemplateSharedItemWithDefaults instantiates a new TemplateSharedItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateSharedItemWithDefaults() *TemplateSharedItem {
	this := TemplateSharedItem{}
	return &this
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *TemplateSharedItem) GetErrorDetails() ErrorDetails {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret ErrorDetails
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSharedItem) GetErrorDetailsOk() (*ErrorDetails, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *TemplateSharedItem) HasErrorDetails() bool {
	if o != nil && !IsNil(o.ErrorDetails) {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given ErrorDetails and assigns it to the ErrorDetails field.
func (o *TemplateSharedItem) SetErrorDetails(v ErrorDetails) {
	o.ErrorDetails = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *TemplateSharedItem) GetOwner() UserInfo {
	if o == nil || IsNil(o.Owner) {
		var ret UserInfo
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSharedItem) GetOwnerOk() (*UserInfo, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *TemplateSharedItem) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given UserInfo and assigns it to the Owner field.
func (o *TemplateSharedItem) SetOwner(v UserInfo) {
	o.Owner = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *TemplateSharedItem) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSharedItem) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *TemplateSharedItem) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *TemplateSharedItem) SetPassword(v string) {
	o.Password = &v
}

// GetShared returns the Shared field value if set, zero value otherwise.
func (o *TemplateSharedItem) GetShared() string {
	if o == nil || IsNil(o.Shared) {
		var ret string
		return ret
	}
	return *o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSharedItem) GetSharedOk() (*string, bool) {
	if o == nil || IsNil(o.Shared) {
		return nil, false
	}
	return o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *TemplateSharedItem) HasShared() bool {
	if o != nil && !IsNil(o.Shared) {
		return true
	}

	return false
}

// SetShared gets a reference to the given string and assigns it to the Shared field.
func (o *TemplateSharedItem) SetShared(v string) {
	o.Shared = &v
}

// GetSharedGroups returns the SharedGroups field value if set, zero value otherwise.
func (o *TemplateSharedItem) GetSharedGroups() []MemberGroupSharedItem {
	if o == nil || IsNil(o.SharedGroups) {
		var ret []MemberGroupSharedItem
		return ret
	}
	return o.SharedGroups
}

// GetSharedGroupsOk returns a tuple with the SharedGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSharedItem) GetSharedGroupsOk() ([]MemberGroupSharedItem, bool) {
	if o == nil || IsNil(o.SharedGroups) {
		return nil, false
	}
	return o.SharedGroups, true
}

// HasSharedGroups returns a boolean if a field has been set.
func (o *TemplateSharedItem) HasSharedGroups() bool {
	if o != nil && !IsNil(o.SharedGroups) {
		return true
	}

	return false
}

// SetSharedGroups gets a reference to the given []MemberGroupSharedItem and assigns it to the SharedGroups field.
func (o *TemplateSharedItem) SetSharedGroups(v []MemberGroupSharedItem) {
	o.SharedGroups = v
}

// GetSharedUsers returns the SharedUsers field value if set, zero value otherwise.
func (o *TemplateSharedItem) GetSharedUsers() []UserSharedItem {
	if o == nil || IsNil(o.SharedUsers) {
		var ret []UserSharedItem
		return ret
	}
	return o.SharedUsers
}

// GetSharedUsersOk returns a tuple with the SharedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSharedItem) GetSharedUsersOk() ([]UserSharedItem, bool) {
	if o == nil || IsNil(o.SharedUsers) {
		return nil, false
	}
	return o.SharedUsers, true
}

// HasSharedUsers returns a boolean if a field has been set.
func (o *TemplateSharedItem) HasSharedUsers() bool {
	if o != nil && !IsNil(o.SharedUsers) {
		return true
	}

	return false
}

// SetSharedUsers gets a reference to the given []UserSharedItem and assigns it to the SharedUsers field.
func (o *TemplateSharedItem) SetSharedUsers(v []UserSharedItem) {
	o.SharedUsers = v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *TemplateSharedItem) GetTemplateId() string {
	if o == nil || IsNil(o.TemplateId) {
		var ret string
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSharedItem) GetTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *TemplateSharedItem) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given string and assigns it to the TemplateId field.
func (o *TemplateSharedItem) SetTemplateId(v string) {
	o.TemplateId = &v
}

// GetTemplateName returns the TemplateName field value if set, zero value otherwise.
func (o *TemplateSharedItem) GetTemplateName() string {
	if o == nil || IsNil(o.TemplateName) {
		var ret string
		return ret
	}
	return *o.TemplateName
}

// GetTemplateNameOk returns a tuple with the TemplateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSharedItem) GetTemplateNameOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateName) {
		return nil, false
	}
	return o.TemplateName, true
}

// HasTemplateName returns a boolean if a field has been set.
func (o *TemplateSharedItem) HasTemplateName() bool {
	if o != nil && !IsNil(o.TemplateName) {
		return true
	}

	return false
}

// SetTemplateName gets a reference to the given string and assigns it to the TemplateName field.
func (o *TemplateSharedItem) SetTemplateName(v string) {
	o.TemplateName = &v
}

func (o TemplateSharedItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateSharedItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorDetails) {
		toSerialize["errorDetails"] = o.ErrorDetails
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Shared) {
		toSerialize["shared"] = o.Shared
	}
	if !IsNil(o.SharedGroups) {
		toSerialize["sharedGroups"] = o.SharedGroups
	}
	if !IsNil(o.SharedUsers) {
		toSerialize["sharedUsers"] = o.SharedUsers
	}
	if !IsNil(o.TemplateId) {
		toSerialize["templateId"] = o.TemplateId
	}
	if !IsNil(o.TemplateName) {
		toSerialize["templateName"] = o.TemplateName
	}
	return toSerialize, nil
}

type NullableTemplateSharedItem struct {
	value *TemplateSharedItem
	isSet bool
}

func (v NullableTemplateSharedItem) Get() *TemplateSharedItem {
	return v.value
}

func (v *NullableTemplateSharedItem) Set(val *TemplateSharedItem) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateSharedItem) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateSharedItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateSharedItem(val *TemplateSharedItem) *NullableTemplateSharedItem {
	return &NullableTemplateSharedItem{value: val, isSet: true}
}

func (v NullableTemplateSharedItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateSharedItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


