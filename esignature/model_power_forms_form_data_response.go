/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PowerFormsFormDataResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PowerFormsFormDataResponse{}

// PowerFormsFormDataResponse 
type PowerFormsFormDataResponse struct {
	// 
	Envelopes []PowerFormFormDataEnvelope `json:"envelopes,omitempty"`
}

// NewPowerFormsFormDataResponse instantiates a new PowerFormsFormDataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPowerFormsFormDataResponse() *PowerFormsFormDataResponse {
	this := PowerFormsFormDataResponse{}
	return &this
}

// NewPowerFormsFormDataResponseWithDefaults instantiates a new PowerFormsFormDataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPowerFormsFormDataResponseWithDefaults() *PowerFormsFormDataResponse {
	this := PowerFormsFormDataResponse{}
	return &this
}

// GetEnvelopes returns the Envelopes field value if set, zero value otherwise.
func (o *PowerFormsFormDataResponse) GetEnvelopes() []PowerFormFormDataEnvelope {
	if o == nil || IsNil(o.Envelopes) {
		var ret []PowerFormFormDataEnvelope
		return ret
	}
	return o.Envelopes
}

// GetEnvelopesOk returns a tuple with the Envelopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerFormsFormDataResponse) GetEnvelopesOk() ([]PowerFormFormDataEnvelope, bool) {
	if o == nil || IsNil(o.Envelopes) {
		return nil, false
	}
	return o.Envelopes, true
}

// HasEnvelopes returns a boolean if a field has been set.
func (o *PowerFormsFormDataResponse) HasEnvelopes() bool {
	if o != nil && !IsNil(o.Envelopes) {
		return true
	}

	return false
}

// SetEnvelopes gets a reference to the given []PowerFormFormDataEnvelope and assigns it to the Envelopes field.
func (o *PowerFormsFormDataResponse) SetEnvelopes(v []PowerFormFormDataEnvelope) {
	o.Envelopes = v
}

func (o PowerFormsFormDataResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PowerFormsFormDataResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Envelopes) {
		toSerialize["envelopes"] = o.Envelopes
	}
	return toSerialize, nil
}

type NullablePowerFormsFormDataResponse struct {
	value *PowerFormsFormDataResponse
	isSet bool
}

func (v NullablePowerFormsFormDataResponse) Get() *PowerFormsFormDataResponse {
	return v.value
}

func (v *NullablePowerFormsFormDataResponse) Set(val *PowerFormsFormDataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePowerFormsFormDataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePowerFormsFormDataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePowerFormsFormDataResponse(val *PowerFormsFormDataResponse) *NullablePowerFormsFormDataResponse {
	return &NullablePowerFormsFormDataResponse{value: val, isSet: true}
}

func (v NullablePowerFormsFormDataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePowerFormsFormDataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


