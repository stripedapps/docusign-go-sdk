/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BrandsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BrandsResponse{}

// BrandsResponse 
type BrandsResponse struct {
	// A list of brands.
	Brands []Brand `json:"brands,omitempty"`
	// The brand that envelope recipients see when a brand is not explicitly set.
	RecipientBrandIdDefault *string `json:"recipientBrandIdDefault,omitempty"`
	// The brand that envelope senders see when a brand is not explicitly set.
	SenderBrandIdDefault *string `json:"senderBrandIdDefault,omitempty"`
}

// NewBrandsResponse instantiates a new BrandsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrandsResponse() *BrandsResponse {
	this := BrandsResponse{}
	return &this
}

// NewBrandsResponseWithDefaults instantiates a new BrandsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrandsResponseWithDefaults() *BrandsResponse {
	this := BrandsResponse{}
	return &this
}

// GetBrands returns the Brands field value if set, zero value otherwise.
func (o *BrandsResponse) GetBrands() []Brand {
	if o == nil || IsNil(o.Brands) {
		var ret []Brand
		return ret
	}
	return o.Brands
}

// GetBrandsOk returns a tuple with the Brands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandsResponse) GetBrandsOk() ([]Brand, bool) {
	if o == nil || IsNil(o.Brands) {
		return nil, false
	}
	return o.Brands, true
}

// HasBrands returns a boolean if a field has been set.
func (o *BrandsResponse) HasBrands() bool {
	if o != nil && !IsNil(o.Brands) {
		return true
	}

	return false
}

// SetBrands gets a reference to the given []Brand and assigns it to the Brands field.
func (o *BrandsResponse) SetBrands(v []Brand) {
	o.Brands = v
}

// GetRecipientBrandIdDefault returns the RecipientBrandIdDefault field value if set, zero value otherwise.
func (o *BrandsResponse) GetRecipientBrandIdDefault() string {
	if o == nil || IsNil(o.RecipientBrandIdDefault) {
		var ret string
		return ret
	}
	return *o.RecipientBrandIdDefault
}

// GetRecipientBrandIdDefaultOk returns a tuple with the RecipientBrandIdDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandsResponse) GetRecipientBrandIdDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientBrandIdDefault) {
		return nil, false
	}
	return o.RecipientBrandIdDefault, true
}

// HasRecipientBrandIdDefault returns a boolean if a field has been set.
func (o *BrandsResponse) HasRecipientBrandIdDefault() bool {
	if o != nil && !IsNil(o.RecipientBrandIdDefault) {
		return true
	}

	return false
}

// SetRecipientBrandIdDefault gets a reference to the given string and assigns it to the RecipientBrandIdDefault field.
func (o *BrandsResponse) SetRecipientBrandIdDefault(v string) {
	o.RecipientBrandIdDefault = &v
}

// GetSenderBrandIdDefault returns the SenderBrandIdDefault field value if set, zero value otherwise.
func (o *BrandsResponse) GetSenderBrandIdDefault() string {
	if o == nil || IsNil(o.SenderBrandIdDefault) {
		var ret string
		return ret
	}
	return *o.SenderBrandIdDefault
}

// GetSenderBrandIdDefaultOk returns a tuple with the SenderBrandIdDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandsResponse) GetSenderBrandIdDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.SenderBrandIdDefault) {
		return nil, false
	}
	return o.SenderBrandIdDefault, true
}

// HasSenderBrandIdDefault returns a boolean if a field has been set.
func (o *BrandsResponse) HasSenderBrandIdDefault() bool {
	if o != nil && !IsNil(o.SenderBrandIdDefault) {
		return true
	}

	return false
}

// SetSenderBrandIdDefault gets a reference to the given string and assigns it to the SenderBrandIdDefault field.
func (o *BrandsResponse) SetSenderBrandIdDefault(v string) {
	o.SenderBrandIdDefault = &v
}

func (o BrandsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BrandsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Brands) {
		toSerialize["brands"] = o.Brands
	}
	if !IsNil(o.RecipientBrandIdDefault) {
		toSerialize["recipientBrandIdDefault"] = o.RecipientBrandIdDefault
	}
	if !IsNil(o.SenderBrandIdDefault) {
		toSerialize["senderBrandIdDefault"] = o.SenderBrandIdDefault
	}
	return toSerialize, nil
}

type NullableBrandsResponse struct {
	value *BrandsResponse
	isSet bool
}

func (v NullableBrandsResponse) Get() *BrandsResponse {
	return v.value
}

func (v *NullableBrandsResponse) Set(val *BrandsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBrandsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBrandsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrandsResponse(val *BrandsResponse) *NullableBrandsResponse {
	return &NullableBrandsResponse{value: val, isSet: true}
}

func (v NullableBrandsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrandsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


