/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AdminMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminMessage{}

// AdminMessage 
type AdminMessage struct {
	// 
	BaseMessage *string `json:"baseMessage,omitempty"`
	// 
	MoreInformation *string `json:"moreInformation,omitempty"`
}

// NewAdminMessage instantiates a new AdminMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminMessage() *AdminMessage {
	this := AdminMessage{}
	return &this
}

// NewAdminMessageWithDefaults instantiates a new AdminMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminMessageWithDefaults() *AdminMessage {
	this := AdminMessage{}
	return &this
}

// GetBaseMessage returns the BaseMessage field value if set, zero value otherwise.
func (o *AdminMessage) GetBaseMessage() string {
	if o == nil || IsNil(o.BaseMessage) {
		var ret string
		return ret
	}
	return *o.BaseMessage
}

// GetBaseMessageOk returns a tuple with the BaseMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminMessage) GetBaseMessageOk() (*string, bool) {
	if o == nil || IsNil(o.BaseMessage) {
		return nil, false
	}
	return o.BaseMessage, true
}

// HasBaseMessage returns a boolean if a field has been set.
func (o *AdminMessage) HasBaseMessage() bool {
	if o != nil && !IsNil(o.BaseMessage) {
		return true
	}

	return false
}

// SetBaseMessage gets a reference to the given string and assigns it to the BaseMessage field.
func (o *AdminMessage) SetBaseMessage(v string) {
	o.BaseMessage = &v
}

// GetMoreInformation returns the MoreInformation field value if set, zero value otherwise.
func (o *AdminMessage) GetMoreInformation() string {
	if o == nil || IsNil(o.MoreInformation) {
		var ret string
		return ret
	}
	return *o.MoreInformation
}

// GetMoreInformationOk returns a tuple with the MoreInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminMessage) GetMoreInformationOk() (*string, bool) {
	if o == nil || IsNil(o.MoreInformation) {
		return nil, false
	}
	return o.MoreInformation, true
}

// HasMoreInformation returns a boolean if a field has been set.
func (o *AdminMessage) HasMoreInformation() bool {
	if o != nil && !IsNil(o.MoreInformation) {
		return true
	}

	return false
}

// SetMoreInformation gets a reference to the given string and assigns it to the MoreInformation field.
func (o *AdminMessage) SetMoreInformation(v string) {
	o.MoreInformation = &v
}

func (o AdminMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseMessage) {
		toSerialize["baseMessage"] = o.BaseMessage
	}
	if !IsNil(o.MoreInformation) {
		toSerialize["moreInformation"] = o.MoreInformation
	}
	return toSerialize, nil
}

type NullableAdminMessage struct {
	value *AdminMessage
	isSet bool
}

func (v NullableAdminMessage) Get() *AdminMessage {
	return v.value
}

func (v *NullableAdminMessage) Set(val *AdminMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminMessage(val *AdminMessage) *NullableAdminMessage {
	return &NullableAdminMessage{value: val, isSet: true}
}

func (v NullableAdminMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


