/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MobileNotifierConfigurationInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MobileNotifierConfigurationInformation{}

// MobileNotifierConfigurationInformation 
type MobileNotifierConfigurationInformation struct {
	// 
	MobileNotifierConfigurations []MobileNotifierConfiguration `json:"mobileNotifierConfigurations,omitempty"`
}

// NewMobileNotifierConfigurationInformation instantiates a new MobileNotifierConfigurationInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileNotifierConfigurationInformation() *MobileNotifierConfigurationInformation {
	this := MobileNotifierConfigurationInformation{}
	return &this
}

// NewMobileNotifierConfigurationInformationWithDefaults instantiates a new MobileNotifierConfigurationInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileNotifierConfigurationInformationWithDefaults() *MobileNotifierConfigurationInformation {
	this := MobileNotifierConfigurationInformation{}
	return &this
}

// GetMobileNotifierConfigurations returns the MobileNotifierConfigurations field value if set, zero value otherwise.
func (o *MobileNotifierConfigurationInformation) GetMobileNotifierConfigurations() []MobileNotifierConfiguration {
	if o == nil || IsNil(o.MobileNotifierConfigurations) {
		var ret []MobileNotifierConfiguration
		return ret
	}
	return o.MobileNotifierConfigurations
}

// GetMobileNotifierConfigurationsOk returns a tuple with the MobileNotifierConfigurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileNotifierConfigurationInformation) GetMobileNotifierConfigurationsOk() ([]MobileNotifierConfiguration, bool) {
	if o == nil || IsNil(o.MobileNotifierConfigurations) {
		return nil, false
	}
	return o.MobileNotifierConfigurations, true
}

// HasMobileNotifierConfigurations returns a boolean if a field has been set.
func (o *MobileNotifierConfigurationInformation) HasMobileNotifierConfigurations() bool {
	if o != nil && !IsNil(o.MobileNotifierConfigurations) {
		return true
	}

	return false
}

// SetMobileNotifierConfigurations gets a reference to the given []MobileNotifierConfiguration and assigns it to the MobileNotifierConfigurations field.
func (o *MobileNotifierConfigurationInformation) SetMobileNotifierConfigurations(v []MobileNotifierConfiguration) {
	o.MobileNotifierConfigurations = v
}

func (o MobileNotifierConfigurationInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobileNotifierConfigurationInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MobileNotifierConfigurations) {
		toSerialize["mobileNotifierConfigurations"] = o.MobileNotifierConfigurations
	}
	return toSerialize, nil
}

type NullableMobileNotifierConfigurationInformation struct {
	value *MobileNotifierConfigurationInformation
	isSet bool
}

func (v NullableMobileNotifierConfigurationInformation) Get() *MobileNotifierConfigurationInformation {
	return v.value
}

func (v *NullableMobileNotifierConfigurationInformation) Set(val *MobileNotifierConfigurationInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileNotifierConfigurationInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileNotifierConfigurationInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileNotifierConfigurationInformation(val *MobileNotifierConfigurationInformation) *NullableMobileNotifierConfigurationInformation {
	return &NullableMobileNotifierConfigurationInformation{value: val, isSet: true}
}

func (v NullableMobileNotifierConfigurationInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileNotifierConfigurationInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


