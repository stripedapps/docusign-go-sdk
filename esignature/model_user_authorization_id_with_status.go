/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserAuthorizationIdWithStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserAuthorizationIdWithStatus{}

// UserAuthorizationIdWithStatus 
type UserAuthorizationIdWithStatus struct {
	// 
	AuthorizationId *string `json:"authorizationId,omitempty"`
	// 
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// 
	Success *string `json:"success,omitempty"`
}

// NewUserAuthorizationIdWithStatus instantiates a new UserAuthorizationIdWithStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAuthorizationIdWithStatus() *UserAuthorizationIdWithStatus {
	this := UserAuthorizationIdWithStatus{}
	return &this
}

// NewUserAuthorizationIdWithStatusWithDefaults instantiates a new UserAuthorizationIdWithStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAuthorizationIdWithStatusWithDefaults() *UserAuthorizationIdWithStatus {
	this := UserAuthorizationIdWithStatus{}
	return &this
}

// GetAuthorizationId returns the AuthorizationId field value if set, zero value otherwise.
func (o *UserAuthorizationIdWithStatus) GetAuthorizationId() string {
	if o == nil || IsNil(o.AuthorizationId) {
		var ret string
		return ret
	}
	return *o.AuthorizationId
}

// GetAuthorizationIdOk returns a tuple with the AuthorizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAuthorizationIdWithStatus) GetAuthorizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationId) {
		return nil, false
	}
	return o.AuthorizationId, true
}

// HasAuthorizationId returns a boolean if a field has been set.
func (o *UserAuthorizationIdWithStatus) HasAuthorizationId() bool {
	if o != nil && !IsNil(o.AuthorizationId) {
		return true
	}

	return false
}

// SetAuthorizationId gets a reference to the given string and assigns it to the AuthorizationId field.
func (o *UserAuthorizationIdWithStatus) SetAuthorizationId(v string) {
	o.AuthorizationId = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *UserAuthorizationIdWithStatus) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAuthorizationIdWithStatus) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *UserAuthorizationIdWithStatus) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *UserAuthorizationIdWithStatus) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *UserAuthorizationIdWithStatus) GetSuccess() string {
	if o == nil || IsNil(o.Success) {
		var ret string
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAuthorizationIdWithStatus) GetSuccessOk() (*string, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *UserAuthorizationIdWithStatus) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given string and assigns it to the Success field.
func (o *UserAuthorizationIdWithStatus) SetSuccess(v string) {
	o.Success = &v
}

func (o UserAuthorizationIdWithStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserAuthorizationIdWithStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorizationId) {
		toSerialize["authorizationId"] = o.AuthorizationId
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableUserAuthorizationIdWithStatus struct {
	value *UserAuthorizationIdWithStatus
	isSet bool
}

func (v NullableUserAuthorizationIdWithStatus) Get() *UserAuthorizationIdWithStatus {
	return v.value
}

func (v *NullableUserAuthorizationIdWithStatus) Set(val *UserAuthorizationIdWithStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAuthorizationIdWithStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAuthorizationIdWithStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAuthorizationIdWithStatus(val *UserAuthorizationIdWithStatus) *NullableUserAuthorizationIdWithStatus {
	return &NullableUserAuthorizationIdWithStatus{value: val, isSet: true}
}

func (v NullableUserAuthorizationIdWithStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAuthorizationIdWithStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


