/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PowerFormFormDataRecipient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PowerFormFormDataRecipient{}

// PowerFormFormDataRecipient 
type PowerFormFormDataRecipient struct {
	// 
	Email *string `json:"email,omitempty"`
	// 
	FormData []NameValue `json:"formData,omitempty"`
	// The name of the recipient.
	Name *string `json:"name,omitempty"`
	// A local reference used to map recipients to other objects, such as specific document tabs.  A `recipientId` must be either an integer or a GUID, and the `recipientId` must be unique within an envelope.  For example, many envelopes assign the first recipient a `recipientId` of `1`. 
	RecipientId *string `json:"recipientId,omitempty"`
}

// NewPowerFormFormDataRecipient instantiates a new PowerFormFormDataRecipient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPowerFormFormDataRecipient() *PowerFormFormDataRecipient {
	this := PowerFormFormDataRecipient{}
	return &this
}

// NewPowerFormFormDataRecipientWithDefaults instantiates a new PowerFormFormDataRecipient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPowerFormFormDataRecipientWithDefaults() *PowerFormFormDataRecipient {
	this := PowerFormFormDataRecipient{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *PowerFormFormDataRecipient) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerFormFormDataRecipient) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PowerFormFormDataRecipient) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *PowerFormFormDataRecipient) SetEmail(v string) {
	o.Email = &v
}

// GetFormData returns the FormData field value if set, zero value otherwise.
func (o *PowerFormFormDataRecipient) GetFormData() []NameValue {
	if o == nil || IsNil(o.FormData) {
		var ret []NameValue
		return ret
	}
	return o.FormData
}

// GetFormDataOk returns a tuple with the FormData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerFormFormDataRecipient) GetFormDataOk() ([]NameValue, bool) {
	if o == nil || IsNil(o.FormData) {
		return nil, false
	}
	return o.FormData, true
}

// HasFormData returns a boolean if a field has been set.
func (o *PowerFormFormDataRecipient) HasFormData() bool {
	if o != nil && !IsNil(o.FormData) {
		return true
	}

	return false
}

// SetFormData gets a reference to the given []NameValue and assigns it to the FormData field.
func (o *PowerFormFormDataRecipient) SetFormData(v []NameValue) {
	o.FormData = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PowerFormFormDataRecipient) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerFormFormDataRecipient) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PowerFormFormDataRecipient) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PowerFormFormDataRecipient) SetName(v string) {
	o.Name = &v
}

// GetRecipientId returns the RecipientId field value if set, zero value otherwise.
func (o *PowerFormFormDataRecipient) GetRecipientId() string {
	if o == nil || IsNil(o.RecipientId) {
		var ret string
		return ret
	}
	return *o.RecipientId
}

// GetRecipientIdOk returns a tuple with the RecipientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerFormFormDataRecipient) GetRecipientIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientId) {
		return nil, false
	}
	return o.RecipientId, true
}

// HasRecipientId returns a boolean if a field has been set.
func (o *PowerFormFormDataRecipient) HasRecipientId() bool {
	if o != nil && !IsNil(o.RecipientId) {
		return true
	}

	return false
}

// SetRecipientId gets a reference to the given string and assigns it to the RecipientId field.
func (o *PowerFormFormDataRecipient) SetRecipientId(v string) {
	o.RecipientId = &v
}

func (o PowerFormFormDataRecipient) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PowerFormFormDataRecipient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.FormData) {
		toSerialize["formData"] = o.FormData
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RecipientId) {
		toSerialize["recipientId"] = o.RecipientId
	}
	return toSerialize, nil
}

type NullablePowerFormFormDataRecipient struct {
	value *PowerFormFormDataRecipient
	isSet bool
}

func (v NullablePowerFormFormDataRecipient) Get() *PowerFormFormDataRecipient {
	return v.value
}

func (v *NullablePowerFormFormDataRecipient) Set(val *PowerFormFormDataRecipient) {
	v.value = val
	v.isSet = true
}

func (v NullablePowerFormFormDataRecipient) IsSet() bool {
	return v.isSet
}

func (v *NullablePowerFormFormDataRecipient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePowerFormFormDataRecipient(val *PowerFormFormDataRecipient) *NullablePowerFormFormDataRecipient {
	return &NullablePowerFormFormDataRecipient{value: val, isSet: true}
}

func (v NullablePowerFormFormDataRecipient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePowerFormFormDataRecipient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


