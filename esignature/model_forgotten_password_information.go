/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ForgottenPasswordInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ForgottenPasswordInformation{}

// ForgottenPasswordInformation A complex element that has up to four Question/Answer pairs for forgotten password information.
type ForgottenPasswordInformation struct {
	// The answer to the first forgotten password challenge question.
	ForgottenPasswordAnswer1 *string `json:"forgottenPasswordAnswer1,omitempty"`
	// The answer to the second forgotten password challenge question.
	ForgottenPasswordAnswer2 *string `json:"forgottenPasswordAnswer2,omitempty"`
	// The answer to the third forgotten password challenge question.
	ForgottenPasswordAnswer3 *string `json:"forgottenPasswordAnswer3,omitempty"`
	// The answer to the fourth forgotten password challenge question.
	ForgottenPasswordAnswer4 *string `json:"forgottenPasswordAnswer4,omitempty"`
	// The first challenge question presented to a user who has forgotten their password.
	ForgottenPasswordQuestion1 *string `json:"forgottenPasswordQuestion1,omitempty"`
	// The second challenge question presented to a user who has forgotten their password.
	ForgottenPasswordQuestion2 *string `json:"forgottenPasswordQuestion2,omitempty"`
	// The third challenge question presented to a user who has forgotten their password.
	ForgottenPasswordQuestion3 *string `json:"forgottenPasswordQuestion3,omitempty"`
	// The fourth challenge question presented to a user who has forgotten their password.
	ForgottenPasswordQuestion4 *string `json:"forgottenPasswordQuestion4,omitempty"`
}

// NewForgottenPasswordInformation instantiates a new ForgottenPasswordInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewForgottenPasswordInformation() *ForgottenPasswordInformation {
	this := ForgottenPasswordInformation{}
	return &this
}

// NewForgottenPasswordInformationWithDefaults instantiates a new ForgottenPasswordInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewForgottenPasswordInformationWithDefaults() *ForgottenPasswordInformation {
	this := ForgottenPasswordInformation{}
	return &this
}

// GetForgottenPasswordAnswer1 returns the ForgottenPasswordAnswer1 field value if set, zero value otherwise.
func (o *ForgottenPasswordInformation) GetForgottenPasswordAnswer1() string {
	if o == nil || IsNil(o.ForgottenPasswordAnswer1) {
		var ret string
		return ret
	}
	return *o.ForgottenPasswordAnswer1
}

// GetForgottenPasswordAnswer1Ok returns a tuple with the ForgottenPasswordAnswer1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForgottenPasswordInformation) GetForgottenPasswordAnswer1Ok() (*string, bool) {
	if o == nil || IsNil(o.ForgottenPasswordAnswer1) {
		return nil, false
	}
	return o.ForgottenPasswordAnswer1, true
}

// HasForgottenPasswordAnswer1 returns a boolean if a field has been set.
func (o *ForgottenPasswordInformation) HasForgottenPasswordAnswer1() bool {
	if o != nil && !IsNil(o.ForgottenPasswordAnswer1) {
		return true
	}

	return false
}

// SetForgottenPasswordAnswer1 gets a reference to the given string and assigns it to the ForgottenPasswordAnswer1 field.
func (o *ForgottenPasswordInformation) SetForgottenPasswordAnswer1(v string) {
	o.ForgottenPasswordAnswer1 = &v
}

// GetForgottenPasswordAnswer2 returns the ForgottenPasswordAnswer2 field value if set, zero value otherwise.
func (o *ForgottenPasswordInformation) GetForgottenPasswordAnswer2() string {
	if o == nil || IsNil(o.ForgottenPasswordAnswer2) {
		var ret string
		return ret
	}
	return *o.ForgottenPasswordAnswer2
}

// GetForgottenPasswordAnswer2Ok returns a tuple with the ForgottenPasswordAnswer2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForgottenPasswordInformation) GetForgottenPasswordAnswer2Ok() (*string, bool) {
	if o == nil || IsNil(o.ForgottenPasswordAnswer2) {
		return nil, false
	}
	return o.ForgottenPasswordAnswer2, true
}

// HasForgottenPasswordAnswer2 returns a boolean if a field has been set.
func (o *ForgottenPasswordInformation) HasForgottenPasswordAnswer2() bool {
	if o != nil && !IsNil(o.ForgottenPasswordAnswer2) {
		return true
	}

	return false
}

// SetForgottenPasswordAnswer2 gets a reference to the given string and assigns it to the ForgottenPasswordAnswer2 field.
func (o *ForgottenPasswordInformation) SetForgottenPasswordAnswer2(v string) {
	o.ForgottenPasswordAnswer2 = &v
}

// GetForgottenPasswordAnswer3 returns the ForgottenPasswordAnswer3 field value if set, zero value otherwise.
func (o *ForgottenPasswordInformation) GetForgottenPasswordAnswer3() string {
	if o == nil || IsNil(o.ForgottenPasswordAnswer3) {
		var ret string
		return ret
	}
	return *o.ForgottenPasswordAnswer3
}

// GetForgottenPasswordAnswer3Ok returns a tuple with the ForgottenPasswordAnswer3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForgottenPasswordInformation) GetForgottenPasswordAnswer3Ok() (*string, bool) {
	if o == nil || IsNil(o.ForgottenPasswordAnswer3) {
		return nil, false
	}
	return o.ForgottenPasswordAnswer3, true
}

// HasForgottenPasswordAnswer3 returns a boolean if a field has been set.
func (o *ForgottenPasswordInformation) HasForgottenPasswordAnswer3() bool {
	if o != nil && !IsNil(o.ForgottenPasswordAnswer3) {
		return true
	}

	return false
}

// SetForgottenPasswordAnswer3 gets a reference to the given string and assigns it to the ForgottenPasswordAnswer3 field.
func (o *ForgottenPasswordInformation) SetForgottenPasswordAnswer3(v string) {
	o.ForgottenPasswordAnswer3 = &v
}

// GetForgottenPasswordAnswer4 returns the ForgottenPasswordAnswer4 field value if set, zero value otherwise.
func (o *ForgottenPasswordInformation) GetForgottenPasswordAnswer4() string {
	if o == nil || IsNil(o.ForgottenPasswordAnswer4) {
		var ret string
		return ret
	}
	return *o.ForgottenPasswordAnswer4
}

// GetForgottenPasswordAnswer4Ok returns a tuple with the ForgottenPasswordAnswer4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForgottenPasswordInformation) GetForgottenPasswordAnswer4Ok() (*string, bool) {
	if o == nil || IsNil(o.ForgottenPasswordAnswer4) {
		return nil, false
	}
	return o.ForgottenPasswordAnswer4, true
}

// HasForgottenPasswordAnswer4 returns a boolean if a field has been set.
func (o *ForgottenPasswordInformation) HasForgottenPasswordAnswer4() bool {
	if o != nil && !IsNil(o.ForgottenPasswordAnswer4) {
		return true
	}

	return false
}

// SetForgottenPasswordAnswer4 gets a reference to the given string and assigns it to the ForgottenPasswordAnswer4 field.
func (o *ForgottenPasswordInformation) SetForgottenPasswordAnswer4(v string) {
	o.ForgottenPasswordAnswer4 = &v
}

// GetForgottenPasswordQuestion1 returns the ForgottenPasswordQuestion1 field value if set, zero value otherwise.
func (o *ForgottenPasswordInformation) GetForgottenPasswordQuestion1() string {
	if o == nil || IsNil(o.ForgottenPasswordQuestion1) {
		var ret string
		return ret
	}
	return *o.ForgottenPasswordQuestion1
}

// GetForgottenPasswordQuestion1Ok returns a tuple with the ForgottenPasswordQuestion1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForgottenPasswordInformation) GetForgottenPasswordQuestion1Ok() (*string, bool) {
	if o == nil || IsNil(o.ForgottenPasswordQuestion1) {
		return nil, false
	}
	return o.ForgottenPasswordQuestion1, true
}

// HasForgottenPasswordQuestion1 returns a boolean if a field has been set.
func (o *ForgottenPasswordInformation) HasForgottenPasswordQuestion1() bool {
	if o != nil && !IsNil(o.ForgottenPasswordQuestion1) {
		return true
	}

	return false
}

// SetForgottenPasswordQuestion1 gets a reference to the given string and assigns it to the ForgottenPasswordQuestion1 field.
func (o *ForgottenPasswordInformation) SetForgottenPasswordQuestion1(v string) {
	o.ForgottenPasswordQuestion1 = &v
}

// GetForgottenPasswordQuestion2 returns the ForgottenPasswordQuestion2 field value if set, zero value otherwise.
func (o *ForgottenPasswordInformation) GetForgottenPasswordQuestion2() string {
	if o == nil || IsNil(o.ForgottenPasswordQuestion2) {
		var ret string
		return ret
	}
	return *o.ForgottenPasswordQuestion2
}

// GetForgottenPasswordQuestion2Ok returns a tuple with the ForgottenPasswordQuestion2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForgottenPasswordInformation) GetForgottenPasswordQuestion2Ok() (*string, bool) {
	if o == nil || IsNil(o.ForgottenPasswordQuestion2) {
		return nil, false
	}
	return o.ForgottenPasswordQuestion2, true
}

// HasForgottenPasswordQuestion2 returns a boolean if a field has been set.
func (o *ForgottenPasswordInformation) HasForgottenPasswordQuestion2() bool {
	if o != nil && !IsNil(o.ForgottenPasswordQuestion2) {
		return true
	}

	return false
}

// SetForgottenPasswordQuestion2 gets a reference to the given string and assigns it to the ForgottenPasswordQuestion2 field.
func (o *ForgottenPasswordInformation) SetForgottenPasswordQuestion2(v string) {
	o.ForgottenPasswordQuestion2 = &v
}

// GetForgottenPasswordQuestion3 returns the ForgottenPasswordQuestion3 field value if set, zero value otherwise.
func (o *ForgottenPasswordInformation) GetForgottenPasswordQuestion3() string {
	if o == nil || IsNil(o.ForgottenPasswordQuestion3) {
		var ret string
		return ret
	}
	return *o.ForgottenPasswordQuestion3
}

// GetForgottenPasswordQuestion3Ok returns a tuple with the ForgottenPasswordQuestion3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForgottenPasswordInformation) GetForgottenPasswordQuestion3Ok() (*string, bool) {
	if o == nil || IsNil(o.ForgottenPasswordQuestion3) {
		return nil, false
	}
	return o.ForgottenPasswordQuestion3, true
}

// HasForgottenPasswordQuestion3 returns a boolean if a field has been set.
func (o *ForgottenPasswordInformation) HasForgottenPasswordQuestion3() bool {
	if o != nil && !IsNil(o.ForgottenPasswordQuestion3) {
		return true
	}

	return false
}

// SetForgottenPasswordQuestion3 gets a reference to the given string and assigns it to the ForgottenPasswordQuestion3 field.
func (o *ForgottenPasswordInformation) SetForgottenPasswordQuestion3(v string) {
	o.ForgottenPasswordQuestion3 = &v
}

// GetForgottenPasswordQuestion4 returns the ForgottenPasswordQuestion4 field value if set, zero value otherwise.
func (o *ForgottenPasswordInformation) GetForgottenPasswordQuestion4() string {
	if o == nil || IsNil(o.ForgottenPasswordQuestion4) {
		var ret string
		return ret
	}
	return *o.ForgottenPasswordQuestion4
}

// GetForgottenPasswordQuestion4Ok returns a tuple with the ForgottenPasswordQuestion4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForgottenPasswordInformation) GetForgottenPasswordQuestion4Ok() (*string, bool) {
	if o == nil || IsNil(o.ForgottenPasswordQuestion4) {
		return nil, false
	}
	return o.ForgottenPasswordQuestion4, true
}

// HasForgottenPasswordQuestion4 returns a boolean if a field has been set.
func (o *ForgottenPasswordInformation) HasForgottenPasswordQuestion4() bool {
	if o != nil && !IsNil(o.ForgottenPasswordQuestion4) {
		return true
	}

	return false
}

// SetForgottenPasswordQuestion4 gets a reference to the given string and assigns it to the ForgottenPasswordQuestion4 field.
func (o *ForgottenPasswordInformation) SetForgottenPasswordQuestion4(v string) {
	o.ForgottenPasswordQuestion4 = &v
}

func (o ForgottenPasswordInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ForgottenPasswordInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ForgottenPasswordAnswer1) {
		toSerialize["forgottenPasswordAnswer1"] = o.ForgottenPasswordAnswer1
	}
	if !IsNil(o.ForgottenPasswordAnswer2) {
		toSerialize["forgottenPasswordAnswer2"] = o.ForgottenPasswordAnswer2
	}
	if !IsNil(o.ForgottenPasswordAnswer3) {
		toSerialize["forgottenPasswordAnswer3"] = o.ForgottenPasswordAnswer3
	}
	if !IsNil(o.ForgottenPasswordAnswer4) {
		toSerialize["forgottenPasswordAnswer4"] = o.ForgottenPasswordAnswer4
	}
	if !IsNil(o.ForgottenPasswordQuestion1) {
		toSerialize["forgottenPasswordQuestion1"] = o.ForgottenPasswordQuestion1
	}
	if !IsNil(o.ForgottenPasswordQuestion2) {
		toSerialize["forgottenPasswordQuestion2"] = o.ForgottenPasswordQuestion2
	}
	if !IsNil(o.ForgottenPasswordQuestion3) {
		toSerialize["forgottenPasswordQuestion3"] = o.ForgottenPasswordQuestion3
	}
	if !IsNil(o.ForgottenPasswordQuestion4) {
		toSerialize["forgottenPasswordQuestion4"] = o.ForgottenPasswordQuestion4
	}
	return toSerialize, nil
}

type NullableForgottenPasswordInformation struct {
	value *ForgottenPasswordInformation
	isSet bool
}

func (v NullableForgottenPasswordInformation) Get() *ForgottenPasswordInformation {
	return v.value
}

func (v *NullableForgottenPasswordInformation) Set(val *ForgottenPasswordInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableForgottenPasswordInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableForgottenPasswordInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableForgottenPasswordInformation(val *ForgottenPasswordInformation) *NullableForgottenPasswordInformation {
	return &NullableForgottenPasswordInformation{value: val, isSet: true}
}

func (v NullableForgottenPasswordInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableForgottenPasswordInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


