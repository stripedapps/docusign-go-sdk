/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DocumentTemplateList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentTemplateList{}

// DocumentTemplateList 
type DocumentTemplateList struct {
	// 
	DocumentTemplates []DocumentTemplate `json:"documentTemplates,omitempty"`
}

// NewDocumentTemplateList instantiates a new DocumentTemplateList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentTemplateList() *DocumentTemplateList {
	this := DocumentTemplateList{}
	return &this
}

// NewDocumentTemplateListWithDefaults instantiates a new DocumentTemplateList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentTemplateListWithDefaults() *DocumentTemplateList {
	this := DocumentTemplateList{}
	return &this
}

// GetDocumentTemplates returns the DocumentTemplates field value if set, zero value otherwise.
func (o *DocumentTemplateList) GetDocumentTemplates() []DocumentTemplate {
	if o == nil || IsNil(o.DocumentTemplates) {
		var ret []DocumentTemplate
		return ret
	}
	return o.DocumentTemplates
}

// GetDocumentTemplatesOk returns a tuple with the DocumentTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentTemplateList) GetDocumentTemplatesOk() ([]DocumentTemplate, bool) {
	if o == nil || IsNil(o.DocumentTemplates) {
		return nil, false
	}
	return o.DocumentTemplates, true
}

// HasDocumentTemplates returns a boolean if a field has been set.
func (o *DocumentTemplateList) HasDocumentTemplates() bool {
	if o != nil && !IsNil(o.DocumentTemplates) {
		return true
	}

	return false
}

// SetDocumentTemplates gets a reference to the given []DocumentTemplate and assigns it to the DocumentTemplates field.
func (o *DocumentTemplateList) SetDocumentTemplates(v []DocumentTemplate) {
	o.DocumentTemplates = v
}

func (o DocumentTemplateList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentTemplateList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DocumentTemplates) {
		toSerialize["documentTemplates"] = o.DocumentTemplates
	}
	return toSerialize, nil
}

type NullableDocumentTemplateList struct {
	value *DocumentTemplateList
	isSet bool
}

func (v NullableDocumentTemplateList) Get() *DocumentTemplateList {
	return v.value
}

func (v *NullableDocumentTemplateList) Set(val *DocumentTemplateList) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentTemplateList) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentTemplateList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentTemplateList(val *DocumentTemplateList) *NullableDocumentTemplateList {
	return &NullableDocumentTemplateList{value: val, isSet: true}
}

func (v NullableDocumentTemplateList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentTemplateList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


