/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IdCheckConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdCheckConfiguration{}

// IdCheckConfiguration A complex object specifying ID check configuration.
type IdCheckConfiguration struct {
	// A list of ID check security steps, each specifying an authorization type.
	AuthSteps []IdCheckSecurityStep `json:"authSteps,omitempty"`
	// Boolean that specifies whether the signature is the default signature for the user.
	IsDefault *string `json:"isDefault,omitempty"`
	// The name of the signature.
	Name *string `json:"name,omitempty"`
}

// NewIdCheckConfiguration instantiates a new IdCheckConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdCheckConfiguration() *IdCheckConfiguration {
	this := IdCheckConfiguration{}
	return &this
}

// NewIdCheckConfigurationWithDefaults instantiates a new IdCheckConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdCheckConfigurationWithDefaults() *IdCheckConfiguration {
	this := IdCheckConfiguration{}
	return &this
}

// GetAuthSteps returns the AuthSteps field value if set, zero value otherwise.
func (o *IdCheckConfiguration) GetAuthSteps() []IdCheckSecurityStep {
	if o == nil || IsNil(o.AuthSteps) {
		var ret []IdCheckSecurityStep
		return ret
	}
	return o.AuthSteps
}

// GetAuthStepsOk returns a tuple with the AuthSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdCheckConfiguration) GetAuthStepsOk() ([]IdCheckSecurityStep, bool) {
	if o == nil || IsNil(o.AuthSteps) {
		return nil, false
	}
	return o.AuthSteps, true
}

// HasAuthSteps returns a boolean if a field has been set.
func (o *IdCheckConfiguration) HasAuthSteps() bool {
	if o != nil && !IsNil(o.AuthSteps) {
		return true
	}

	return false
}

// SetAuthSteps gets a reference to the given []IdCheckSecurityStep and assigns it to the AuthSteps field.
func (o *IdCheckConfiguration) SetAuthSteps(v []IdCheckSecurityStep) {
	o.AuthSteps = v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *IdCheckConfiguration) GetIsDefault() string {
	if o == nil || IsNil(o.IsDefault) {
		var ret string
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdCheckConfiguration) GetIsDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *IdCheckConfiguration) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given string and assigns it to the IsDefault field.
func (o *IdCheckConfiguration) SetIsDefault(v string) {
	o.IsDefault = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdCheckConfiguration) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdCheckConfiguration) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdCheckConfiguration) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdCheckConfiguration) SetName(v string) {
	o.Name = &v
}

func (o IdCheckConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdCheckConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthSteps) {
		toSerialize["authSteps"] = o.AuthSteps
	}
	if !IsNil(o.IsDefault) {
		toSerialize["isDefault"] = o.IsDefault
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableIdCheckConfiguration struct {
	value *IdCheckConfiguration
	isSet bool
}

func (v NullableIdCheckConfiguration) Get() *IdCheckConfiguration {
	return v.value
}

func (v *NullableIdCheckConfiguration) Set(val *IdCheckConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableIdCheckConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableIdCheckConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdCheckConfiguration(val *IdCheckConfiguration) *NullableIdCheckConfiguration {
	return &NullableIdCheckConfiguration{value: val, isSet: true}
}

func (v NullableIdCheckConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdCheckConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


