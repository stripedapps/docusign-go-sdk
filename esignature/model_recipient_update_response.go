/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RecipientUpdateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecipientUpdateResponse{}

// RecipientUpdateResponse The recipient details that are returned after you update the recipient.
type RecipientUpdateResponse struct {
	// When you use the query parameter `combine_same_order_recipients` on the PUT Recipients call, the `recipientUpdateResponse` returns this property. When **true,** it indicates that the recipient has been combined or merged with a matching recipient. Recipient matching occurs as part of template matching, and is based on Recipient Role and Routing Order.
	Combined *string `json:"combined,omitempty"`
	ErrorDetails *ErrorDetails `json:"errorDetails,omitempty"`
	// A local reference used to map recipients to other objects, such as specific document tabs.  A `recipientId` must be either an integer or a GUID, and the `recipientId` must be unique within an envelope.  For example, many envelopes assign the first recipient a `recipientId` of `1`. 
	RecipientId *string `json:"recipientId,omitempty"`
	// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
	RecipientIdGuid *string `json:"recipientIdGuid,omitempty"`
	Tabs *EnvelopeRecipientTabs `json:"tabs,omitempty"`
}

// NewRecipientUpdateResponse instantiates a new RecipientUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecipientUpdateResponse() *RecipientUpdateResponse {
	this := RecipientUpdateResponse{}
	return &this
}

// NewRecipientUpdateResponseWithDefaults instantiates a new RecipientUpdateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecipientUpdateResponseWithDefaults() *RecipientUpdateResponse {
	this := RecipientUpdateResponse{}
	return &this
}

// GetCombined returns the Combined field value if set, zero value otherwise.
func (o *RecipientUpdateResponse) GetCombined() string {
	if o == nil || IsNil(o.Combined) {
		var ret string
		return ret
	}
	return *o.Combined
}

// GetCombinedOk returns a tuple with the Combined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientUpdateResponse) GetCombinedOk() (*string, bool) {
	if o == nil || IsNil(o.Combined) {
		return nil, false
	}
	return o.Combined, true
}

// HasCombined returns a boolean if a field has been set.
func (o *RecipientUpdateResponse) HasCombined() bool {
	if o != nil && !IsNil(o.Combined) {
		return true
	}

	return false
}

// SetCombined gets a reference to the given string and assigns it to the Combined field.
func (o *RecipientUpdateResponse) SetCombined(v string) {
	o.Combined = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *RecipientUpdateResponse) GetErrorDetails() ErrorDetails {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret ErrorDetails
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientUpdateResponse) GetErrorDetailsOk() (*ErrorDetails, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *RecipientUpdateResponse) HasErrorDetails() bool {
	if o != nil && !IsNil(o.ErrorDetails) {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given ErrorDetails and assigns it to the ErrorDetails field.
func (o *RecipientUpdateResponse) SetErrorDetails(v ErrorDetails) {
	o.ErrorDetails = &v
}

// GetRecipientId returns the RecipientId field value if set, zero value otherwise.
func (o *RecipientUpdateResponse) GetRecipientId() string {
	if o == nil || IsNil(o.RecipientId) {
		var ret string
		return ret
	}
	return *o.RecipientId
}

// GetRecipientIdOk returns a tuple with the RecipientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientUpdateResponse) GetRecipientIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientId) {
		return nil, false
	}
	return o.RecipientId, true
}

// HasRecipientId returns a boolean if a field has been set.
func (o *RecipientUpdateResponse) HasRecipientId() bool {
	if o != nil && !IsNil(o.RecipientId) {
		return true
	}

	return false
}

// SetRecipientId gets a reference to the given string and assigns it to the RecipientId field.
func (o *RecipientUpdateResponse) SetRecipientId(v string) {
	o.RecipientId = &v
}

// GetRecipientIdGuid returns the RecipientIdGuid field value if set, zero value otherwise.
func (o *RecipientUpdateResponse) GetRecipientIdGuid() string {
	if o == nil || IsNil(o.RecipientIdGuid) {
		var ret string
		return ret
	}
	return *o.RecipientIdGuid
}

// GetRecipientIdGuidOk returns a tuple with the RecipientIdGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientUpdateResponse) GetRecipientIdGuidOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientIdGuid) {
		return nil, false
	}
	return o.RecipientIdGuid, true
}

// HasRecipientIdGuid returns a boolean if a field has been set.
func (o *RecipientUpdateResponse) HasRecipientIdGuid() bool {
	if o != nil && !IsNil(o.RecipientIdGuid) {
		return true
	}

	return false
}

// SetRecipientIdGuid gets a reference to the given string and assigns it to the RecipientIdGuid field.
func (o *RecipientUpdateResponse) SetRecipientIdGuid(v string) {
	o.RecipientIdGuid = &v
}

// GetTabs returns the Tabs field value if set, zero value otherwise.
func (o *RecipientUpdateResponse) GetTabs() EnvelopeRecipientTabs {
	if o == nil || IsNil(o.Tabs) {
		var ret EnvelopeRecipientTabs
		return ret
	}
	return *o.Tabs
}

// GetTabsOk returns a tuple with the Tabs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientUpdateResponse) GetTabsOk() (*EnvelopeRecipientTabs, bool) {
	if o == nil || IsNil(o.Tabs) {
		return nil, false
	}
	return o.Tabs, true
}

// HasTabs returns a boolean if a field has been set.
func (o *RecipientUpdateResponse) HasTabs() bool {
	if o != nil && !IsNil(o.Tabs) {
		return true
	}

	return false
}

// SetTabs gets a reference to the given EnvelopeRecipientTabs and assigns it to the Tabs field.
func (o *RecipientUpdateResponse) SetTabs(v EnvelopeRecipientTabs) {
	o.Tabs = &v
}

func (o RecipientUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecipientUpdateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Combined) {
		toSerialize["combined"] = o.Combined
	}
	if !IsNil(o.ErrorDetails) {
		toSerialize["errorDetails"] = o.ErrorDetails
	}
	if !IsNil(o.RecipientId) {
		toSerialize["recipientId"] = o.RecipientId
	}
	if !IsNil(o.RecipientIdGuid) {
		toSerialize["recipientIdGuid"] = o.RecipientIdGuid
	}
	if !IsNil(o.Tabs) {
		toSerialize["tabs"] = o.Tabs
	}
	return toSerialize, nil
}

type NullableRecipientUpdateResponse struct {
	value *RecipientUpdateResponse
	isSet bool
}

func (v NullableRecipientUpdateResponse) Get() *RecipientUpdateResponse {
	return v.value
}

func (v *NullableRecipientUpdateResponse) Set(val *RecipientUpdateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRecipientUpdateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRecipientUpdateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecipientUpdateResponse(val *RecipientUpdateResponse) *NullableRecipientUpdateResponse {
	return &NullableRecipientUpdateResponse{value: val, isSet: true}
}

func (v NullableRecipientUpdateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecipientUpdateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


