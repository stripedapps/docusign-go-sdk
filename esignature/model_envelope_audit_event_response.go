/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EnvelopeAuditEventResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvelopeAuditEventResponse{}

// EnvelopeAuditEventResponse 
type EnvelopeAuditEventResponse struct {
	// Reserved for DocuSign.
	AuditEvents []EnvelopeAuditEvent `json:"auditEvents,omitempty"`
}

// NewEnvelopeAuditEventResponse instantiates a new EnvelopeAuditEventResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvelopeAuditEventResponse() *EnvelopeAuditEventResponse {
	this := EnvelopeAuditEventResponse{}
	return &this
}

// NewEnvelopeAuditEventResponseWithDefaults instantiates a new EnvelopeAuditEventResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvelopeAuditEventResponseWithDefaults() *EnvelopeAuditEventResponse {
	this := EnvelopeAuditEventResponse{}
	return &this
}

// GetAuditEvents returns the AuditEvents field value if set, zero value otherwise.
func (o *EnvelopeAuditEventResponse) GetAuditEvents() []EnvelopeAuditEvent {
	if o == nil || IsNil(o.AuditEvents) {
		var ret []EnvelopeAuditEvent
		return ret
	}
	return o.AuditEvents
}

// GetAuditEventsOk returns a tuple with the AuditEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvelopeAuditEventResponse) GetAuditEventsOk() ([]EnvelopeAuditEvent, bool) {
	if o == nil || IsNil(o.AuditEvents) {
		return nil, false
	}
	return o.AuditEvents, true
}

// HasAuditEvents returns a boolean if a field has been set.
func (o *EnvelopeAuditEventResponse) HasAuditEvents() bool {
	if o != nil && !IsNil(o.AuditEvents) {
		return true
	}

	return false
}

// SetAuditEvents gets a reference to the given []EnvelopeAuditEvent and assigns it to the AuditEvents field.
func (o *EnvelopeAuditEventResponse) SetAuditEvents(v []EnvelopeAuditEvent) {
	o.AuditEvents = v
}

func (o EnvelopeAuditEventResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvelopeAuditEventResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuditEvents) {
		toSerialize["auditEvents"] = o.AuditEvents
	}
	return toSerialize, nil
}

type NullableEnvelopeAuditEventResponse struct {
	value *EnvelopeAuditEventResponse
	isSet bool
}

func (v NullableEnvelopeAuditEventResponse) Get() *EnvelopeAuditEventResponse {
	return v.value
}

func (v *NullableEnvelopeAuditEventResponse) Set(val *EnvelopeAuditEventResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvelopeAuditEventResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvelopeAuditEventResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvelopeAuditEventResponse(val *EnvelopeAuditEventResponse) *NullableEnvelopeAuditEventResponse {
	return &NullableEnvelopeAuditEventResponse{value: val, isSet: true}
}

func (v NullableEnvelopeAuditEventResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvelopeAuditEventResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


