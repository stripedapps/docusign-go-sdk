/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BillingPlansResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingPlansResponse{}

// BillingPlansResponse Defines a billing plans response object.
type BillingPlansResponse struct {
	// Reserved for DocuSign.
	BillingPlans []BillingPlan `json:"billingPlans,omitempty"`
}

// NewBillingPlansResponse instantiates a new BillingPlansResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingPlansResponse() *BillingPlansResponse {
	this := BillingPlansResponse{}
	return &this
}

// NewBillingPlansResponseWithDefaults instantiates a new BillingPlansResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingPlansResponseWithDefaults() *BillingPlansResponse {
	this := BillingPlansResponse{}
	return &this
}

// GetBillingPlans returns the BillingPlans field value if set, zero value otherwise.
func (o *BillingPlansResponse) GetBillingPlans() []BillingPlan {
	if o == nil || IsNil(o.BillingPlans) {
		var ret []BillingPlan
		return ret
	}
	return o.BillingPlans
}

// GetBillingPlansOk returns a tuple with the BillingPlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlansResponse) GetBillingPlansOk() ([]BillingPlan, bool) {
	if o == nil || IsNil(o.BillingPlans) {
		return nil, false
	}
	return o.BillingPlans, true
}

// HasBillingPlans returns a boolean if a field has been set.
func (o *BillingPlansResponse) HasBillingPlans() bool {
	if o != nil && !IsNil(o.BillingPlans) {
		return true
	}

	return false
}

// SetBillingPlans gets a reference to the given []BillingPlan and assigns it to the BillingPlans field.
func (o *BillingPlansResponse) SetBillingPlans(v []BillingPlan) {
	o.BillingPlans = v
}

func (o BillingPlansResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingPlansResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingPlans) {
		toSerialize["billingPlans"] = o.BillingPlans
	}
	return toSerialize, nil
}

type NullableBillingPlansResponse struct {
	value *BillingPlansResponse
	isSet bool
}

func (v NullableBillingPlansResponse) Get() *BillingPlansResponse {
	return v.value
}

func (v *NullableBillingPlansResponse) Set(val *BillingPlansResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingPlansResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingPlansResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingPlansResponse(val *BillingPlansResponse) *NullableBillingPlansResponse {
	return &NullableBillingPlansResponse{value: val, isSet: true}
}

func (v NullableBillingPlansResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingPlansResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


