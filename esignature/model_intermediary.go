/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Intermediary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Intermediary{}

// Intermediary Contains information about an intermediary recipient. An intermediary is a recipient who can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order, unless subsequent agents, editors or intermediaries are added.
type Intermediary struct {
	// If a value is provided, the recipient must enter the value as the access code to view and sign the envelope.   Maximum Length: 50 characters and it must conform to the account's access code format setting.  If blank, but the signer `accessCode` property is set in the envelope, then that value is used.  If blank and the signer `accessCode` property is not set, then the access code is not required.
	AccessCode *string `json:"accessCode,omitempty"`
	AccessCodeMetadata *PropertyMetadata `json:"accessCodeMetadata,omitempty"`
	// Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.
	AddAccessCodeToEmail *string `json:"addAccessCodeToEmail,omitempty"`
	// An array of additional notification objects.
	AdditionalNotifications []RecipientAdditionalNotification `json:"additionalNotifications,omitempty"`
	// When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.
	AllowSystemOverrideForLockedRecipient *string `json:"allowSystemOverrideForLockedRecipient,omitempty"`
	// Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only. 
	AutoRespondedReason *string `json:"autoRespondedReason,omitempty"`
	// 
	BulkSendV2Recipient *string `json:"bulkSendV2Recipient,omitempty"`
	// Specifies whether the recipient is embedded or remote.   If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.  If the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.  **Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.  Maximum length: 100 characters.  
	ClientUserId *string `json:"clientUserId,omitempty"`
	// Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.
	CompletedCount *string `json:"completedCount,omitempty"`
	// 
	ConsentDetailsList []ConsentDetails `json:"consentDetailsList,omitempty"`
	// An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
	CustomFields []string `json:"customFields,omitempty"`
	// The date and time the recipient declined the document. This property is read-only.
	DeclinedDateTime *string `json:"declinedDateTime,omitempty"`
	// The reason the recipient declined the document. This property is read-only.
	DeclinedReason *string `json:"declinedReason,omitempty"`
	// The date and time that the envelope was delivered to the recipient. This property is read-only.
	DeliveredDateTime *string `json:"deliveredDateTime,omitempty"`
	// The delivery method. One of:  - `email` - `fax` - `SMS` - `WhatsApp` - `offline`  The `SMS` and `WhatsApp` delivery methods are limited to `signer`, `carbonCopy`, and `certifiedDelivery` recipients.  **Related topics**  - [Using SMS delivery with the eSignature API][smsconcept] - [How to request a signature by SMS delivery][howto]  [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/ [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
	DeliveryMethod *string `json:"deliveryMethod,omitempty"`
	DeliveryMethodMetadata *PropertyMetadata `json:"deliveryMethodMetadata,omitempty"`
	// Reserved for DocuSign.
	DesignatorId *string `json:"designatorId,omitempty"`
	// Reserved for DocuSign.
	DesignatorIdGuid *string `json:"designatorIdGuid,omitempty"`
	// A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**
	DocumentVisibility []DocumentVisibility `json:"documentVisibility,omitempty"`
	// The recipient's email address. Notification of the document to sign is sent to this email address.   Maximum length: 100 characters. 
	Email *string `json:"email,omitempty"`
	EmailMetadata *PropertyMetadata `json:"emailMetadata,omitempty"`
	EmailNotification *RecipientEmailNotification `json:"emailNotification,omitempty"`
	// 
	EmailRecipientPostSigningURL *string `json:"emailRecipientPostSigningURL,omitempty"`
	// Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session.   When `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.  It is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.  If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets.   *Example*:   `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` 
	EmbeddedRecipientStartURL *string `json:"embeddedRecipientStartURL,omitempty"`
	ErrorDetails *ErrorDetails `json:"errorDetails,omitempty"`
	// Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.  When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
	ExcludedDocuments []string `json:"excludedDocuments,omitempty"`
	// Reserved for DocuSign.
	FaxNumber *string `json:"faxNumber,omitempty"`
	FaxNumberMetadata *PropertyMetadata `json:"faxNumberMetadata,omitempty"`
	// The recipient's first name. Maximum Length: 50 characters.
	FirstName *string `json:"firstName,omitempty"`
	FirstNameMetadata *PropertyMetadata `json:"firstNameMetadata,omitempty"`
	// Reserved for DocuSign.
	FullName *string `json:"fullName,omitempty"`
	FullNameMetadata *PropertyMetadata `json:"fullNameMetadata,omitempty"`
	// The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:  - `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object. - `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object. - `ID Check $`: The  recipient must answer detailed security questions.   **Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.
	IdCheckConfigurationName *string `json:"idCheckConfigurationName,omitempty"`
	IdCheckConfigurationNameMetadata *PropertyMetadata `json:"idCheckConfigurationNameMetadata,omitempty"`
	IdCheckInformationInput *IdCheckInformationInput `json:"idCheckInformationInput,omitempty"`
	IdentityVerification *RecipientIdentityVerification `json:"identityVerification,omitempty"`
	// When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. 
	InheritEmailNotificationConfiguration *string `json:"inheritEmailNotificationConfiguration,omitempty"`
	// The recipient's last name.
	LastName *string `json:"lastName,omitempty"`
	LastNameMetadata *PropertyMetadata `json:"lastNameMetadata,omitempty"`
	// Reserved for DocuSign.
	LockedRecipientPhoneAuthEditable *string `json:"lockedRecipientPhoneAuthEditable,omitempty"`
	// Reserved for DocuSign.
	LockedRecipientSmsEditable *string `json:"lockedRecipientSmsEditable,omitempty"`
	// The full legal name of the recipient. Maximum Length: 100 characters.  **Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
	Name *string `json:"name,omitempty"`
	NameMetadata *PropertyMetadata `json:"nameMetadata,omitempty"`
	// A note sent to the recipient in the signing email. This note is unique to this recipient. In the user interface, it appears near the upper left corner of the document on the signing screen.  Maximum Length: 1000 characters. 
	Note *string `json:"note,omitempty"`
	NoteMetadata *PropertyMetadata `json:"noteMetadata,omitempty"`
	PhoneAuthentication *RecipientPhoneAuthentication `json:"phoneAuthentication,omitempty"`
	PhoneNumber *RecipientPhoneNumber `json:"phoneNumber,omitempty"`
	// Reserved for DocuSign.
	RecipientAttachments []RecipientAttachment `json:"recipientAttachments,omitempty"`
	RecipientAuthenticationStatus *AuthenticationStatus `json:"recipientAuthenticationStatus,omitempty"`
	// Metadata about the features that are supported for the recipient type. This property is read-only.
	RecipientFeatureMetadata []FeatureAvailableMetadata `json:"recipientFeatureMetadata,omitempty"`
	// A local reference used to map recipients to other objects, such as specific document tabs.  A `recipientId` must be either an integer or a GUID, and the `recipientId` must be unique within an envelope.  For example, many envelopes assign the first recipient a `recipientId` of `1`. 
	RecipientId *string `json:"recipientId,omitempty"`
	// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
	RecipientIdGuid *string `json:"recipientIdGuid,omitempty"`
	// The recipient type, as specified by the following values: - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order. - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents. - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer. - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order. - `seal`: Electronic seal recipients represent legal entities. - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope. - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
	RecipientType *string `json:"recipientType,omitempty"`
	RecipientTypeMetadata *PropertyMetadata `json:"recipientTypeMetadata,omitempty"`
	// When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. 
	RequireIdLookup *string `json:"requireIdLookup,omitempty"`
	RequireIdLookupMetadata *PropertyMetadata `json:"requireIdLookupMetadata,omitempty"`
	// Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.
	RoleName *string `json:"roleName,omitempty"`
	// Specifies the routing order of the recipient in the envelope. 
	RoutingOrder *string `json:"routingOrder,omitempty"`
	RoutingOrderMetadata *PropertyMetadata `json:"routingOrderMetadata,omitempty"`
	// The UTC DateTime when the envelope was sent. This property is read-only.
	SentDateTime *string `json:"sentDateTime,omitempty"`
	// Reserved for DocuSign.
	SignedDateTime *string `json:"signedDateTime,omitempty"`
	// The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html). 
	SigningGroupId *string `json:"signingGroupId,omitempty"`
	SigningGroupIdMetadata *PropertyMetadata `json:"signingGroupIdMetadata,omitempty"`
	// Optional. The name of the signing group.   Maximum Length: 100 characters. 
	SigningGroupName *string `json:"signingGroupName,omitempty"`
	// A complex type that contains information about users in the signing group.
	SigningGroupUsers []UserInfo `json:"signingGroupUsers,omitempty"`
	SmsAuthentication *RecipientSMSAuthentication `json:"smsAuthentication,omitempty"`
	// Deprecated.
	SocialAuthentications []SocialAuthentication `json:"socialAuthentications,omitempty"`
	// The recipient's status. This property is read-only.   Valid values:  - `autoresponded`: The recipientÃ¢ÂÂs email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account. - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope. - `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`). - `declined`: The recipient declined to sign the documents in the envelope. - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope. - `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step. - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope. - `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`. 
	Status *string `json:"status,omitempty"`
	// The code associated with the recipient's status. This property is read-only.
	StatusCode *string `json:"statusCode,omitempty"`
	// When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.
	SuppressEmails *string `json:"suppressEmails,omitempty"`
	// When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. 
	TemplateLocked *string `json:"templateLocked,omitempty"`
	// When **true,** the sender may not remove the recipient. Used only when working with template recipients.
	TemplateRequired *string `json:"templateRequired,omitempty"`
	// The total number of tabs in the documents. This property is read-only.
	TotalTabCount *string `json:"totalTabCount,omitempty"`
	// The ID of the user to access.  **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
	UserId *string `json:"userId,omitempty"`
}

// NewIntermediary instantiates a new Intermediary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntermediary() *Intermediary {
	this := Intermediary{}
	return &this
}

// NewIntermediaryWithDefaults instantiates a new Intermediary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntermediaryWithDefaults() *Intermediary {
	this := Intermediary{}
	return &this
}

// GetAccessCode returns the AccessCode field value if set, zero value otherwise.
func (o *Intermediary) GetAccessCode() string {
	if o == nil || IsNil(o.AccessCode) {
		var ret string
		return ret
	}
	return *o.AccessCode
}

// GetAccessCodeOk returns a tuple with the AccessCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetAccessCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AccessCode) {
		return nil, false
	}
	return o.AccessCode, true
}

// HasAccessCode returns a boolean if a field has been set.
func (o *Intermediary) HasAccessCode() bool {
	if o != nil && !IsNil(o.AccessCode) {
		return true
	}

	return false
}

// SetAccessCode gets a reference to the given string and assigns it to the AccessCode field.
func (o *Intermediary) SetAccessCode(v string) {
	o.AccessCode = &v
}

// GetAccessCodeMetadata returns the AccessCodeMetadata field value if set, zero value otherwise.
func (o *Intermediary) GetAccessCodeMetadata() PropertyMetadata {
	if o == nil || IsNil(o.AccessCodeMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.AccessCodeMetadata
}

// GetAccessCodeMetadataOk returns a tuple with the AccessCodeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetAccessCodeMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.AccessCodeMetadata) {
		return nil, false
	}
	return o.AccessCodeMetadata, true
}

// HasAccessCodeMetadata returns a boolean if a field has been set.
func (o *Intermediary) HasAccessCodeMetadata() bool {
	if o != nil && !IsNil(o.AccessCodeMetadata) {
		return true
	}

	return false
}

// SetAccessCodeMetadata gets a reference to the given PropertyMetadata and assigns it to the AccessCodeMetadata field.
func (o *Intermediary) SetAccessCodeMetadata(v PropertyMetadata) {
	o.AccessCodeMetadata = &v
}

// GetAddAccessCodeToEmail returns the AddAccessCodeToEmail field value if set, zero value otherwise.
func (o *Intermediary) GetAddAccessCodeToEmail() string {
	if o == nil || IsNil(o.AddAccessCodeToEmail) {
		var ret string
		return ret
	}
	return *o.AddAccessCodeToEmail
}

// GetAddAccessCodeToEmailOk returns a tuple with the AddAccessCodeToEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetAddAccessCodeToEmailOk() (*string, bool) {
	if o == nil || IsNil(o.AddAccessCodeToEmail) {
		return nil, false
	}
	return o.AddAccessCodeToEmail, true
}

// HasAddAccessCodeToEmail returns a boolean if a field has been set.
func (o *Intermediary) HasAddAccessCodeToEmail() bool {
	if o != nil && !IsNil(o.AddAccessCodeToEmail) {
		return true
	}

	return false
}

// SetAddAccessCodeToEmail gets a reference to the given string and assigns it to the AddAccessCodeToEmail field.
func (o *Intermediary) SetAddAccessCodeToEmail(v string) {
	o.AddAccessCodeToEmail = &v
}

// GetAdditionalNotifications returns the AdditionalNotifications field value if set, zero value otherwise.
func (o *Intermediary) GetAdditionalNotifications() []RecipientAdditionalNotification {
	if o == nil || IsNil(o.AdditionalNotifications) {
		var ret []RecipientAdditionalNotification
		return ret
	}
	return o.AdditionalNotifications
}

// GetAdditionalNotificationsOk returns a tuple with the AdditionalNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetAdditionalNotificationsOk() ([]RecipientAdditionalNotification, bool) {
	if o == nil || IsNil(o.AdditionalNotifications) {
		return nil, false
	}
	return o.AdditionalNotifications, true
}

// HasAdditionalNotifications returns a boolean if a field has been set.
func (o *Intermediary) HasAdditionalNotifications() bool {
	if o != nil && !IsNil(o.AdditionalNotifications) {
		return true
	}

	return false
}

// SetAdditionalNotifications gets a reference to the given []RecipientAdditionalNotification and assigns it to the AdditionalNotifications field.
func (o *Intermediary) SetAdditionalNotifications(v []RecipientAdditionalNotification) {
	o.AdditionalNotifications = v
}

// GetAllowSystemOverrideForLockedRecipient returns the AllowSystemOverrideForLockedRecipient field value if set, zero value otherwise.
func (o *Intermediary) GetAllowSystemOverrideForLockedRecipient() string {
	if o == nil || IsNil(o.AllowSystemOverrideForLockedRecipient) {
		var ret string
		return ret
	}
	return *o.AllowSystemOverrideForLockedRecipient
}

// GetAllowSystemOverrideForLockedRecipientOk returns a tuple with the AllowSystemOverrideForLockedRecipient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetAllowSystemOverrideForLockedRecipientOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSystemOverrideForLockedRecipient) {
		return nil, false
	}
	return o.AllowSystemOverrideForLockedRecipient, true
}

// HasAllowSystemOverrideForLockedRecipient returns a boolean if a field has been set.
func (o *Intermediary) HasAllowSystemOverrideForLockedRecipient() bool {
	if o != nil && !IsNil(o.AllowSystemOverrideForLockedRecipient) {
		return true
	}

	return false
}

// SetAllowSystemOverrideForLockedRecipient gets a reference to the given string and assigns it to the AllowSystemOverrideForLockedRecipient field.
func (o *Intermediary) SetAllowSystemOverrideForLockedRecipient(v string) {
	o.AllowSystemOverrideForLockedRecipient = &v
}

// GetAutoRespondedReason returns the AutoRespondedReason field value if set, zero value otherwise.
func (o *Intermediary) GetAutoRespondedReason() string {
	if o == nil || IsNil(o.AutoRespondedReason) {
		var ret string
		return ret
	}
	return *o.AutoRespondedReason
}

// GetAutoRespondedReasonOk returns a tuple with the AutoRespondedReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetAutoRespondedReasonOk() (*string, bool) {
	if o == nil || IsNil(o.AutoRespondedReason) {
		return nil, false
	}
	return o.AutoRespondedReason, true
}

// HasAutoRespondedReason returns a boolean if a field has been set.
func (o *Intermediary) HasAutoRespondedReason() bool {
	if o != nil && !IsNil(o.AutoRespondedReason) {
		return true
	}

	return false
}

// SetAutoRespondedReason gets a reference to the given string and assigns it to the AutoRespondedReason field.
func (o *Intermediary) SetAutoRespondedReason(v string) {
	o.AutoRespondedReason = &v
}

// GetBulkSendV2Recipient returns the BulkSendV2Recipient field value if set, zero value otherwise.
func (o *Intermediary) GetBulkSendV2Recipient() string {
	if o == nil || IsNil(o.BulkSendV2Recipient) {
		var ret string
		return ret
	}
	return *o.BulkSendV2Recipient
}

// GetBulkSendV2RecipientOk returns a tuple with the BulkSendV2Recipient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetBulkSendV2RecipientOk() (*string, bool) {
	if o == nil || IsNil(o.BulkSendV2Recipient) {
		return nil, false
	}
	return o.BulkSendV2Recipient, true
}

// HasBulkSendV2Recipient returns a boolean if a field has been set.
func (o *Intermediary) HasBulkSendV2Recipient() bool {
	if o != nil && !IsNil(o.BulkSendV2Recipient) {
		return true
	}

	return false
}

// SetBulkSendV2Recipient gets a reference to the given string and assigns it to the BulkSendV2Recipient field.
func (o *Intermediary) SetBulkSendV2Recipient(v string) {
	o.BulkSendV2Recipient = &v
}

// GetClientUserId returns the ClientUserId field value if set, zero value otherwise.
func (o *Intermediary) GetClientUserId() string {
	if o == nil || IsNil(o.ClientUserId) {
		var ret string
		return ret
	}
	return *o.ClientUserId
}

// GetClientUserIdOk returns a tuple with the ClientUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetClientUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientUserId) {
		return nil, false
	}
	return o.ClientUserId, true
}

// HasClientUserId returns a boolean if a field has been set.
func (o *Intermediary) HasClientUserId() bool {
	if o != nil && !IsNil(o.ClientUserId) {
		return true
	}

	return false
}

// SetClientUserId gets a reference to the given string and assigns it to the ClientUserId field.
func (o *Intermediary) SetClientUserId(v string) {
	o.ClientUserId = &v
}

// GetCompletedCount returns the CompletedCount field value if set, zero value otherwise.
func (o *Intermediary) GetCompletedCount() string {
	if o == nil || IsNil(o.CompletedCount) {
		var ret string
		return ret
	}
	return *o.CompletedCount
}

// GetCompletedCountOk returns a tuple with the CompletedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetCompletedCountOk() (*string, bool) {
	if o == nil || IsNil(o.CompletedCount) {
		return nil, false
	}
	return o.CompletedCount, true
}

// HasCompletedCount returns a boolean if a field has been set.
func (o *Intermediary) HasCompletedCount() bool {
	if o != nil && !IsNil(o.CompletedCount) {
		return true
	}

	return false
}

// SetCompletedCount gets a reference to the given string and assigns it to the CompletedCount field.
func (o *Intermediary) SetCompletedCount(v string) {
	o.CompletedCount = &v
}

// GetConsentDetailsList returns the ConsentDetailsList field value if set, zero value otherwise.
func (o *Intermediary) GetConsentDetailsList() []ConsentDetails {
	if o == nil || IsNil(o.ConsentDetailsList) {
		var ret []ConsentDetails
		return ret
	}
	return o.ConsentDetailsList
}

// GetConsentDetailsListOk returns a tuple with the ConsentDetailsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetConsentDetailsListOk() ([]ConsentDetails, bool) {
	if o == nil || IsNil(o.ConsentDetailsList) {
		return nil, false
	}
	return o.ConsentDetailsList, true
}

// HasConsentDetailsList returns a boolean if a field has been set.
func (o *Intermediary) HasConsentDetailsList() bool {
	if o != nil && !IsNil(o.ConsentDetailsList) {
		return true
	}

	return false
}

// SetConsentDetailsList gets a reference to the given []ConsentDetails and assigns it to the ConsentDetailsList field.
func (o *Intermediary) SetConsentDetailsList(v []ConsentDetails) {
	o.ConsentDetailsList = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *Intermediary) GetCustomFields() []string {
	if o == nil || IsNil(o.CustomFields) {
		var ret []string
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetCustomFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *Intermediary) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []string and assigns it to the CustomFields field.
func (o *Intermediary) SetCustomFields(v []string) {
	o.CustomFields = v
}

// GetDeclinedDateTime returns the DeclinedDateTime field value if set, zero value otherwise.
func (o *Intermediary) GetDeclinedDateTime() string {
	if o == nil || IsNil(o.DeclinedDateTime) {
		var ret string
		return ret
	}
	return *o.DeclinedDateTime
}

// GetDeclinedDateTimeOk returns a tuple with the DeclinedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetDeclinedDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.DeclinedDateTime) {
		return nil, false
	}
	return o.DeclinedDateTime, true
}

// HasDeclinedDateTime returns a boolean if a field has been set.
func (o *Intermediary) HasDeclinedDateTime() bool {
	if o != nil && !IsNil(o.DeclinedDateTime) {
		return true
	}

	return false
}

// SetDeclinedDateTime gets a reference to the given string and assigns it to the DeclinedDateTime field.
func (o *Intermediary) SetDeclinedDateTime(v string) {
	o.DeclinedDateTime = &v
}

// GetDeclinedReason returns the DeclinedReason field value if set, zero value otherwise.
func (o *Intermediary) GetDeclinedReason() string {
	if o == nil || IsNil(o.DeclinedReason) {
		var ret string
		return ret
	}
	return *o.DeclinedReason
}

// GetDeclinedReasonOk returns a tuple with the DeclinedReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetDeclinedReasonOk() (*string, bool) {
	if o == nil || IsNil(o.DeclinedReason) {
		return nil, false
	}
	return o.DeclinedReason, true
}

// HasDeclinedReason returns a boolean if a field has been set.
func (o *Intermediary) HasDeclinedReason() bool {
	if o != nil && !IsNil(o.DeclinedReason) {
		return true
	}

	return false
}

// SetDeclinedReason gets a reference to the given string and assigns it to the DeclinedReason field.
func (o *Intermediary) SetDeclinedReason(v string) {
	o.DeclinedReason = &v
}

// GetDeliveredDateTime returns the DeliveredDateTime field value if set, zero value otherwise.
func (o *Intermediary) GetDeliveredDateTime() string {
	if o == nil || IsNil(o.DeliveredDateTime) {
		var ret string
		return ret
	}
	return *o.DeliveredDateTime
}

// GetDeliveredDateTimeOk returns a tuple with the DeliveredDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetDeliveredDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveredDateTime) {
		return nil, false
	}
	return o.DeliveredDateTime, true
}

// HasDeliveredDateTime returns a boolean if a field has been set.
func (o *Intermediary) HasDeliveredDateTime() bool {
	if o != nil && !IsNil(o.DeliveredDateTime) {
		return true
	}

	return false
}

// SetDeliveredDateTime gets a reference to the given string and assigns it to the DeliveredDateTime field.
func (o *Intermediary) SetDeliveredDateTime(v string) {
	o.DeliveredDateTime = &v
}

// GetDeliveryMethod returns the DeliveryMethod field value if set, zero value otherwise.
func (o *Intermediary) GetDeliveryMethod() string {
	if o == nil || IsNil(o.DeliveryMethod) {
		var ret string
		return ret
	}
	return *o.DeliveryMethod
}

// GetDeliveryMethodOk returns a tuple with the DeliveryMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetDeliveryMethodOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryMethod) {
		return nil, false
	}
	return o.DeliveryMethod, true
}

// HasDeliveryMethod returns a boolean if a field has been set.
func (o *Intermediary) HasDeliveryMethod() bool {
	if o != nil && !IsNil(o.DeliveryMethod) {
		return true
	}

	return false
}

// SetDeliveryMethod gets a reference to the given string and assigns it to the DeliveryMethod field.
func (o *Intermediary) SetDeliveryMethod(v string) {
	o.DeliveryMethod = &v
}

// GetDeliveryMethodMetadata returns the DeliveryMethodMetadata field value if set, zero value otherwise.
func (o *Intermediary) GetDeliveryMethodMetadata() PropertyMetadata {
	if o == nil || IsNil(o.DeliveryMethodMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.DeliveryMethodMetadata
}

// GetDeliveryMethodMetadataOk returns a tuple with the DeliveryMethodMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetDeliveryMethodMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.DeliveryMethodMetadata) {
		return nil, false
	}
	return o.DeliveryMethodMetadata, true
}

// HasDeliveryMethodMetadata returns a boolean if a field has been set.
func (o *Intermediary) HasDeliveryMethodMetadata() bool {
	if o != nil && !IsNil(o.DeliveryMethodMetadata) {
		return true
	}

	return false
}

// SetDeliveryMethodMetadata gets a reference to the given PropertyMetadata and assigns it to the DeliveryMethodMetadata field.
func (o *Intermediary) SetDeliveryMethodMetadata(v PropertyMetadata) {
	o.DeliveryMethodMetadata = &v
}

// GetDesignatorId returns the DesignatorId field value if set, zero value otherwise.
func (o *Intermediary) GetDesignatorId() string {
	if o == nil || IsNil(o.DesignatorId) {
		var ret string
		return ret
	}
	return *o.DesignatorId
}

// GetDesignatorIdOk returns a tuple with the DesignatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetDesignatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.DesignatorId) {
		return nil, false
	}
	return o.DesignatorId, true
}

// HasDesignatorId returns a boolean if a field has been set.
func (o *Intermediary) HasDesignatorId() bool {
	if o != nil && !IsNil(o.DesignatorId) {
		return true
	}

	return false
}

// SetDesignatorId gets a reference to the given string and assigns it to the DesignatorId field.
func (o *Intermediary) SetDesignatorId(v string) {
	o.DesignatorId = &v
}

// GetDesignatorIdGuid returns the DesignatorIdGuid field value if set, zero value otherwise.
func (o *Intermediary) GetDesignatorIdGuid() string {
	if o == nil || IsNil(o.DesignatorIdGuid) {
		var ret string
		return ret
	}
	return *o.DesignatorIdGuid
}

// GetDesignatorIdGuidOk returns a tuple with the DesignatorIdGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetDesignatorIdGuidOk() (*string, bool) {
	if o == nil || IsNil(o.DesignatorIdGuid) {
		return nil, false
	}
	return o.DesignatorIdGuid, true
}

// HasDesignatorIdGuid returns a boolean if a field has been set.
func (o *Intermediary) HasDesignatorIdGuid() bool {
	if o != nil && !IsNil(o.DesignatorIdGuid) {
		return true
	}

	return false
}

// SetDesignatorIdGuid gets a reference to the given string and assigns it to the DesignatorIdGuid field.
func (o *Intermediary) SetDesignatorIdGuid(v string) {
	o.DesignatorIdGuid = &v
}

// GetDocumentVisibility returns the DocumentVisibility field value if set, zero value otherwise.
func (o *Intermediary) GetDocumentVisibility() []DocumentVisibility {
	if o == nil || IsNil(o.DocumentVisibility) {
		var ret []DocumentVisibility
		return ret
	}
	return o.DocumentVisibility
}

// GetDocumentVisibilityOk returns a tuple with the DocumentVisibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetDocumentVisibilityOk() ([]DocumentVisibility, bool) {
	if o == nil || IsNil(o.DocumentVisibility) {
		return nil, false
	}
	return o.DocumentVisibility, true
}

// HasDocumentVisibility returns a boolean if a field has been set.
func (o *Intermediary) HasDocumentVisibility() bool {
	if o != nil && !IsNil(o.DocumentVisibility) {
		return true
	}

	return false
}

// SetDocumentVisibility gets a reference to the given []DocumentVisibility and assigns it to the DocumentVisibility field.
func (o *Intermediary) SetDocumentVisibility(v []DocumentVisibility) {
	o.DocumentVisibility = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Intermediary) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Intermediary) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Intermediary) SetEmail(v string) {
	o.Email = &v
}

// GetEmailMetadata returns the EmailMetadata field value if set, zero value otherwise.
func (o *Intermediary) GetEmailMetadata() PropertyMetadata {
	if o == nil || IsNil(o.EmailMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.EmailMetadata
}

// GetEmailMetadataOk returns a tuple with the EmailMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetEmailMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.EmailMetadata) {
		return nil, false
	}
	return o.EmailMetadata, true
}

// HasEmailMetadata returns a boolean if a field has been set.
func (o *Intermediary) HasEmailMetadata() bool {
	if o != nil && !IsNil(o.EmailMetadata) {
		return true
	}

	return false
}

// SetEmailMetadata gets a reference to the given PropertyMetadata and assigns it to the EmailMetadata field.
func (o *Intermediary) SetEmailMetadata(v PropertyMetadata) {
	o.EmailMetadata = &v
}

// GetEmailNotification returns the EmailNotification field value if set, zero value otherwise.
func (o *Intermediary) GetEmailNotification() RecipientEmailNotification {
	if o == nil || IsNil(o.EmailNotification) {
		var ret RecipientEmailNotification
		return ret
	}
	return *o.EmailNotification
}

// GetEmailNotificationOk returns a tuple with the EmailNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetEmailNotificationOk() (*RecipientEmailNotification, bool) {
	if o == nil || IsNil(o.EmailNotification) {
		return nil, false
	}
	return o.EmailNotification, true
}

// HasEmailNotification returns a boolean if a field has been set.
func (o *Intermediary) HasEmailNotification() bool {
	if o != nil && !IsNil(o.EmailNotification) {
		return true
	}

	return false
}

// SetEmailNotification gets a reference to the given RecipientEmailNotification and assigns it to the EmailNotification field.
func (o *Intermediary) SetEmailNotification(v RecipientEmailNotification) {
	o.EmailNotification = &v
}

// GetEmailRecipientPostSigningURL returns the EmailRecipientPostSigningURL field value if set, zero value otherwise.
func (o *Intermediary) GetEmailRecipientPostSigningURL() string {
	if o == nil || IsNil(o.EmailRecipientPostSigningURL) {
		var ret string
		return ret
	}
	return *o.EmailRecipientPostSigningURL
}

// GetEmailRecipientPostSigningURLOk returns a tuple with the EmailRecipientPostSigningURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetEmailRecipientPostSigningURLOk() (*string, bool) {
	if o == nil || IsNil(o.EmailRecipientPostSigningURL) {
		return nil, false
	}
	return o.EmailRecipientPostSigningURL, true
}

// HasEmailRecipientPostSigningURL returns a boolean if a field has been set.
func (o *Intermediary) HasEmailRecipientPostSigningURL() bool {
	if o != nil && !IsNil(o.EmailRecipientPostSigningURL) {
		return true
	}

	return false
}

// SetEmailRecipientPostSigningURL gets a reference to the given string and assigns it to the EmailRecipientPostSigningURL field.
func (o *Intermediary) SetEmailRecipientPostSigningURL(v string) {
	o.EmailRecipientPostSigningURL = &v
}

// GetEmbeddedRecipientStartURL returns the EmbeddedRecipientStartURL field value if set, zero value otherwise.
func (o *Intermediary) GetEmbeddedRecipientStartURL() string {
	if o == nil || IsNil(o.EmbeddedRecipientStartURL) {
		var ret string
		return ret
	}
	return *o.EmbeddedRecipientStartURL
}

// GetEmbeddedRecipientStartURLOk returns a tuple with the EmbeddedRecipientStartURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetEmbeddedRecipientStartURLOk() (*string, bool) {
	if o == nil || IsNil(o.EmbeddedRecipientStartURL) {
		return nil, false
	}
	return o.EmbeddedRecipientStartURL, true
}

// HasEmbeddedRecipientStartURL returns a boolean if a field has been set.
func (o *Intermediary) HasEmbeddedRecipientStartURL() bool {
	if o != nil && !IsNil(o.EmbeddedRecipientStartURL) {
		return true
	}

	return false
}

// SetEmbeddedRecipientStartURL gets a reference to the given string and assigns it to the EmbeddedRecipientStartURL field.
func (o *Intermediary) SetEmbeddedRecipientStartURL(v string) {
	o.EmbeddedRecipientStartURL = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *Intermediary) GetErrorDetails() ErrorDetails {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret ErrorDetails
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetErrorDetailsOk() (*ErrorDetails, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *Intermediary) HasErrorDetails() bool {
	if o != nil && !IsNil(o.ErrorDetails) {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given ErrorDetails and assigns it to the ErrorDetails field.
func (o *Intermediary) SetErrorDetails(v ErrorDetails) {
	o.ErrorDetails = &v
}

// GetExcludedDocuments returns the ExcludedDocuments field value if set, zero value otherwise.
func (o *Intermediary) GetExcludedDocuments() []string {
	if o == nil || IsNil(o.ExcludedDocuments) {
		var ret []string
		return ret
	}
	return o.ExcludedDocuments
}

// GetExcludedDocumentsOk returns a tuple with the ExcludedDocuments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetExcludedDocumentsOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludedDocuments) {
		return nil, false
	}
	return o.ExcludedDocuments, true
}

// HasExcludedDocuments returns a boolean if a field has been set.
func (o *Intermediary) HasExcludedDocuments() bool {
	if o != nil && !IsNil(o.ExcludedDocuments) {
		return true
	}

	return false
}

// SetExcludedDocuments gets a reference to the given []string and assigns it to the ExcludedDocuments field.
func (o *Intermediary) SetExcludedDocuments(v []string) {
	o.ExcludedDocuments = v
}

// GetFaxNumber returns the FaxNumber field value if set, zero value otherwise.
func (o *Intermediary) GetFaxNumber() string {
	if o == nil || IsNil(o.FaxNumber) {
		var ret string
		return ret
	}
	return *o.FaxNumber
}

// GetFaxNumberOk returns a tuple with the FaxNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetFaxNumberOk() (*string, bool) {
	if o == nil || IsNil(o.FaxNumber) {
		return nil, false
	}
	return o.FaxNumber, true
}

// HasFaxNumber returns a boolean if a field has been set.
func (o *Intermediary) HasFaxNumber() bool {
	if o != nil && !IsNil(o.FaxNumber) {
		return true
	}

	return false
}

// SetFaxNumber gets a reference to the given string and assigns it to the FaxNumber field.
func (o *Intermediary) SetFaxNumber(v string) {
	o.FaxNumber = &v
}

// GetFaxNumberMetadata returns the FaxNumberMetadata field value if set, zero value otherwise.
func (o *Intermediary) GetFaxNumberMetadata() PropertyMetadata {
	if o == nil || IsNil(o.FaxNumberMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.FaxNumberMetadata
}

// GetFaxNumberMetadataOk returns a tuple with the FaxNumberMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetFaxNumberMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.FaxNumberMetadata) {
		return nil, false
	}
	return o.FaxNumberMetadata, true
}

// HasFaxNumberMetadata returns a boolean if a field has been set.
func (o *Intermediary) HasFaxNumberMetadata() bool {
	if o != nil && !IsNil(o.FaxNumberMetadata) {
		return true
	}

	return false
}

// SetFaxNumberMetadata gets a reference to the given PropertyMetadata and assigns it to the FaxNumberMetadata field.
func (o *Intermediary) SetFaxNumberMetadata(v PropertyMetadata) {
	o.FaxNumberMetadata = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *Intermediary) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *Intermediary) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *Intermediary) SetFirstName(v string) {
	o.FirstName = &v
}

// GetFirstNameMetadata returns the FirstNameMetadata field value if set, zero value otherwise.
func (o *Intermediary) GetFirstNameMetadata() PropertyMetadata {
	if o == nil || IsNil(o.FirstNameMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.FirstNameMetadata
}

// GetFirstNameMetadataOk returns a tuple with the FirstNameMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetFirstNameMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.FirstNameMetadata) {
		return nil, false
	}
	return o.FirstNameMetadata, true
}

// HasFirstNameMetadata returns a boolean if a field has been set.
func (o *Intermediary) HasFirstNameMetadata() bool {
	if o != nil && !IsNil(o.FirstNameMetadata) {
		return true
	}

	return false
}

// SetFirstNameMetadata gets a reference to the given PropertyMetadata and assigns it to the FirstNameMetadata field.
func (o *Intermediary) SetFirstNameMetadata(v PropertyMetadata) {
	o.FirstNameMetadata = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *Intermediary) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *Intermediary) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *Intermediary) SetFullName(v string) {
	o.FullName = &v
}

// GetFullNameMetadata returns the FullNameMetadata field value if set, zero value otherwise.
func (o *Intermediary) GetFullNameMetadata() PropertyMetadata {
	if o == nil || IsNil(o.FullNameMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.FullNameMetadata
}

// GetFullNameMetadataOk returns a tuple with the FullNameMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetFullNameMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.FullNameMetadata) {
		return nil, false
	}
	return o.FullNameMetadata, true
}

// HasFullNameMetadata returns a boolean if a field has been set.
func (o *Intermediary) HasFullNameMetadata() bool {
	if o != nil && !IsNil(o.FullNameMetadata) {
		return true
	}

	return false
}

// SetFullNameMetadata gets a reference to the given PropertyMetadata and assigns it to the FullNameMetadata field.
func (o *Intermediary) SetFullNameMetadata(v PropertyMetadata) {
	o.FullNameMetadata = &v
}

// GetIdCheckConfigurationName returns the IdCheckConfigurationName field value if set, zero value otherwise.
func (o *Intermediary) GetIdCheckConfigurationName() string {
	if o == nil || IsNil(o.IdCheckConfigurationName) {
		var ret string
		return ret
	}
	return *o.IdCheckConfigurationName
}

// GetIdCheckConfigurationNameOk returns a tuple with the IdCheckConfigurationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetIdCheckConfigurationNameOk() (*string, bool) {
	if o == nil || IsNil(o.IdCheckConfigurationName) {
		return nil, false
	}
	return o.IdCheckConfigurationName, true
}

// HasIdCheckConfigurationName returns a boolean if a field has been set.
func (o *Intermediary) HasIdCheckConfigurationName() bool {
	if o != nil && !IsNil(o.IdCheckConfigurationName) {
		return true
	}

	return false
}

// SetIdCheckConfigurationName gets a reference to the given string and assigns it to the IdCheckConfigurationName field.
func (o *Intermediary) SetIdCheckConfigurationName(v string) {
	o.IdCheckConfigurationName = &v
}

// GetIdCheckConfigurationNameMetadata returns the IdCheckConfigurationNameMetadata field value if set, zero value otherwise.
func (o *Intermediary) GetIdCheckConfigurationNameMetadata() PropertyMetadata {
	if o == nil || IsNil(o.IdCheckConfigurationNameMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.IdCheckConfigurationNameMetadata
}

// GetIdCheckConfigurationNameMetadataOk returns a tuple with the IdCheckConfigurationNameMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetIdCheckConfigurationNameMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.IdCheckConfigurationNameMetadata) {
		return nil, false
	}
	return o.IdCheckConfigurationNameMetadata, true
}

// HasIdCheckConfigurationNameMetadata returns a boolean if a field has been set.
func (o *Intermediary) HasIdCheckConfigurationNameMetadata() bool {
	if o != nil && !IsNil(o.IdCheckConfigurationNameMetadata) {
		return true
	}

	return false
}

// SetIdCheckConfigurationNameMetadata gets a reference to the given PropertyMetadata and assigns it to the IdCheckConfigurationNameMetadata field.
func (o *Intermediary) SetIdCheckConfigurationNameMetadata(v PropertyMetadata) {
	o.IdCheckConfigurationNameMetadata = &v
}

// GetIdCheckInformationInput returns the IdCheckInformationInput field value if set, zero value otherwise.
func (o *Intermediary) GetIdCheckInformationInput() IdCheckInformationInput {
	if o == nil || IsNil(o.IdCheckInformationInput) {
		var ret IdCheckInformationInput
		return ret
	}
	return *o.IdCheckInformationInput
}

// GetIdCheckInformationInputOk returns a tuple with the IdCheckInformationInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetIdCheckInformationInputOk() (*IdCheckInformationInput, bool) {
	if o == nil || IsNil(o.IdCheckInformationInput) {
		return nil, false
	}
	return o.IdCheckInformationInput, true
}

// HasIdCheckInformationInput returns a boolean if a field has been set.
func (o *Intermediary) HasIdCheckInformationInput() bool {
	if o != nil && !IsNil(o.IdCheckInformationInput) {
		return true
	}

	return false
}

// SetIdCheckInformationInput gets a reference to the given IdCheckInformationInput and assigns it to the IdCheckInformationInput field.
func (o *Intermediary) SetIdCheckInformationInput(v IdCheckInformationInput) {
	o.IdCheckInformationInput = &v
}

// GetIdentityVerification returns the IdentityVerification field value if set, zero value otherwise.
func (o *Intermediary) GetIdentityVerification() RecipientIdentityVerification {
	if o == nil || IsNil(o.IdentityVerification) {
		var ret RecipientIdentityVerification
		return ret
	}
	return *o.IdentityVerification
}

// GetIdentityVerificationOk returns a tuple with the IdentityVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetIdentityVerificationOk() (*RecipientIdentityVerification, bool) {
	if o == nil || IsNil(o.IdentityVerification) {
		return nil, false
	}
	return o.IdentityVerification, true
}

// HasIdentityVerification returns a boolean if a field has been set.
func (o *Intermediary) HasIdentityVerification() bool {
	if o != nil && !IsNil(o.IdentityVerification) {
		return true
	}

	return false
}

// SetIdentityVerification gets a reference to the given RecipientIdentityVerification and assigns it to the IdentityVerification field.
func (o *Intermediary) SetIdentityVerification(v RecipientIdentityVerification) {
	o.IdentityVerification = &v
}

// GetInheritEmailNotificationConfiguration returns the InheritEmailNotificationConfiguration field value if set, zero value otherwise.
func (o *Intermediary) GetInheritEmailNotificationConfiguration() string {
	if o == nil || IsNil(o.InheritEmailNotificationConfiguration) {
		var ret string
		return ret
	}
	return *o.InheritEmailNotificationConfiguration
}

// GetInheritEmailNotificationConfigurationOk returns a tuple with the InheritEmailNotificationConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetInheritEmailNotificationConfigurationOk() (*string, bool) {
	if o == nil || IsNil(o.InheritEmailNotificationConfiguration) {
		return nil, false
	}
	return o.InheritEmailNotificationConfiguration, true
}

// HasInheritEmailNotificationConfiguration returns a boolean if a field has been set.
func (o *Intermediary) HasInheritEmailNotificationConfiguration() bool {
	if o != nil && !IsNil(o.InheritEmailNotificationConfiguration) {
		return true
	}

	return false
}

// SetInheritEmailNotificationConfiguration gets a reference to the given string and assigns it to the InheritEmailNotificationConfiguration field.
func (o *Intermediary) SetInheritEmailNotificationConfiguration(v string) {
	o.InheritEmailNotificationConfiguration = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *Intermediary) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *Intermediary) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *Intermediary) SetLastName(v string) {
	o.LastName = &v
}

// GetLastNameMetadata returns the LastNameMetadata field value if set, zero value otherwise.
func (o *Intermediary) GetLastNameMetadata() PropertyMetadata {
	if o == nil || IsNil(o.LastNameMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.LastNameMetadata
}

// GetLastNameMetadataOk returns a tuple with the LastNameMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetLastNameMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.LastNameMetadata) {
		return nil, false
	}
	return o.LastNameMetadata, true
}

// HasLastNameMetadata returns a boolean if a field has been set.
func (o *Intermediary) HasLastNameMetadata() bool {
	if o != nil && !IsNil(o.LastNameMetadata) {
		return true
	}

	return false
}

// SetLastNameMetadata gets a reference to the given PropertyMetadata and assigns it to the LastNameMetadata field.
func (o *Intermediary) SetLastNameMetadata(v PropertyMetadata) {
	o.LastNameMetadata = &v
}

// GetLockedRecipientPhoneAuthEditable returns the LockedRecipientPhoneAuthEditable field value if set, zero value otherwise.
func (o *Intermediary) GetLockedRecipientPhoneAuthEditable() string {
	if o == nil || IsNil(o.LockedRecipientPhoneAuthEditable) {
		var ret string
		return ret
	}
	return *o.LockedRecipientPhoneAuthEditable
}

// GetLockedRecipientPhoneAuthEditableOk returns a tuple with the LockedRecipientPhoneAuthEditable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetLockedRecipientPhoneAuthEditableOk() (*string, bool) {
	if o == nil || IsNil(o.LockedRecipientPhoneAuthEditable) {
		return nil, false
	}
	return o.LockedRecipientPhoneAuthEditable, true
}

// HasLockedRecipientPhoneAuthEditable returns a boolean if a field has been set.
func (o *Intermediary) HasLockedRecipientPhoneAuthEditable() bool {
	if o != nil && !IsNil(o.LockedRecipientPhoneAuthEditable) {
		return true
	}

	return false
}

// SetLockedRecipientPhoneAuthEditable gets a reference to the given string and assigns it to the LockedRecipientPhoneAuthEditable field.
func (o *Intermediary) SetLockedRecipientPhoneAuthEditable(v string) {
	o.LockedRecipientPhoneAuthEditable = &v
}

// GetLockedRecipientSmsEditable returns the LockedRecipientSmsEditable field value if set, zero value otherwise.
func (o *Intermediary) GetLockedRecipientSmsEditable() string {
	if o == nil || IsNil(o.LockedRecipientSmsEditable) {
		var ret string
		return ret
	}
	return *o.LockedRecipientSmsEditable
}

// GetLockedRecipientSmsEditableOk returns a tuple with the LockedRecipientSmsEditable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetLockedRecipientSmsEditableOk() (*string, bool) {
	if o == nil || IsNil(o.LockedRecipientSmsEditable) {
		return nil, false
	}
	return o.LockedRecipientSmsEditable, true
}

// HasLockedRecipientSmsEditable returns a boolean if a field has been set.
func (o *Intermediary) HasLockedRecipientSmsEditable() bool {
	if o != nil && !IsNil(o.LockedRecipientSmsEditable) {
		return true
	}

	return false
}

// SetLockedRecipientSmsEditable gets a reference to the given string and assigns it to the LockedRecipientSmsEditable field.
func (o *Intermediary) SetLockedRecipientSmsEditable(v string) {
	o.LockedRecipientSmsEditable = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Intermediary) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Intermediary) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Intermediary) SetName(v string) {
	o.Name = &v
}

// GetNameMetadata returns the NameMetadata field value if set, zero value otherwise.
func (o *Intermediary) GetNameMetadata() PropertyMetadata {
	if o == nil || IsNil(o.NameMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.NameMetadata
}

// GetNameMetadataOk returns a tuple with the NameMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetNameMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.NameMetadata) {
		return nil, false
	}
	return o.NameMetadata, true
}

// HasNameMetadata returns a boolean if a field has been set.
func (o *Intermediary) HasNameMetadata() bool {
	if o != nil && !IsNil(o.NameMetadata) {
		return true
	}

	return false
}

// SetNameMetadata gets a reference to the given PropertyMetadata and assigns it to the NameMetadata field.
func (o *Intermediary) SetNameMetadata(v PropertyMetadata) {
	o.NameMetadata = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *Intermediary) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *Intermediary) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *Intermediary) SetNote(v string) {
	o.Note = &v
}

// GetNoteMetadata returns the NoteMetadata field value if set, zero value otherwise.
func (o *Intermediary) GetNoteMetadata() PropertyMetadata {
	if o == nil || IsNil(o.NoteMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.NoteMetadata
}

// GetNoteMetadataOk returns a tuple with the NoteMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetNoteMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.NoteMetadata) {
		return nil, false
	}
	return o.NoteMetadata, true
}

// HasNoteMetadata returns a boolean if a field has been set.
func (o *Intermediary) HasNoteMetadata() bool {
	if o != nil && !IsNil(o.NoteMetadata) {
		return true
	}

	return false
}

// SetNoteMetadata gets a reference to the given PropertyMetadata and assigns it to the NoteMetadata field.
func (o *Intermediary) SetNoteMetadata(v PropertyMetadata) {
	o.NoteMetadata = &v
}

// GetPhoneAuthentication returns the PhoneAuthentication field value if set, zero value otherwise.
func (o *Intermediary) GetPhoneAuthentication() RecipientPhoneAuthentication {
	if o == nil || IsNil(o.PhoneAuthentication) {
		var ret RecipientPhoneAuthentication
		return ret
	}
	return *o.PhoneAuthentication
}

// GetPhoneAuthenticationOk returns a tuple with the PhoneAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetPhoneAuthenticationOk() (*RecipientPhoneAuthentication, bool) {
	if o == nil || IsNil(o.PhoneAuthentication) {
		return nil, false
	}
	return o.PhoneAuthentication, true
}

// HasPhoneAuthentication returns a boolean if a field has been set.
func (o *Intermediary) HasPhoneAuthentication() bool {
	if o != nil && !IsNil(o.PhoneAuthentication) {
		return true
	}

	return false
}

// SetPhoneAuthentication gets a reference to the given RecipientPhoneAuthentication and assigns it to the PhoneAuthentication field.
func (o *Intermediary) SetPhoneAuthentication(v RecipientPhoneAuthentication) {
	o.PhoneAuthentication = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *Intermediary) GetPhoneNumber() RecipientPhoneNumber {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret RecipientPhoneNumber
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetPhoneNumberOk() (*RecipientPhoneNumber, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *Intermediary) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given RecipientPhoneNumber and assigns it to the PhoneNumber field.
func (o *Intermediary) SetPhoneNumber(v RecipientPhoneNumber) {
	o.PhoneNumber = &v
}

// GetRecipientAttachments returns the RecipientAttachments field value if set, zero value otherwise.
func (o *Intermediary) GetRecipientAttachments() []RecipientAttachment {
	if o == nil || IsNil(o.RecipientAttachments) {
		var ret []RecipientAttachment
		return ret
	}
	return o.RecipientAttachments
}

// GetRecipientAttachmentsOk returns a tuple with the RecipientAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetRecipientAttachmentsOk() ([]RecipientAttachment, bool) {
	if o == nil || IsNil(o.RecipientAttachments) {
		return nil, false
	}
	return o.RecipientAttachments, true
}

// HasRecipientAttachments returns a boolean if a field has been set.
func (o *Intermediary) HasRecipientAttachments() bool {
	if o != nil && !IsNil(o.RecipientAttachments) {
		return true
	}

	return false
}

// SetRecipientAttachments gets a reference to the given []RecipientAttachment and assigns it to the RecipientAttachments field.
func (o *Intermediary) SetRecipientAttachments(v []RecipientAttachment) {
	o.RecipientAttachments = v
}

// GetRecipientAuthenticationStatus returns the RecipientAuthenticationStatus field value if set, zero value otherwise.
func (o *Intermediary) GetRecipientAuthenticationStatus() AuthenticationStatus {
	if o == nil || IsNil(o.RecipientAuthenticationStatus) {
		var ret AuthenticationStatus
		return ret
	}
	return *o.RecipientAuthenticationStatus
}

// GetRecipientAuthenticationStatusOk returns a tuple with the RecipientAuthenticationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetRecipientAuthenticationStatusOk() (*AuthenticationStatus, bool) {
	if o == nil || IsNil(o.RecipientAuthenticationStatus) {
		return nil, false
	}
	return o.RecipientAuthenticationStatus, true
}

// HasRecipientAuthenticationStatus returns a boolean if a field has been set.
func (o *Intermediary) HasRecipientAuthenticationStatus() bool {
	if o != nil && !IsNil(o.RecipientAuthenticationStatus) {
		return true
	}

	return false
}

// SetRecipientAuthenticationStatus gets a reference to the given AuthenticationStatus and assigns it to the RecipientAuthenticationStatus field.
func (o *Intermediary) SetRecipientAuthenticationStatus(v AuthenticationStatus) {
	o.RecipientAuthenticationStatus = &v
}

// GetRecipientFeatureMetadata returns the RecipientFeatureMetadata field value if set, zero value otherwise.
func (o *Intermediary) GetRecipientFeatureMetadata() []FeatureAvailableMetadata {
	if o == nil || IsNil(o.RecipientFeatureMetadata) {
		var ret []FeatureAvailableMetadata
		return ret
	}
	return o.RecipientFeatureMetadata
}

// GetRecipientFeatureMetadataOk returns a tuple with the RecipientFeatureMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetRecipientFeatureMetadataOk() ([]FeatureAvailableMetadata, bool) {
	if o == nil || IsNil(o.RecipientFeatureMetadata) {
		return nil, false
	}
	return o.RecipientFeatureMetadata, true
}

// HasRecipientFeatureMetadata returns a boolean if a field has been set.
func (o *Intermediary) HasRecipientFeatureMetadata() bool {
	if o != nil && !IsNil(o.RecipientFeatureMetadata) {
		return true
	}

	return false
}

// SetRecipientFeatureMetadata gets a reference to the given []FeatureAvailableMetadata and assigns it to the RecipientFeatureMetadata field.
func (o *Intermediary) SetRecipientFeatureMetadata(v []FeatureAvailableMetadata) {
	o.RecipientFeatureMetadata = v
}

// GetRecipientId returns the RecipientId field value if set, zero value otherwise.
func (o *Intermediary) GetRecipientId() string {
	if o == nil || IsNil(o.RecipientId) {
		var ret string
		return ret
	}
	return *o.RecipientId
}

// GetRecipientIdOk returns a tuple with the RecipientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetRecipientIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientId) {
		return nil, false
	}
	return o.RecipientId, true
}

// HasRecipientId returns a boolean if a field has been set.
func (o *Intermediary) HasRecipientId() bool {
	if o != nil && !IsNil(o.RecipientId) {
		return true
	}

	return false
}

// SetRecipientId gets a reference to the given string and assigns it to the RecipientId field.
func (o *Intermediary) SetRecipientId(v string) {
	o.RecipientId = &v
}

// GetRecipientIdGuid returns the RecipientIdGuid field value if set, zero value otherwise.
func (o *Intermediary) GetRecipientIdGuid() string {
	if o == nil || IsNil(o.RecipientIdGuid) {
		var ret string
		return ret
	}
	return *o.RecipientIdGuid
}

// GetRecipientIdGuidOk returns a tuple with the RecipientIdGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetRecipientIdGuidOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientIdGuid) {
		return nil, false
	}
	return o.RecipientIdGuid, true
}

// HasRecipientIdGuid returns a boolean if a field has been set.
func (o *Intermediary) HasRecipientIdGuid() bool {
	if o != nil && !IsNil(o.RecipientIdGuid) {
		return true
	}

	return false
}

// SetRecipientIdGuid gets a reference to the given string and assigns it to the RecipientIdGuid field.
func (o *Intermediary) SetRecipientIdGuid(v string) {
	o.RecipientIdGuid = &v
}

// GetRecipientType returns the RecipientType field value if set, zero value otherwise.
func (o *Intermediary) GetRecipientType() string {
	if o == nil || IsNil(o.RecipientType) {
		var ret string
		return ret
	}
	return *o.RecipientType
}

// GetRecipientTypeOk returns a tuple with the RecipientType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetRecipientTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientType) {
		return nil, false
	}
	return o.RecipientType, true
}

// HasRecipientType returns a boolean if a field has been set.
func (o *Intermediary) HasRecipientType() bool {
	if o != nil && !IsNil(o.RecipientType) {
		return true
	}

	return false
}

// SetRecipientType gets a reference to the given string and assigns it to the RecipientType field.
func (o *Intermediary) SetRecipientType(v string) {
	o.RecipientType = &v
}

// GetRecipientTypeMetadata returns the RecipientTypeMetadata field value if set, zero value otherwise.
func (o *Intermediary) GetRecipientTypeMetadata() PropertyMetadata {
	if o == nil || IsNil(o.RecipientTypeMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.RecipientTypeMetadata
}

// GetRecipientTypeMetadataOk returns a tuple with the RecipientTypeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetRecipientTypeMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.RecipientTypeMetadata) {
		return nil, false
	}
	return o.RecipientTypeMetadata, true
}

// HasRecipientTypeMetadata returns a boolean if a field has been set.
func (o *Intermediary) HasRecipientTypeMetadata() bool {
	if o != nil && !IsNil(o.RecipientTypeMetadata) {
		return true
	}

	return false
}

// SetRecipientTypeMetadata gets a reference to the given PropertyMetadata and assigns it to the RecipientTypeMetadata field.
func (o *Intermediary) SetRecipientTypeMetadata(v PropertyMetadata) {
	o.RecipientTypeMetadata = &v
}

// GetRequireIdLookup returns the RequireIdLookup field value if set, zero value otherwise.
func (o *Intermediary) GetRequireIdLookup() string {
	if o == nil || IsNil(o.RequireIdLookup) {
		var ret string
		return ret
	}
	return *o.RequireIdLookup
}

// GetRequireIdLookupOk returns a tuple with the RequireIdLookup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetRequireIdLookupOk() (*string, bool) {
	if o == nil || IsNil(o.RequireIdLookup) {
		return nil, false
	}
	return o.RequireIdLookup, true
}

// HasRequireIdLookup returns a boolean if a field has been set.
func (o *Intermediary) HasRequireIdLookup() bool {
	if o != nil && !IsNil(o.RequireIdLookup) {
		return true
	}

	return false
}

// SetRequireIdLookup gets a reference to the given string and assigns it to the RequireIdLookup field.
func (o *Intermediary) SetRequireIdLookup(v string) {
	o.RequireIdLookup = &v
}

// GetRequireIdLookupMetadata returns the RequireIdLookupMetadata field value if set, zero value otherwise.
func (o *Intermediary) GetRequireIdLookupMetadata() PropertyMetadata {
	if o == nil || IsNil(o.RequireIdLookupMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.RequireIdLookupMetadata
}

// GetRequireIdLookupMetadataOk returns a tuple with the RequireIdLookupMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetRequireIdLookupMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.RequireIdLookupMetadata) {
		return nil, false
	}
	return o.RequireIdLookupMetadata, true
}

// HasRequireIdLookupMetadata returns a boolean if a field has been set.
func (o *Intermediary) HasRequireIdLookupMetadata() bool {
	if o != nil && !IsNil(o.RequireIdLookupMetadata) {
		return true
	}

	return false
}

// SetRequireIdLookupMetadata gets a reference to the given PropertyMetadata and assigns it to the RequireIdLookupMetadata field.
func (o *Intermediary) SetRequireIdLookupMetadata(v PropertyMetadata) {
	o.RequireIdLookupMetadata = &v
}

// GetRoleName returns the RoleName field value if set, zero value otherwise.
func (o *Intermediary) GetRoleName() string {
	if o == nil || IsNil(o.RoleName) {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetRoleNameOk() (*string, bool) {
	if o == nil || IsNil(o.RoleName) {
		return nil, false
	}
	return o.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (o *Intermediary) HasRoleName() bool {
	if o != nil && !IsNil(o.RoleName) {
		return true
	}

	return false
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *Intermediary) SetRoleName(v string) {
	o.RoleName = &v
}

// GetRoutingOrder returns the RoutingOrder field value if set, zero value otherwise.
func (o *Intermediary) GetRoutingOrder() string {
	if o == nil || IsNil(o.RoutingOrder) {
		var ret string
		return ret
	}
	return *o.RoutingOrder
}

// GetRoutingOrderOk returns a tuple with the RoutingOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetRoutingOrderOk() (*string, bool) {
	if o == nil || IsNil(o.RoutingOrder) {
		return nil, false
	}
	return o.RoutingOrder, true
}

// HasRoutingOrder returns a boolean if a field has been set.
func (o *Intermediary) HasRoutingOrder() bool {
	if o != nil && !IsNil(o.RoutingOrder) {
		return true
	}

	return false
}

// SetRoutingOrder gets a reference to the given string and assigns it to the RoutingOrder field.
func (o *Intermediary) SetRoutingOrder(v string) {
	o.RoutingOrder = &v
}

// GetRoutingOrderMetadata returns the RoutingOrderMetadata field value if set, zero value otherwise.
func (o *Intermediary) GetRoutingOrderMetadata() PropertyMetadata {
	if o == nil || IsNil(o.RoutingOrderMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.RoutingOrderMetadata
}

// GetRoutingOrderMetadataOk returns a tuple with the RoutingOrderMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetRoutingOrderMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.RoutingOrderMetadata) {
		return nil, false
	}
	return o.RoutingOrderMetadata, true
}

// HasRoutingOrderMetadata returns a boolean if a field has been set.
func (o *Intermediary) HasRoutingOrderMetadata() bool {
	if o != nil && !IsNil(o.RoutingOrderMetadata) {
		return true
	}

	return false
}

// SetRoutingOrderMetadata gets a reference to the given PropertyMetadata and assigns it to the RoutingOrderMetadata field.
func (o *Intermediary) SetRoutingOrderMetadata(v PropertyMetadata) {
	o.RoutingOrderMetadata = &v
}

// GetSentDateTime returns the SentDateTime field value if set, zero value otherwise.
func (o *Intermediary) GetSentDateTime() string {
	if o == nil || IsNil(o.SentDateTime) {
		var ret string
		return ret
	}
	return *o.SentDateTime
}

// GetSentDateTimeOk returns a tuple with the SentDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetSentDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.SentDateTime) {
		return nil, false
	}
	return o.SentDateTime, true
}

// HasSentDateTime returns a boolean if a field has been set.
func (o *Intermediary) HasSentDateTime() bool {
	if o != nil && !IsNil(o.SentDateTime) {
		return true
	}

	return false
}

// SetSentDateTime gets a reference to the given string and assigns it to the SentDateTime field.
func (o *Intermediary) SetSentDateTime(v string) {
	o.SentDateTime = &v
}

// GetSignedDateTime returns the SignedDateTime field value if set, zero value otherwise.
func (o *Intermediary) GetSignedDateTime() string {
	if o == nil || IsNil(o.SignedDateTime) {
		var ret string
		return ret
	}
	return *o.SignedDateTime
}

// GetSignedDateTimeOk returns a tuple with the SignedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetSignedDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.SignedDateTime) {
		return nil, false
	}
	return o.SignedDateTime, true
}

// HasSignedDateTime returns a boolean if a field has been set.
func (o *Intermediary) HasSignedDateTime() bool {
	if o != nil && !IsNil(o.SignedDateTime) {
		return true
	}

	return false
}

// SetSignedDateTime gets a reference to the given string and assigns it to the SignedDateTime field.
func (o *Intermediary) SetSignedDateTime(v string) {
	o.SignedDateTime = &v
}

// GetSigningGroupId returns the SigningGroupId field value if set, zero value otherwise.
func (o *Intermediary) GetSigningGroupId() string {
	if o == nil || IsNil(o.SigningGroupId) {
		var ret string
		return ret
	}
	return *o.SigningGroupId
}

// GetSigningGroupIdOk returns a tuple with the SigningGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetSigningGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.SigningGroupId) {
		return nil, false
	}
	return o.SigningGroupId, true
}

// HasSigningGroupId returns a boolean if a field has been set.
func (o *Intermediary) HasSigningGroupId() bool {
	if o != nil && !IsNil(o.SigningGroupId) {
		return true
	}

	return false
}

// SetSigningGroupId gets a reference to the given string and assigns it to the SigningGroupId field.
func (o *Intermediary) SetSigningGroupId(v string) {
	o.SigningGroupId = &v
}

// GetSigningGroupIdMetadata returns the SigningGroupIdMetadata field value if set, zero value otherwise.
func (o *Intermediary) GetSigningGroupIdMetadata() PropertyMetadata {
	if o == nil || IsNil(o.SigningGroupIdMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.SigningGroupIdMetadata
}

// GetSigningGroupIdMetadataOk returns a tuple with the SigningGroupIdMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetSigningGroupIdMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.SigningGroupIdMetadata) {
		return nil, false
	}
	return o.SigningGroupIdMetadata, true
}

// HasSigningGroupIdMetadata returns a boolean if a field has been set.
func (o *Intermediary) HasSigningGroupIdMetadata() bool {
	if o != nil && !IsNil(o.SigningGroupIdMetadata) {
		return true
	}

	return false
}

// SetSigningGroupIdMetadata gets a reference to the given PropertyMetadata and assigns it to the SigningGroupIdMetadata field.
func (o *Intermediary) SetSigningGroupIdMetadata(v PropertyMetadata) {
	o.SigningGroupIdMetadata = &v
}

// GetSigningGroupName returns the SigningGroupName field value if set, zero value otherwise.
func (o *Intermediary) GetSigningGroupName() string {
	if o == nil || IsNil(o.SigningGroupName) {
		var ret string
		return ret
	}
	return *o.SigningGroupName
}

// GetSigningGroupNameOk returns a tuple with the SigningGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetSigningGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.SigningGroupName) {
		return nil, false
	}
	return o.SigningGroupName, true
}

// HasSigningGroupName returns a boolean if a field has been set.
func (o *Intermediary) HasSigningGroupName() bool {
	if o != nil && !IsNil(o.SigningGroupName) {
		return true
	}

	return false
}

// SetSigningGroupName gets a reference to the given string and assigns it to the SigningGroupName field.
func (o *Intermediary) SetSigningGroupName(v string) {
	o.SigningGroupName = &v
}

// GetSigningGroupUsers returns the SigningGroupUsers field value if set, zero value otherwise.
func (o *Intermediary) GetSigningGroupUsers() []UserInfo {
	if o == nil || IsNil(o.SigningGroupUsers) {
		var ret []UserInfo
		return ret
	}
	return o.SigningGroupUsers
}

// GetSigningGroupUsersOk returns a tuple with the SigningGroupUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetSigningGroupUsersOk() ([]UserInfo, bool) {
	if o == nil || IsNil(o.SigningGroupUsers) {
		return nil, false
	}
	return o.SigningGroupUsers, true
}

// HasSigningGroupUsers returns a boolean if a field has been set.
func (o *Intermediary) HasSigningGroupUsers() bool {
	if o != nil && !IsNil(o.SigningGroupUsers) {
		return true
	}

	return false
}

// SetSigningGroupUsers gets a reference to the given []UserInfo and assigns it to the SigningGroupUsers field.
func (o *Intermediary) SetSigningGroupUsers(v []UserInfo) {
	o.SigningGroupUsers = v
}

// GetSmsAuthentication returns the SmsAuthentication field value if set, zero value otherwise.
func (o *Intermediary) GetSmsAuthentication() RecipientSMSAuthentication {
	if o == nil || IsNil(o.SmsAuthentication) {
		var ret RecipientSMSAuthentication
		return ret
	}
	return *o.SmsAuthentication
}

// GetSmsAuthenticationOk returns a tuple with the SmsAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetSmsAuthenticationOk() (*RecipientSMSAuthentication, bool) {
	if o == nil || IsNil(o.SmsAuthentication) {
		return nil, false
	}
	return o.SmsAuthentication, true
}

// HasSmsAuthentication returns a boolean if a field has been set.
func (o *Intermediary) HasSmsAuthentication() bool {
	if o != nil && !IsNil(o.SmsAuthentication) {
		return true
	}

	return false
}

// SetSmsAuthentication gets a reference to the given RecipientSMSAuthentication and assigns it to the SmsAuthentication field.
func (o *Intermediary) SetSmsAuthentication(v RecipientSMSAuthentication) {
	o.SmsAuthentication = &v
}

// GetSocialAuthentications returns the SocialAuthentications field value if set, zero value otherwise.
func (o *Intermediary) GetSocialAuthentications() []SocialAuthentication {
	if o == nil || IsNil(o.SocialAuthentications) {
		var ret []SocialAuthentication
		return ret
	}
	return o.SocialAuthentications
}

// GetSocialAuthenticationsOk returns a tuple with the SocialAuthentications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetSocialAuthenticationsOk() ([]SocialAuthentication, bool) {
	if o == nil || IsNil(o.SocialAuthentications) {
		return nil, false
	}
	return o.SocialAuthentications, true
}

// HasSocialAuthentications returns a boolean if a field has been set.
func (o *Intermediary) HasSocialAuthentications() bool {
	if o != nil && !IsNil(o.SocialAuthentications) {
		return true
	}

	return false
}

// SetSocialAuthentications gets a reference to the given []SocialAuthentication and assigns it to the SocialAuthentications field.
func (o *Intermediary) SetSocialAuthentications(v []SocialAuthentication) {
	o.SocialAuthentications = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Intermediary) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Intermediary) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Intermediary) SetStatus(v string) {
	o.Status = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *Intermediary) GetStatusCode() string {
	if o == nil || IsNil(o.StatusCode) {
		var ret string
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetStatusCodeOk() (*string, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *Intermediary) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given string and assigns it to the StatusCode field.
func (o *Intermediary) SetStatusCode(v string) {
	o.StatusCode = &v
}

// GetSuppressEmails returns the SuppressEmails field value if set, zero value otherwise.
func (o *Intermediary) GetSuppressEmails() string {
	if o == nil || IsNil(o.SuppressEmails) {
		var ret string
		return ret
	}
	return *o.SuppressEmails
}

// GetSuppressEmailsOk returns a tuple with the SuppressEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetSuppressEmailsOk() (*string, bool) {
	if o == nil || IsNil(o.SuppressEmails) {
		return nil, false
	}
	return o.SuppressEmails, true
}

// HasSuppressEmails returns a boolean if a field has been set.
func (o *Intermediary) HasSuppressEmails() bool {
	if o != nil && !IsNil(o.SuppressEmails) {
		return true
	}

	return false
}

// SetSuppressEmails gets a reference to the given string and assigns it to the SuppressEmails field.
func (o *Intermediary) SetSuppressEmails(v string) {
	o.SuppressEmails = &v
}

// GetTemplateLocked returns the TemplateLocked field value if set, zero value otherwise.
func (o *Intermediary) GetTemplateLocked() string {
	if o == nil || IsNil(o.TemplateLocked) {
		var ret string
		return ret
	}
	return *o.TemplateLocked
}

// GetTemplateLockedOk returns a tuple with the TemplateLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetTemplateLockedOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateLocked) {
		return nil, false
	}
	return o.TemplateLocked, true
}

// HasTemplateLocked returns a boolean if a field has been set.
func (o *Intermediary) HasTemplateLocked() bool {
	if o != nil && !IsNil(o.TemplateLocked) {
		return true
	}

	return false
}

// SetTemplateLocked gets a reference to the given string and assigns it to the TemplateLocked field.
func (o *Intermediary) SetTemplateLocked(v string) {
	o.TemplateLocked = &v
}

// GetTemplateRequired returns the TemplateRequired field value if set, zero value otherwise.
func (o *Intermediary) GetTemplateRequired() string {
	if o == nil || IsNil(o.TemplateRequired) {
		var ret string
		return ret
	}
	return *o.TemplateRequired
}

// GetTemplateRequiredOk returns a tuple with the TemplateRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetTemplateRequiredOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateRequired) {
		return nil, false
	}
	return o.TemplateRequired, true
}

// HasTemplateRequired returns a boolean if a field has been set.
func (o *Intermediary) HasTemplateRequired() bool {
	if o != nil && !IsNil(o.TemplateRequired) {
		return true
	}

	return false
}

// SetTemplateRequired gets a reference to the given string and assigns it to the TemplateRequired field.
func (o *Intermediary) SetTemplateRequired(v string) {
	o.TemplateRequired = &v
}

// GetTotalTabCount returns the TotalTabCount field value if set, zero value otherwise.
func (o *Intermediary) GetTotalTabCount() string {
	if o == nil || IsNil(o.TotalTabCount) {
		var ret string
		return ret
	}
	return *o.TotalTabCount
}

// GetTotalTabCountOk returns a tuple with the TotalTabCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetTotalTabCountOk() (*string, bool) {
	if o == nil || IsNil(o.TotalTabCount) {
		return nil, false
	}
	return o.TotalTabCount, true
}

// HasTotalTabCount returns a boolean if a field has been set.
func (o *Intermediary) HasTotalTabCount() bool {
	if o != nil && !IsNil(o.TotalTabCount) {
		return true
	}

	return false
}

// SetTotalTabCount gets a reference to the given string and assigns it to the TotalTabCount field.
func (o *Intermediary) SetTotalTabCount(v string) {
	o.TotalTabCount = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *Intermediary) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Intermediary) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *Intermediary) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *Intermediary) SetUserId(v string) {
	o.UserId = &v
}

func (o Intermediary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Intermediary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessCode) {
		toSerialize["accessCode"] = o.AccessCode
	}
	if !IsNil(o.AccessCodeMetadata) {
		toSerialize["accessCodeMetadata"] = o.AccessCodeMetadata
	}
	if !IsNil(o.AddAccessCodeToEmail) {
		toSerialize["addAccessCodeToEmail"] = o.AddAccessCodeToEmail
	}
	if !IsNil(o.AdditionalNotifications) {
		toSerialize["additionalNotifications"] = o.AdditionalNotifications
	}
	if !IsNil(o.AllowSystemOverrideForLockedRecipient) {
		toSerialize["allowSystemOverrideForLockedRecipient"] = o.AllowSystemOverrideForLockedRecipient
	}
	if !IsNil(o.AutoRespondedReason) {
		toSerialize["autoRespondedReason"] = o.AutoRespondedReason
	}
	if !IsNil(o.BulkSendV2Recipient) {
		toSerialize["bulkSendV2Recipient"] = o.BulkSendV2Recipient
	}
	if !IsNil(o.ClientUserId) {
		toSerialize["clientUserId"] = o.ClientUserId
	}
	if !IsNil(o.CompletedCount) {
		toSerialize["completedCount"] = o.CompletedCount
	}
	if !IsNil(o.ConsentDetailsList) {
		toSerialize["consentDetailsList"] = o.ConsentDetailsList
	}
	if !IsNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}
	if !IsNil(o.DeclinedDateTime) {
		toSerialize["declinedDateTime"] = o.DeclinedDateTime
	}
	if !IsNil(o.DeclinedReason) {
		toSerialize["declinedReason"] = o.DeclinedReason
	}
	if !IsNil(o.DeliveredDateTime) {
		toSerialize["deliveredDateTime"] = o.DeliveredDateTime
	}
	if !IsNil(o.DeliveryMethod) {
		toSerialize["deliveryMethod"] = o.DeliveryMethod
	}
	if !IsNil(o.DeliveryMethodMetadata) {
		toSerialize["deliveryMethodMetadata"] = o.DeliveryMethodMetadata
	}
	if !IsNil(o.DesignatorId) {
		toSerialize["designatorId"] = o.DesignatorId
	}
	if !IsNil(o.DesignatorIdGuid) {
		toSerialize["designatorIdGuid"] = o.DesignatorIdGuid
	}
	if !IsNil(o.DocumentVisibility) {
		toSerialize["documentVisibility"] = o.DocumentVisibility
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.EmailMetadata) {
		toSerialize["emailMetadata"] = o.EmailMetadata
	}
	if !IsNil(o.EmailNotification) {
		toSerialize["emailNotification"] = o.EmailNotification
	}
	if !IsNil(o.EmailRecipientPostSigningURL) {
		toSerialize["emailRecipientPostSigningURL"] = o.EmailRecipientPostSigningURL
	}
	if !IsNil(o.EmbeddedRecipientStartURL) {
		toSerialize["embeddedRecipientStartURL"] = o.EmbeddedRecipientStartURL
	}
	if !IsNil(o.ErrorDetails) {
		toSerialize["errorDetails"] = o.ErrorDetails
	}
	if !IsNil(o.ExcludedDocuments) {
		toSerialize["excludedDocuments"] = o.ExcludedDocuments
	}
	if !IsNil(o.FaxNumber) {
		toSerialize["faxNumber"] = o.FaxNumber
	}
	if !IsNil(o.FaxNumberMetadata) {
		toSerialize["faxNumberMetadata"] = o.FaxNumberMetadata
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.FirstNameMetadata) {
		toSerialize["firstNameMetadata"] = o.FirstNameMetadata
	}
	if !IsNil(o.FullName) {
		toSerialize["fullName"] = o.FullName
	}
	if !IsNil(o.FullNameMetadata) {
		toSerialize["fullNameMetadata"] = o.FullNameMetadata
	}
	if !IsNil(o.IdCheckConfigurationName) {
		toSerialize["idCheckConfigurationName"] = o.IdCheckConfigurationName
	}
	if !IsNil(o.IdCheckConfigurationNameMetadata) {
		toSerialize["idCheckConfigurationNameMetadata"] = o.IdCheckConfigurationNameMetadata
	}
	if !IsNil(o.IdCheckInformationInput) {
		toSerialize["idCheckInformationInput"] = o.IdCheckInformationInput
	}
	if !IsNil(o.IdentityVerification) {
		toSerialize["identityVerification"] = o.IdentityVerification
	}
	if !IsNil(o.InheritEmailNotificationConfiguration) {
		toSerialize["inheritEmailNotificationConfiguration"] = o.InheritEmailNotificationConfiguration
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.LastNameMetadata) {
		toSerialize["lastNameMetadata"] = o.LastNameMetadata
	}
	if !IsNil(o.LockedRecipientPhoneAuthEditable) {
		toSerialize["lockedRecipientPhoneAuthEditable"] = o.LockedRecipientPhoneAuthEditable
	}
	if !IsNil(o.LockedRecipientSmsEditable) {
		toSerialize["lockedRecipientSmsEditable"] = o.LockedRecipientSmsEditable
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NameMetadata) {
		toSerialize["nameMetadata"] = o.NameMetadata
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.NoteMetadata) {
		toSerialize["noteMetadata"] = o.NoteMetadata
	}
	if !IsNil(o.PhoneAuthentication) {
		toSerialize["phoneAuthentication"] = o.PhoneAuthentication
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !IsNil(o.RecipientAttachments) {
		toSerialize["recipientAttachments"] = o.RecipientAttachments
	}
	if !IsNil(o.RecipientAuthenticationStatus) {
		toSerialize["recipientAuthenticationStatus"] = o.RecipientAuthenticationStatus
	}
	if !IsNil(o.RecipientFeatureMetadata) {
		toSerialize["recipientFeatureMetadata"] = o.RecipientFeatureMetadata
	}
	if !IsNil(o.RecipientId) {
		toSerialize["recipientId"] = o.RecipientId
	}
	if !IsNil(o.RecipientIdGuid) {
		toSerialize["recipientIdGuid"] = o.RecipientIdGuid
	}
	if !IsNil(o.RecipientType) {
		toSerialize["recipientType"] = o.RecipientType
	}
	if !IsNil(o.RecipientTypeMetadata) {
		toSerialize["recipientTypeMetadata"] = o.RecipientTypeMetadata
	}
	if !IsNil(o.RequireIdLookup) {
		toSerialize["requireIdLookup"] = o.RequireIdLookup
	}
	if !IsNil(o.RequireIdLookupMetadata) {
		toSerialize["requireIdLookupMetadata"] = o.RequireIdLookupMetadata
	}
	if !IsNil(o.RoleName) {
		toSerialize["roleName"] = o.RoleName
	}
	if !IsNil(o.RoutingOrder) {
		toSerialize["routingOrder"] = o.RoutingOrder
	}
	if !IsNil(o.RoutingOrderMetadata) {
		toSerialize["routingOrderMetadata"] = o.RoutingOrderMetadata
	}
	if !IsNil(o.SentDateTime) {
		toSerialize["sentDateTime"] = o.SentDateTime
	}
	if !IsNil(o.SignedDateTime) {
		toSerialize["signedDateTime"] = o.SignedDateTime
	}
	if !IsNil(o.SigningGroupId) {
		toSerialize["signingGroupId"] = o.SigningGroupId
	}
	if !IsNil(o.SigningGroupIdMetadata) {
		toSerialize["signingGroupIdMetadata"] = o.SigningGroupIdMetadata
	}
	if !IsNil(o.SigningGroupName) {
		toSerialize["signingGroupName"] = o.SigningGroupName
	}
	if !IsNil(o.SigningGroupUsers) {
		toSerialize["signingGroupUsers"] = o.SigningGroupUsers
	}
	if !IsNil(o.SmsAuthentication) {
		toSerialize["smsAuthentication"] = o.SmsAuthentication
	}
	if !IsNil(o.SocialAuthentications) {
		toSerialize["socialAuthentications"] = o.SocialAuthentications
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	if !IsNil(o.SuppressEmails) {
		toSerialize["suppressEmails"] = o.SuppressEmails
	}
	if !IsNil(o.TemplateLocked) {
		toSerialize["templateLocked"] = o.TemplateLocked
	}
	if !IsNil(o.TemplateRequired) {
		toSerialize["templateRequired"] = o.TemplateRequired
	}
	if !IsNil(o.TotalTabCount) {
		toSerialize["totalTabCount"] = o.TotalTabCount
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableIntermediary struct {
	value *Intermediary
	isSet bool
}

func (v NullableIntermediary) Get() *Intermediary {
	return v.value
}

func (v *NullableIntermediary) Set(val *Intermediary) {
	v.value = val
	v.isSet = true
}

func (v NullableIntermediary) IsSet() bool {
	return v.isSet
}

func (v *NullableIntermediary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntermediary(val *Intermediary) *NullableIntermediary {
	return &NullableIntermediary{value: val, isSet: true}
}

func (v NullableIntermediary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntermediary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


