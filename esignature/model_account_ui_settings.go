/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AccountUISettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountUISettings{}

// AccountUISettings An object that defines the options that are available to non-administrators in the UI.
type AccountUISettings struct {
	AdminMessage *AdminMessage `json:"adminMessage,omitempty"`
	// 
	AllowUsersToEditSharedAccess *string `json:"allowUsersToEditSharedAccess,omitempty"`
	AllowUsersToEditSharedAccessMetadata *SettingsMetadata `json:"allowUsersToEditSharedAccessMetadata,omitempty"`
	AskAnAdmin *AskAnAdmin `json:"askAnAdmin,omitempty"`
	// 
	ClickwrapSchemaVersion *string `json:"clickwrapSchemaVersion,omitempty"`
	ClickwrapSchemaVersionMetadata *SettingsMetadata `json:"clickwrapSchemaVersionMetadata,omitempty"`
	// 
	EnableAdminMessage *string `json:"enableAdminMessage,omitempty"`
	EnableAdminMessageMetadata *SettingsMetadata `json:"enableAdminMessageMetadata,omitempty"`
	// 
	EnableEasySignCanUseMultiTemplateApply *string `json:"enableEasySignCanUseMultiTemplateApply,omitempty"`
	EnableEasySignCanUseMultiTemplateApplyMetadata *SettingsMetadata `json:"enableEasySignCanUseMultiTemplateApplyMetadata,omitempty"`
	// 
	EnableEasySignTemplateUpload *string `json:"enableEasySignTemplateUpload,omitempty"`
	EnableEasySignTemplateUploadMetadata *SettingsMetadata `json:"enableEasySignTemplateUploadMetadata,omitempty"`
	// 
	EnableEnvelopeCopyWithData *string `json:"enableEnvelopeCopyWithData,omitempty"`
	EnableEnvelopeCopyWithDataMetadata *SettingsMetadata `json:"enableEnvelopeCopyWithDataMetadata,omitempty"`
	// 
	EnableLegacySendflowLink *string `json:"enableLegacySendflowLink,omitempty"`
	EnableLegacySendflowLinkMetadata *SettingsMetadata `json:"enableLegacySendflowLinkMetadata,omitempty"`
	// 
	HasExternalLinkedAccounts *string `json:"hasExternalLinkedAccounts,omitempty"`
	HasExternalLinkedAccountsMetadata *SettingsMetadata `json:"hasExternalLinkedAccountsMetadata,omitempty"`
	// 
	HideSendAnEnvelope *string `json:"hideSendAnEnvelope,omitempty"`
	HideSendAnEnvelopeMetadata *SettingsMetadata `json:"hideSendAnEnvelopeMetadata,omitempty"`
	// When **true,** the **Templates** menu is hidden from account users who are not Admins. The default value is **false.**
	HideUseATemplate *string `json:"hideUseATemplate,omitempty"`
	// 
	HideUseATemplateInPrepare *string `json:"hideUseATemplateInPrepare,omitempty"`
	HideUseATemplateInPrepareMetadata *SettingsMetadata `json:"hideUseATemplateInPrepareMetadata,omitempty"`
	HideUseATemplateMetadata *SettingsMetadata `json:"hideUseATemplateMetadata,omitempty"`
	// 
	OrderBasedRecipientIdGeneration *string `json:"orderBasedRecipientIdGeneration,omitempty"`
	OrderBasedRecipientIdGenerationMetadata *SettingsMetadata `json:"orderBasedRecipientIdGenerationMetadata,omitempty"`
	// 
	RemoveEnvelopeForwarding *string `json:"removeEnvelopeForwarding,omitempty"`
	RemoveEnvelopeForwardingMetadata *SettingsMetadata `json:"removeEnvelopeForwardingMetadata,omitempty"`
	// 
	ShouldRedactAccessCode *string `json:"shouldRedactAccessCode,omitempty"`
	ShouldRedactAccessCodeMetadata *SettingsMetadata `json:"shouldRedactAccessCodeMetadata,omitempty"`
	// 
	UploadNewImageToSignOrInitial *string `json:"uploadNewImageToSignOrInitial,omitempty"`
	UploadNewImageToSignOrInitialMetadata *SettingsMetadata `json:"uploadNewImageToSignOrInitialMetadata,omitempty"`
}

// NewAccountUISettings instantiates a new AccountUISettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountUISettings() *AccountUISettings {
	this := AccountUISettings{}
	return &this
}

// NewAccountUISettingsWithDefaults instantiates a new AccountUISettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountUISettingsWithDefaults() *AccountUISettings {
	this := AccountUISettings{}
	return &this
}

// GetAdminMessage returns the AdminMessage field value if set, zero value otherwise.
func (o *AccountUISettings) GetAdminMessage() AdminMessage {
	if o == nil || IsNil(o.AdminMessage) {
		var ret AdminMessage
		return ret
	}
	return *o.AdminMessage
}

// GetAdminMessageOk returns a tuple with the AdminMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetAdminMessageOk() (*AdminMessage, bool) {
	if o == nil || IsNil(o.AdminMessage) {
		return nil, false
	}
	return o.AdminMessage, true
}

// HasAdminMessage returns a boolean if a field has been set.
func (o *AccountUISettings) HasAdminMessage() bool {
	if o != nil && !IsNil(o.AdminMessage) {
		return true
	}

	return false
}

// SetAdminMessage gets a reference to the given AdminMessage and assigns it to the AdminMessage field.
func (o *AccountUISettings) SetAdminMessage(v AdminMessage) {
	o.AdminMessage = &v
}

// GetAllowUsersToEditSharedAccess returns the AllowUsersToEditSharedAccess field value if set, zero value otherwise.
func (o *AccountUISettings) GetAllowUsersToEditSharedAccess() string {
	if o == nil || IsNil(o.AllowUsersToEditSharedAccess) {
		var ret string
		return ret
	}
	return *o.AllowUsersToEditSharedAccess
}

// GetAllowUsersToEditSharedAccessOk returns a tuple with the AllowUsersToEditSharedAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetAllowUsersToEditSharedAccessOk() (*string, bool) {
	if o == nil || IsNil(o.AllowUsersToEditSharedAccess) {
		return nil, false
	}
	return o.AllowUsersToEditSharedAccess, true
}

// HasAllowUsersToEditSharedAccess returns a boolean if a field has been set.
func (o *AccountUISettings) HasAllowUsersToEditSharedAccess() bool {
	if o != nil && !IsNil(o.AllowUsersToEditSharedAccess) {
		return true
	}

	return false
}

// SetAllowUsersToEditSharedAccess gets a reference to the given string and assigns it to the AllowUsersToEditSharedAccess field.
func (o *AccountUISettings) SetAllowUsersToEditSharedAccess(v string) {
	o.AllowUsersToEditSharedAccess = &v
}

// GetAllowUsersToEditSharedAccessMetadata returns the AllowUsersToEditSharedAccessMetadata field value if set, zero value otherwise.
func (o *AccountUISettings) GetAllowUsersToEditSharedAccessMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowUsersToEditSharedAccessMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowUsersToEditSharedAccessMetadata
}

// GetAllowUsersToEditSharedAccessMetadataOk returns a tuple with the AllowUsersToEditSharedAccessMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetAllowUsersToEditSharedAccessMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowUsersToEditSharedAccessMetadata) {
		return nil, false
	}
	return o.AllowUsersToEditSharedAccessMetadata, true
}

// HasAllowUsersToEditSharedAccessMetadata returns a boolean if a field has been set.
func (o *AccountUISettings) HasAllowUsersToEditSharedAccessMetadata() bool {
	if o != nil && !IsNil(o.AllowUsersToEditSharedAccessMetadata) {
		return true
	}

	return false
}

// SetAllowUsersToEditSharedAccessMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowUsersToEditSharedAccessMetadata field.
func (o *AccountUISettings) SetAllowUsersToEditSharedAccessMetadata(v SettingsMetadata) {
	o.AllowUsersToEditSharedAccessMetadata = &v
}

// GetAskAnAdmin returns the AskAnAdmin field value if set, zero value otherwise.
func (o *AccountUISettings) GetAskAnAdmin() AskAnAdmin {
	if o == nil || IsNil(o.AskAnAdmin) {
		var ret AskAnAdmin
		return ret
	}
	return *o.AskAnAdmin
}

// GetAskAnAdminOk returns a tuple with the AskAnAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetAskAnAdminOk() (*AskAnAdmin, bool) {
	if o == nil || IsNil(o.AskAnAdmin) {
		return nil, false
	}
	return o.AskAnAdmin, true
}

// HasAskAnAdmin returns a boolean if a field has been set.
func (o *AccountUISettings) HasAskAnAdmin() bool {
	if o != nil && !IsNil(o.AskAnAdmin) {
		return true
	}

	return false
}

// SetAskAnAdmin gets a reference to the given AskAnAdmin and assigns it to the AskAnAdmin field.
func (o *AccountUISettings) SetAskAnAdmin(v AskAnAdmin) {
	o.AskAnAdmin = &v
}

// GetClickwrapSchemaVersion returns the ClickwrapSchemaVersion field value if set, zero value otherwise.
func (o *AccountUISettings) GetClickwrapSchemaVersion() string {
	if o == nil || IsNil(o.ClickwrapSchemaVersion) {
		var ret string
		return ret
	}
	return *o.ClickwrapSchemaVersion
}

// GetClickwrapSchemaVersionOk returns a tuple with the ClickwrapSchemaVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetClickwrapSchemaVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ClickwrapSchemaVersion) {
		return nil, false
	}
	return o.ClickwrapSchemaVersion, true
}

// HasClickwrapSchemaVersion returns a boolean if a field has been set.
func (o *AccountUISettings) HasClickwrapSchemaVersion() bool {
	if o != nil && !IsNil(o.ClickwrapSchemaVersion) {
		return true
	}

	return false
}

// SetClickwrapSchemaVersion gets a reference to the given string and assigns it to the ClickwrapSchemaVersion field.
func (o *AccountUISettings) SetClickwrapSchemaVersion(v string) {
	o.ClickwrapSchemaVersion = &v
}

// GetClickwrapSchemaVersionMetadata returns the ClickwrapSchemaVersionMetadata field value if set, zero value otherwise.
func (o *AccountUISettings) GetClickwrapSchemaVersionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ClickwrapSchemaVersionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ClickwrapSchemaVersionMetadata
}

// GetClickwrapSchemaVersionMetadataOk returns a tuple with the ClickwrapSchemaVersionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetClickwrapSchemaVersionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ClickwrapSchemaVersionMetadata) {
		return nil, false
	}
	return o.ClickwrapSchemaVersionMetadata, true
}

// HasClickwrapSchemaVersionMetadata returns a boolean if a field has been set.
func (o *AccountUISettings) HasClickwrapSchemaVersionMetadata() bool {
	if o != nil && !IsNil(o.ClickwrapSchemaVersionMetadata) {
		return true
	}

	return false
}

// SetClickwrapSchemaVersionMetadata gets a reference to the given SettingsMetadata and assigns it to the ClickwrapSchemaVersionMetadata field.
func (o *AccountUISettings) SetClickwrapSchemaVersionMetadata(v SettingsMetadata) {
	o.ClickwrapSchemaVersionMetadata = &v
}

// GetEnableAdminMessage returns the EnableAdminMessage field value if set, zero value otherwise.
func (o *AccountUISettings) GetEnableAdminMessage() string {
	if o == nil || IsNil(o.EnableAdminMessage) {
		var ret string
		return ret
	}
	return *o.EnableAdminMessage
}

// GetEnableAdminMessageOk returns a tuple with the EnableAdminMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetEnableAdminMessageOk() (*string, bool) {
	if o == nil || IsNil(o.EnableAdminMessage) {
		return nil, false
	}
	return o.EnableAdminMessage, true
}

// HasEnableAdminMessage returns a boolean if a field has been set.
func (o *AccountUISettings) HasEnableAdminMessage() bool {
	if o != nil && !IsNil(o.EnableAdminMessage) {
		return true
	}

	return false
}

// SetEnableAdminMessage gets a reference to the given string and assigns it to the EnableAdminMessage field.
func (o *AccountUISettings) SetEnableAdminMessage(v string) {
	o.EnableAdminMessage = &v
}

// GetEnableAdminMessageMetadata returns the EnableAdminMessageMetadata field value if set, zero value otherwise.
func (o *AccountUISettings) GetEnableAdminMessageMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableAdminMessageMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableAdminMessageMetadata
}

// GetEnableAdminMessageMetadataOk returns a tuple with the EnableAdminMessageMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetEnableAdminMessageMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableAdminMessageMetadata) {
		return nil, false
	}
	return o.EnableAdminMessageMetadata, true
}

// HasEnableAdminMessageMetadata returns a boolean if a field has been set.
func (o *AccountUISettings) HasEnableAdminMessageMetadata() bool {
	if o != nil && !IsNil(o.EnableAdminMessageMetadata) {
		return true
	}

	return false
}

// SetEnableAdminMessageMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableAdminMessageMetadata field.
func (o *AccountUISettings) SetEnableAdminMessageMetadata(v SettingsMetadata) {
	o.EnableAdminMessageMetadata = &v
}

// GetEnableEasySignCanUseMultiTemplateApply returns the EnableEasySignCanUseMultiTemplateApply field value if set, zero value otherwise.
func (o *AccountUISettings) GetEnableEasySignCanUseMultiTemplateApply() string {
	if o == nil || IsNil(o.EnableEasySignCanUseMultiTemplateApply) {
		var ret string
		return ret
	}
	return *o.EnableEasySignCanUseMultiTemplateApply
}

// GetEnableEasySignCanUseMultiTemplateApplyOk returns a tuple with the EnableEasySignCanUseMultiTemplateApply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetEnableEasySignCanUseMultiTemplateApplyOk() (*string, bool) {
	if o == nil || IsNil(o.EnableEasySignCanUseMultiTemplateApply) {
		return nil, false
	}
	return o.EnableEasySignCanUseMultiTemplateApply, true
}

// HasEnableEasySignCanUseMultiTemplateApply returns a boolean if a field has been set.
func (o *AccountUISettings) HasEnableEasySignCanUseMultiTemplateApply() bool {
	if o != nil && !IsNil(o.EnableEasySignCanUseMultiTemplateApply) {
		return true
	}

	return false
}

// SetEnableEasySignCanUseMultiTemplateApply gets a reference to the given string and assigns it to the EnableEasySignCanUseMultiTemplateApply field.
func (o *AccountUISettings) SetEnableEasySignCanUseMultiTemplateApply(v string) {
	o.EnableEasySignCanUseMultiTemplateApply = &v
}

// GetEnableEasySignCanUseMultiTemplateApplyMetadata returns the EnableEasySignCanUseMultiTemplateApplyMetadata field value if set, zero value otherwise.
func (o *AccountUISettings) GetEnableEasySignCanUseMultiTemplateApplyMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableEasySignCanUseMultiTemplateApplyMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableEasySignCanUseMultiTemplateApplyMetadata
}

// GetEnableEasySignCanUseMultiTemplateApplyMetadataOk returns a tuple with the EnableEasySignCanUseMultiTemplateApplyMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetEnableEasySignCanUseMultiTemplateApplyMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableEasySignCanUseMultiTemplateApplyMetadata) {
		return nil, false
	}
	return o.EnableEasySignCanUseMultiTemplateApplyMetadata, true
}

// HasEnableEasySignCanUseMultiTemplateApplyMetadata returns a boolean if a field has been set.
func (o *AccountUISettings) HasEnableEasySignCanUseMultiTemplateApplyMetadata() bool {
	if o != nil && !IsNil(o.EnableEasySignCanUseMultiTemplateApplyMetadata) {
		return true
	}

	return false
}

// SetEnableEasySignCanUseMultiTemplateApplyMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableEasySignCanUseMultiTemplateApplyMetadata field.
func (o *AccountUISettings) SetEnableEasySignCanUseMultiTemplateApplyMetadata(v SettingsMetadata) {
	o.EnableEasySignCanUseMultiTemplateApplyMetadata = &v
}

// GetEnableEasySignTemplateUpload returns the EnableEasySignTemplateUpload field value if set, zero value otherwise.
func (o *AccountUISettings) GetEnableEasySignTemplateUpload() string {
	if o == nil || IsNil(o.EnableEasySignTemplateUpload) {
		var ret string
		return ret
	}
	return *o.EnableEasySignTemplateUpload
}

// GetEnableEasySignTemplateUploadOk returns a tuple with the EnableEasySignTemplateUpload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetEnableEasySignTemplateUploadOk() (*string, bool) {
	if o == nil || IsNil(o.EnableEasySignTemplateUpload) {
		return nil, false
	}
	return o.EnableEasySignTemplateUpload, true
}

// HasEnableEasySignTemplateUpload returns a boolean if a field has been set.
func (o *AccountUISettings) HasEnableEasySignTemplateUpload() bool {
	if o != nil && !IsNil(o.EnableEasySignTemplateUpload) {
		return true
	}

	return false
}

// SetEnableEasySignTemplateUpload gets a reference to the given string and assigns it to the EnableEasySignTemplateUpload field.
func (o *AccountUISettings) SetEnableEasySignTemplateUpload(v string) {
	o.EnableEasySignTemplateUpload = &v
}

// GetEnableEasySignTemplateUploadMetadata returns the EnableEasySignTemplateUploadMetadata field value if set, zero value otherwise.
func (o *AccountUISettings) GetEnableEasySignTemplateUploadMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableEasySignTemplateUploadMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableEasySignTemplateUploadMetadata
}

// GetEnableEasySignTemplateUploadMetadataOk returns a tuple with the EnableEasySignTemplateUploadMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetEnableEasySignTemplateUploadMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableEasySignTemplateUploadMetadata) {
		return nil, false
	}
	return o.EnableEasySignTemplateUploadMetadata, true
}

// HasEnableEasySignTemplateUploadMetadata returns a boolean if a field has been set.
func (o *AccountUISettings) HasEnableEasySignTemplateUploadMetadata() bool {
	if o != nil && !IsNil(o.EnableEasySignTemplateUploadMetadata) {
		return true
	}

	return false
}

// SetEnableEasySignTemplateUploadMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableEasySignTemplateUploadMetadata field.
func (o *AccountUISettings) SetEnableEasySignTemplateUploadMetadata(v SettingsMetadata) {
	o.EnableEasySignTemplateUploadMetadata = &v
}

// GetEnableEnvelopeCopyWithData returns the EnableEnvelopeCopyWithData field value if set, zero value otherwise.
func (o *AccountUISettings) GetEnableEnvelopeCopyWithData() string {
	if o == nil || IsNil(o.EnableEnvelopeCopyWithData) {
		var ret string
		return ret
	}
	return *o.EnableEnvelopeCopyWithData
}

// GetEnableEnvelopeCopyWithDataOk returns a tuple with the EnableEnvelopeCopyWithData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetEnableEnvelopeCopyWithDataOk() (*string, bool) {
	if o == nil || IsNil(o.EnableEnvelopeCopyWithData) {
		return nil, false
	}
	return o.EnableEnvelopeCopyWithData, true
}

// HasEnableEnvelopeCopyWithData returns a boolean if a field has been set.
func (o *AccountUISettings) HasEnableEnvelopeCopyWithData() bool {
	if o != nil && !IsNil(o.EnableEnvelopeCopyWithData) {
		return true
	}

	return false
}

// SetEnableEnvelopeCopyWithData gets a reference to the given string and assigns it to the EnableEnvelopeCopyWithData field.
func (o *AccountUISettings) SetEnableEnvelopeCopyWithData(v string) {
	o.EnableEnvelopeCopyWithData = &v
}

// GetEnableEnvelopeCopyWithDataMetadata returns the EnableEnvelopeCopyWithDataMetadata field value if set, zero value otherwise.
func (o *AccountUISettings) GetEnableEnvelopeCopyWithDataMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableEnvelopeCopyWithDataMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableEnvelopeCopyWithDataMetadata
}

// GetEnableEnvelopeCopyWithDataMetadataOk returns a tuple with the EnableEnvelopeCopyWithDataMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetEnableEnvelopeCopyWithDataMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableEnvelopeCopyWithDataMetadata) {
		return nil, false
	}
	return o.EnableEnvelopeCopyWithDataMetadata, true
}

// HasEnableEnvelopeCopyWithDataMetadata returns a boolean if a field has been set.
func (o *AccountUISettings) HasEnableEnvelopeCopyWithDataMetadata() bool {
	if o != nil && !IsNil(o.EnableEnvelopeCopyWithDataMetadata) {
		return true
	}

	return false
}

// SetEnableEnvelopeCopyWithDataMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableEnvelopeCopyWithDataMetadata field.
func (o *AccountUISettings) SetEnableEnvelopeCopyWithDataMetadata(v SettingsMetadata) {
	o.EnableEnvelopeCopyWithDataMetadata = &v
}

// GetEnableLegacySendflowLink returns the EnableLegacySendflowLink field value if set, zero value otherwise.
func (o *AccountUISettings) GetEnableLegacySendflowLink() string {
	if o == nil || IsNil(o.EnableLegacySendflowLink) {
		var ret string
		return ret
	}
	return *o.EnableLegacySendflowLink
}

// GetEnableLegacySendflowLinkOk returns a tuple with the EnableLegacySendflowLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetEnableLegacySendflowLinkOk() (*string, bool) {
	if o == nil || IsNil(o.EnableLegacySendflowLink) {
		return nil, false
	}
	return o.EnableLegacySendflowLink, true
}

// HasEnableLegacySendflowLink returns a boolean if a field has been set.
func (o *AccountUISettings) HasEnableLegacySendflowLink() bool {
	if o != nil && !IsNil(o.EnableLegacySendflowLink) {
		return true
	}

	return false
}

// SetEnableLegacySendflowLink gets a reference to the given string and assigns it to the EnableLegacySendflowLink field.
func (o *AccountUISettings) SetEnableLegacySendflowLink(v string) {
	o.EnableLegacySendflowLink = &v
}

// GetEnableLegacySendflowLinkMetadata returns the EnableLegacySendflowLinkMetadata field value if set, zero value otherwise.
func (o *AccountUISettings) GetEnableLegacySendflowLinkMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableLegacySendflowLinkMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableLegacySendflowLinkMetadata
}

// GetEnableLegacySendflowLinkMetadataOk returns a tuple with the EnableLegacySendflowLinkMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetEnableLegacySendflowLinkMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableLegacySendflowLinkMetadata) {
		return nil, false
	}
	return o.EnableLegacySendflowLinkMetadata, true
}

// HasEnableLegacySendflowLinkMetadata returns a boolean if a field has been set.
func (o *AccountUISettings) HasEnableLegacySendflowLinkMetadata() bool {
	if o != nil && !IsNil(o.EnableLegacySendflowLinkMetadata) {
		return true
	}

	return false
}

// SetEnableLegacySendflowLinkMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableLegacySendflowLinkMetadata field.
func (o *AccountUISettings) SetEnableLegacySendflowLinkMetadata(v SettingsMetadata) {
	o.EnableLegacySendflowLinkMetadata = &v
}

// GetHasExternalLinkedAccounts returns the HasExternalLinkedAccounts field value if set, zero value otherwise.
func (o *AccountUISettings) GetHasExternalLinkedAccounts() string {
	if o == nil || IsNil(o.HasExternalLinkedAccounts) {
		var ret string
		return ret
	}
	return *o.HasExternalLinkedAccounts
}

// GetHasExternalLinkedAccountsOk returns a tuple with the HasExternalLinkedAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetHasExternalLinkedAccountsOk() (*string, bool) {
	if o == nil || IsNil(o.HasExternalLinkedAccounts) {
		return nil, false
	}
	return o.HasExternalLinkedAccounts, true
}

// HasHasExternalLinkedAccounts returns a boolean if a field has been set.
func (o *AccountUISettings) HasHasExternalLinkedAccounts() bool {
	if o != nil && !IsNil(o.HasExternalLinkedAccounts) {
		return true
	}

	return false
}

// SetHasExternalLinkedAccounts gets a reference to the given string and assigns it to the HasExternalLinkedAccounts field.
func (o *AccountUISettings) SetHasExternalLinkedAccounts(v string) {
	o.HasExternalLinkedAccounts = &v
}

// GetHasExternalLinkedAccountsMetadata returns the HasExternalLinkedAccountsMetadata field value if set, zero value otherwise.
func (o *AccountUISettings) GetHasExternalLinkedAccountsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.HasExternalLinkedAccountsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.HasExternalLinkedAccountsMetadata
}

// GetHasExternalLinkedAccountsMetadataOk returns a tuple with the HasExternalLinkedAccountsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetHasExternalLinkedAccountsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.HasExternalLinkedAccountsMetadata) {
		return nil, false
	}
	return o.HasExternalLinkedAccountsMetadata, true
}

// HasHasExternalLinkedAccountsMetadata returns a boolean if a field has been set.
func (o *AccountUISettings) HasHasExternalLinkedAccountsMetadata() bool {
	if o != nil && !IsNil(o.HasExternalLinkedAccountsMetadata) {
		return true
	}

	return false
}

// SetHasExternalLinkedAccountsMetadata gets a reference to the given SettingsMetadata and assigns it to the HasExternalLinkedAccountsMetadata field.
func (o *AccountUISettings) SetHasExternalLinkedAccountsMetadata(v SettingsMetadata) {
	o.HasExternalLinkedAccountsMetadata = &v
}

// GetHideSendAnEnvelope returns the HideSendAnEnvelope field value if set, zero value otherwise.
func (o *AccountUISettings) GetHideSendAnEnvelope() string {
	if o == nil || IsNil(o.HideSendAnEnvelope) {
		var ret string
		return ret
	}
	return *o.HideSendAnEnvelope
}

// GetHideSendAnEnvelopeOk returns a tuple with the HideSendAnEnvelope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetHideSendAnEnvelopeOk() (*string, bool) {
	if o == nil || IsNil(o.HideSendAnEnvelope) {
		return nil, false
	}
	return o.HideSendAnEnvelope, true
}

// HasHideSendAnEnvelope returns a boolean if a field has been set.
func (o *AccountUISettings) HasHideSendAnEnvelope() bool {
	if o != nil && !IsNil(o.HideSendAnEnvelope) {
		return true
	}

	return false
}

// SetHideSendAnEnvelope gets a reference to the given string and assigns it to the HideSendAnEnvelope field.
func (o *AccountUISettings) SetHideSendAnEnvelope(v string) {
	o.HideSendAnEnvelope = &v
}

// GetHideSendAnEnvelopeMetadata returns the HideSendAnEnvelopeMetadata field value if set, zero value otherwise.
func (o *AccountUISettings) GetHideSendAnEnvelopeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.HideSendAnEnvelopeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.HideSendAnEnvelopeMetadata
}

// GetHideSendAnEnvelopeMetadataOk returns a tuple with the HideSendAnEnvelopeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetHideSendAnEnvelopeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.HideSendAnEnvelopeMetadata) {
		return nil, false
	}
	return o.HideSendAnEnvelopeMetadata, true
}

// HasHideSendAnEnvelopeMetadata returns a boolean if a field has been set.
func (o *AccountUISettings) HasHideSendAnEnvelopeMetadata() bool {
	if o != nil && !IsNil(o.HideSendAnEnvelopeMetadata) {
		return true
	}

	return false
}

// SetHideSendAnEnvelopeMetadata gets a reference to the given SettingsMetadata and assigns it to the HideSendAnEnvelopeMetadata field.
func (o *AccountUISettings) SetHideSendAnEnvelopeMetadata(v SettingsMetadata) {
	o.HideSendAnEnvelopeMetadata = &v
}

// GetHideUseATemplate returns the HideUseATemplate field value if set, zero value otherwise.
func (o *AccountUISettings) GetHideUseATemplate() string {
	if o == nil || IsNil(o.HideUseATemplate) {
		var ret string
		return ret
	}
	return *o.HideUseATemplate
}

// GetHideUseATemplateOk returns a tuple with the HideUseATemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetHideUseATemplateOk() (*string, bool) {
	if o == nil || IsNil(o.HideUseATemplate) {
		return nil, false
	}
	return o.HideUseATemplate, true
}

// HasHideUseATemplate returns a boolean if a field has been set.
func (o *AccountUISettings) HasHideUseATemplate() bool {
	if o != nil && !IsNil(o.HideUseATemplate) {
		return true
	}

	return false
}

// SetHideUseATemplate gets a reference to the given string and assigns it to the HideUseATemplate field.
func (o *AccountUISettings) SetHideUseATemplate(v string) {
	o.HideUseATemplate = &v
}

// GetHideUseATemplateInPrepare returns the HideUseATemplateInPrepare field value if set, zero value otherwise.
func (o *AccountUISettings) GetHideUseATemplateInPrepare() string {
	if o == nil || IsNil(o.HideUseATemplateInPrepare) {
		var ret string
		return ret
	}
	return *o.HideUseATemplateInPrepare
}

// GetHideUseATemplateInPrepareOk returns a tuple with the HideUseATemplateInPrepare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetHideUseATemplateInPrepareOk() (*string, bool) {
	if o == nil || IsNil(o.HideUseATemplateInPrepare) {
		return nil, false
	}
	return o.HideUseATemplateInPrepare, true
}

// HasHideUseATemplateInPrepare returns a boolean if a field has been set.
func (o *AccountUISettings) HasHideUseATemplateInPrepare() bool {
	if o != nil && !IsNil(o.HideUseATemplateInPrepare) {
		return true
	}

	return false
}

// SetHideUseATemplateInPrepare gets a reference to the given string and assigns it to the HideUseATemplateInPrepare field.
func (o *AccountUISettings) SetHideUseATemplateInPrepare(v string) {
	o.HideUseATemplateInPrepare = &v
}

// GetHideUseATemplateInPrepareMetadata returns the HideUseATemplateInPrepareMetadata field value if set, zero value otherwise.
func (o *AccountUISettings) GetHideUseATemplateInPrepareMetadata() SettingsMetadata {
	if o == nil || IsNil(o.HideUseATemplateInPrepareMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.HideUseATemplateInPrepareMetadata
}

// GetHideUseATemplateInPrepareMetadataOk returns a tuple with the HideUseATemplateInPrepareMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetHideUseATemplateInPrepareMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.HideUseATemplateInPrepareMetadata) {
		return nil, false
	}
	return o.HideUseATemplateInPrepareMetadata, true
}

// HasHideUseATemplateInPrepareMetadata returns a boolean if a field has been set.
func (o *AccountUISettings) HasHideUseATemplateInPrepareMetadata() bool {
	if o != nil && !IsNil(o.HideUseATemplateInPrepareMetadata) {
		return true
	}

	return false
}

// SetHideUseATemplateInPrepareMetadata gets a reference to the given SettingsMetadata and assigns it to the HideUseATemplateInPrepareMetadata field.
func (o *AccountUISettings) SetHideUseATemplateInPrepareMetadata(v SettingsMetadata) {
	o.HideUseATemplateInPrepareMetadata = &v
}

// GetHideUseATemplateMetadata returns the HideUseATemplateMetadata field value if set, zero value otherwise.
func (o *AccountUISettings) GetHideUseATemplateMetadata() SettingsMetadata {
	if o == nil || IsNil(o.HideUseATemplateMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.HideUseATemplateMetadata
}

// GetHideUseATemplateMetadataOk returns a tuple with the HideUseATemplateMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetHideUseATemplateMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.HideUseATemplateMetadata) {
		return nil, false
	}
	return o.HideUseATemplateMetadata, true
}

// HasHideUseATemplateMetadata returns a boolean if a field has been set.
func (o *AccountUISettings) HasHideUseATemplateMetadata() bool {
	if o != nil && !IsNil(o.HideUseATemplateMetadata) {
		return true
	}

	return false
}

// SetHideUseATemplateMetadata gets a reference to the given SettingsMetadata and assigns it to the HideUseATemplateMetadata field.
func (o *AccountUISettings) SetHideUseATemplateMetadata(v SettingsMetadata) {
	o.HideUseATemplateMetadata = &v
}

// GetOrderBasedRecipientIdGeneration returns the OrderBasedRecipientIdGeneration field value if set, zero value otherwise.
func (o *AccountUISettings) GetOrderBasedRecipientIdGeneration() string {
	if o == nil || IsNil(o.OrderBasedRecipientIdGeneration) {
		var ret string
		return ret
	}
	return *o.OrderBasedRecipientIdGeneration
}

// GetOrderBasedRecipientIdGenerationOk returns a tuple with the OrderBasedRecipientIdGeneration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetOrderBasedRecipientIdGenerationOk() (*string, bool) {
	if o == nil || IsNil(o.OrderBasedRecipientIdGeneration) {
		return nil, false
	}
	return o.OrderBasedRecipientIdGeneration, true
}

// HasOrderBasedRecipientIdGeneration returns a boolean if a field has been set.
func (o *AccountUISettings) HasOrderBasedRecipientIdGeneration() bool {
	if o != nil && !IsNil(o.OrderBasedRecipientIdGeneration) {
		return true
	}

	return false
}

// SetOrderBasedRecipientIdGeneration gets a reference to the given string and assigns it to the OrderBasedRecipientIdGeneration field.
func (o *AccountUISettings) SetOrderBasedRecipientIdGeneration(v string) {
	o.OrderBasedRecipientIdGeneration = &v
}

// GetOrderBasedRecipientIdGenerationMetadata returns the OrderBasedRecipientIdGenerationMetadata field value if set, zero value otherwise.
func (o *AccountUISettings) GetOrderBasedRecipientIdGenerationMetadata() SettingsMetadata {
	if o == nil || IsNil(o.OrderBasedRecipientIdGenerationMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.OrderBasedRecipientIdGenerationMetadata
}

// GetOrderBasedRecipientIdGenerationMetadataOk returns a tuple with the OrderBasedRecipientIdGenerationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetOrderBasedRecipientIdGenerationMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.OrderBasedRecipientIdGenerationMetadata) {
		return nil, false
	}
	return o.OrderBasedRecipientIdGenerationMetadata, true
}

// HasOrderBasedRecipientIdGenerationMetadata returns a boolean if a field has been set.
func (o *AccountUISettings) HasOrderBasedRecipientIdGenerationMetadata() bool {
	if o != nil && !IsNil(o.OrderBasedRecipientIdGenerationMetadata) {
		return true
	}

	return false
}

// SetOrderBasedRecipientIdGenerationMetadata gets a reference to the given SettingsMetadata and assigns it to the OrderBasedRecipientIdGenerationMetadata field.
func (o *AccountUISettings) SetOrderBasedRecipientIdGenerationMetadata(v SettingsMetadata) {
	o.OrderBasedRecipientIdGenerationMetadata = &v
}

// GetRemoveEnvelopeForwarding returns the RemoveEnvelopeForwarding field value if set, zero value otherwise.
func (o *AccountUISettings) GetRemoveEnvelopeForwarding() string {
	if o == nil || IsNil(o.RemoveEnvelopeForwarding) {
		var ret string
		return ret
	}
	return *o.RemoveEnvelopeForwarding
}

// GetRemoveEnvelopeForwardingOk returns a tuple with the RemoveEnvelopeForwarding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetRemoveEnvelopeForwardingOk() (*string, bool) {
	if o == nil || IsNil(o.RemoveEnvelopeForwarding) {
		return nil, false
	}
	return o.RemoveEnvelopeForwarding, true
}

// HasRemoveEnvelopeForwarding returns a boolean if a field has been set.
func (o *AccountUISettings) HasRemoveEnvelopeForwarding() bool {
	if o != nil && !IsNil(o.RemoveEnvelopeForwarding) {
		return true
	}

	return false
}

// SetRemoveEnvelopeForwarding gets a reference to the given string and assigns it to the RemoveEnvelopeForwarding field.
func (o *AccountUISettings) SetRemoveEnvelopeForwarding(v string) {
	o.RemoveEnvelopeForwarding = &v
}

// GetRemoveEnvelopeForwardingMetadata returns the RemoveEnvelopeForwardingMetadata field value if set, zero value otherwise.
func (o *AccountUISettings) GetRemoveEnvelopeForwardingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.RemoveEnvelopeForwardingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.RemoveEnvelopeForwardingMetadata
}

// GetRemoveEnvelopeForwardingMetadataOk returns a tuple with the RemoveEnvelopeForwardingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetRemoveEnvelopeForwardingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.RemoveEnvelopeForwardingMetadata) {
		return nil, false
	}
	return o.RemoveEnvelopeForwardingMetadata, true
}

// HasRemoveEnvelopeForwardingMetadata returns a boolean if a field has been set.
func (o *AccountUISettings) HasRemoveEnvelopeForwardingMetadata() bool {
	if o != nil && !IsNil(o.RemoveEnvelopeForwardingMetadata) {
		return true
	}

	return false
}

// SetRemoveEnvelopeForwardingMetadata gets a reference to the given SettingsMetadata and assigns it to the RemoveEnvelopeForwardingMetadata field.
func (o *AccountUISettings) SetRemoveEnvelopeForwardingMetadata(v SettingsMetadata) {
	o.RemoveEnvelopeForwardingMetadata = &v
}

// GetShouldRedactAccessCode returns the ShouldRedactAccessCode field value if set, zero value otherwise.
func (o *AccountUISettings) GetShouldRedactAccessCode() string {
	if o == nil || IsNil(o.ShouldRedactAccessCode) {
		var ret string
		return ret
	}
	return *o.ShouldRedactAccessCode
}

// GetShouldRedactAccessCodeOk returns a tuple with the ShouldRedactAccessCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetShouldRedactAccessCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ShouldRedactAccessCode) {
		return nil, false
	}
	return o.ShouldRedactAccessCode, true
}

// HasShouldRedactAccessCode returns a boolean if a field has been set.
func (o *AccountUISettings) HasShouldRedactAccessCode() bool {
	if o != nil && !IsNil(o.ShouldRedactAccessCode) {
		return true
	}

	return false
}

// SetShouldRedactAccessCode gets a reference to the given string and assigns it to the ShouldRedactAccessCode field.
func (o *AccountUISettings) SetShouldRedactAccessCode(v string) {
	o.ShouldRedactAccessCode = &v
}

// GetShouldRedactAccessCodeMetadata returns the ShouldRedactAccessCodeMetadata field value if set, zero value otherwise.
func (o *AccountUISettings) GetShouldRedactAccessCodeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ShouldRedactAccessCodeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ShouldRedactAccessCodeMetadata
}

// GetShouldRedactAccessCodeMetadataOk returns a tuple with the ShouldRedactAccessCodeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetShouldRedactAccessCodeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ShouldRedactAccessCodeMetadata) {
		return nil, false
	}
	return o.ShouldRedactAccessCodeMetadata, true
}

// HasShouldRedactAccessCodeMetadata returns a boolean if a field has been set.
func (o *AccountUISettings) HasShouldRedactAccessCodeMetadata() bool {
	if o != nil && !IsNil(o.ShouldRedactAccessCodeMetadata) {
		return true
	}

	return false
}

// SetShouldRedactAccessCodeMetadata gets a reference to the given SettingsMetadata and assigns it to the ShouldRedactAccessCodeMetadata field.
func (o *AccountUISettings) SetShouldRedactAccessCodeMetadata(v SettingsMetadata) {
	o.ShouldRedactAccessCodeMetadata = &v
}

// GetUploadNewImageToSignOrInitial returns the UploadNewImageToSignOrInitial field value if set, zero value otherwise.
func (o *AccountUISettings) GetUploadNewImageToSignOrInitial() string {
	if o == nil || IsNil(o.UploadNewImageToSignOrInitial) {
		var ret string
		return ret
	}
	return *o.UploadNewImageToSignOrInitial
}

// GetUploadNewImageToSignOrInitialOk returns a tuple with the UploadNewImageToSignOrInitial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetUploadNewImageToSignOrInitialOk() (*string, bool) {
	if o == nil || IsNil(o.UploadNewImageToSignOrInitial) {
		return nil, false
	}
	return o.UploadNewImageToSignOrInitial, true
}

// HasUploadNewImageToSignOrInitial returns a boolean if a field has been set.
func (o *AccountUISettings) HasUploadNewImageToSignOrInitial() bool {
	if o != nil && !IsNil(o.UploadNewImageToSignOrInitial) {
		return true
	}

	return false
}

// SetUploadNewImageToSignOrInitial gets a reference to the given string and assigns it to the UploadNewImageToSignOrInitial field.
func (o *AccountUISettings) SetUploadNewImageToSignOrInitial(v string) {
	o.UploadNewImageToSignOrInitial = &v
}

// GetUploadNewImageToSignOrInitialMetadata returns the UploadNewImageToSignOrInitialMetadata field value if set, zero value otherwise.
func (o *AccountUISettings) GetUploadNewImageToSignOrInitialMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UploadNewImageToSignOrInitialMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UploadNewImageToSignOrInitialMetadata
}

// GetUploadNewImageToSignOrInitialMetadataOk returns a tuple with the UploadNewImageToSignOrInitialMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUISettings) GetUploadNewImageToSignOrInitialMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UploadNewImageToSignOrInitialMetadata) {
		return nil, false
	}
	return o.UploadNewImageToSignOrInitialMetadata, true
}

// HasUploadNewImageToSignOrInitialMetadata returns a boolean if a field has been set.
func (o *AccountUISettings) HasUploadNewImageToSignOrInitialMetadata() bool {
	if o != nil && !IsNil(o.UploadNewImageToSignOrInitialMetadata) {
		return true
	}

	return false
}

// SetUploadNewImageToSignOrInitialMetadata gets a reference to the given SettingsMetadata and assigns it to the UploadNewImageToSignOrInitialMetadata field.
func (o *AccountUISettings) SetUploadNewImageToSignOrInitialMetadata(v SettingsMetadata) {
	o.UploadNewImageToSignOrInitialMetadata = &v
}

func (o AccountUISettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountUISettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdminMessage) {
		toSerialize["adminMessage"] = o.AdminMessage
	}
	if !IsNil(o.AllowUsersToEditSharedAccess) {
		toSerialize["allowUsersToEditSharedAccess"] = o.AllowUsersToEditSharedAccess
	}
	if !IsNil(o.AllowUsersToEditSharedAccessMetadata) {
		toSerialize["allowUsersToEditSharedAccessMetadata"] = o.AllowUsersToEditSharedAccessMetadata
	}
	if !IsNil(o.AskAnAdmin) {
		toSerialize["askAnAdmin"] = o.AskAnAdmin
	}
	if !IsNil(o.ClickwrapSchemaVersion) {
		toSerialize["clickwrapSchemaVersion"] = o.ClickwrapSchemaVersion
	}
	if !IsNil(o.ClickwrapSchemaVersionMetadata) {
		toSerialize["clickwrapSchemaVersionMetadata"] = o.ClickwrapSchemaVersionMetadata
	}
	if !IsNil(o.EnableAdminMessage) {
		toSerialize["enableAdminMessage"] = o.EnableAdminMessage
	}
	if !IsNil(o.EnableAdminMessageMetadata) {
		toSerialize["enableAdminMessageMetadata"] = o.EnableAdminMessageMetadata
	}
	if !IsNil(o.EnableEasySignCanUseMultiTemplateApply) {
		toSerialize["enableEasySignCanUseMultiTemplateApply"] = o.EnableEasySignCanUseMultiTemplateApply
	}
	if !IsNil(o.EnableEasySignCanUseMultiTemplateApplyMetadata) {
		toSerialize["enableEasySignCanUseMultiTemplateApplyMetadata"] = o.EnableEasySignCanUseMultiTemplateApplyMetadata
	}
	if !IsNil(o.EnableEasySignTemplateUpload) {
		toSerialize["enableEasySignTemplateUpload"] = o.EnableEasySignTemplateUpload
	}
	if !IsNil(o.EnableEasySignTemplateUploadMetadata) {
		toSerialize["enableEasySignTemplateUploadMetadata"] = o.EnableEasySignTemplateUploadMetadata
	}
	if !IsNil(o.EnableEnvelopeCopyWithData) {
		toSerialize["enableEnvelopeCopyWithData"] = o.EnableEnvelopeCopyWithData
	}
	if !IsNil(o.EnableEnvelopeCopyWithDataMetadata) {
		toSerialize["enableEnvelopeCopyWithDataMetadata"] = o.EnableEnvelopeCopyWithDataMetadata
	}
	if !IsNil(o.EnableLegacySendflowLink) {
		toSerialize["enableLegacySendflowLink"] = o.EnableLegacySendflowLink
	}
	if !IsNil(o.EnableLegacySendflowLinkMetadata) {
		toSerialize["enableLegacySendflowLinkMetadata"] = o.EnableLegacySendflowLinkMetadata
	}
	if !IsNil(o.HasExternalLinkedAccounts) {
		toSerialize["hasExternalLinkedAccounts"] = o.HasExternalLinkedAccounts
	}
	if !IsNil(o.HasExternalLinkedAccountsMetadata) {
		toSerialize["hasExternalLinkedAccountsMetadata"] = o.HasExternalLinkedAccountsMetadata
	}
	if !IsNil(o.HideSendAnEnvelope) {
		toSerialize["hideSendAnEnvelope"] = o.HideSendAnEnvelope
	}
	if !IsNil(o.HideSendAnEnvelopeMetadata) {
		toSerialize["hideSendAnEnvelopeMetadata"] = o.HideSendAnEnvelopeMetadata
	}
	if !IsNil(o.HideUseATemplate) {
		toSerialize["hideUseATemplate"] = o.HideUseATemplate
	}
	if !IsNil(o.HideUseATemplateInPrepare) {
		toSerialize["hideUseATemplateInPrepare"] = o.HideUseATemplateInPrepare
	}
	if !IsNil(o.HideUseATemplateInPrepareMetadata) {
		toSerialize["hideUseATemplateInPrepareMetadata"] = o.HideUseATemplateInPrepareMetadata
	}
	if !IsNil(o.HideUseATemplateMetadata) {
		toSerialize["hideUseATemplateMetadata"] = o.HideUseATemplateMetadata
	}
	if !IsNil(o.OrderBasedRecipientIdGeneration) {
		toSerialize["orderBasedRecipientIdGeneration"] = o.OrderBasedRecipientIdGeneration
	}
	if !IsNil(o.OrderBasedRecipientIdGenerationMetadata) {
		toSerialize["orderBasedRecipientIdGenerationMetadata"] = o.OrderBasedRecipientIdGenerationMetadata
	}
	if !IsNil(o.RemoveEnvelopeForwarding) {
		toSerialize["removeEnvelopeForwarding"] = o.RemoveEnvelopeForwarding
	}
	if !IsNil(o.RemoveEnvelopeForwardingMetadata) {
		toSerialize["removeEnvelopeForwardingMetadata"] = o.RemoveEnvelopeForwardingMetadata
	}
	if !IsNil(o.ShouldRedactAccessCode) {
		toSerialize["shouldRedactAccessCode"] = o.ShouldRedactAccessCode
	}
	if !IsNil(o.ShouldRedactAccessCodeMetadata) {
		toSerialize["shouldRedactAccessCodeMetadata"] = o.ShouldRedactAccessCodeMetadata
	}
	if !IsNil(o.UploadNewImageToSignOrInitial) {
		toSerialize["uploadNewImageToSignOrInitial"] = o.UploadNewImageToSignOrInitial
	}
	if !IsNil(o.UploadNewImageToSignOrInitialMetadata) {
		toSerialize["uploadNewImageToSignOrInitialMetadata"] = o.UploadNewImageToSignOrInitialMetadata
	}
	return toSerialize, nil
}

type NullableAccountUISettings struct {
	value *AccountUISettings
	isSet bool
}

func (v NullableAccountUISettings) Get() *AccountUISettings {
	return v.value
}

func (v *NullableAccountUISettings) Set(val *AccountUISettings) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountUISettings) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountUISettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountUISettings(val *AccountUISettings) *NullableAccountUISettings {
	return &NullableAccountUISettings{value: val, isSet: true}
}

func (v NullableAccountUISettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountUISettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


