/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WorkspaceUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkspaceUser{}

// WorkspaceUser This object represents the workspace user. This property is only returned in response to user specific GET call. 
type WorkspaceUser struct {
	// The account ID associated with the workspace user.
	AccountId *string `json:"accountId,omitempty"`
	// The name of the account that the workspace user belongs to.
	AccountName *string `json:"accountName,omitempty"`
	// The UTC DateTime when the user joined the workspace.
	ActiveSince *string `json:"activeSince,omitempty"`
	// The UTC DateTime when the workspace user was created.
	Created *string `json:"created,omitempty"`
	// The ID of the user who created this workspace user.
	CreatedById *string `json:"createdById,omitempty"`
	// The workspace user's email address.
	Email *string `json:"email,omitempty"`
	ErrorDetails *ErrorDetails `json:"errorDetails,omitempty"`
	// The text of the workspace invitation email message sent to the user.
	InvitationEmailBlurb *string `json:"invitationEmailBlurb,omitempty"`
	// The subject line of the workspace invitation email message sent to the user.
	InvitationEmailSubject *string `json:"invitationEmailSubject,omitempty"`
	// The UTC DateTime that the workspace user was last modified.
	LastModified *string `json:"lastModified,omitempty"`
	// The ID of the user who last modified the workspace user.
	LastModifiedById *string `json:"lastModifiedById,omitempty"`
	// Filters the results by user status. You can specify a comma-separated list of the following statuses:  * ActivationRequired  * ActivationSent  * Active * Closed  * Disabled
	Status *string `json:"status,omitempty"`
	// Type of the user. Valid values: type_owner, type_participant.
	Type *string `json:"type,omitempty"`
	// The ID of the workspace user.
	UserId *string `json:"userId,omitempty"`
	// The name of workspace user.
	UserName *string `json:"userName,omitempty"`
	// The ID of the workspace.
	WorkspaceId *string `json:"workspaceId,omitempty"`
	// The URL for accessing the workspace user.
	WorkspaceUserBaseUrl *string `json:"workspaceUserBaseUrl,omitempty"`
	// The ID of the workspace user.
	WorkspaceUserId *string `json:"workspaceUserId,omitempty"`
	// The URI for accessing the workspace user.
	WorkspaceUserUri *string `json:"workspaceUserUri,omitempty"`
}

// NewWorkspaceUser instantiates a new WorkspaceUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaceUser() *WorkspaceUser {
	this := WorkspaceUser{}
	return &this
}

// NewWorkspaceUserWithDefaults instantiates a new WorkspaceUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspaceUserWithDefaults() *WorkspaceUser {
	this := WorkspaceUser{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *WorkspaceUser) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *WorkspaceUser) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *WorkspaceUser) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *WorkspaceUser) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *WorkspaceUser) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *WorkspaceUser) SetAccountName(v string) {
	o.AccountName = &v
}

// GetActiveSince returns the ActiveSince field value if set, zero value otherwise.
func (o *WorkspaceUser) GetActiveSince() string {
	if o == nil || IsNil(o.ActiveSince) {
		var ret string
		return ret
	}
	return *o.ActiveSince
}

// GetActiveSinceOk returns a tuple with the ActiveSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetActiveSinceOk() (*string, bool) {
	if o == nil || IsNil(o.ActiveSince) {
		return nil, false
	}
	return o.ActiveSince, true
}

// HasActiveSince returns a boolean if a field has been set.
func (o *WorkspaceUser) HasActiveSince() bool {
	if o != nil && !IsNil(o.ActiveSince) {
		return true
	}

	return false
}

// SetActiveSince gets a reference to the given string and assigns it to the ActiveSince field.
func (o *WorkspaceUser) SetActiveSince(v string) {
	o.ActiveSince = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *WorkspaceUser) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *WorkspaceUser) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *WorkspaceUser) SetCreated(v string) {
	o.Created = &v
}

// GetCreatedById returns the CreatedById field value if set, zero value otherwise.
func (o *WorkspaceUser) GetCreatedById() string {
	if o == nil || IsNil(o.CreatedById) {
		var ret string
		return ret
	}
	return *o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetCreatedByIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedById) {
		return nil, false
	}
	return o.CreatedById, true
}

// HasCreatedById returns a boolean if a field has been set.
func (o *WorkspaceUser) HasCreatedById() bool {
	if o != nil && !IsNil(o.CreatedById) {
		return true
	}

	return false
}

// SetCreatedById gets a reference to the given string and assigns it to the CreatedById field.
func (o *WorkspaceUser) SetCreatedById(v string) {
	o.CreatedById = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *WorkspaceUser) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *WorkspaceUser) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *WorkspaceUser) SetEmail(v string) {
	o.Email = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *WorkspaceUser) GetErrorDetails() ErrorDetails {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret ErrorDetails
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetErrorDetailsOk() (*ErrorDetails, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *WorkspaceUser) HasErrorDetails() bool {
	if o != nil && !IsNil(o.ErrorDetails) {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given ErrorDetails and assigns it to the ErrorDetails field.
func (o *WorkspaceUser) SetErrorDetails(v ErrorDetails) {
	o.ErrorDetails = &v
}

// GetInvitationEmailBlurb returns the InvitationEmailBlurb field value if set, zero value otherwise.
func (o *WorkspaceUser) GetInvitationEmailBlurb() string {
	if o == nil || IsNil(o.InvitationEmailBlurb) {
		var ret string
		return ret
	}
	return *o.InvitationEmailBlurb
}

// GetInvitationEmailBlurbOk returns a tuple with the InvitationEmailBlurb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetInvitationEmailBlurbOk() (*string, bool) {
	if o == nil || IsNil(o.InvitationEmailBlurb) {
		return nil, false
	}
	return o.InvitationEmailBlurb, true
}

// HasInvitationEmailBlurb returns a boolean if a field has been set.
func (o *WorkspaceUser) HasInvitationEmailBlurb() bool {
	if o != nil && !IsNil(o.InvitationEmailBlurb) {
		return true
	}

	return false
}

// SetInvitationEmailBlurb gets a reference to the given string and assigns it to the InvitationEmailBlurb field.
func (o *WorkspaceUser) SetInvitationEmailBlurb(v string) {
	o.InvitationEmailBlurb = &v
}

// GetInvitationEmailSubject returns the InvitationEmailSubject field value if set, zero value otherwise.
func (o *WorkspaceUser) GetInvitationEmailSubject() string {
	if o == nil || IsNil(o.InvitationEmailSubject) {
		var ret string
		return ret
	}
	return *o.InvitationEmailSubject
}

// GetInvitationEmailSubjectOk returns a tuple with the InvitationEmailSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetInvitationEmailSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.InvitationEmailSubject) {
		return nil, false
	}
	return o.InvitationEmailSubject, true
}

// HasInvitationEmailSubject returns a boolean if a field has been set.
func (o *WorkspaceUser) HasInvitationEmailSubject() bool {
	if o != nil && !IsNil(o.InvitationEmailSubject) {
		return true
	}

	return false
}

// SetInvitationEmailSubject gets a reference to the given string and assigns it to the InvitationEmailSubject field.
func (o *WorkspaceUser) SetInvitationEmailSubject(v string) {
	o.InvitationEmailSubject = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *WorkspaceUser) GetLastModified() string {
	if o == nil || IsNil(o.LastModified) {
		var ret string
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetLastModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *WorkspaceUser) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given string and assigns it to the LastModified field.
func (o *WorkspaceUser) SetLastModified(v string) {
	o.LastModified = &v
}

// GetLastModifiedById returns the LastModifiedById field value if set, zero value otherwise.
func (o *WorkspaceUser) GetLastModifiedById() string {
	if o == nil || IsNil(o.LastModifiedById) {
		var ret string
		return ret
	}
	return *o.LastModifiedById
}

// GetLastModifiedByIdOk returns a tuple with the LastModifiedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetLastModifiedByIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedById) {
		return nil, false
	}
	return o.LastModifiedById, true
}

// HasLastModifiedById returns a boolean if a field has been set.
func (o *WorkspaceUser) HasLastModifiedById() bool {
	if o != nil && !IsNil(o.LastModifiedById) {
		return true
	}

	return false
}

// SetLastModifiedById gets a reference to the given string and assigns it to the LastModifiedById field.
func (o *WorkspaceUser) SetLastModifiedById(v string) {
	o.LastModifiedById = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WorkspaceUser) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WorkspaceUser) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *WorkspaceUser) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WorkspaceUser) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WorkspaceUser) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WorkspaceUser) SetType(v string) {
	o.Type = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *WorkspaceUser) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *WorkspaceUser) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *WorkspaceUser) SetUserId(v string) {
	o.UserId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *WorkspaceUser) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *WorkspaceUser) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *WorkspaceUser) SetUserName(v string) {
	o.UserName = &v
}

// GetWorkspaceId returns the WorkspaceId field value if set, zero value otherwise.
func (o *WorkspaceUser) GetWorkspaceId() string {
	if o == nil || IsNil(o.WorkspaceId) {
		var ret string
		return ret
	}
	return *o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetWorkspaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceId) {
		return nil, false
	}
	return o.WorkspaceId, true
}

// HasWorkspaceId returns a boolean if a field has been set.
func (o *WorkspaceUser) HasWorkspaceId() bool {
	if o != nil && !IsNil(o.WorkspaceId) {
		return true
	}

	return false
}

// SetWorkspaceId gets a reference to the given string and assigns it to the WorkspaceId field.
func (o *WorkspaceUser) SetWorkspaceId(v string) {
	o.WorkspaceId = &v
}

// GetWorkspaceUserBaseUrl returns the WorkspaceUserBaseUrl field value if set, zero value otherwise.
func (o *WorkspaceUser) GetWorkspaceUserBaseUrl() string {
	if o == nil || IsNil(o.WorkspaceUserBaseUrl) {
		var ret string
		return ret
	}
	return *o.WorkspaceUserBaseUrl
}

// GetWorkspaceUserBaseUrlOk returns a tuple with the WorkspaceUserBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetWorkspaceUserBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceUserBaseUrl) {
		return nil, false
	}
	return o.WorkspaceUserBaseUrl, true
}

// HasWorkspaceUserBaseUrl returns a boolean if a field has been set.
func (o *WorkspaceUser) HasWorkspaceUserBaseUrl() bool {
	if o != nil && !IsNil(o.WorkspaceUserBaseUrl) {
		return true
	}

	return false
}

// SetWorkspaceUserBaseUrl gets a reference to the given string and assigns it to the WorkspaceUserBaseUrl field.
func (o *WorkspaceUser) SetWorkspaceUserBaseUrl(v string) {
	o.WorkspaceUserBaseUrl = &v
}

// GetWorkspaceUserId returns the WorkspaceUserId field value if set, zero value otherwise.
func (o *WorkspaceUser) GetWorkspaceUserId() string {
	if o == nil || IsNil(o.WorkspaceUserId) {
		var ret string
		return ret
	}
	return *o.WorkspaceUserId
}

// GetWorkspaceUserIdOk returns a tuple with the WorkspaceUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetWorkspaceUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceUserId) {
		return nil, false
	}
	return o.WorkspaceUserId, true
}

// HasWorkspaceUserId returns a boolean if a field has been set.
func (o *WorkspaceUser) HasWorkspaceUserId() bool {
	if o != nil && !IsNil(o.WorkspaceUserId) {
		return true
	}

	return false
}

// SetWorkspaceUserId gets a reference to the given string and assigns it to the WorkspaceUserId field.
func (o *WorkspaceUser) SetWorkspaceUserId(v string) {
	o.WorkspaceUserId = &v
}

// GetWorkspaceUserUri returns the WorkspaceUserUri field value if set, zero value otherwise.
func (o *WorkspaceUser) GetWorkspaceUserUri() string {
	if o == nil || IsNil(o.WorkspaceUserUri) {
		var ret string
		return ret
	}
	return *o.WorkspaceUserUri
}

// GetWorkspaceUserUriOk returns a tuple with the WorkspaceUserUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUser) GetWorkspaceUserUriOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceUserUri) {
		return nil, false
	}
	return o.WorkspaceUserUri, true
}

// HasWorkspaceUserUri returns a boolean if a field has been set.
func (o *WorkspaceUser) HasWorkspaceUserUri() bool {
	if o != nil && !IsNil(o.WorkspaceUserUri) {
		return true
	}

	return false
}

// SetWorkspaceUserUri gets a reference to the given string and assigns it to the WorkspaceUserUri field.
func (o *WorkspaceUser) SetWorkspaceUserUri(v string) {
	o.WorkspaceUserUri = &v
}

func (o WorkspaceUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkspaceUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.AccountName) {
		toSerialize["accountName"] = o.AccountName
	}
	if !IsNil(o.ActiveSince) {
		toSerialize["activeSince"] = o.ActiveSince
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedById) {
		toSerialize["createdById"] = o.CreatedById
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.ErrorDetails) {
		toSerialize["errorDetails"] = o.ErrorDetails
	}
	if !IsNil(o.InvitationEmailBlurb) {
		toSerialize["invitationEmailBlurb"] = o.InvitationEmailBlurb
	}
	if !IsNil(o.InvitationEmailSubject) {
		toSerialize["invitationEmailSubject"] = o.InvitationEmailSubject
	}
	if !IsNil(o.LastModified) {
		toSerialize["lastModified"] = o.LastModified
	}
	if !IsNil(o.LastModifiedById) {
		toSerialize["lastModifiedById"] = o.LastModifiedById
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	if !IsNil(o.WorkspaceId) {
		toSerialize["workspaceId"] = o.WorkspaceId
	}
	if !IsNil(o.WorkspaceUserBaseUrl) {
		toSerialize["workspaceUserBaseUrl"] = o.WorkspaceUserBaseUrl
	}
	if !IsNil(o.WorkspaceUserId) {
		toSerialize["workspaceUserId"] = o.WorkspaceUserId
	}
	if !IsNil(o.WorkspaceUserUri) {
		toSerialize["workspaceUserUri"] = o.WorkspaceUserUri
	}
	return toSerialize, nil
}

type NullableWorkspaceUser struct {
	value *WorkspaceUser
	isSet bool
}

func (v NullableWorkspaceUser) Get() *WorkspaceUser {
	return v.value
}

func (v *NullableWorkspaceUser) Set(val *WorkspaceUser) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaceUser) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaceUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaceUser(val *WorkspaceUser) *NullableWorkspaceUser {
	return &NullableWorkspaceUser{value: val, isSet: true}
}

func (v NullableWorkspaceUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaceUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


