/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BrandResources type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BrandResources{}

// BrandResources Information about the resource files that the brand uses for the email, signing, sending, and captive (embedded) signing experiences.
type BrandResources struct {
	CreatedByUserInfo *UserInfo `json:"createdByUserInfo,omitempty"`
	// The date and time that the brand resource was created.
	CreatedDate *string `json:"createdDate,omitempty"`
	// Deprecated.
	DataNotSavedNotInMaster []string `json:"dataNotSavedNotInMaster,omitempty"`
	ModifiedByUserInfo *UserInfo `json:"modifiedByUserInfo,omitempty"`
	// The date on which this user record was last modified.
	ModifiedDate *string `json:"modifiedDate,omitempty"`
	// This property is returned in the response to the [AccountBrands::listResources][listResources] request. It contains a list of any email templates that have been modified to differ from the master resource files.  [listResources]: /docs/esign-rest-api/reference/accounts/accountbrands/listresources/
	ModifiedTemplates []string `json:"modifiedTemplates,omitempty"`
	// The type of brand resource file. A brand uses a different resource file to control each of the following experiences:  - Sending (`sending`) - Signing (`signing`) - Email messages (`email`) - Captive (embedded) signing (`signing_captive`)  You can modify the default email messages and formats in these files and upload them to your brand to customize the user experience.
	ResourcesContentType *string `json:"resourcesContentType,omitempty"`
	// The URI for the brand resource file.
	ResourcesContentUri *string `json:"resourcesContentUri,omitempty"`
}

// NewBrandResources instantiates a new BrandResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrandResources() *BrandResources {
	this := BrandResources{}
	return &this
}

// NewBrandResourcesWithDefaults instantiates a new BrandResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrandResourcesWithDefaults() *BrandResources {
	this := BrandResources{}
	return &this
}

// GetCreatedByUserInfo returns the CreatedByUserInfo field value if set, zero value otherwise.
func (o *BrandResources) GetCreatedByUserInfo() UserInfo {
	if o == nil || IsNil(o.CreatedByUserInfo) {
		var ret UserInfo
		return ret
	}
	return *o.CreatedByUserInfo
}

// GetCreatedByUserInfoOk returns a tuple with the CreatedByUserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandResources) GetCreatedByUserInfoOk() (*UserInfo, bool) {
	if o == nil || IsNil(o.CreatedByUserInfo) {
		return nil, false
	}
	return o.CreatedByUserInfo, true
}

// HasCreatedByUserInfo returns a boolean if a field has been set.
func (o *BrandResources) HasCreatedByUserInfo() bool {
	if o != nil && !IsNil(o.CreatedByUserInfo) {
		return true
	}

	return false
}

// SetCreatedByUserInfo gets a reference to the given UserInfo and assigns it to the CreatedByUserInfo field.
func (o *BrandResources) SetCreatedByUserInfo(v UserInfo) {
	o.CreatedByUserInfo = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *BrandResources) GetCreatedDate() string {
	if o == nil || IsNil(o.CreatedDate) {
		var ret string
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandResources) GetCreatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *BrandResources) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given string and assigns it to the CreatedDate field.
func (o *BrandResources) SetCreatedDate(v string) {
	o.CreatedDate = &v
}

// GetDataNotSavedNotInMaster returns the DataNotSavedNotInMaster field value if set, zero value otherwise.
func (o *BrandResources) GetDataNotSavedNotInMaster() []string {
	if o == nil || IsNil(o.DataNotSavedNotInMaster) {
		var ret []string
		return ret
	}
	return o.DataNotSavedNotInMaster
}

// GetDataNotSavedNotInMasterOk returns a tuple with the DataNotSavedNotInMaster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandResources) GetDataNotSavedNotInMasterOk() ([]string, bool) {
	if o == nil || IsNil(o.DataNotSavedNotInMaster) {
		return nil, false
	}
	return o.DataNotSavedNotInMaster, true
}

// HasDataNotSavedNotInMaster returns a boolean if a field has been set.
func (o *BrandResources) HasDataNotSavedNotInMaster() bool {
	if o != nil && !IsNil(o.DataNotSavedNotInMaster) {
		return true
	}

	return false
}

// SetDataNotSavedNotInMaster gets a reference to the given []string and assigns it to the DataNotSavedNotInMaster field.
func (o *BrandResources) SetDataNotSavedNotInMaster(v []string) {
	o.DataNotSavedNotInMaster = v
}

// GetModifiedByUserInfo returns the ModifiedByUserInfo field value if set, zero value otherwise.
func (o *BrandResources) GetModifiedByUserInfo() UserInfo {
	if o == nil || IsNil(o.ModifiedByUserInfo) {
		var ret UserInfo
		return ret
	}
	return *o.ModifiedByUserInfo
}

// GetModifiedByUserInfoOk returns a tuple with the ModifiedByUserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandResources) GetModifiedByUserInfoOk() (*UserInfo, bool) {
	if o == nil || IsNil(o.ModifiedByUserInfo) {
		return nil, false
	}
	return o.ModifiedByUserInfo, true
}

// HasModifiedByUserInfo returns a boolean if a field has been set.
func (o *BrandResources) HasModifiedByUserInfo() bool {
	if o != nil && !IsNil(o.ModifiedByUserInfo) {
		return true
	}

	return false
}

// SetModifiedByUserInfo gets a reference to the given UserInfo and assigns it to the ModifiedByUserInfo field.
func (o *BrandResources) SetModifiedByUserInfo(v UserInfo) {
	o.ModifiedByUserInfo = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise.
func (o *BrandResources) GetModifiedDate() string {
	if o == nil || IsNil(o.ModifiedDate) {
		var ret string
		return ret
	}
	return *o.ModifiedDate
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandResources) GetModifiedDateOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedDate) {
		return nil, false
	}
	return o.ModifiedDate, true
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *BrandResources) HasModifiedDate() bool {
	if o != nil && !IsNil(o.ModifiedDate) {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given string and assigns it to the ModifiedDate field.
func (o *BrandResources) SetModifiedDate(v string) {
	o.ModifiedDate = &v
}

// GetModifiedTemplates returns the ModifiedTemplates field value if set, zero value otherwise.
func (o *BrandResources) GetModifiedTemplates() []string {
	if o == nil || IsNil(o.ModifiedTemplates) {
		var ret []string
		return ret
	}
	return o.ModifiedTemplates
}

// GetModifiedTemplatesOk returns a tuple with the ModifiedTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandResources) GetModifiedTemplatesOk() ([]string, bool) {
	if o == nil || IsNil(o.ModifiedTemplates) {
		return nil, false
	}
	return o.ModifiedTemplates, true
}

// HasModifiedTemplates returns a boolean if a field has been set.
func (o *BrandResources) HasModifiedTemplates() bool {
	if o != nil && !IsNil(o.ModifiedTemplates) {
		return true
	}

	return false
}

// SetModifiedTemplates gets a reference to the given []string and assigns it to the ModifiedTemplates field.
func (o *BrandResources) SetModifiedTemplates(v []string) {
	o.ModifiedTemplates = v
}

// GetResourcesContentType returns the ResourcesContentType field value if set, zero value otherwise.
func (o *BrandResources) GetResourcesContentType() string {
	if o == nil || IsNil(o.ResourcesContentType) {
		var ret string
		return ret
	}
	return *o.ResourcesContentType
}

// GetResourcesContentTypeOk returns a tuple with the ResourcesContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandResources) GetResourcesContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourcesContentType) {
		return nil, false
	}
	return o.ResourcesContentType, true
}

// HasResourcesContentType returns a boolean if a field has been set.
func (o *BrandResources) HasResourcesContentType() bool {
	if o != nil && !IsNil(o.ResourcesContentType) {
		return true
	}

	return false
}

// SetResourcesContentType gets a reference to the given string and assigns it to the ResourcesContentType field.
func (o *BrandResources) SetResourcesContentType(v string) {
	o.ResourcesContentType = &v
}

// GetResourcesContentUri returns the ResourcesContentUri field value if set, zero value otherwise.
func (o *BrandResources) GetResourcesContentUri() string {
	if o == nil || IsNil(o.ResourcesContentUri) {
		var ret string
		return ret
	}
	return *o.ResourcesContentUri
}

// GetResourcesContentUriOk returns a tuple with the ResourcesContentUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandResources) GetResourcesContentUriOk() (*string, bool) {
	if o == nil || IsNil(o.ResourcesContentUri) {
		return nil, false
	}
	return o.ResourcesContentUri, true
}

// HasResourcesContentUri returns a boolean if a field has been set.
func (o *BrandResources) HasResourcesContentUri() bool {
	if o != nil && !IsNil(o.ResourcesContentUri) {
		return true
	}

	return false
}

// SetResourcesContentUri gets a reference to the given string and assigns it to the ResourcesContentUri field.
func (o *BrandResources) SetResourcesContentUri(v string) {
	o.ResourcesContentUri = &v
}

func (o BrandResources) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BrandResources) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedByUserInfo) {
		toSerialize["createdByUserInfo"] = o.CreatedByUserInfo
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.DataNotSavedNotInMaster) {
		toSerialize["dataNotSavedNotInMaster"] = o.DataNotSavedNotInMaster
	}
	if !IsNil(o.ModifiedByUserInfo) {
		toSerialize["modifiedByUserInfo"] = o.ModifiedByUserInfo
	}
	if !IsNil(o.ModifiedDate) {
		toSerialize["modifiedDate"] = o.ModifiedDate
	}
	if !IsNil(o.ModifiedTemplates) {
		toSerialize["modifiedTemplates"] = o.ModifiedTemplates
	}
	if !IsNil(o.ResourcesContentType) {
		toSerialize["resourcesContentType"] = o.ResourcesContentType
	}
	if !IsNil(o.ResourcesContentUri) {
		toSerialize["resourcesContentUri"] = o.ResourcesContentUri
	}
	return toSerialize, nil
}

type NullableBrandResources struct {
	value *BrandResources
	isSet bool
}

func (v NullableBrandResources) Get() *BrandResources {
	return v.value
}

func (v *NullableBrandResources) Set(val *BrandResources) {
	v.value = val
	v.isSet = true
}

func (v NullableBrandResources) IsSet() bool {
	return v.isSet
}

func (v *NullableBrandResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrandResources(val *BrandResources) *NullableBrandResources {
	return &NullableBrandResources{value: val, isSet: true}
}

func (v NullableBrandResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrandResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


