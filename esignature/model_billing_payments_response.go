/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BillingPaymentsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingPaymentsResponse{}

// BillingPaymentsResponse Defines a billing payments response object.
type BillingPaymentsResponse struct {
	// Reserved for DocuSign.
	BillingPayments []BillingPaymentItem `json:"billingPayments,omitempty"`
	// The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. 
	NextUri *string `json:"nextUri,omitempty"`
	// The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. 
	PreviousUri *string `json:"previousUri,omitempty"`
}

// NewBillingPaymentsResponse instantiates a new BillingPaymentsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingPaymentsResponse() *BillingPaymentsResponse {
	this := BillingPaymentsResponse{}
	return &this
}

// NewBillingPaymentsResponseWithDefaults instantiates a new BillingPaymentsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingPaymentsResponseWithDefaults() *BillingPaymentsResponse {
	this := BillingPaymentsResponse{}
	return &this
}

// GetBillingPayments returns the BillingPayments field value if set, zero value otherwise.
func (o *BillingPaymentsResponse) GetBillingPayments() []BillingPaymentItem {
	if o == nil || IsNil(o.BillingPayments) {
		var ret []BillingPaymentItem
		return ret
	}
	return o.BillingPayments
}

// GetBillingPaymentsOk returns a tuple with the BillingPayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPaymentsResponse) GetBillingPaymentsOk() ([]BillingPaymentItem, bool) {
	if o == nil || IsNil(o.BillingPayments) {
		return nil, false
	}
	return o.BillingPayments, true
}

// HasBillingPayments returns a boolean if a field has been set.
func (o *BillingPaymentsResponse) HasBillingPayments() bool {
	if o != nil && !IsNil(o.BillingPayments) {
		return true
	}

	return false
}

// SetBillingPayments gets a reference to the given []BillingPaymentItem and assigns it to the BillingPayments field.
func (o *BillingPaymentsResponse) SetBillingPayments(v []BillingPaymentItem) {
	o.BillingPayments = v
}

// GetNextUri returns the NextUri field value if set, zero value otherwise.
func (o *BillingPaymentsResponse) GetNextUri() string {
	if o == nil || IsNil(o.NextUri) {
		var ret string
		return ret
	}
	return *o.NextUri
}

// GetNextUriOk returns a tuple with the NextUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPaymentsResponse) GetNextUriOk() (*string, bool) {
	if o == nil || IsNil(o.NextUri) {
		return nil, false
	}
	return o.NextUri, true
}

// HasNextUri returns a boolean if a field has been set.
func (o *BillingPaymentsResponse) HasNextUri() bool {
	if o != nil && !IsNil(o.NextUri) {
		return true
	}

	return false
}

// SetNextUri gets a reference to the given string and assigns it to the NextUri field.
func (o *BillingPaymentsResponse) SetNextUri(v string) {
	o.NextUri = &v
}

// GetPreviousUri returns the PreviousUri field value if set, zero value otherwise.
func (o *BillingPaymentsResponse) GetPreviousUri() string {
	if o == nil || IsNil(o.PreviousUri) {
		var ret string
		return ret
	}
	return *o.PreviousUri
}

// GetPreviousUriOk returns a tuple with the PreviousUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPaymentsResponse) GetPreviousUriOk() (*string, bool) {
	if o == nil || IsNil(o.PreviousUri) {
		return nil, false
	}
	return o.PreviousUri, true
}

// HasPreviousUri returns a boolean if a field has been set.
func (o *BillingPaymentsResponse) HasPreviousUri() bool {
	if o != nil && !IsNil(o.PreviousUri) {
		return true
	}

	return false
}

// SetPreviousUri gets a reference to the given string and assigns it to the PreviousUri field.
func (o *BillingPaymentsResponse) SetPreviousUri(v string) {
	o.PreviousUri = &v
}

func (o BillingPaymentsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingPaymentsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingPayments) {
		toSerialize["billingPayments"] = o.BillingPayments
	}
	if !IsNil(o.NextUri) {
		toSerialize["nextUri"] = o.NextUri
	}
	if !IsNil(o.PreviousUri) {
		toSerialize["previousUri"] = o.PreviousUri
	}
	return toSerialize, nil
}

type NullableBillingPaymentsResponse struct {
	value *BillingPaymentsResponse
	isSet bool
}

func (v NullableBillingPaymentsResponse) Get() *BillingPaymentsResponse {
	return v.value
}

func (v *NullableBillingPaymentsResponse) Set(val *BillingPaymentsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingPaymentsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingPaymentsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingPaymentsResponse(val *BillingPaymentsResponse) *NullableBillingPaymentsResponse {
	return &NullableBillingPaymentsResponse{value: val, isSet: true}
}

func (v NullableBillingPaymentsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingPaymentsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


