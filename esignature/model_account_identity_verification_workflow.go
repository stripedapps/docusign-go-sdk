/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AccountIdentityVerificationWorkflow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountIdentityVerificationWorkflow{}

// AccountIdentityVerificationWorkflow Specifies an Identity Verification workflow.
type AccountIdentityVerificationWorkflow struct {
	// Text describing the purpose of the Identity Verification workflow.
	DefaultDescription *string `json:"defaultDescription,omitempty"`
	// The name of the Identity Verification workflow.
	DefaultName *string `json:"defaultName,omitempty"`
	// 
	InputOptions []AccountIdentityInputOption `json:"inputOptions,omitempty"`
	// 
	IsDisabled *string `json:"isDisabled,omitempty"`
	// 
	OwnerType *string `json:"ownerType,omitempty"`
	SignatureProvider *AccountSignatureProvider `json:"signatureProvider,omitempty"`
	// Workflow unique ID</br>This is the ID you must specify when setting ID Verification in an envelope using the `identityVerification` [core recipient parameter](/docs/esign-rest-api/reference/envelopes/enveloperecipients/#core-recipient-parameters)
	WorkflowId *string `json:"workflowId,omitempty"`
	// 
	WorkflowLabel *string `json:"workflowLabel,omitempty"`
	// Reserved for DocuSign.
	WorkflowResourceKey *string `json:"workflowResourceKey,omitempty"`
}

// NewAccountIdentityVerificationWorkflow instantiates a new AccountIdentityVerificationWorkflow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountIdentityVerificationWorkflow() *AccountIdentityVerificationWorkflow {
	this := AccountIdentityVerificationWorkflow{}
	return &this
}

// NewAccountIdentityVerificationWorkflowWithDefaults instantiates a new AccountIdentityVerificationWorkflow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountIdentityVerificationWorkflowWithDefaults() *AccountIdentityVerificationWorkflow {
	this := AccountIdentityVerificationWorkflow{}
	return &this
}

// GetDefaultDescription returns the DefaultDescription field value if set, zero value otherwise.
func (o *AccountIdentityVerificationWorkflow) GetDefaultDescription() string {
	if o == nil || IsNil(o.DefaultDescription) {
		var ret string
		return ret
	}
	return *o.DefaultDescription
}

// GetDefaultDescriptionOk returns a tuple with the DefaultDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIdentityVerificationWorkflow) GetDefaultDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultDescription) {
		return nil, false
	}
	return o.DefaultDescription, true
}

// HasDefaultDescription returns a boolean if a field has been set.
func (o *AccountIdentityVerificationWorkflow) HasDefaultDescription() bool {
	if o != nil && !IsNil(o.DefaultDescription) {
		return true
	}

	return false
}

// SetDefaultDescription gets a reference to the given string and assigns it to the DefaultDescription field.
func (o *AccountIdentityVerificationWorkflow) SetDefaultDescription(v string) {
	o.DefaultDescription = &v
}

// GetDefaultName returns the DefaultName field value if set, zero value otherwise.
func (o *AccountIdentityVerificationWorkflow) GetDefaultName() string {
	if o == nil || IsNil(o.DefaultName) {
		var ret string
		return ret
	}
	return *o.DefaultName
}

// GetDefaultNameOk returns a tuple with the DefaultName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIdentityVerificationWorkflow) GetDefaultNameOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultName) {
		return nil, false
	}
	return o.DefaultName, true
}

// HasDefaultName returns a boolean if a field has been set.
func (o *AccountIdentityVerificationWorkflow) HasDefaultName() bool {
	if o != nil && !IsNil(o.DefaultName) {
		return true
	}

	return false
}

// SetDefaultName gets a reference to the given string and assigns it to the DefaultName field.
func (o *AccountIdentityVerificationWorkflow) SetDefaultName(v string) {
	o.DefaultName = &v
}

// GetInputOptions returns the InputOptions field value if set, zero value otherwise.
func (o *AccountIdentityVerificationWorkflow) GetInputOptions() []AccountIdentityInputOption {
	if o == nil || IsNil(o.InputOptions) {
		var ret []AccountIdentityInputOption
		return ret
	}
	return o.InputOptions
}

// GetInputOptionsOk returns a tuple with the InputOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIdentityVerificationWorkflow) GetInputOptionsOk() ([]AccountIdentityInputOption, bool) {
	if o == nil || IsNil(o.InputOptions) {
		return nil, false
	}
	return o.InputOptions, true
}

// HasInputOptions returns a boolean if a field has been set.
func (o *AccountIdentityVerificationWorkflow) HasInputOptions() bool {
	if o != nil && !IsNil(o.InputOptions) {
		return true
	}

	return false
}

// SetInputOptions gets a reference to the given []AccountIdentityInputOption and assigns it to the InputOptions field.
func (o *AccountIdentityVerificationWorkflow) SetInputOptions(v []AccountIdentityInputOption) {
	o.InputOptions = v
}

// GetIsDisabled returns the IsDisabled field value if set, zero value otherwise.
func (o *AccountIdentityVerificationWorkflow) GetIsDisabled() string {
	if o == nil || IsNil(o.IsDisabled) {
		var ret string
		return ret
	}
	return *o.IsDisabled
}

// GetIsDisabledOk returns a tuple with the IsDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIdentityVerificationWorkflow) GetIsDisabledOk() (*string, bool) {
	if o == nil || IsNil(o.IsDisabled) {
		return nil, false
	}
	return o.IsDisabled, true
}

// HasIsDisabled returns a boolean if a field has been set.
func (o *AccountIdentityVerificationWorkflow) HasIsDisabled() bool {
	if o != nil && !IsNil(o.IsDisabled) {
		return true
	}

	return false
}

// SetIsDisabled gets a reference to the given string and assigns it to the IsDisabled field.
func (o *AccountIdentityVerificationWorkflow) SetIsDisabled(v string) {
	o.IsDisabled = &v
}

// GetOwnerType returns the OwnerType field value if set, zero value otherwise.
func (o *AccountIdentityVerificationWorkflow) GetOwnerType() string {
	if o == nil || IsNil(o.OwnerType) {
		var ret string
		return ret
	}
	return *o.OwnerType
}

// GetOwnerTypeOk returns a tuple with the OwnerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIdentityVerificationWorkflow) GetOwnerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerType) {
		return nil, false
	}
	return o.OwnerType, true
}

// HasOwnerType returns a boolean if a field has been set.
func (o *AccountIdentityVerificationWorkflow) HasOwnerType() bool {
	if o != nil && !IsNil(o.OwnerType) {
		return true
	}

	return false
}

// SetOwnerType gets a reference to the given string and assigns it to the OwnerType field.
func (o *AccountIdentityVerificationWorkflow) SetOwnerType(v string) {
	o.OwnerType = &v
}

// GetSignatureProvider returns the SignatureProvider field value if set, zero value otherwise.
func (o *AccountIdentityVerificationWorkflow) GetSignatureProvider() AccountSignatureProvider {
	if o == nil || IsNil(o.SignatureProvider) {
		var ret AccountSignatureProvider
		return ret
	}
	return *o.SignatureProvider
}

// GetSignatureProviderOk returns a tuple with the SignatureProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIdentityVerificationWorkflow) GetSignatureProviderOk() (*AccountSignatureProvider, bool) {
	if o == nil || IsNil(o.SignatureProvider) {
		return nil, false
	}
	return o.SignatureProvider, true
}

// HasSignatureProvider returns a boolean if a field has been set.
func (o *AccountIdentityVerificationWorkflow) HasSignatureProvider() bool {
	if o != nil && !IsNil(o.SignatureProvider) {
		return true
	}

	return false
}

// SetSignatureProvider gets a reference to the given AccountSignatureProvider and assigns it to the SignatureProvider field.
func (o *AccountIdentityVerificationWorkflow) SetSignatureProvider(v AccountSignatureProvider) {
	o.SignatureProvider = &v
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise.
func (o *AccountIdentityVerificationWorkflow) GetWorkflowId() string {
	if o == nil || IsNil(o.WorkflowId) {
		var ret string
		return ret
	}
	return *o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIdentityVerificationWorkflow) GetWorkflowIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowId) {
		return nil, false
	}
	return o.WorkflowId, true
}

// HasWorkflowId returns a boolean if a field has been set.
func (o *AccountIdentityVerificationWorkflow) HasWorkflowId() bool {
	if o != nil && !IsNil(o.WorkflowId) {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given string and assigns it to the WorkflowId field.
func (o *AccountIdentityVerificationWorkflow) SetWorkflowId(v string) {
	o.WorkflowId = &v
}

// GetWorkflowLabel returns the WorkflowLabel field value if set, zero value otherwise.
func (o *AccountIdentityVerificationWorkflow) GetWorkflowLabel() string {
	if o == nil || IsNil(o.WorkflowLabel) {
		var ret string
		return ret
	}
	return *o.WorkflowLabel
}

// GetWorkflowLabelOk returns a tuple with the WorkflowLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIdentityVerificationWorkflow) GetWorkflowLabelOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowLabel) {
		return nil, false
	}
	return o.WorkflowLabel, true
}

// HasWorkflowLabel returns a boolean if a field has been set.
func (o *AccountIdentityVerificationWorkflow) HasWorkflowLabel() bool {
	if o != nil && !IsNil(o.WorkflowLabel) {
		return true
	}

	return false
}

// SetWorkflowLabel gets a reference to the given string and assigns it to the WorkflowLabel field.
func (o *AccountIdentityVerificationWorkflow) SetWorkflowLabel(v string) {
	o.WorkflowLabel = &v
}

// GetWorkflowResourceKey returns the WorkflowResourceKey field value if set, zero value otherwise.
func (o *AccountIdentityVerificationWorkflow) GetWorkflowResourceKey() string {
	if o == nil || IsNil(o.WorkflowResourceKey) {
		var ret string
		return ret
	}
	return *o.WorkflowResourceKey
}

// GetWorkflowResourceKeyOk returns a tuple with the WorkflowResourceKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIdentityVerificationWorkflow) GetWorkflowResourceKeyOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowResourceKey) {
		return nil, false
	}
	return o.WorkflowResourceKey, true
}

// HasWorkflowResourceKey returns a boolean if a field has been set.
func (o *AccountIdentityVerificationWorkflow) HasWorkflowResourceKey() bool {
	if o != nil && !IsNil(o.WorkflowResourceKey) {
		return true
	}

	return false
}

// SetWorkflowResourceKey gets a reference to the given string and assigns it to the WorkflowResourceKey field.
func (o *AccountIdentityVerificationWorkflow) SetWorkflowResourceKey(v string) {
	o.WorkflowResourceKey = &v
}

func (o AccountIdentityVerificationWorkflow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountIdentityVerificationWorkflow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultDescription) {
		toSerialize["defaultDescription"] = o.DefaultDescription
	}
	if !IsNil(o.DefaultName) {
		toSerialize["defaultName"] = o.DefaultName
	}
	if !IsNil(o.InputOptions) {
		toSerialize["inputOptions"] = o.InputOptions
	}
	if !IsNil(o.IsDisabled) {
		toSerialize["isDisabled"] = o.IsDisabled
	}
	if !IsNil(o.OwnerType) {
		toSerialize["ownerType"] = o.OwnerType
	}
	if !IsNil(o.SignatureProvider) {
		toSerialize["signatureProvider"] = o.SignatureProvider
	}
	if !IsNil(o.WorkflowId) {
		toSerialize["workflowId"] = o.WorkflowId
	}
	if !IsNil(o.WorkflowLabel) {
		toSerialize["workflowLabel"] = o.WorkflowLabel
	}
	if !IsNil(o.WorkflowResourceKey) {
		toSerialize["workflowResourceKey"] = o.WorkflowResourceKey
	}
	return toSerialize, nil
}

type NullableAccountIdentityVerificationWorkflow struct {
	value *AccountIdentityVerificationWorkflow
	isSet bool
}

func (v NullableAccountIdentityVerificationWorkflow) Get() *AccountIdentityVerificationWorkflow {
	return v.value
}

func (v *NullableAccountIdentityVerificationWorkflow) Set(val *AccountIdentityVerificationWorkflow) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountIdentityVerificationWorkflow) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountIdentityVerificationWorkflow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountIdentityVerificationWorkflow(val *AccountIdentityVerificationWorkflow) *NullableAccountIdentityVerificationWorkflow {
	return &NullableAccountIdentityVerificationWorkflow{value: val, isSet: true}
}

func (v NullableAccountIdentityVerificationWorkflow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountIdentityVerificationWorkflow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


