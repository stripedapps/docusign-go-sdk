/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Accounts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Accounts{}

// Accounts Account management
type Accounts struct {
	// The GUID associated with the account ID.
	AccountIdGuid *string `json:"accountIdGuid,omitempty"`
	// The name on the account.
	AccountName *string `json:"accountName,omitempty"`
	AccountSettings *AccountSettingsInformation `json:"accountSettings,omitempty"`
	// When **true,** the transaction rooms feature exposed through the Workspaces API is enabled.
	AllowTransactionRooms *string `json:"allowTransactionRooms,omitempty"`
	// Number of days remaining in the current billing period.
	BillingPeriodDaysRemaining *string `json:"billingPeriodDaysRemaining,omitempty"`
	// The billing period end date in UTC timedate format.
	BillingPeriodEndDate *string `json:"billingPeriodEndDate,omitempty"`
	// The number of envelopes that can be sent in the current billing period (can be unlimited).
	BillingPeriodEnvelopesAllowed *string `json:"billingPeriodEnvelopesAllowed,omitempty"`
	// The number of envelopes that have been sent in the current billing period.
	BillingPeriodEnvelopesSent *string `json:"billingPeriodEnvelopesSent,omitempty"`
	// The billing period start date in UTC timedate format.
	BillingPeriodStartDate *string `json:"billingPeriodStartDate,omitempty"`
	// The type of billing method on the account. Valid values are:   - `direct` - `web`
	BillingProfile *string `json:"billingProfile,omitempty"`
	Brands *AccountBrands `json:"brands,omitempty"`
	// When **true,** specifies that you can upgrade the account through the API. For GET methods, you must set the `include_metadata` query parameter to **true** for this property to appear in the response.
	CanUpgrade *string `json:"canUpgrade,omitempty"`
	// 
	ConnectPermission *string `json:"connectPermission,omitempty"`
	// The creation date of the account in UTC timedate format.
	CreatedDate *string `json:"createdDate,omitempty"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code. 
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// ID of the plan used to create this account.
	CurrentPlanId *string `json:"currentPlanId,omitempty"`
	// 
	DisplayApplianceStartUrl *string `json:"displayApplianceStartUrl,omitempty"`
	// 
	DisplayApplianceUrl *string `json:"displayApplianceUrl,omitempty"`
	// The code that identifies the billing plan groups and plans for the new account.
	DistributorCode *string `json:"distributorCode,omitempty"`
	// URL of the landing page used to create the account.
	DocuSignLandingUrl *string `json:"docuSignLandingUrl,omitempty"`
	// 
	DssValues *map[string]string `json:"dssValues,omitempty"`
	// When **true,** the ability to send envelopes is blocked. When **false,** envelopes can be sent.
	EnvelopeSendingBlocked *string `json:"envelopeSendingBlocked,omitempty"`
	// The price of sending an envelope, represented in the account's local currency.
	EnvelopeUnitPrice *string `json:"envelopeUnitPrice,omitempty"`
	// The Account ID displayed on the user's Account page.
	ExternalAccountId *string `json:"externalAccountId,omitempty"`
	//  A complex element that contains up to four Question/Answer pairs for forgotten password information for a user.
	ForgottenPasswordQuestionsCount *string `json:"forgottenPasswordQuestionsCount,omitempty"`
	// When **true,** the account has been downgraded from a premium account type. Otherwise **false.**
	IsDowngrade *string `json:"isDowngrade,omitempty"`
	// The payment method used for the billing plan. Valid values are:  - `NotSupported` - `CreditCard` - `PurchaseOrder` - `Premium` - `Freemium` - `FreeTrial` - `AppStore` - `DigitalExternal` - `DirectDebit`
	PaymentMethod *string `json:"paymentMethod,omitempty"`
	// Identifies the type of plan. Examples include:  - `business` - `corporate` - `enterprise`  - `free`
	PlanClassification *string `json:"planClassification,omitempty"`
	// The date that the current plan will end.
	PlanEndDate *string `json:"planEndDate,omitempty"`
	// The name of the billing plan used for the account.  Examples:   - `Personal - Annual` - `Unlimited Envelope Subscription - Annual Billing`
	PlanName *string `json:"planName,omitempty"`
	// The date that the Account started using the current plan.
	PlanStartDate *string `json:"planStartDate,omitempty"`
	// 
	RecipientDomains []RecipientDomain `json:"recipientDomains,omitempty"`
	// The number of active users the account can have at one time.
	SeatsAllowed *string `json:"seatsAllowed,omitempty"`
	// The number of users currently active on the account.
	SeatsInUse *string `json:"seatsInUse,omitempty"`
	// The status of the account content per (Title 21 CFR Part 11)[https://www.fda.gov/regulatory-information/search-fda-guidance-documents/part-11-electronic-records-electronic-signatures-scope-and-application]. This regulation defines the criteria under which electronic records and electronic signatures are considered trustworthy.
	Status21CFRPart11 *string `json:"status21CFRPart11,omitempty"`
	// The date on which the account was suspended.
	SuspensionDate *string `json:"suspensionDate,omitempty"`
	// Indicates whether the account is currently suspended.
	SuspensionStatus *string `json:"suspensionStatus,omitempty"`
	// 
	UseDisplayAppliance *bool `json:"useDisplayAppliance,omitempty"`
}

// NewAccounts instantiates a new Accounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccounts() *Accounts {
	this := Accounts{}
	return &this
}

// NewAccountsWithDefaults instantiates a new Accounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountsWithDefaults() *Accounts {
	this := Accounts{}
	return &this
}

// GetAccountIdGuid returns the AccountIdGuid field value if set, zero value otherwise.
func (o *Accounts) GetAccountIdGuid() string {
	if o == nil || IsNil(o.AccountIdGuid) {
		var ret string
		return ret
	}
	return *o.AccountIdGuid
}

// GetAccountIdGuidOk returns a tuple with the AccountIdGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetAccountIdGuidOk() (*string, bool) {
	if o == nil || IsNil(o.AccountIdGuid) {
		return nil, false
	}
	return o.AccountIdGuid, true
}

// HasAccountIdGuid returns a boolean if a field has been set.
func (o *Accounts) HasAccountIdGuid() bool {
	if o != nil && !IsNil(o.AccountIdGuid) {
		return true
	}

	return false
}

// SetAccountIdGuid gets a reference to the given string and assigns it to the AccountIdGuid field.
func (o *Accounts) SetAccountIdGuid(v string) {
	o.AccountIdGuid = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *Accounts) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *Accounts) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *Accounts) SetAccountName(v string) {
	o.AccountName = &v
}

// GetAccountSettings returns the AccountSettings field value if set, zero value otherwise.
func (o *Accounts) GetAccountSettings() AccountSettingsInformation {
	if o == nil || IsNil(o.AccountSettings) {
		var ret AccountSettingsInformation
		return ret
	}
	return *o.AccountSettings
}

// GetAccountSettingsOk returns a tuple with the AccountSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetAccountSettingsOk() (*AccountSettingsInformation, bool) {
	if o == nil || IsNil(o.AccountSettings) {
		return nil, false
	}
	return o.AccountSettings, true
}

// HasAccountSettings returns a boolean if a field has been set.
func (o *Accounts) HasAccountSettings() bool {
	if o != nil && !IsNil(o.AccountSettings) {
		return true
	}

	return false
}

// SetAccountSettings gets a reference to the given AccountSettingsInformation and assigns it to the AccountSettings field.
func (o *Accounts) SetAccountSettings(v AccountSettingsInformation) {
	o.AccountSettings = &v
}

// GetAllowTransactionRooms returns the AllowTransactionRooms field value if set, zero value otherwise.
func (o *Accounts) GetAllowTransactionRooms() string {
	if o == nil || IsNil(o.AllowTransactionRooms) {
		var ret string
		return ret
	}
	return *o.AllowTransactionRooms
}

// GetAllowTransactionRoomsOk returns a tuple with the AllowTransactionRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetAllowTransactionRoomsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowTransactionRooms) {
		return nil, false
	}
	return o.AllowTransactionRooms, true
}

// HasAllowTransactionRooms returns a boolean if a field has been set.
func (o *Accounts) HasAllowTransactionRooms() bool {
	if o != nil && !IsNil(o.AllowTransactionRooms) {
		return true
	}

	return false
}

// SetAllowTransactionRooms gets a reference to the given string and assigns it to the AllowTransactionRooms field.
func (o *Accounts) SetAllowTransactionRooms(v string) {
	o.AllowTransactionRooms = &v
}

// GetBillingPeriodDaysRemaining returns the BillingPeriodDaysRemaining field value if set, zero value otherwise.
func (o *Accounts) GetBillingPeriodDaysRemaining() string {
	if o == nil || IsNil(o.BillingPeriodDaysRemaining) {
		var ret string
		return ret
	}
	return *o.BillingPeriodDaysRemaining
}

// GetBillingPeriodDaysRemainingOk returns a tuple with the BillingPeriodDaysRemaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetBillingPeriodDaysRemainingOk() (*string, bool) {
	if o == nil || IsNil(o.BillingPeriodDaysRemaining) {
		return nil, false
	}
	return o.BillingPeriodDaysRemaining, true
}

// HasBillingPeriodDaysRemaining returns a boolean if a field has been set.
func (o *Accounts) HasBillingPeriodDaysRemaining() bool {
	if o != nil && !IsNil(o.BillingPeriodDaysRemaining) {
		return true
	}

	return false
}

// SetBillingPeriodDaysRemaining gets a reference to the given string and assigns it to the BillingPeriodDaysRemaining field.
func (o *Accounts) SetBillingPeriodDaysRemaining(v string) {
	o.BillingPeriodDaysRemaining = &v
}

// GetBillingPeriodEndDate returns the BillingPeriodEndDate field value if set, zero value otherwise.
func (o *Accounts) GetBillingPeriodEndDate() string {
	if o == nil || IsNil(o.BillingPeriodEndDate) {
		var ret string
		return ret
	}
	return *o.BillingPeriodEndDate
}

// GetBillingPeriodEndDateOk returns a tuple with the BillingPeriodEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetBillingPeriodEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.BillingPeriodEndDate) {
		return nil, false
	}
	return o.BillingPeriodEndDate, true
}

// HasBillingPeriodEndDate returns a boolean if a field has been set.
func (o *Accounts) HasBillingPeriodEndDate() bool {
	if o != nil && !IsNil(o.BillingPeriodEndDate) {
		return true
	}

	return false
}

// SetBillingPeriodEndDate gets a reference to the given string and assigns it to the BillingPeriodEndDate field.
func (o *Accounts) SetBillingPeriodEndDate(v string) {
	o.BillingPeriodEndDate = &v
}

// GetBillingPeriodEnvelopesAllowed returns the BillingPeriodEnvelopesAllowed field value if set, zero value otherwise.
func (o *Accounts) GetBillingPeriodEnvelopesAllowed() string {
	if o == nil || IsNil(o.BillingPeriodEnvelopesAllowed) {
		var ret string
		return ret
	}
	return *o.BillingPeriodEnvelopesAllowed
}

// GetBillingPeriodEnvelopesAllowedOk returns a tuple with the BillingPeriodEnvelopesAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetBillingPeriodEnvelopesAllowedOk() (*string, bool) {
	if o == nil || IsNil(o.BillingPeriodEnvelopesAllowed) {
		return nil, false
	}
	return o.BillingPeriodEnvelopesAllowed, true
}

// HasBillingPeriodEnvelopesAllowed returns a boolean if a field has been set.
func (o *Accounts) HasBillingPeriodEnvelopesAllowed() bool {
	if o != nil && !IsNil(o.BillingPeriodEnvelopesAllowed) {
		return true
	}

	return false
}

// SetBillingPeriodEnvelopesAllowed gets a reference to the given string and assigns it to the BillingPeriodEnvelopesAllowed field.
func (o *Accounts) SetBillingPeriodEnvelopesAllowed(v string) {
	o.BillingPeriodEnvelopesAllowed = &v
}

// GetBillingPeriodEnvelopesSent returns the BillingPeriodEnvelopesSent field value if set, zero value otherwise.
func (o *Accounts) GetBillingPeriodEnvelopesSent() string {
	if o == nil || IsNil(o.BillingPeriodEnvelopesSent) {
		var ret string
		return ret
	}
	return *o.BillingPeriodEnvelopesSent
}

// GetBillingPeriodEnvelopesSentOk returns a tuple with the BillingPeriodEnvelopesSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetBillingPeriodEnvelopesSentOk() (*string, bool) {
	if o == nil || IsNil(o.BillingPeriodEnvelopesSent) {
		return nil, false
	}
	return o.BillingPeriodEnvelopesSent, true
}

// HasBillingPeriodEnvelopesSent returns a boolean if a field has been set.
func (o *Accounts) HasBillingPeriodEnvelopesSent() bool {
	if o != nil && !IsNil(o.BillingPeriodEnvelopesSent) {
		return true
	}

	return false
}

// SetBillingPeriodEnvelopesSent gets a reference to the given string and assigns it to the BillingPeriodEnvelopesSent field.
func (o *Accounts) SetBillingPeriodEnvelopesSent(v string) {
	o.BillingPeriodEnvelopesSent = &v
}

// GetBillingPeriodStartDate returns the BillingPeriodStartDate field value if set, zero value otherwise.
func (o *Accounts) GetBillingPeriodStartDate() string {
	if o == nil || IsNil(o.BillingPeriodStartDate) {
		var ret string
		return ret
	}
	return *o.BillingPeriodStartDate
}

// GetBillingPeriodStartDateOk returns a tuple with the BillingPeriodStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetBillingPeriodStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.BillingPeriodStartDate) {
		return nil, false
	}
	return o.BillingPeriodStartDate, true
}

// HasBillingPeriodStartDate returns a boolean if a field has been set.
func (o *Accounts) HasBillingPeriodStartDate() bool {
	if o != nil && !IsNil(o.BillingPeriodStartDate) {
		return true
	}

	return false
}

// SetBillingPeriodStartDate gets a reference to the given string and assigns it to the BillingPeriodStartDate field.
func (o *Accounts) SetBillingPeriodStartDate(v string) {
	o.BillingPeriodStartDate = &v
}

// GetBillingProfile returns the BillingProfile field value if set, zero value otherwise.
func (o *Accounts) GetBillingProfile() string {
	if o == nil || IsNil(o.BillingProfile) {
		var ret string
		return ret
	}
	return *o.BillingProfile
}

// GetBillingProfileOk returns a tuple with the BillingProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetBillingProfileOk() (*string, bool) {
	if o == nil || IsNil(o.BillingProfile) {
		return nil, false
	}
	return o.BillingProfile, true
}

// HasBillingProfile returns a boolean if a field has been set.
func (o *Accounts) HasBillingProfile() bool {
	if o != nil && !IsNil(o.BillingProfile) {
		return true
	}

	return false
}

// SetBillingProfile gets a reference to the given string and assigns it to the BillingProfile field.
func (o *Accounts) SetBillingProfile(v string) {
	o.BillingProfile = &v
}

// GetBrands returns the Brands field value if set, zero value otherwise.
func (o *Accounts) GetBrands() AccountBrands {
	if o == nil || IsNil(o.Brands) {
		var ret AccountBrands
		return ret
	}
	return *o.Brands
}

// GetBrandsOk returns a tuple with the Brands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetBrandsOk() (*AccountBrands, bool) {
	if o == nil || IsNil(o.Brands) {
		return nil, false
	}
	return o.Brands, true
}

// HasBrands returns a boolean if a field has been set.
func (o *Accounts) HasBrands() bool {
	if o != nil && !IsNil(o.Brands) {
		return true
	}

	return false
}

// SetBrands gets a reference to the given AccountBrands and assigns it to the Brands field.
func (o *Accounts) SetBrands(v AccountBrands) {
	o.Brands = &v
}

// GetCanUpgrade returns the CanUpgrade field value if set, zero value otherwise.
func (o *Accounts) GetCanUpgrade() string {
	if o == nil || IsNil(o.CanUpgrade) {
		var ret string
		return ret
	}
	return *o.CanUpgrade
}

// GetCanUpgradeOk returns a tuple with the CanUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetCanUpgradeOk() (*string, bool) {
	if o == nil || IsNil(o.CanUpgrade) {
		return nil, false
	}
	return o.CanUpgrade, true
}

// HasCanUpgrade returns a boolean if a field has been set.
func (o *Accounts) HasCanUpgrade() bool {
	if o != nil && !IsNil(o.CanUpgrade) {
		return true
	}

	return false
}

// SetCanUpgrade gets a reference to the given string and assigns it to the CanUpgrade field.
func (o *Accounts) SetCanUpgrade(v string) {
	o.CanUpgrade = &v
}

// GetConnectPermission returns the ConnectPermission field value if set, zero value otherwise.
func (o *Accounts) GetConnectPermission() string {
	if o == nil || IsNil(o.ConnectPermission) {
		var ret string
		return ret
	}
	return *o.ConnectPermission
}

// GetConnectPermissionOk returns a tuple with the ConnectPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetConnectPermissionOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectPermission) {
		return nil, false
	}
	return o.ConnectPermission, true
}

// HasConnectPermission returns a boolean if a field has been set.
func (o *Accounts) HasConnectPermission() bool {
	if o != nil && !IsNil(o.ConnectPermission) {
		return true
	}

	return false
}

// SetConnectPermission gets a reference to the given string and assigns it to the ConnectPermission field.
func (o *Accounts) SetConnectPermission(v string) {
	o.ConnectPermission = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *Accounts) GetCreatedDate() string {
	if o == nil || IsNil(o.CreatedDate) {
		var ret string
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetCreatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *Accounts) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given string and assigns it to the CreatedDate field.
func (o *Accounts) SetCreatedDate(v string) {
	o.CreatedDate = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *Accounts) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *Accounts) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *Accounts) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetCurrentPlanId returns the CurrentPlanId field value if set, zero value otherwise.
func (o *Accounts) GetCurrentPlanId() string {
	if o == nil || IsNil(o.CurrentPlanId) {
		var ret string
		return ret
	}
	return *o.CurrentPlanId
}

// GetCurrentPlanIdOk returns a tuple with the CurrentPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetCurrentPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentPlanId) {
		return nil, false
	}
	return o.CurrentPlanId, true
}

// HasCurrentPlanId returns a boolean if a field has been set.
func (o *Accounts) HasCurrentPlanId() bool {
	if o != nil && !IsNil(o.CurrentPlanId) {
		return true
	}

	return false
}

// SetCurrentPlanId gets a reference to the given string and assigns it to the CurrentPlanId field.
func (o *Accounts) SetCurrentPlanId(v string) {
	o.CurrentPlanId = &v
}

// GetDisplayApplianceStartUrl returns the DisplayApplianceStartUrl field value if set, zero value otherwise.
func (o *Accounts) GetDisplayApplianceStartUrl() string {
	if o == nil || IsNil(o.DisplayApplianceStartUrl) {
		var ret string
		return ret
	}
	return *o.DisplayApplianceStartUrl
}

// GetDisplayApplianceStartUrlOk returns a tuple with the DisplayApplianceStartUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetDisplayApplianceStartUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayApplianceStartUrl) {
		return nil, false
	}
	return o.DisplayApplianceStartUrl, true
}

// HasDisplayApplianceStartUrl returns a boolean if a field has been set.
func (o *Accounts) HasDisplayApplianceStartUrl() bool {
	if o != nil && !IsNil(o.DisplayApplianceStartUrl) {
		return true
	}

	return false
}

// SetDisplayApplianceStartUrl gets a reference to the given string and assigns it to the DisplayApplianceStartUrl field.
func (o *Accounts) SetDisplayApplianceStartUrl(v string) {
	o.DisplayApplianceStartUrl = &v
}

// GetDisplayApplianceUrl returns the DisplayApplianceUrl field value if set, zero value otherwise.
func (o *Accounts) GetDisplayApplianceUrl() string {
	if o == nil || IsNil(o.DisplayApplianceUrl) {
		var ret string
		return ret
	}
	return *o.DisplayApplianceUrl
}

// GetDisplayApplianceUrlOk returns a tuple with the DisplayApplianceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetDisplayApplianceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayApplianceUrl) {
		return nil, false
	}
	return o.DisplayApplianceUrl, true
}

// HasDisplayApplianceUrl returns a boolean if a field has been set.
func (o *Accounts) HasDisplayApplianceUrl() bool {
	if o != nil && !IsNil(o.DisplayApplianceUrl) {
		return true
	}

	return false
}

// SetDisplayApplianceUrl gets a reference to the given string and assigns it to the DisplayApplianceUrl field.
func (o *Accounts) SetDisplayApplianceUrl(v string) {
	o.DisplayApplianceUrl = &v
}

// GetDistributorCode returns the DistributorCode field value if set, zero value otherwise.
func (o *Accounts) GetDistributorCode() string {
	if o == nil || IsNil(o.DistributorCode) {
		var ret string
		return ret
	}
	return *o.DistributorCode
}

// GetDistributorCodeOk returns a tuple with the DistributorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetDistributorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DistributorCode) {
		return nil, false
	}
	return o.DistributorCode, true
}

// HasDistributorCode returns a boolean if a field has been set.
func (o *Accounts) HasDistributorCode() bool {
	if o != nil && !IsNil(o.DistributorCode) {
		return true
	}

	return false
}

// SetDistributorCode gets a reference to the given string and assigns it to the DistributorCode field.
func (o *Accounts) SetDistributorCode(v string) {
	o.DistributorCode = &v
}

// GetDocuSignLandingUrl returns the DocuSignLandingUrl field value if set, zero value otherwise.
func (o *Accounts) GetDocuSignLandingUrl() string {
	if o == nil || IsNil(o.DocuSignLandingUrl) {
		var ret string
		return ret
	}
	return *o.DocuSignLandingUrl
}

// GetDocuSignLandingUrlOk returns a tuple with the DocuSignLandingUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetDocuSignLandingUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DocuSignLandingUrl) {
		return nil, false
	}
	return o.DocuSignLandingUrl, true
}

// HasDocuSignLandingUrl returns a boolean if a field has been set.
func (o *Accounts) HasDocuSignLandingUrl() bool {
	if o != nil && !IsNil(o.DocuSignLandingUrl) {
		return true
	}

	return false
}

// SetDocuSignLandingUrl gets a reference to the given string and assigns it to the DocuSignLandingUrl field.
func (o *Accounts) SetDocuSignLandingUrl(v string) {
	o.DocuSignLandingUrl = &v
}

// GetDssValues returns the DssValues field value if set, zero value otherwise.
func (o *Accounts) GetDssValues() map[string]string {
	if o == nil || IsNil(o.DssValues) {
		var ret map[string]string
		return ret
	}
	return *o.DssValues
}

// GetDssValuesOk returns a tuple with the DssValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetDssValuesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.DssValues) {
		return nil, false
	}
	return o.DssValues, true
}

// HasDssValues returns a boolean if a field has been set.
func (o *Accounts) HasDssValues() bool {
	if o != nil && !IsNil(o.DssValues) {
		return true
	}

	return false
}

// SetDssValues gets a reference to the given map[string]string and assigns it to the DssValues field.
func (o *Accounts) SetDssValues(v map[string]string) {
	o.DssValues = &v
}

// GetEnvelopeSendingBlocked returns the EnvelopeSendingBlocked field value if set, zero value otherwise.
func (o *Accounts) GetEnvelopeSendingBlocked() string {
	if o == nil || IsNil(o.EnvelopeSendingBlocked) {
		var ret string
		return ret
	}
	return *o.EnvelopeSendingBlocked
}

// GetEnvelopeSendingBlockedOk returns a tuple with the EnvelopeSendingBlocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetEnvelopeSendingBlockedOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeSendingBlocked) {
		return nil, false
	}
	return o.EnvelopeSendingBlocked, true
}

// HasEnvelopeSendingBlocked returns a boolean if a field has been set.
func (o *Accounts) HasEnvelopeSendingBlocked() bool {
	if o != nil && !IsNil(o.EnvelopeSendingBlocked) {
		return true
	}

	return false
}

// SetEnvelopeSendingBlocked gets a reference to the given string and assigns it to the EnvelopeSendingBlocked field.
func (o *Accounts) SetEnvelopeSendingBlocked(v string) {
	o.EnvelopeSendingBlocked = &v
}

// GetEnvelopeUnitPrice returns the EnvelopeUnitPrice field value if set, zero value otherwise.
func (o *Accounts) GetEnvelopeUnitPrice() string {
	if o == nil || IsNil(o.EnvelopeUnitPrice) {
		var ret string
		return ret
	}
	return *o.EnvelopeUnitPrice
}

// GetEnvelopeUnitPriceOk returns a tuple with the EnvelopeUnitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetEnvelopeUnitPriceOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeUnitPrice) {
		return nil, false
	}
	return o.EnvelopeUnitPrice, true
}

// HasEnvelopeUnitPrice returns a boolean if a field has been set.
func (o *Accounts) HasEnvelopeUnitPrice() bool {
	if o != nil && !IsNil(o.EnvelopeUnitPrice) {
		return true
	}

	return false
}

// SetEnvelopeUnitPrice gets a reference to the given string and assigns it to the EnvelopeUnitPrice field.
func (o *Accounts) SetEnvelopeUnitPrice(v string) {
	o.EnvelopeUnitPrice = &v
}

// GetExternalAccountId returns the ExternalAccountId field value if set, zero value otherwise.
func (o *Accounts) GetExternalAccountId() string {
	if o == nil || IsNil(o.ExternalAccountId) {
		var ret string
		return ret
	}
	return *o.ExternalAccountId
}

// GetExternalAccountIdOk returns a tuple with the ExternalAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetExternalAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalAccountId) {
		return nil, false
	}
	return o.ExternalAccountId, true
}

// HasExternalAccountId returns a boolean if a field has been set.
func (o *Accounts) HasExternalAccountId() bool {
	if o != nil && !IsNil(o.ExternalAccountId) {
		return true
	}

	return false
}

// SetExternalAccountId gets a reference to the given string and assigns it to the ExternalAccountId field.
func (o *Accounts) SetExternalAccountId(v string) {
	o.ExternalAccountId = &v
}

// GetForgottenPasswordQuestionsCount returns the ForgottenPasswordQuestionsCount field value if set, zero value otherwise.
func (o *Accounts) GetForgottenPasswordQuestionsCount() string {
	if o == nil || IsNil(o.ForgottenPasswordQuestionsCount) {
		var ret string
		return ret
	}
	return *o.ForgottenPasswordQuestionsCount
}

// GetForgottenPasswordQuestionsCountOk returns a tuple with the ForgottenPasswordQuestionsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetForgottenPasswordQuestionsCountOk() (*string, bool) {
	if o == nil || IsNil(o.ForgottenPasswordQuestionsCount) {
		return nil, false
	}
	return o.ForgottenPasswordQuestionsCount, true
}

// HasForgottenPasswordQuestionsCount returns a boolean if a field has been set.
func (o *Accounts) HasForgottenPasswordQuestionsCount() bool {
	if o != nil && !IsNil(o.ForgottenPasswordQuestionsCount) {
		return true
	}

	return false
}

// SetForgottenPasswordQuestionsCount gets a reference to the given string and assigns it to the ForgottenPasswordQuestionsCount field.
func (o *Accounts) SetForgottenPasswordQuestionsCount(v string) {
	o.ForgottenPasswordQuestionsCount = &v
}

// GetIsDowngrade returns the IsDowngrade field value if set, zero value otherwise.
func (o *Accounts) GetIsDowngrade() string {
	if o == nil || IsNil(o.IsDowngrade) {
		var ret string
		return ret
	}
	return *o.IsDowngrade
}

// GetIsDowngradeOk returns a tuple with the IsDowngrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetIsDowngradeOk() (*string, bool) {
	if o == nil || IsNil(o.IsDowngrade) {
		return nil, false
	}
	return o.IsDowngrade, true
}

// HasIsDowngrade returns a boolean if a field has been set.
func (o *Accounts) HasIsDowngrade() bool {
	if o != nil && !IsNil(o.IsDowngrade) {
		return true
	}

	return false
}

// SetIsDowngrade gets a reference to the given string and assigns it to the IsDowngrade field.
func (o *Accounts) SetIsDowngrade(v string) {
	o.IsDowngrade = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *Accounts) GetPaymentMethod() string {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *Accounts) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *Accounts) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetPlanClassification returns the PlanClassification field value if set, zero value otherwise.
func (o *Accounts) GetPlanClassification() string {
	if o == nil || IsNil(o.PlanClassification) {
		var ret string
		return ret
	}
	return *o.PlanClassification
}

// GetPlanClassificationOk returns a tuple with the PlanClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetPlanClassificationOk() (*string, bool) {
	if o == nil || IsNil(o.PlanClassification) {
		return nil, false
	}
	return o.PlanClassification, true
}

// HasPlanClassification returns a boolean if a field has been set.
func (o *Accounts) HasPlanClassification() bool {
	if o != nil && !IsNil(o.PlanClassification) {
		return true
	}

	return false
}

// SetPlanClassification gets a reference to the given string and assigns it to the PlanClassification field.
func (o *Accounts) SetPlanClassification(v string) {
	o.PlanClassification = &v
}

// GetPlanEndDate returns the PlanEndDate field value if set, zero value otherwise.
func (o *Accounts) GetPlanEndDate() string {
	if o == nil || IsNil(o.PlanEndDate) {
		var ret string
		return ret
	}
	return *o.PlanEndDate
}

// GetPlanEndDateOk returns a tuple with the PlanEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetPlanEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.PlanEndDate) {
		return nil, false
	}
	return o.PlanEndDate, true
}

// HasPlanEndDate returns a boolean if a field has been set.
func (o *Accounts) HasPlanEndDate() bool {
	if o != nil && !IsNil(o.PlanEndDate) {
		return true
	}

	return false
}

// SetPlanEndDate gets a reference to the given string and assigns it to the PlanEndDate field.
func (o *Accounts) SetPlanEndDate(v string) {
	o.PlanEndDate = &v
}

// GetPlanName returns the PlanName field value if set, zero value otherwise.
func (o *Accounts) GetPlanName() string {
	if o == nil || IsNil(o.PlanName) {
		var ret string
		return ret
	}
	return *o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.PlanName) {
		return nil, false
	}
	return o.PlanName, true
}

// HasPlanName returns a boolean if a field has been set.
func (o *Accounts) HasPlanName() bool {
	if o != nil && !IsNil(o.PlanName) {
		return true
	}

	return false
}

// SetPlanName gets a reference to the given string and assigns it to the PlanName field.
func (o *Accounts) SetPlanName(v string) {
	o.PlanName = &v
}

// GetPlanStartDate returns the PlanStartDate field value if set, zero value otherwise.
func (o *Accounts) GetPlanStartDate() string {
	if o == nil || IsNil(o.PlanStartDate) {
		var ret string
		return ret
	}
	return *o.PlanStartDate
}

// GetPlanStartDateOk returns a tuple with the PlanStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetPlanStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.PlanStartDate) {
		return nil, false
	}
	return o.PlanStartDate, true
}

// HasPlanStartDate returns a boolean if a field has been set.
func (o *Accounts) HasPlanStartDate() bool {
	if o != nil && !IsNil(o.PlanStartDate) {
		return true
	}

	return false
}

// SetPlanStartDate gets a reference to the given string and assigns it to the PlanStartDate field.
func (o *Accounts) SetPlanStartDate(v string) {
	o.PlanStartDate = &v
}

// GetRecipientDomains returns the RecipientDomains field value if set, zero value otherwise.
func (o *Accounts) GetRecipientDomains() []RecipientDomain {
	if o == nil || IsNil(o.RecipientDomains) {
		var ret []RecipientDomain
		return ret
	}
	return o.RecipientDomains
}

// GetRecipientDomainsOk returns a tuple with the RecipientDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetRecipientDomainsOk() ([]RecipientDomain, bool) {
	if o == nil || IsNil(o.RecipientDomains) {
		return nil, false
	}
	return o.RecipientDomains, true
}

// HasRecipientDomains returns a boolean if a field has been set.
func (o *Accounts) HasRecipientDomains() bool {
	if o != nil && !IsNil(o.RecipientDomains) {
		return true
	}

	return false
}

// SetRecipientDomains gets a reference to the given []RecipientDomain and assigns it to the RecipientDomains field.
func (o *Accounts) SetRecipientDomains(v []RecipientDomain) {
	o.RecipientDomains = v
}

// GetSeatsAllowed returns the SeatsAllowed field value if set, zero value otherwise.
func (o *Accounts) GetSeatsAllowed() string {
	if o == nil || IsNil(o.SeatsAllowed) {
		var ret string
		return ret
	}
	return *o.SeatsAllowed
}

// GetSeatsAllowedOk returns a tuple with the SeatsAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetSeatsAllowedOk() (*string, bool) {
	if o == nil || IsNil(o.SeatsAllowed) {
		return nil, false
	}
	return o.SeatsAllowed, true
}

// HasSeatsAllowed returns a boolean if a field has been set.
func (o *Accounts) HasSeatsAllowed() bool {
	if o != nil && !IsNil(o.SeatsAllowed) {
		return true
	}

	return false
}

// SetSeatsAllowed gets a reference to the given string and assigns it to the SeatsAllowed field.
func (o *Accounts) SetSeatsAllowed(v string) {
	o.SeatsAllowed = &v
}

// GetSeatsInUse returns the SeatsInUse field value if set, zero value otherwise.
func (o *Accounts) GetSeatsInUse() string {
	if o == nil || IsNil(o.SeatsInUse) {
		var ret string
		return ret
	}
	return *o.SeatsInUse
}

// GetSeatsInUseOk returns a tuple with the SeatsInUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetSeatsInUseOk() (*string, bool) {
	if o == nil || IsNil(o.SeatsInUse) {
		return nil, false
	}
	return o.SeatsInUse, true
}

// HasSeatsInUse returns a boolean if a field has been set.
func (o *Accounts) HasSeatsInUse() bool {
	if o != nil && !IsNil(o.SeatsInUse) {
		return true
	}

	return false
}

// SetSeatsInUse gets a reference to the given string and assigns it to the SeatsInUse field.
func (o *Accounts) SetSeatsInUse(v string) {
	o.SeatsInUse = &v
}

// GetStatus21CFRPart11 returns the Status21CFRPart11 field value if set, zero value otherwise.
func (o *Accounts) GetStatus21CFRPart11() string {
	if o == nil || IsNil(o.Status21CFRPart11) {
		var ret string
		return ret
	}
	return *o.Status21CFRPart11
}

// GetStatus21CFRPart11Ok returns a tuple with the Status21CFRPart11 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetStatus21CFRPart11Ok() (*string, bool) {
	if o == nil || IsNil(o.Status21CFRPart11) {
		return nil, false
	}
	return o.Status21CFRPart11, true
}

// HasStatus21CFRPart11 returns a boolean if a field has been set.
func (o *Accounts) HasStatus21CFRPart11() bool {
	if o != nil && !IsNil(o.Status21CFRPart11) {
		return true
	}

	return false
}

// SetStatus21CFRPart11 gets a reference to the given string and assigns it to the Status21CFRPart11 field.
func (o *Accounts) SetStatus21CFRPart11(v string) {
	o.Status21CFRPart11 = &v
}

// GetSuspensionDate returns the SuspensionDate field value if set, zero value otherwise.
func (o *Accounts) GetSuspensionDate() string {
	if o == nil || IsNil(o.SuspensionDate) {
		var ret string
		return ret
	}
	return *o.SuspensionDate
}

// GetSuspensionDateOk returns a tuple with the SuspensionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetSuspensionDateOk() (*string, bool) {
	if o == nil || IsNil(o.SuspensionDate) {
		return nil, false
	}
	return o.SuspensionDate, true
}

// HasSuspensionDate returns a boolean if a field has been set.
func (o *Accounts) HasSuspensionDate() bool {
	if o != nil && !IsNil(o.SuspensionDate) {
		return true
	}

	return false
}

// SetSuspensionDate gets a reference to the given string and assigns it to the SuspensionDate field.
func (o *Accounts) SetSuspensionDate(v string) {
	o.SuspensionDate = &v
}

// GetSuspensionStatus returns the SuspensionStatus field value if set, zero value otherwise.
func (o *Accounts) GetSuspensionStatus() string {
	if o == nil || IsNil(o.SuspensionStatus) {
		var ret string
		return ret
	}
	return *o.SuspensionStatus
}

// GetSuspensionStatusOk returns a tuple with the SuspensionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetSuspensionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SuspensionStatus) {
		return nil, false
	}
	return o.SuspensionStatus, true
}

// HasSuspensionStatus returns a boolean if a field has been set.
func (o *Accounts) HasSuspensionStatus() bool {
	if o != nil && !IsNil(o.SuspensionStatus) {
		return true
	}

	return false
}

// SetSuspensionStatus gets a reference to the given string and assigns it to the SuspensionStatus field.
func (o *Accounts) SetSuspensionStatus(v string) {
	o.SuspensionStatus = &v
}

// GetUseDisplayAppliance returns the UseDisplayAppliance field value if set, zero value otherwise.
func (o *Accounts) GetUseDisplayAppliance() bool {
	if o == nil || IsNil(o.UseDisplayAppliance) {
		var ret bool
		return ret
	}
	return *o.UseDisplayAppliance
}

// GetUseDisplayApplianceOk returns a tuple with the UseDisplayAppliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetUseDisplayApplianceOk() (*bool, bool) {
	if o == nil || IsNil(o.UseDisplayAppliance) {
		return nil, false
	}
	return o.UseDisplayAppliance, true
}

// HasUseDisplayAppliance returns a boolean if a field has been set.
func (o *Accounts) HasUseDisplayAppliance() bool {
	if o != nil && !IsNil(o.UseDisplayAppliance) {
		return true
	}

	return false
}

// SetUseDisplayAppliance gets a reference to the given bool and assigns it to the UseDisplayAppliance field.
func (o *Accounts) SetUseDisplayAppliance(v bool) {
	o.UseDisplayAppliance = &v
}

func (o Accounts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Accounts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountIdGuid) {
		toSerialize["accountIdGuid"] = o.AccountIdGuid
	}
	if !IsNil(o.AccountName) {
		toSerialize["accountName"] = o.AccountName
	}
	if !IsNil(o.AccountSettings) {
		toSerialize["accountSettings"] = o.AccountSettings
	}
	if !IsNil(o.AllowTransactionRooms) {
		toSerialize["allowTransactionRooms"] = o.AllowTransactionRooms
	}
	if !IsNil(o.BillingPeriodDaysRemaining) {
		toSerialize["billingPeriodDaysRemaining"] = o.BillingPeriodDaysRemaining
	}
	if !IsNil(o.BillingPeriodEndDate) {
		toSerialize["billingPeriodEndDate"] = o.BillingPeriodEndDate
	}
	if !IsNil(o.BillingPeriodEnvelopesAllowed) {
		toSerialize["billingPeriodEnvelopesAllowed"] = o.BillingPeriodEnvelopesAllowed
	}
	if !IsNil(o.BillingPeriodEnvelopesSent) {
		toSerialize["billingPeriodEnvelopesSent"] = o.BillingPeriodEnvelopesSent
	}
	if !IsNil(o.BillingPeriodStartDate) {
		toSerialize["billingPeriodStartDate"] = o.BillingPeriodStartDate
	}
	if !IsNil(o.BillingProfile) {
		toSerialize["billingProfile"] = o.BillingProfile
	}
	if !IsNil(o.Brands) {
		toSerialize["brands"] = o.Brands
	}
	if !IsNil(o.CanUpgrade) {
		toSerialize["canUpgrade"] = o.CanUpgrade
	}
	if !IsNil(o.ConnectPermission) {
		toSerialize["connectPermission"] = o.ConnectPermission
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.CurrentPlanId) {
		toSerialize["currentPlanId"] = o.CurrentPlanId
	}
	if !IsNil(o.DisplayApplianceStartUrl) {
		toSerialize["displayApplianceStartUrl"] = o.DisplayApplianceStartUrl
	}
	if !IsNil(o.DisplayApplianceUrl) {
		toSerialize["displayApplianceUrl"] = o.DisplayApplianceUrl
	}
	if !IsNil(o.DistributorCode) {
		toSerialize["distributorCode"] = o.DistributorCode
	}
	if !IsNil(o.DocuSignLandingUrl) {
		toSerialize["docuSignLandingUrl"] = o.DocuSignLandingUrl
	}
	if !IsNil(o.DssValues) {
		toSerialize["dssValues"] = o.DssValues
	}
	if !IsNil(o.EnvelopeSendingBlocked) {
		toSerialize["envelopeSendingBlocked"] = o.EnvelopeSendingBlocked
	}
	if !IsNil(o.EnvelopeUnitPrice) {
		toSerialize["envelopeUnitPrice"] = o.EnvelopeUnitPrice
	}
	if !IsNil(o.ExternalAccountId) {
		toSerialize["externalAccountId"] = o.ExternalAccountId
	}
	if !IsNil(o.ForgottenPasswordQuestionsCount) {
		toSerialize["forgottenPasswordQuestionsCount"] = o.ForgottenPasswordQuestionsCount
	}
	if !IsNil(o.IsDowngrade) {
		toSerialize["isDowngrade"] = o.IsDowngrade
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}
	if !IsNil(o.PlanClassification) {
		toSerialize["planClassification"] = o.PlanClassification
	}
	if !IsNil(o.PlanEndDate) {
		toSerialize["planEndDate"] = o.PlanEndDate
	}
	if !IsNil(o.PlanName) {
		toSerialize["planName"] = o.PlanName
	}
	if !IsNil(o.PlanStartDate) {
		toSerialize["planStartDate"] = o.PlanStartDate
	}
	if !IsNil(o.RecipientDomains) {
		toSerialize["recipientDomains"] = o.RecipientDomains
	}
	if !IsNil(o.SeatsAllowed) {
		toSerialize["seatsAllowed"] = o.SeatsAllowed
	}
	if !IsNil(o.SeatsInUse) {
		toSerialize["seatsInUse"] = o.SeatsInUse
	}
	if !IsNil(o.Status21CFRPart11) {
		toSerialize["status21CFRPart11"] = o.Status21CFRPart11
	}
	if !IsNil(o.SuspensionDate) {
		toSerialize["suspensionDate"] = o.SuspensionDate
	}
	if !IsNil(o.SuspensionStatus) {
		toSerialize["suspensionStatus"] = o.SuspensionStatus
	}
	if !IsNil(o.UseDisplayAppliance) {
		toSerialize["useDisplayAppliance"] = o.UseDisplayAppliance
	}
	return toSerialize, nil
}

type NullableAccounts struct {
	value *Accounts
	isSet bool
}

func (v NullableAccounts) Get() *Accounts {
	return v.value
}

func (v *NullableAccounts) Set(val *Accounts) {
	v.value = val
	v.isSet = true
}

func (v NullableAccounts) IsSet() bool {
	return v.isSet
}

func (v *NullableAccounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccounts(val *Accounts) *NullableAccounts {
	return &NullableAccounts{value: val, isSet: true}
}

func (v NullableAccounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


