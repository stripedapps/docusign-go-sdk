/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ReturnUrlRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReturnUrlRequest{}

// ReturnUrlRequest The request body for the [TemplateViews: createEdit](/docs/esign-rest-api/reference/templates/templateviews/createedit/) method.
type ReturnUrlRequest struct {
	// The URL to which the user should be redirected after the editing session is complete. It must be an absolute URL (e.g. `https://www.example.com` not `www.example.com`).  The maximum length is 470 characters. If the value exceeds this limit, the user is redirected to a truncated URL.  **Note:** If this property is not provided, the user will have full access to the sending account. 
	ReturnUrl *string `json:"returnUrl,omitempty"`
}

// NewReturnUrlRequest instantiates a new ReturnUrlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturnUrlRequest() *ReturnUrlRequest {
	this := ReturnUrlRequest{}
	return &this
}

// NewReturnUrlRequestWithDefaults instantiates a new ReturnUrlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnUrlRequestWithDefaults() *ReturnUrlRequest {
	this := ReturnUrlRequest{}
	return &this
}

// GetReturnUrl returns the ReturnUrl field value if set, zero value otherwise.
func (o *ReturnUrlRequest) GetReturnUrl() string {
	if o == nil || IsNil(o.ReturnUrl) {
		var ret string
		return ret
	}
	return *o.ReturnUrl
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnUrlRequest) GetReturnUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnUrl) {
		return nil, false
	}
	return o.ReturnUrl, true
}

// HasReturnUrl returns a boolean if a field has been set.
func (o *ReturnUrlRequest) HasReturnUrl() bool {
	if o != nil && !IsNil(o.ReturnUrl) {
		return true
	}

	return false
}

// SetReturnUrl gets a reference to the given string and assigns it to the ReturnUrl field.
func (o *ReturnUrlRequest) SetReturnUrl(v string) {
	o.ReturnUrl = &v
}

func (o ReturnUrlRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReturnUrlRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReturnUrl) {
		toSerialize["returnUrl"] = o.ReturnUrl
	}
	return toSerialize, nil
}

type NullableReturnUrlRequest struct {
	value *ReturnUrlRequest
	isSet bool
}

func (v NullableReturnUrlRequest) Get() *ReturnUrlRequest {
	return v.value
}

func (v *NullableReturnUrlRequest) Set(val *ReturnUrlRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnUrlRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnUrlRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnUrlRequest(val *ReturnUrlRequest) *NullableReturnUrlRequest {
	return &NullableReturnUrlRequest{value: val, isSet: true}
}

func (v NullableReturnUrlRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnUrlRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


