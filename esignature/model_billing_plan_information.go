/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BillingPlanInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingPlanInformation{}

// BillingPlanInformation This object contains details about a billing plan.
type BillingPlanInformation struct {
	AppStoreReceipt *AppStoreReceipt `json:"appStoreReceipt,omitempty"`
	BillingAddress *AccountAddress `json:"billingAddress,omitempty"`
	CreditCardInformation *CreditCardInformation `json:"creditCardInformation,omitempty"`
	DirectDebitProcessorInformation *DirectDebitProcessorInformation `json:"directDebitProcessorInformation,omitempty"`
	// (Optional) The user's reason for downgrading their billing plan.
	DowngradeReason *string `json:"downgradeReason,omitempty"`
	// 
	EnablePreAuth *string `json:"enablePreAuth,omitempty"`
	// When **true,** customer support is provided as part of the account plan.
	EnableSupport *string `json:"enableSupport,omitempty"`
	// The number of seats (users) included in the plan.
	IncludedSeats *string `json:"includedSeats,omitempty"`
	// Reserved for DocuSign.
	IncrementalSeats *string `json:"incrementalSeats,omitempty"`
	// The payment method used for the billing plan. Valid values are:  - `NotSupported` - `CreditCard` - `PurchaseOrder` - `Premium` - `Freemium` - `FreeTrial` - `AppStore` - `DigitalExternal` - `DirectDebit`
	PaymentMethod *string `json:"paymentMethod,omitempty"`
	// 
	PaymentProcessor *string `json:"paymentProcessor,omitempty"`
	PaymentProcessorInformation *PaymentProcessorInformation `json:"paymentProcessorInformation,omitempty"`
	PlanInformation *PlanInformation `json:"planInformation,omitempty"`
	// 
	ProcessPayment *string `json:"processPayment,omitempty"`
	ReferralInformation *ReferralInformation `json:"referralInformation,omitempty"`
	// The renewal status of the account. Possible values are:  - `auto`: The account automatically renews.  - `queued_for_close`: The account will be closed at the billingPeriodEndDate.  - queued_for_downgrade`: The account will be downgraded at the `billingPeriodEndDate`.
	RenewalStatus *string `json:"renewalStatus,omitempty"`
	// Reserved for DocuSign.
	SaleDiscountAmount *string `json:"saleDiscountAmount,omitempty"`
	// Reserved for DocuSign.
	SaleDiscountFixedAmount *string `json:"saleDiscountFixedAmount,omitempty"`
	// Reserved for DocuSign.
	SaleDiscountPercent *string `json:"saleDiscountPercent,omitempty"`
	// Reserved for DocuSign.
	SaleDiscountPeriods *string `json:"saleDiscountPeriods,omitempty"`
	// Reserved for DocuSign.
	SaleDiscountSeatPriceOverride *string `json:"saleDiscountSeatPriceOverride,omitempty"`
	// 
	TaxExemptId *string `json:"taxExemptId,omitempty"`
}

// NewBillingPlanInformation instantiates a new BillingPlanInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingPlanInformation() *BillingPlanInformation {
	this := BillingPlanInformation{}
	return &this
}

// NewBillingPlanInformationWithDefaults instantiates a new BillingPlanInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingPlanInformationWithDefaults() *BillingPlanInformation {
	this := BillingPlanInformation{}
	return &this
}

// GetAppStoreReceipt returns the AppStoreReceipt field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetAppStoreReceipt() AppStoreReceipt {
	if o == nil || IsNil(o.AppStoreReceipt) {
		var ret AppStoreReceipt
		return ret
	}
	return *o.AppStoreReceipt
}

// GetAppStoreReceiptOk returns a tuple with the AppStoreReceipt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetAppStoreReceiptOk() (*AppStoreReceipt, bool) {
	if o == nil || IsNil(o.AppStoreReceipt) {
		return nil, false
	}
	return o.AppStoreReceipt, true
}

// HasAppStoreReceipt returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasAppStoreReceipt() bool {
	if o != nil && !IsNil(o.AppStoreReceipt) {
		return true
	}

	return false
}

// SetAppStoreReceipt gets a reference to the given AppStoreReceipt and assigns it to the AppStoreReceipt field.
func (o *BillingPlanInformation) SetAppStoreReceipt(v AppStoreReceipt) {
	o.AppStoreReceipt = &v
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetBillingAddress() AccountAddress {
	if o == nil || IsNil(o.BillingAddress) {
		var ret AccountAddress
		return ret
	}
	return *o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetBillingAddressOk() (*AccountAddress, bool) {
	if o == nil || IsNil(o.BillingAddress) {
		return nil, false
	}
	return o.BillingAddress, true
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasBillingAddress() bool {
	if o != nil && !IsNil(o.BillingAddress) {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given AccountAddress and assigns it to the BillingAddress field.
func (o *BillingPlanInformation) SetBillingAddress(v AccountAddress) {
	o.BillingAddress = &v
}

// GetCreditCardInformation returns the CreditCardInformation field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetCreditCardInformation() CreditCardInformation {
	if o == nil || IsNil(o.CreditCardInformation) {
		var ret CreditCardInformation
		return ret
	}
	return *o.CreditCardInformation
}

// GetCreditCardInformationOk returns a tuple with the CreditCardInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetCreditCardInformationOk() (*CreditCardInformation, bool) {
	if o == nil || IsNil(o.CreditCardInformation) {
		return nil, false
	}
	return o.CreditCardInformation, true
}

// HasCreditCardInformation returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasCreditCardInformation() bool {
	if o != nil && !IsNil(o.CreditCardInformation) {
		return true
	}

	return false
}

// SetCreditCardInformation gets a reference to the given CreditCardInformation and assigns it to the CreditCardInformation field.
func (o *BillingPlanInformation) SetCreditCardInformation(v CreditCardInformation) {
	o.CreditCardInformation = &v
}

// GetDirectDebitProcessorInformation returns the DirectDebitProcessorInformation field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetDirectDebitProcessorInformation() DirectDebitProcessorInformation {
	if o == nil || IsNil(o.DirectDebitProcessorInformation) {
		var ret DirectDebitProcessorInformation
		return ret
	}
	return *o.DirectDebitProcessorInformation
}

// GetDirectDebitProcessorInformationOk returns a tuple with the DirectDebitProcessorInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetDirectDebitProcessorInformationOk() (*DirectDebitProcessorInformation, bool) {
	if o == nil || IsNil(o.DirectDebitProcessorInformation) {
		return nil, false
	}
	return o.DirectDebitProcessorInformation, true
}

// HasDirectDebitProcessorInformation returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasDirectDebitProcessorInformation() bool {
	if o != nil && !IsNil(o.DirectDebitProcessorInformation) {
		return true
	}

	return false
}

// SetDirectDebitProcessorInformation gets a reference to the given DirectDebitProcessorInformation and assigns it to the DirectDebitProcessorInformation field.
func (o *BillingPlanInformation) SetDirectDebitProcessorInformation(v DirectDebitProcessorInformation) {
	o.DirectDebitProcessorInformation = &v
}

// GetDowngradeReason returns the DowngradeReason field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetDowngradeReason() string {
	if o == nil || IsNil(o.DowngradeReason) {
		var ret string
		return ret
	}
	return *o.DowngradeReason
}

// GetDowngradeReasonOk returns a tuple with the DowngradeReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetDowngradeReasonOk() (*string, bool) {
	if o == nil || IsNil(o.DowngradeReason) {
		return nil, false
	}
	return o.DowngradeReason, true
}

// HasDowngradeReason returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasDowngradeReason() bool {
	if o != nil && !IsNil(o.DowngradeReason) {
		return true
	}

	return false
}

// SetDowngradeReason gets a reference to the given string and assigns it to the DowngradeReason field.
func (o *BillingPlanInformation) SetDowngradeReason(v string) {
	o.DowngradeReason = &v
}

// GetEnablePreAuth returns the EnablePreAuth field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetEnablePreAuth() string {
	if o == nil || IsNil(o.EnablePreAuth) {
		var ret string
		return ret
	}
	return *o.EnablePreAuth
}

// GetEnablePreAuthOk returns a tuple with the EnablePreAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetEnablePreAuthOk() (*string, bool) {
	if o == nil || IsNil(o.EnablePreAuth) {
		return nil, false
	}
	return o.EnablePreAuth, true
}

// HasEnablePreAuth returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasEnablePreAuth() bool {
	if o != nil && !IsNil(o.EnablePreAuth) {
		return true
	}

	return false
}

// SetEnablePreAuth gets a reference to the given string and assigns it to the EnablePreAuth field.
func (o *BillingPlanInformation) SetEnablePreAuth(v string) {
	o.EnablePreAuth = &v
}

// GetEnableSupport returns the EnableSupport field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetEnableSupport() string {
	if o == nil || IsNil(o.EnableSupport) {
		var ret string
		return ret
	}
	return *o.EnableSupport
}

// GetEnableSupportOk returns a tuple with the EnableSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetEnableSupportOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSupport) {
		return nil, false
	}
	return o.EnableSupport, true
}

// HasEnableSupport returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasEnableSupport() bool {
	if o != nil && !IsNil(o.EnableSupport) {
		return true
	}

	return false
}

// SetEnableSupport gets a reference to the given string and assigns it to the EnableSupport field.
func (o *BillingPlanInformation) SetEnableSupport(v string) {
	o.EnableSupport = &v
}

// GetIncludedSeats returns the IncludedSeats field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetIncludedSeats() string {
	if o == nil || IsNil(o.IncludedSeats) {
		var ret string
		return ret
	}
	return *o.IncludedSeats
}

// GetIncludedSeatsOk returns a tuple with the IncludedSeats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetIncludedSeatsOk() (*string, bool) {
	if o == nil || IsNil(o.IncludedSeats) {
		return nil, false
	}
	return o.IncludedSeats, true
}

// HasIncludedSeats returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasIncludedSeats() bool {
	if o != nil && !IsNil(o.IncludedSeats) {
		return true
	}

	return false
}

// SetIncludedSeats gets a reference to the given string and assigns it to the IncludedSeats field.
func (o *BillingPlanInformation) SetIncludedSeats(v string) {
	o.IncludedSeats = &v
}

// GetIncrementalSeats returns the IncrementalSeats field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetIncrementalSeats() string {
	if o == nil || IsNil(o.IncrementalSeats) {
		var ret string
		return ret
	}
	return *o.IncrementalSeats
}

// GetIncrementalSeatsOk returns a tuple with the IncrementalSeats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetIncrementalSeatsOk() (*string, bool) {
	if o == nil || IsNil(o.IncrementalSeats) {
		return nil, false
	}
	return o.IncrementalSeats, true
}

// HasIncrementalSeats returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasIncrementalSeats() bool {
	if o != nil && !IsNil(o.IncrementalSeats) {
		return true
	}

	return false
}

// SetIncrementalSeats gets a reference to the given string and assigns it to the IncrementalSeats field.
func (o *BillingPlanInformation) SetIncrementalSeats(v string) {
	o.IncrementalSeats = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetPaymentMethod() string {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *BillingPlanInformation) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetPaymentProcessor returns the PaymentProcessor field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetPaymentProcessor() string {
	if o == nil || IsNil(o.PaymentProcessor) {
		var ret string
		return ret
	}
	return *o.PaymentProcessor
}

// GetPaymentProcessorOk returns a tuple with the PaymentProcessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetPaymentProcessorOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentProcessor) {
		return nil, false
	}
	return o.PaymentProcessor, true
}

// HasPaymentProcessor returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasPaymentProcessor() bool {
	if o != nil && !IsNil(o.PaymentProcessor) {
		return true
	}

	return false
}

// SetPaymentProcessor gets a reference to the given string and assigns it to the PaymentProcessor field.
func (o *BillingPlanInformation) SetPaymentProcessor(v string) {
	o.PaymentProcessor = &v
}

// GetPaymentProcessorInformation returns the PaymentProcessorInformation field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetPaymentProcessorInformation() PaymentProcessorInformation {
	if o == nil || IsNil(o.PaymentProcessorInformation) {
		var ret PaymentProcessorInformation
		return ret
	}
	return *o.PaymentProcessorInformation
}

// GetPaymentProcessorInformationOk returns a tuple with the PaymentProcessorInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetPaymentProcessorInformationOk() (*PaymentProcessorInformation, bool) {
	if o == nil || IsNil(o.PaymentProcessorInformation) {
		return nil, false
	}
	return o.PaymentProcessorInformation, true
}

// HasPaymentProcessorInformation returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasPaymentProcessorInformation() bool {
	if o != nil && !IsNil(o.PaymentProcessorInformation) {
		return true
	}

	return false
}

// SetPaymentProcessorInformation gets a reference to the given PaymentProcessorInformation and assigns it to the PaymentProcessorInformation field.
func (o *BillingPlanInformation) SetPaymentProcessorInformation(v PaymentProcessorInformation) {
	o.PaymentProcessorInformation = &v
}

// GetPlanInformation returns the PlanInformation field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetPlanInformation() PlanInformation {
	if o == nil || IsNil(o.PlanInformation) {
		var ret PlanInformation
		return ret
	}
	return *o.PlanInformation
}

// GetPlanInformationOk returns a tuple with the PlanInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetPlanInformationOk() (*PlanInformation, bool) {
	if o == nil || IsNil(o.PlanInformation) {
		return nil, false
	}
	return o.PlanInformation, true
}

// HasPlanInformation returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasPlanInformation() bool {
	if o != nil && !IsNil(o.PlanInformation) {
		return true
	}

	return false
}

// SetPlanInformation gets a reference to the given PlanInformation and assigns it to the PlanInformation field.
func (o *BillingPlanInformation) SetPlanInformation(v PlanInformation) {
	o.PlanInformation = &v
}

// GetProcessPayment returns the ProcessPayment field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetProcessPayment() string {
	if o == nil || IsNil(o.ProcessPayment) {
		var ret string
		return ret
	}
	return *o.ProcessPayment
}

// GetProcessPaymentOk returns a tuple with the ProcessPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetProcessPaymentOk() (*string, bool) {
	if o == nil || IsNil(o.ProcessPayment) {
		return nil, false
	}
	return o.ProcessPayment, true
}

// HasProcessPayment returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasProcessPayment() bool {
	if o != nil && !IsNil(o.ProcessPayment) {
		return true
	}

	return false
}

// SetProcessPayment gets a reference to the given string and assigns it to the ProcessPayment field.
func (o *BillingPlanInformation) SetProcessPayment(v string) {
	o.ProcessPayment = &v
}

// GetReferralInformation returns the ReferralInformation field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetReferralInformation() ReferralInformation {
	if o == nil || IsNil(o.ReferralInformation) {
		var ret ReferralInformation
		return ret
	}
	return *o.ReferralInformation
}

// GetReferralInformationOk returns a tuple with the ReferralInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetReferralInformationOk() (*ReferralInformation, bool) {
	if o == nil || IsNil(o.ReferralInformation) {
		return nil, false
	}
	return o.ReferralInformation, true
}

// HasReferralInformation returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasReferralInformation() bool {
	if o != nil && !IsNil(o.ReferralInformation) {
		return true
	}

	return false
}

// SetReferralInformation gets a reference to the given ReferralInformation and assigns it to the ReferralInformation field.
func (o *BillingPlanInformation) SetReferralInformation(v ReferralInformation) {
	o.ReferralInformation = &v
}

// GetRenewalStatus returns the RenewalStatus field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetRenewalStatus() string {
	if o == nil || IsNil(o.RenewalStatus) {
		var ret string
		return ret
	}
	return *o.RenewalStatus
}

// GetRenewalStatusOk returns a tuple with the RenewalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetRenewalStatusOk() (*string, bool) {
	if o == nil || IsNil(o.RenewalStatus) {
		return nil, false
	}
	return o.RenewalStatus, true
}

// HasRenewalStatus returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasRenewalStatus() bool {
	if o != nil && !IsNil(o.RenewalStatus) {
		return true
	}

	return false
}

// SetRenewalStatus gets a reference to the given string and assigns it to the RenewalStatus field.
func (o *BillingPlanInformation) SetRenewalStatus(v string) {
	o.RenewalStatus = &v
}

// GetSaleDiscountAmount returns the SaleDiscountAmount field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetSaleDiscountAmount() string {
	if o == nil || IsNil(o.SaleDiscountAmount) {
		var ret string
		return ret
	}
	return *o.SaleDiscountAmount
}

// GetSaleDiscountAmountOk returns a tuple with the SaleDiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetSaleDiscountAmountOk() (*string, bool) {
	if o == nil || IsNil(o.SaleDiscountAmount) {
		return nil, false
	}
	return o.SaleDiscountAmount, true
}

// HasSaleDiscountAmount returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasSaleDiscountAmount() bool {
	if o != nil && !IsNil(o.SaleDiscountAmount) {
		return true
	}

	return false
}

// SetSaleDiscountAmount gets a reference to the given string and assigns it to the SaleDiscountAmount field.
func (o *BillingPlanInformation) SetSaleDiscountAmount(v string) {
	o.SaleDiscountAmount = &v
}

// GetSaleDiscountFixedAmount returns the SaleDiscountFixedAmount field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetSaleDiscountFixedAmount() string {
	if o == nil || IsNil(o.SaleDiscountFixedAmount) {
		var ret string
		return ret
	}
	return *o.SaleDiscountFixedAmount
}

// GetSaleDiscountFixedAmountOk returns a tuple with the SaleDiscountFixedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetSaleDiscountFixedAmountOk() (*string, bool) {
	if o == nil || IsNil(o.SaleDiscountFixedAmount) {
		return nil, false
	}
	return o.SaleDiscountFixedAmount, true
}

// HasSaleDiscountFixedAmount returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasSaleDiscountFixedAmount() bool {
	if o != nil && !IsNil(o.SaleDiscountFixedAmount) {
		return true
	}

	return false
}

// SetSaleDiscountFixedAmount gets a reference to the given string and assigns it to the SaleDiscountFixedAmount field.
func (o *BillingPlanInformation) SetSaleDiscountFixedAmount(v string) {
	o.SaleDiscountFixedAmount = &v
}

// GetSaleDiscountPercent returns the SaleDiscountPercent field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetSaleDiscountPercent() string {
	if o == nil || IsNil(o.SaleDiscountPercent) {
		var ret string
		return ret
	}
	return *o.SaleDiscountPercent
}

// GetSaleDiscountPercentOk returns a tuple with the SaleDiscountPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetSaleDiscountPercentOk() (*string, bool) {
	if o == nil || IsNil(o.SaleDiscountPercent) {
		return nil, false
	}
	return o.SaleDiscountPercent, true
}

// HasSaleDiscountPercent returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasSaleDiscountPercent() bool {
	if o != nil && !IsNil(o.SaleDiscountPercent) {
		return true
	}

	return false
}

// SetSaleDiscountPercent gets a reference to the given string and assigns it to the SaleDiscountPercent field.
func (o *BillingPlanInformation) SetSaleDiscountPercent(v string) {
	o.SaleDiscountPercent = &v
}

// GetSaleDiscountPeriods returns the SaleDiscountPeriods field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetSaleDiscountPeriods() string {
	if o == nil || IsNil(o.SaleDiscountPeriods) {
		var ret string
		return ret
	}
	return *o.SaleDiscountPeriods
}

// GetSaleDiscountPeriodsOk returns a tuple with the SaleDiscountPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetSaleDiscountPeriodsOk() (*string, bool) {
	if o == nil || IsNil(o.SaleDiscountPeriods) {
		return nil, false
	}
	return o.SaleDiscountPeriods, true
}

// HasSaleDiscountPeriods returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasSaleDiscountPeriods() bool {
	if o != nil && !IsNil(o.SaleDiscountPeriods) {
		return true
	}

	return false
}

// SetSaleDiscountPeriods gets a reference to the given string and assigns it to the SaleDiscountPeriods field.
func (o *BillingPlanInformation) SetSaleDiscountPeriods(v string) {
	o.SaleDiscountPeriods = &v
}

// GetSaleDiscountSeatPriceOverride returns the SaleDiscountSeatPriceOverride field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetSaleDiscountSeatPriceOverride() string {
	if o == nil || IsNil(o.SaleDiscountSeatPriceOverride) {
		var ret string
		return ret
	}
	return *o.SaleDiscountSeatPriceOverride
}

// GetSaleDiscountSeatPriceOverrideOk returns a tuple with the SaleDiscountSeatPriceOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetSaleDiscountSeatPriceOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.SaleDiscountSeatPriceOverride) {
		return nil, false
	}
	return o.SaleDiscountSeatPriceOverride, true
}

// HasSaleDiscountSeatPriceOverride returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasSaleDiscountSeatPriceOverride() bool {
	if o != nil && !IsNil(o.SaleDiscountSeatPriceOverride) {
		return true
	}

	return false
}

// SetSaleDiscountSeatPriceOverride gets a reference to the given string and assigns it to the SaleDiscountSeatPriceOverride field.
func (o *BillingPlanInformation) SetSaleDiscountSeatPriceOverride(v string) {
	o.SaleDiscountSeatPriceOverride = &v
}

// GetTaxExemptId returns the TaxExemptId field value if set, zero value otherwise.
func (o *BillingPlanInformation) GetTaxExemptId() string {
	if o == nil || IsNil(o.TaxExemptId) {
		var ret string
		return ret
	}
	return *o.TaxExemptId
}

// GetTaxExemptIdOk returns a tuple with the TaxExemptId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanInformation) GetTaxExemptIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaxExemptId) {
		return nil, false
	}
	return o.TaxExemptId, true
}

// HasTaxExemptId returns a boolean if a field has been set.
func (o *BillingPlanInformation) HasTaxExemptId() bool {
	if o != nil && !IsNil(o.TaxExemptId) {
		return true
	}

	return false
}

// SetTaxExemptId gets a reference to the given string and assigns it to the TaxExemptId field.
func (o *BillingPlanInformation) SetTaxExemptId(v string) {
	o.TaxExemptId = &v
}

func (o BillingPlanInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingPlanInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppStoreReceipt) {
		toSerialize["appStoreReceipt"] = o.AppStoreReceipt
	}
	if !IsNil(o.BillingAddress) {
		toSerialize["billingAddress"] = o.BillingAddress
	}
	if !IsNil(o.CreditCardInformation) {
		toSerialize["creditCardInformation"] = o.CreditCardInformation
	}
	if !IsNil(o.DirectDebitProcessorInformation) {
		toSerialize["directDebitProcessorInformation"] = o.DirectDebitProcessorInformation
	}
	if !IsNil(o.DowngradeReason) {
		toSerialize["downgradeReason"] = o.DowngradeReason
	}
	if !IsNil(o.EnablePreAuth) {
		toSerialize["enablePreAuth"] = o.EnablePreAuth
	}
	if !IsNil(o.EnableSupport) {
		toSerialize["enableSupport"] = o.EnableSupport
	}
	if !IsNil(o.IncludedSeats) {
		toSerialize["includedSeats"] = o.IncludedSeats
	}
	if !IsNil(o.IncrementalSeats) {
		toSerialize["incrementalSeats"] = o.IncrementalSeats
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}
	if !IsNil(o.PaymentProcessor) {
		toSerialize["paymentProcessor"] = o.PaymentProcessor
	}
	if !IsNil(o.PaymentProcessorInformation) {
		toSerialize["paymentProcessorInformation"] = o.PaymentProcessorInformation
	}
	if !IsNil(o.PlanInformation) {
		toSerialize["planInformation"] = o.PlanInformation
	}
	if !IsNil(o.ProcessPayment) {
		toSerialize["processPayment"] = o.ProcessPayment
	}
	if !IsNil(o.ReferralInformation) {
		toSerialize["referralInformation"] = o.ReferralInformation
	}
	if !IsNil(o.RenewalStatus) {
		toSerialize["renewalStatus"] = o.RenewalStatus
	}
	if !IsNil(o.SaleDiscountAmount) {
		toSerialize["saleDiscountAmount"] = o.SaleDiscountAmount
	}
	if !IsNil(o.SaleDiscountFixedAmount) {
		toSerialize["saleDiscountFixedAmount"] = o.SaleDiscountFixedAmount
	}
	if !IsNil(o.SaleDiscountPercent) {
		toSerialize["saleDiscountPercent"] = o.SaleDiscountPercent
	}
	if !IsNil(o.SaleDiscountPeriods) {
		toSerialize["saleDiscountPeriods"] = o.SaleDiscountPeriods
	}
	if !IsNil(o.SaleDiscountSeatPriceOverride) {
		toSerialize["saleDiscountSeatPriceOverride"] = o.SaleDiscountSeatPriceOverride
	}
	if !IsNil(o.TaxExemptId) {
		toSerialize["taxExemptId"] = o.TaxExemptId
	}
	return toSerialize, nil
}

type NullableBillingPlanInformation struct {
	value *BillingPlanInformation
	isSet bool
}

func (v NullableBillingPlanInformation) Get() *BillingPlanInformation {
	return v.value
}

func (v *NullableBillingPlanInformation) Set(val *BillingPlanInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingPlanInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingPlanInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingPlanInformation(val *BillingPlanInformation) *NullableBillingPlanInformation {
	return &NullableBillingPlanInformation{value: val, isSet: true}
}

func (v NullableBillingPlanInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingPlanInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


