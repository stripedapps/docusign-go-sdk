/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RecipientFormData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecipientFormData{}

// RecipientFormData 
type RecipientFormData struct {
	// The date and time the recipient declined the envelope.
	DeclinedTime *string `json:"DeclinedTime,omitempty"`
	// The date and time the recipient viewed the documents in the envelope in the DocuSign signing UI.
	DeliveredTime *string `json:"DeliveredTime,omitempty"`
	// The recipient's email address.
	Email *string `json:"email,omitempty"`
	// An array of form data objects.
	FormData []FormDataItem `json:"formData,omitempty"`
	// The name of the recipient.
	Name *string `json:"name,omitempty"`
	// A local reference used to map recipients to other objects, such as specific document tabs.  A `recipientId` must be either an integer or a GUID, and the `recipientId` must be unique within an envelope.  For example, many envelopes assign the first recipient a `recipientId` of `1`. 
	RecipientId *string `json:"recipientId,omitempty"`
	// The date and time the envelope was sent to the recipient.
	SentTime *string `json:"SentTime,omitempty"`
	// The date and time the recipient signed the documents.
	SignedTime *string `json:"SignedTime,omitempty"`
}

// NewRecipientFormData instantiates a new RecipientFormData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecipientFormData() *RecipientFormData {
	this := RecipientFormData{}
	return &this
}

// NewRecipientFormDataWithDefaults instantiates a new RecipientFormData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecipientFormDataWithDefaults() *RecipientFormData {
	this := RecipientFormData{}
	return &this
}

// GetDeclinedTime returns the DeclinedTime field value if set, zero value otherwise.
func (o *RecipientFormData) GetDeclinedTime() string {
	if o == nil || IsNil(o.DeclinedTime) {
		var ret string
		return ret
	}
	return *o.DeclinedTime
}

// GetDeclinedTimeOk returns a tuple with the DeclinedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientFormData) GetDeclinedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.DeclinedTime) {
		return nil, false
	}
	return o.DeclinedTime, true
}

// HasDeclinedTime returns a boolean if a field has been set.
func (o *RecipientFormData) HasDeclinedTime() bool {
	if o != nil && !IsNil(o.DeclinedTime) {
		return true
	}

	return false
}

// SetDeclinedTime gets a reference to the given string and assigns it to the DeclinedTime field.
func (o *RecipientFormData) SetDeclinedTime(v string) {
	o.DeclinedTime = &v
}

// GetDeliveredTime returns the DeliveredTime field value if set, zero value otherwise.
func (o *RecipientFormData) GetDeliveredTime() string {
	if o == nil || IsNil(o.DeliveredTime) {
		var ret string
		return ret
	}
	return *o.DeliveredTime
}

// GetDeliveredTimeOk returns a tuple with the DeliveredTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientFormData) GetDeliveredTimeOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveredTime) {
		return nil, false
	}
	return o.DeliveredTime, true
}

// HasDeliveredTime returns a boolean if a field has been set.
func (o *RecipientFormData) HasDeliveredTime() bool {
	if o != nil && !IsNil(o.DeliveredTime) {
		return true
	}

	return false
}

// SetDeliveredTime gets a reference to the given string and assigns it to the DeliveredTime field.
func (o *RecipientFormData) SetDeliveredTime(v string) {
	o.DeliveredTime = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *RecipientFormData) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientFormData) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *RecipientFormData) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *RecipientFormData) SetEmail(v string) {
	o.Email = &v
}

// GetFormData returns the FormData field value if set, zero value otherwise.
func (o *RecipientFormData) GetFormData() []FormDataItem {
	if o == nil || IsNil(o.FormData) {
		var ret []FormDataItem
		return ret
	}
	return o.FormData
}

// GetFormDataOk returns a tuple with the FormData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientFormData) GetFormDataOk() ([]FormDataItem, bool) {
	if o == nil || IsNil(o.FormData) {
		return nil, false
	}
	return o.FormData, true
}

// HasFormData returns a boolean if a field has been set.
func (o *RecipientFormData) HasFormData() bool {
	if o != nil && !IsNil(o.FormData) {
		return true
	}

	return false
}

// SetFormData gets a reference to the given []FormDataItem and assigns it to the FormData field.
func (o *RecipientFormData) SetFormData(v []FormDataItem) {
	o.FormData = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RecipientFormData) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientFormData) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RecipientFormData) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RecipientFormData) SetName(v string) {
	o.Name = &v
}

// GetRecipientId returns the RecipientId field value if set, zero value otherwise.
func (o *RecipientFormData) GetRecipientId() string {
	if o == nil || IsNil(o.RecipientId) {
		var ret string
		return ret
	}
	return *o.RecipientId
}

// GetRecipientIdOk returns a tuple with the RecipientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientFormData) GetRecipientIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientId) {
		return nil, false
	}
	return o.RecipientId, true
}

// HasRecipientId returns a boolean if a field has been set.
func (o *RecipientFormData) HasRecipientId() bool {
	if o != nil && !IsNil(o.RecipientId) {
		return true
	}

	return false
}

// SetRecipientId gets a reference to the given string and assigns it to the RecipientId field.
func (o *RecipientFormData) SetRecipientId(v string) {
	o.RecipientId = &v
}

// GetSentTime returns the SentTime field value if set, zero value otherwise.
func (o *RecipientFormData) GetSentTime() string {
	if o == nil || IsNil(o.SentTime) {
		var ret string
		return ret
	}
	return *o.SentTime
}

// GetSentTimeOk returns a tuple with the SentTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientFormData) GetSentTimeOk() (*string, bool) {
	if o == nil || IsNil(o.SentTime) {
		return nil, false
	}
	return o.SentTime, true
}

// HasSentTime returns a boolean if a field has been set.
func (o *RecipientFormData) HasSentTime() bool {
	if o != nil && !IsNil(o.SentTime) {
		return true
	}

	return false
}

// SetSentTime gets a reference to the given string and assigns it to the SentTime field.
func (o *RecipientFormData) SetSentTime(v string) {
	o.SentTime = &v
}

// GetSignedTime returns the SignedTime field value if set, zero value otherwise.
func (o *RecipientFormData) GetSignedTime() string {
	if o == nil || IsNil(o.SignedTime) {
		var ret string
		return ret
	}
	return *o.SignedTime
}

// GetSignedTimeOk returns a tuple with the SignedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientFormData) GetSignedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.SignedTime) {
		return nil, false
	}
	return o.SignedTime, true
}

// HasSignedTime returns a boolean if a field has been set.
func (o *RecipientFormData) HasSignedTime() bool {
	if o != nil && !IsNil(o.SignedTime) {
		return true
	}

	return false
}

// SetSignedTime gets a reference to the given string and assigns it to the SignedTime field.
func (o *RecipientFormData) SetSignedTime(v string) {
	o.SignedTime = &v
}

func (o RecipientFormData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecipientFormData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeclinedTime) {
		toSerialize["DeclinedTime"] = o.DeclinedTime
	}
	if !IsNil(o.DeliveredTime) {
		toSerialize["DeliveredTime"] = o.DeliveredTime
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.FormData) {
		toSerialize["formData"] = o.FormData
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RecipientId) {
		toSerialize["recipientId"] = o.RecipientId
	}
	if !IsNil(o.SentTime) {
		toSerialize["SentTime"] = o.SentTime
	}
	if !IsNil(o.SignedTime) {
		toSerialize["SignedTime"] = o.SignedTime
	}
	return toSerialize, nil
}

type NullableRecipientFormData struct {
	value *RecipientFormData
	isSet bool
}

func (v NullableRecipientFormData) Get() *RecipientFormData {
	return v.value
}

func (v *NullableRecipientFormData) Set(val *RecipientFormData) {
	v.value = val
	v.isSet = true
}

func (v NullableRecipientFormData) IsSet() bool {
	return v.isSet
}

func (v *NullableRecipientFormData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecipientFormData(val *RecipientFormData) *NullableRecipientFormData {
	return &NullableRecipientFormData{value: val, isSet: true}
}

func (v NullableRecipientFormData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecipientFormData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


