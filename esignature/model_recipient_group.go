/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RecipientGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecipientGroup{}

// RecipientGroup Describes a group of recipients.
type RecipientGroup struct {
	// The group message, typically a description of the group.
	GroupMessage *string `json:"groupMessage,omitempty"`
	// The name of the group.
	GroupName *string `json:"groupName,omitempty"`
	// An array of recipient objects that provides details about the recipients of the envelope.
	Recipients []RecipientOption `json:"recipients,omitempty"`
}

// NewRecipientGroup instantiates a new RecipientGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecipientGroup() *RecipientGroup {
	this := RecipientGroup{}
	return &this
}

// NewRecipientGroupWithDefaults instantiates a new RecipientGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecipientGroupWithDefaults() *RecipientGroup {
	this := RecipientGroup{}
	return &this
}

// GetGroupMessage returns the GroupMessage field value if set, zero value otherwise.
func (o *RecipientGroup) GetGroupMessage() string {
	if o == nil || IsNil(o.GroupMessage) {
		var ret string
		return ret
	}
	return *o.GroupMessage
}

// GetGroupMessageOk returns a tuple with the GroupMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientGroup) GetGroupMessageOk() (*string, bool) {
	if o == nil || IsNil(o.GroupMessage) {
		return nil, false
	}
	return o.GroupMessage, true
}

// HasGroupMessage returns a boolean if a field has been set.
func (o *RecipientGroup) HasGroupMessage() bool {
	if o != nil && !IsNil(o.GroupMessage) {
		return true
	}

	return false
}

// SetGroupMessage gets a reference to the given string and assigns it to the GroupMessage field.
func (o *RecipientGroup) SetGroupMessage(v string) {
	o.GroupMessage = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *RecipientGroup) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientGroup) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *RecipientGroup) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *RecipientGroup) SetGroupName(v string) {
	o.GroupName = &v
}

// GetRecipients returns the Recipients field value if set, zero value otherwise.
func (o *RecipientGroup) GetRecipients() []RecipientOption {
	if o == nil || IsNil(o.Recipients) {
		var ret []RecipientOption
		return ret
	}
	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientGroup) GetRecipientsOk() ([]RecipientOption, bool) {
	if o == nil || IsNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *RecipientGroup) HasRecipients() bool {
	if o != nil && !IsNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given []RecipientOption and assigns it to the Recipients field.
func (o *RecipientGroup) SetRecipients(v []RecipientOption) {
	o.Recipients = v
}

func (o RecipientGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecipientGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupMessage) {
		toSerialize["groupMessage"] = o.GroupMessage
	}
	if !IsNil(o.GroupName) {
		toSerialize["groupName"] = o.GroupName
	}
	if !IsNil(o.Recipients) {
		toSerialize["recipients"] = o.Recipients
	}
	return toSerialize, nil
}

type NullableRecipientGroup struct {
	value *RecipientGroup
	isSet bool
}

func (v NullableRecipientGroup) Get() *RecipientGroup {
	return v.value
}

func (v *NullableRecipientGroup) Set(val *RecipientGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableRecipientGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableRecipientGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecipientGroup(val *RecipientGroup) *NullableRecipientGroup {
	return &NullableRecipientGroup{value: val, isSet: true}
}

func (v NullableRecipientGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecipientGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


