/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExternalDocumentSources type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalDocumentSources{}

// ExternalDocumentSources A complex object specifying the external document sources.
type ExternalDocumentSources struct {
	// The account is enabled to allow external documents to be attached from BoxNet.
	BoxnetEnabled *string `json:"boxnetEnabled,omitempty"`
	BoxnetMetadata *SettingsMetadata `json:"boxnetMetadata,omitempty"`
	// The account is enabled to allow external documents to be attached from DropBox.
	DropboxEnabled *string `json:"dropboxEnabled,omitempty"`
	DropboxMetadata *SettingsMetadata `json:"dropboxMetadata,omitempty"`
	// The account is enabled to allow external documents to be attached from Google Drive.
	GoogleDriveEnabled *string `json:"googleDriveEnabled,omitempty"`
	GoogleDriveMetadata *SettingsMetadata `json:"googleDriveMetadata,omitempty"`
	// The account is enabled to allow external documents to be attached from OneDrive.
	OneDriveEnabled *string `json:"oneDriveEnabled,omitempty"`
	OneDriveMetadata *SettingsMetadata `json:"oneDriveMetadata,omitempty"`
	// The account is enabled to allow external documents to be attached from Salesforce.
	SalesforceEnabled *string `json:"salesforceEnabled,omitempty"`
	SalesforceMetadata *SettingsMetadata `json:"salesforceMetadata,omitempty"`
}

// NewExternalDocumentSources instantiates a new ExternalDocumentSources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalDocumentSources() *ExternalDocumentSources {
	this := ExternalDocumentSources{}
	return &this
}

// NewExternalDocumentSourcesWithDefaults instantiates a new ExternalDocumentSources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalDocumentSourcesWithDefaults() *ExternalDocumentSources {
	this := ExternalDocumentSources{}
	return &this
}

// GetBoxnetEnabled returns the BoxnetEnabled field value if set, zero value otherwise.
func (o *ExternalDocumentSources) GetBoxnetEnabled() string {
	if o == nil || IsNil(o.BoxnetEnabled) {
		var ret string
		return ret
	}
	return *o.BoxnetEnabled
}

// GetBoxnetEnabledOk returns a tuple with the BoxnetEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDocumentSources) GetBoxnetEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.BoxnetEnabled) {
		return nil, false
	}
	return o.BoxnetEnabled, true
}

// HasBoxnetEnabled returns a boolean if a field has been set.
func (o *ExternalDocumentSources) HasBoxnetEnabled() bool {
	if o != nil && !IsNil(o.BoxnetEnabled) {
		return true
	}

	return false
}

// SetBoxnetEnabled gets a reference to the given string and assigns it to the BoxnetEnabled field.
func (o *ExternalDocumentSources) SetBoxnetEnabled(v string) {
	o.BoxnetEnabled = &v
}

// GetBoxnetMetadata returns the BoxnetMetadata field value if set, zero value otherwise.
func (o *ExternalDocumentSources) GetBoxnetMetadata() SettingsMetadata {
	if o == nil || IsNil(o.BoxnetMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.BoxnetMetadata
}

// GetBoxnetMetadataOk returns a tuple with the BoxnetMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDocumentSources) GetBoxnetMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.BoxnetMetadata) {
		return nil, false
	}
	return o.BoxnetMetadata, true
}

// HasBoxnetMetadata returns a boolean if a field has been set.
func (o *ExternalDocumentSources) HasBoxnetMetadata() bool {
	if o != nil && !IsNil(o.BoxnetMetadata) {
		return true
	}

	return false
}

// SetBoxnetMetadata gets a reference to the given SettingsMetadata and assigns it to the BoxnetMetadata field.
func (o *ExternalDocumentSources) SetBoxnetMetadata(v SettingsMetadata) {
	o.BoxnetMetadata = &v
}

// GetDropboxEnabled returns the DropboxEnabled field value if set, zero value otherwise.
func (o *ExternalDocumentSources) GetDropboxEnabled() string {
	if o == nil || IsNil(o.DropboxEnabled) {
		var ret string
		return ret
	}
	return *o.DropboxEnabled
}

// GetDropboxEnabledOk returns a tuple with the DropboxEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDocumentSources) GetDropboxEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.DropboxEnabled) {
		return nil, false
	}
	return o.DropboxEnabled, true
}

// HasDropboxEnabled returns a boolean if a field has been set.
func (o *ExternalDocumentSources) HasDropboxEnabled() bool {
	if o != nil && !IsNil(o.DropboxEnabled) {
		return true
	}

	return false
}

// SetDropboxEnabled gets a reference to the given string and assigns it to the DropboxEnabled field.
func (o *ExternalDocumentSources) SetDropboxEnabled(v string) {
	o.DropboxEnabled = &v
}

// GetDropboxMetadata returns the DropboxMetadata field value if set, zero value otherwise.
func (o *ExternalDocumentSources) GetDropboxMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DropboxMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DropboxMetadata
}

// GetDropboxMetadataOk returns a tuple with the DropboxMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDocumentSources) GetDropboxMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DropboxMetadata) {
		return nil, false
	}
	return o.DropboxMetadata, true
}

// HasDropboxMetadata returns a boolean if a field has been set.
func (o *ExternalDocumentSources) HasDropboxMetadata() bool {
	if o != nil && !IsNil(o.DropboxMetadata) {
		return true
	}

	return false
}

// SetDropboxMetadata gets a reference to the given SettingsMetadata and assigns it to the DropboxMetadata field.
func (o *ExternalDocumentSources) SetDropboxMetadata(v SettingsMetadata) {
	o.DropboxMetadata = &v
}

// GetGoogleDriveEnabled returns the GoogleDriveEnabled field value if set, zero value otherwise.
func (o *ExternalDocumentSources) GetGoogleDriveEnabled() string {
	if o == nil || IsNil(o.GoogleDriveEnabled) {
		var ret string
		return ret
	}
	return *o.GoogleDriveEnabled
}

// GetGoogleDriveEnabledOk returns a tuple with the GoogleDriveEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDocumentSources) GetGoogleDriveEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.GoogleDriveEnabled) {
		return nil, false
	}
	return o.GoogleDriveEnabled, true
}

// HasGoogleDriveEnabled returns a boolean if a field has been set.
func (o *ExternalDocumentSources) HasGoogleDriveEnabled() bool {
	if o != nil && !IsNil(o.GoogleDriveEnabled) {
		return true
	}

	return false
}

// SetGoogleDriveEnabled gets a reference to the given string and assigns it to the GoogleDriveEnabled field.
func (o *ExternalDocumentSources) SetGoogleDriveEnabled(v string) {
	o.GoogleDriveEnabled = &v
}

// GetGoogleDriveMetadata returns the GoogleDriveMetadata field value if set, zero value otherwise.
func (o *ExternalDocumentSources) GetGoogleDriveMetadata() SettingsMetadata {
	if o == nil || IsNil(o.GoogleDriveMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.GoogleDriveMetadata
}

// GetGoogleDriveMetadataOk returns a tuple with the GoogleDriveMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDocumentSources) GetGoogleDriveMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.GoogleDriveMetadata) {
		return nil, false
	}
	return o.GoogleDriveMetadata, true
}

// HasGoogleDriveMetadata returns a boolean if a field has been set.
func (o *ExternalDocumentSources) HasGoogleDriveMetadata() bool {
	if o != nil && !IsNil(o.GoogleDriveMetadata) {
		return true
	}

	return false
}

// SetGoogleDriveMetadata gets a reference to the given SettingsMetadata and assigns it to the GoogleDriveMetadata field.
func (o *ExternalDocumentSources) SetGoogleDriveMetadata(v SettingsMetadata) {
	o.GoogleDriveMetadata = &v
}

// GetOneDriveEnabled returns the OneDriveEnabled field value if set, zero value otherwise.
func (o *ExternalDocumentSources) GetOneDriveEnabled() string {
	if o == nil || IsNil(o.OneDriveEnabled) {
		var ret string
		return ret
	}
	return *o.OneDriveEnabled
}

// GetOneDriveEnabledOk returns a tuple with the OneDriveEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDocumentSources) GetOneDriveEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.OneDriveEnabled) {
		return nil, false
	}
	return o.OneDriveEnabled, true
}

// HasOneDriveEnabled returns a boolean if a field has been set.
func (o *ExternalDocumentSources) HasOneDriveEnabled() bool {
	if o != nil && !IsNil(o.OneDriveEnabled) {
		return true
	}

	return false
}

// SetOneDriveEnabled gets a reference to the given string and assigns it to the OneDriveEnabled field.
func (o *ExternalDocumentSources) SetOneDriveEnabled(v string) {
	o.OneDriveEnabled = &v
}

// GetOneDriveMetadata returns the OneDriveMetadata field value if set, zero value otherwise.
func (o *ExternalDocumentSources) GetOneDriveMetadata() SettingsMetadata {
	if o == nil || IsNil(o.OneDriveMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.OneDriveMetadata
}

// GetOneDriveMetadataOk returns a tuple with the OneDriveMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDocumentSources) GetOneDriveMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.OneDriveMetadata) {
		return nil, false
	}
	return o.OneDriveMetadata, true
}

// HasOneDriveMetadata returns a boolean if a field has been set.
func (o *ExternalDocumentSources) HasOneDriveMetadata() bool {
	if o != nil && !IsNil(o.OneDriveMetadata) {
		return true
	}

	return false
}

// SetOneDriveMetadata gets a reference to the given SettingsMetadata and assigns it to the OneDriveMetadata field.
func (o *ExternalDocumentSources) SetOneDriveMetadata(v SettingsMetadata) {
	o.OneDriveMetadata = &v
}

// GetSalesforceEnabled returns the SalesforceEnabled field value if set, zero value otherwise.
func (o *ExternalDocumentSources) GetSalesforceEnabled() string {
	if o == nil || IsNil(o.SalesforceEnabled) {
		var ret string
		return ret
	}
	return *o.SalesforceEnabled
}

// GetSalesforceEnabledOk returns a tuple with the SalesforceEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDocumentSources) GetSalesforceEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.SalesforceEnabled) {
		return nil, false
	}
	return o.SalesforceEnabled, true
}

// HasSalesforceEnabled returns a boolean if a field has been set.
func (o *ExternalDocumentSources) HasSalesforceEnabled() bool {
	if o != nil && !IsNil(o.SalesforceEnabled) {
		return true
	}

	return false
}

// SetSalesforceEnabled gets a reference to the given string and assigns it to the SalesforceEnabled field.
func (o *ExternalDocumentSources) SetSalesforceEnabled(v string) {
	o.SalesforceEnabled = &v
}

// GetSalesforceMetadata returns the SalesforceMetadata field value if set, zero value otherwise.
func (o *ExternalDocumentSources) GetSalesforceMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SalesforceMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SalesforceMetadata
}

// GetSalesforceMetadataOk returns a tuple with the SalesforceMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalDocumentSources) GetSalesforceMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SalesforceMetadata) {
		return nil, false
	}
	return o.SalesforceMetadata, true
}

// HasSalesforceMetadata returns a boolean if a field has been set.
func (o *ExternalDocumentSources) HasSalesforceMetadata() bool {
	if o != nil && !IsNil(o.SalesforceMetadata) {
		return true
	}

	return false
}

// SetSalesforceMetadata gets a reference to the given SettingsMetadata and assigns it to the SalesforceMetadata field.
func (o *ExternalDocumentSources) SetSalesforceMetadata(v SettingsMetadata) {
	o.SalesforceMetadata = &v
}

func (o ExternalDocumentSources) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalDocumentSources) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BoxnetEnabled) {
		toSerialize["boxnetEnabled"] = o.BoxnetEnabled
	}
	if !IsNil(o.BoxnetMetadata) {
		toSerialize["boxnetMetadata"] = o.BoxnetMetadata
	}
	if !IsNil(o.DropboxEnabled) {
		toSerialize["dropboxEnabled"] = o.DropboxEnabled
	}
	if !IsNil(o.DropboxMetadata) {
		toSerialize["dropboxMetadata"] = o.DropboxMetadata
	}
	if !IsNil(o.GoogleDriveEnabled) {
		toSerialize["googleDriveEnabled"] = o.GoogleDriveEnabled
	}
	if !IsNil(o.GoogleDriveMetadata) {
		toSerialize["googleDriveMetadata"] = o.GoogleDriveMetadata
	}
	if !IsNil(o.OneDriveEnabled) {
		toSerialize["oneDriveEnabled"] = o.OneDriveEnabled
	}
	if !IsNil(o.OneDriveMetadata) {
		toSerialize["oneDriveMetadata"] = o.OneDriveMetadata
	}
	if !IsNil(o.SalesforceEnabled) {
		toSerialize["salesforceEnabled"] = o.SalesforceEnabled
	}
	if !IsNil(o.SalesforceMetadata) {
		toSerialize["salesforceMetadata"] = o.SalesforceMetadata
	}
	return toSerialize, nil
}

type NullableExternalDocumentSources struct {
	value *ExternalDocumentSources
	isSet bool
}

func (v NullableExternalDocumentSources) Get() *ExternalDocumentSources {
	return v.value
}

func (v *NullableExternalDocumentSources) Set(val *ExternalDocumentSources) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalDocumentSources) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalDocumentSources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalDocumentSources(val *ExternalDocumentSources) *NullableExternalDocumentSources {
	return &NullableExternalDocumentSources{value: val, isSet: true}
}

func (v NullableExternalDocumentSources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalDocumentSources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


