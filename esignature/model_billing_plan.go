/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BillingPlan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingPlan{}

// BillingPlan Contains information about a billing plan.
type BillingPlan struct {
	// Reserved for DocuSign.
	AppStoreProducts []AppStoreProduct `json:"appStoreProducts,omitempty"`
	// Contains the `currencyCode` and `currencySymbol` for the alternate currency values for `envelopeFee`, `fixedFee`, and `seatFee` that are configured for this plan feature set.
	CurrencyPlanPrices []CurrencyPlanPrice `json:"currencyPlanPrices,omitempty"`
	// When **true,** customer support is provided as part of the account plan.
	EnableSupport *string `json:"enableSupport,omitempty"`
	// The number of seats (users) included in the plan.
	IncludedSeats *string `json:"includedSeats,omitempty"`
	// Any other percentage discount for the plan.  Example: `\"0.00\"`
	OtherDiscountPercent *string `json:"otherDiscountPercent,omitempty"`
	//  The payment cycle associated with the plan. Valid values: Monthly or Annually. 
	PaymentCycle *string `json:"paymentCycle,omitempty"`
	// The payment method used for the billing plan. Valid values are:  - `NotSupported` - `CreditCard` - `PurchaseOrder` - `Premium` - `Freemium` - `FreeTrial` - `AppStore` - `DigitalExternal` - `DirectDebit`
	PaymentMethod *string `json:"paymentMethod,omitempty"`
	// The per seat price for the plan.
	PerSeatPrice *string `json:"perSeatPrice,omitempty"`
	// Identifies the type of plan. Examples include:  - `business` - `corporate` - `enterprise`  - `free`
	PlanClassification *string `json:"planClassification,omitempty"`
	// Reserved for DocuSign.
	PlanFeatureSets []FeatureSet `json:"planFeatureSets,omitempty"`
	// DocuSign's ID for the account plan.
	PlanId *string `json:"planId,omitempty"`
	// The name of the billing plan. 
	PlanName *string `json:"planName,omitempty"`
	// A complex type that returns information about any seat discounts. It contains the information `BeginSeatCount`, `EndSeatCount` and `SeatDiscountPercent`.
	SeatDiscounts []SeatDiscount `json:"seatDiscounts,omitempty"`
	// The support incident fee charged for each support incident.  Example: `\"$0.00\"`
	SupportIncidentFee *string `json:"supportIncidentFee,omitempty"`
	// The support plan fee charged for this plan.  Example: `\"$0.00\"`
	SupportPlanFee *string `json:"supportPlanFee,omitempty"`
}

// NewBillingPlan instantiates a new BillingPlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingPlan() *BillingPlan {
	this := BillingPlan{}
	return &this
}

// NewBillingPlanWithDefaults instantiates a new BillingPlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingPlanWithDefaults() *BillingPlan {
	this := BillingPlan{}
	return &this
}

// GetAppStoreProducts returns the AppStoreProducts field value if set, zero value otherwise.
func (o *BillingPlan) GetAppStoreProducts() []AppStoreProduct {
	if o == nil || IsNil(o.AppStoreProducts) {
		var ret []AppStoreProduct
		return ret
	}
	return o.AppStoreProducts
}

// GetAppStoreProductsOk returns a tuple with the AppStoreProducts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlan) GetAppStoreProductsOk() ([]AppStoreProduct, bool) {
	if o == nil || IsNil(o.AppStoreProducts) {
		return nil, false
	}
	return o.AppStoreProducts, true
}

// HasAppStoreProducts returns a boolean if a field has been set.
func (o *BillingPlan) HasAppStoreProducts() bool {
	if o != nil && !IsNil(o.AppStoreProducts) {
		return true
	}

	return false
}

// SetAppStoreProducts gets a reference to the given []AppStoreProduct and assigns it to the AppStoreProducts field.
func (o *BillingPlan) SetAppStoreProducts(v []AppStoreProduct) {
	o.AppStoreProducts = v
}

// GetCurrencyPlanPrices returns the CurrencyPlanPrices field value if set, zero value otherwise.
func (o *BillingPlan) GetCurrencyPlanPrices() []CurrencyPlanPrice {
	if o == nil || IsNil(o.CurrencyPlanPrices) {
		var ret []CurrencyPlanPrice
		return ret
	}
	return o.CurrencyPlanPrices
}

// GetCurrencyPlanPricesOk returns a tuple with the CurrencyPlanPrices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlan) GetCurrencyPlanPricesOk() ([]CurrencyPlanPrice, bool) {
	if o == nil || IsNil(o.CurrencyPlanPrices) {
		return nil, false
	}
	return o.CurrencyPlanPrices, true
}

// HasCurrencyPlanPrices returns a boolean if a field has been set.
func (o *BillingPlan) HasCurrencyPlanPrices() bool {
	if o != nil && !IsNil(o.CurrencyPlanPrices) {
		return true
	}

	return false
}

// SetCurrencyPlanPrices gets a reference to the given []CurrencyPlanPrice and assigns it to the CurrencyPlanPrices field.
func (o *BillingPlan) SetCurrencyPlanPrices(v []CurrencyPlanPrice) {
	o.CurrencyPlanPrices = v
}

// GetEnableSupport returns the EnableSupport field value if set, zero value otherwise.
func (o *BillingPlan) GetEnableSupport() string {
	if o == nil || IsNil(o.EnableSupport) {
		var ret string
		return ret
	}
	return *o.EnableSupport
}

// GetEnableSupportOk returns a tuple with the EnableSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlan) GetEnableSupportOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSupport) {
		return nil, false
	}
	return o.EnableSupport, true
}

// HasEnableSupport returns a boolean if a field has been set.
func (o *BillingPlan) HasEnableSupport() bool {
	if o != nil && !IsNil(o.EnableSupport) {
		return true
	}

	return false
}

// SetEnableSupport gets a reference to the given string and assigns it to the EnableSupport field.
func (o *BillingPlan) SetEnableSupport(v string) {
	o.EnableSupport = &v
}

// GetIncludedSeats returns the IncludedSeats field value if set, zero value otherwise.
func (o *BillingPlan) GetIncludedSeats() string {
	if o == nil || IsNil(o.IncludedSeats) {
		var ret string
		return ret
	}
	return *o.IncludedSeats
}

// GetIncludedSeatsOk returns a tuple with the IncludedSeats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlan) GetIncludedSeatsOk() (*string, bool) {
	if o == nil || IsNil(o.IncludedSeats) {
		return nil, false
	}
	return o.IncludedSeats, true
}

// HasIncludedSeats returns a boolean if a field has been set.
func (o *BillingPlan) HasIncludedSeats() bool {
	if o != nil && !IsNil(o.IncludedSeats) {
		return true
	}

	return false
}

// SetIncludedSeats gets a reference to the given string and assigns it to the IncludedSeats field.
func (o *BillingPlan) SetIncludedSeats(v string) {
	o.IncludedSeats = &v
}

// GetOtherDiscountPercent returns the OtherDiscountPercent field value if set, zero value otherwise.
func (o *BillingPlan) GetOtherDiscountPercent() string {
	if o == nil || IsNil(o.OtherDiscountPercent) {
		var ret string
		return ret
	}
	return *o.OtherDiscountPercent
}

// GetOtherDiscountPercentOk returns a tuple with the OtherDiscountPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlan) GetOtherDiscountPercentOk() (*string, bool) {
	if o == nil || IsNil(o.OtherDiscountPercent) {
		return nil, false
	}
	return o.OtherDiscountPercent, true
}

// HasOtherDiscountPercent returns a boolean if a field has been set.
func (o *BillingPlan) HasOtherDiscountPercent() bool {
	if o != nil && !IsNil(o.OtherDiscountPercent) {
		return true
	}

	return false
}

// SetOtherDiscountPercent gets a reference to the given string and assigns it to the OtherDiscountPercent field.
func (o *BillingPlan) SetOtherDiscountPercent(v string) {
	o.OtherDiscountPercent = &v
}

// GetPaymentCycle returns the PaymentCycle field value if set, zero value otherwise.
func (o *BillingPlan) GetPaymentCycle() string {
	if o == nil || IsNil(o.PaymentCycle) {
		var ret string
		return ret
	}
	return *o.PaymentCycle
}

// GetPaymentCycleOk returns a tuple with the PaymentCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlan) GetPaymentCycleOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentCycle) {
		return nil, false
	}
	return o.PaymentCycle, true
}

// HasPaymentCycle returns a boolean if a field has been set.
func (o *BillingPlan) HasPaymentCycle() bool {
	if o != nil && !IsNil(o.PaymentCycle) {
		return true
	}

	return false
}

// SetPaymentCycle gets a reference to the given string and assigns it to the PaymentCycle field.
func (o *BillingPlan) SetPaymentCycle(v string) {
	o.PaymentCycle = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *BillingPlan) GetPaymentMethod() string {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlan) GetPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *BillingPlan) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *BillingPlan) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetPerSeatPrice returns the PerSeatPrice field value if set, zero value otherwise.
func (o *BillingPlan) GetPerSeatPrice() string {
	if o == nil || IsNil(o.PerSeatPrice) {
		var ret string
		return ret
	}
	return *o.PerSeatPrice
}

// GetPerSeatPriceOk returns a tuple with the PerSeatPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlan) GetPerSeatPriceOk() (*string, bool) {
	if o == nil || IsNil(o.PerSeatPrice) {
		return nil, false
	}
	return o.PerSeatPrice, true
}

// HasPerSeatPrice returns a boolean if a field has been set.
func (o *BillingPlan) HasPerSeatPrice() bool {
	if o != nil && !IsNil(o.PerSeatPrice) {
		return true
	}

	return false
}

// SetPerSeatPrice gets a reference to the given string and assigns it to the PerSeatPrice field.
func (o *BillingPlan) SetPerSeatPrice(v string) {
	o.PerSeatPrice = &v
}

// GetPlanClassification returns the PlanClassification field value if set, zero value otherwise.
func (o *BillingPlan) GetPlanClassification() string {
	if o == nil || IsNil(o.PlanClassification) {
		var ret string
		return ret
	}
	return *o.PlanClassification
}

// GetPlanClassificationOk returns a tuple with the PlanClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlan) GetPlanClassificationOk() (*string, bool) {
	if o == nil || IsNil(o.PlanClassification) {
		return nil, false
	}
	return o.PlanClassification, true
}

// HasPlanClassification returns a boolean if a field has been set.
func (o *BillingPlan) HasPlanClassification() bool {
	if o != nil && !IsNil(o.PlanClassification) {
		return true
	}

	return false
}

// SetPlanClassification gets a reference to the given string and assigns it to the PlanClassification field.
func (o *BillingPlan) SetPlanClassification(v string) {
	o.PlanClassification = &v
}

// GetPlanFeatureSets returns the PlanFeatureSets field value if set, zero value otherwise.
func (o *BillingPlan) GetPlanFeatureSets() []FeatureSet {
	if o == nil || IsNil(o.PlanFeatureSets) {
		var ret []FeatureSet
		return ret
	}
	return o.PlanFeatureSets
}

// GetPlanFeatureSetsOk returns a tuple with the PlanFeatureSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlan) GetPlanFeatureSetsOk() ([]FeatureSet, bool) {
	if o == nil || IsNil(o.PlanFeatureSets) {
		return nil, false
	}
	return o.PlanFeatureSets, true
}

// HasPlanFeatureSets returns a boolean if a field has been set.
func (o *BillingPlan) HasPlanFeatureSets() bool {
	if o != nil && !IsNil(o.PlanFeatureSets) {
		return true
	}

	return false
}

// SetPlanFeatureSets gets a reference to the given []FeatureSet and assigns it to the PlanFeatureSets field.
func (o *BillingPlan) SetPlanFeatureSets(v []FeatureSet) {
	o.PlanFeatureSets = v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *BillingPlan) GetPlanId() string {
	if o == nil || IsNil(o.PlanId) {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlan) GetPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *BillingPlan) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *BillingPlan) SetPlanId(v string) {
	o.PlanId = &v
}

// GetPlanName returns the PlanName field value if set, zero value otherwise.
func (o *BillingPlan) GetPlanName() string {
	if o == nil || IsNil(o.PlanName) {
		var ret string
		return ret
	}
	return *o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlan) GetPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.PlanName) {
		return nil, false
	}
	return o.PlanName, true
}

// HasPlanName returns a boolean if a field has been set.
func (o *BillingPlan) HasPlanName() bool {
	if o != nil && !IsNil(o.PlanName) {
		return true
	}

	return false
}

// SetPlanName gets a reference to the given string and assigns it to the PlanName field.
func (o *BillingPlan) SetPlanName(v string) {
	o.PlanName = &v
}

// GetSeatDiscounts returns the SeatDiscounts field value if set, zero value otherwise.
func (o *BillingPlan) GetSeatDiscounts() []SeatDiscount {
	if o == nil || IsNil(o.SeatDiscounts) {
		var ret []SeatDiscount
		return ret
	}
	return o.SeatDiscounts
}

// GetSeatDiscountsOk returns a tuple with the SeatDiscounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlan) GetSeatDiscountsOk() ([]SeatDiscount, bool) {
	if o == nil || IsNil(o.SeatDiscounts) {
		return nil, false
	}
	return o.SeatDiscounts, true
}

// HasSeatDiscounts returns a boolean if a field has been set.
func (o *BillingPlan) HasSeatDiscounts() bool {
	if o != nil && !IsNil(o.SeatDiscounts) {
		return true
	}

	return false
}

// SetSeatDiscounts gets a reference to the given []SeatDiscount and assigns it to the SeatDiscounts field.
func (o *BillingPlan) SetSeatDiscounts(v []SeatDiscount) {
	o.SeatDiscounts = v
}

// GetSupportIncidentFee returns the SupportIncidentFee field value if set, zero value otherwise.
func (o *BillingPlan) GetSupportIncidentFee() string {
	if o == nil || IsNil(o.SupportIncidentFee) {
		var ret string
		return ret
	}
	return *o.SupportIncidentFee
}

// GetSupportIncidentFeeOk returns a tuple with the SupportIncidentFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlan) GetSupportIncidentFeeOk() (*string, bool) {
	if o == nil || IsNil(o.SupportIncidentFee) {
		return nil, false
	}
	return o.SupportIncidentFee, true
}

// HasSupportIncidentFee returns a boolean if a field has been set.
func (o *BillingPlan) HasSupportIncidentFee() bool {
	if o != nil && !IsNil(o.SupportIncidentFee) {
		return true
	}

	return false
}

// SetSupportIncidentFee gets a reference to the given string and assigns it to the SupportIncidentFee field.
func (o *BillingPlan) SetSupportIncidentFee(v string) {
	o.SupportIncidentFee = &v
}

// GetSupportPlanFee returns the SupportPlanFee field value if set, zero value otherwise.
func (o *BillingPlan) GetSupportPlanFee() string {
	if o == nil || IsNil(o.SupportPlanFee) {
		var ret string
		return ret
	}
	return *o.SupportPlanFee
}

// GetSupportPlanFeeOk returns a tuple with the SupportPlanFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlan) GetSupportPlanFeeOk() (*string, bool) {
	if o == nil || IsNil(o.SupportPlanFee) {
		return nil, false
	}
	return o.SupportPlanFee, true
}

// HasSupportPlanFee returns a boolean if a field has been set.
func (o *BillingPlan) HasSupportPlanFee() bool {
	if o != nil && !IsNil(o.SupportPlanFee) {
		return true
	}

	return false
}

// SetSupportPlanFee gets a reference to the given string and assigns it to the SupportPlanFee field.
func (o *BillingPlan) SetSupportPlanFee(v string) {
	o.SupportPlanFee = &v
}

func (o BillingPlan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingPlan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppStoreProducts) {
		toSerialize["appStoreProducts"] = o.AppStoreProducts
	}
	if !IsNil(o.CurrencyPlanPrices) {
		toSerialize["currencyPlanPrices"] = o.CurrencyPlanPrices
	}
	if !IsNil(o.EnableSupport) {
		toSerialize["enableSupport"] = o.EnableSupport
	}
	if !IsNil(o.IncludedSeats) {
		toSerialize["includedSeats"] = o.IncludedSeats
	}
	if !IsNil(o.OtherDiscountPercent) {
		toSerialize["otherDiscountPercent"] = o.OtherDiscountPercent
	}
	if !IsNil(o.PaymentCycle) {
		toSerialize["paymentCycle"] = o.PaymentCycle
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}
	if !IsNil(o.PerSeatPrice) {
		toSerialize["perSeatPrice"] = o.PerSeatPrice
	}
	if !IsNil(o.PlanClassification) {
		toSerialize["planClassification"] = o.PlanClassification
	}
	if !IsNil(o.PlanFeatureSets) {
		toSerialize["planFeatureSets"] = o.PlanFeatureSets
	}
	if !IsNil(o.PlanId) {
		toSerialize["planId"] = o.PlanId
	}
	if !IsNil(o.PlanName) {
		toSerialize["planName"] = o.PlanName
	}
	if !IsNil(o.SeatDiscounts) {
		toSerialize["seatDiscounts"] = o.SeatDiscounts
	}
	if !IsNil(o.SupportIncidentFee) {
		toSerialize["supportIncidentFee"] = o.SupportIncidentFee
	}
	if !IsNil(o.SupportPlanFee) {
		toSerialize["supportPlanFee"] = o.SupportPlanFee
	}
	return toSerialize, nil
}

type NullableBillingPlan struct {
	value *BillingPlan
	isSet bool
}

func (v NullableBillingPlan) Get() *BillingPlan {
	return v.value
}

func (v *NullableBillingPlan) Set(val *BillingPlan) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingPlan) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingPlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingPlan(val *BillingPlan) *NullableBillingPlan {
	return &NullableBillingPlan{value: val, isSet: true}
}

func (v NullableBillingPlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingPlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


