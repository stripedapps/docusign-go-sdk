/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BulkSend type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkSend{}

// BulkSend The bulk send list resource provides methods that enable you to create and manage bulk sending lists, which you can use to send multiple copies of an envelope in a single batch.   **Note:** The Bulk Send feature is only available on Business Pro and Enterprise Pro plans.
type BulkSend struct {
	// An array of `bulkCopy` objects. Each object represents an instance or copy of an envelope and contains details such as the recipient, custom fields, tabs, and other information.
	BulkCopies []BulkSendingCopy `json:"bulkCopies,omitempty"`
	// The GUID of the bulk send list. This property is created after you post a new bulk send list.
	ListId *string `json:"listId,omitempty"`
	// The name of the bulk send list.
	Name *string `json:"name,omitempty"`
}

// NewBulkSend instantiates a new BulkSend object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkSend() *BulkSend {
	this := BulkSend{}
	return &this
}

// NewBulkSendWithDefaults instantiates a new BulkSend object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkSendWithDefaults() *BulkSend {
	this := BulkSend{}
	return &this
}

// GetBulkCopies returns the BulkCopies field value if set, zero value otherwise.
func (o *BulkSend) GetBulkCopies() []BulkSendingCopy {
	if o == nil || IsNil(o.BulkCopies) {
		var ret []BulkSendingCopy
		return ret
	}
	return o.BulkCopies
}

// GetBulkCopiesOk returns a tuple with the BulkCopies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSend) GetBulkCopiesOk() ([]BulkSendingCopy, bool) {
	if o == nil || IsNil(o.BulkCopies) {
		return nil, false
	}
	return o.BulkCopies, true
}

// HasBulkCopies returns a boolean if a field has been set.
func (o *BulkSend) HasBulkCopies() bool {
	if o != nil && !IsNil(o.BulkCopies) {
		return true
	}

	return false
}

// SetBulkCopies gets a reference to the given []BulkSendingCopy and assigns it to the BulkCopies field.
func (o *BulkSend) SetBulkCopies(v []BulkSendingCopy) {
	o.BulkCopies = v
}

// GetListId returns the ListId field value if set, zero value otherwise.
func (o *BulkSend) GetListId() string {
	if o == nil || IsNil(o.ListId) {
		var ret string
		return ret
	}
	return *o.ListId
}

// GetListIdOk returns a tuple with the ListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSend) GetListIdOk() (*string, bool) {
	if o == nil || IsNil(o.ListId) {
		return nil, false
	}
	return o.ListId, true
}

// HasListId returns a boolean if a field has been set.
func (o *BulkSend) HasListId() bool {
	if o != nil && !IsNil(o.ListId) {
		return true
	}

	return false
}

// SetListId gets a reference to the given string and assigns it to the ListId field.
func (o *BulkSend) SetListId(v string) {
	o.ListId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BulkSend) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSend) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BulkSend) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BulkSend) SetName(v string) {
	o.Name = &v
}

func (o BulkSend) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkSend) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BulkCopies) {
		toSerialize["bulkCopies"] = o.BulkCopies
	}
	if !IsNil(o.ListId) {
		toSerialize["listId"] = o.ListId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableBulkSend struct {
	value *BulkSend
	isSet bool
}

func (v NullableBulkSend) Get() *BulkSend {
	return v.value
}

func (v *NullableBulkSend) Set(val *BulkSend) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkSend) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkSend) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkSend(val *BulkSend) *NullableBulkSend {
	return &NullableBulkSend{value: val, isSet: true}
}

func (v NullableBulkSend) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkSend) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


