/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LinkedExternalPrimaryAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinkedExternalPrimaryAccount{}

// LinkedExternalPrimaryAccount 
type LinkedExternalPrimaryAccount struct {
	// The name on the account.
	AccountName *string `json:"accountName,omitempty"`
	// 
	ConfigurationId *string `json:"configurationId,omitempty"`
	// 
	Email *string `json:"email,omitempty"`
	// 
	LinkId *string `json:"linkId,omitempty"`
	// 
	PdfFieldHandlingOption *string `json:"pdfFieldHandlingOption,omitempty"`
	RecipientAuthRequirements *ExternalPrimaryAccountRecipientAuthRequirements `json:"recipientAuthRequirements,omitempty"`
	// Indicates the envelope status. Valid values are:  * `sent` - The envelope is sent to the recipients.  * `created` - The envelope is saved as a draft and can be modified to be sent later.
	Status *string `json:"status,omitempty"`
	// The ID of the user to access.  **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
	UserId *string `json:"userId,omitempty"`
}

// NewLinkedExternalPrimaryAccount instantiates a new LinkedExternalPrimaryAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkedExternalPrimaryAccount() *LinkedExternalPrimaryAccount {
	this := LinkedExternalPrimaryAccount{}
	return &this
}

// NewLinkedExternalPrimaryAccountWithDefaults instantiates a new LinkedExternalPrimaryAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkedExternalPrimaryAccountWithDefaults() *LinkedExternalPrimaryAccount {
	this := LinkedExternalPrimaryAccount{}
	return &this
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *LinkedExternalPrimaryAccount) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedExternalPrimaryAccount) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *LinkedExternalPrimaryAccount) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *LinkedExternalPrimaryAccount) SetAccountName(v string) {
	o.AccountName = &v
}

// GetConfigurationId returns the ConfigurationId field value if set, zero value otherwise.
func (o *LinkedExternalPrimaryAccount) GetConfigurationId() string {
	if o == nil || IsNil(o.ConfigurationId) {
		var ret string
		return ret
	}
	return *o.ConfigurationId
}

// GetConfigurationIdOk returns a tuple with the ConfigurationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedExternalPrimaryAccount) GetConfigurationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigurationId) {
		return nil, false
	}
	return o.ConfigurationId, true
}

// HasConfigurationId returns a boolean if a field has been set.
func (o *LinkedExternalPrimaryAccount) HasConfigurationId() bool {
	if o != nil && !IsNil(o.ConfigurationId) {
		return true
	}

	return false
}

// SetConfigurationId gets a reference to the given string and assigns it to the ConfigurationId field.
func (o *LinkedExternalPrimaryAccount) SetConfigurationId(v string) {
	o.ConfigurationId = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *LinkedExternalPrimaryAccount) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedExternalPrimaryAccount) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *LinkedExternalPrimaryAccount) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *LinkedExternalPrimaryAccount) SetEmail(v string) {
	o.Email = &v
}

// GetLinkId returns the LinkId field value if set, zero value otherwise.
func (o *LinkedExternalPrimaryAccount) GetLinkId() string {
	if o == nil || IsNil(o.LinkId) {
		var ret string
		return ret
	}
	return *o.LinkId
}

// GetLinkIdOk returns a tuple with the LinkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedExternalPrimaryAccount) GetLinkIdOk() (*string, bool) {
	if o == nil || IsNil(o.LinkId) {
		return nil, false
	}
	return o.LinkId, true
}

// HasLinkId returns a boolean if a field has been set.
func (o *LinkedExternalPrimaryAccount) HasLinkId() bool {
	if o != nil && !IsNil(o.LinkId) {
		return true
	}

	return false
}

// SetLinkId gets a reference to the given string and assigns it to the LinkId field.
func (o *LinkedExternalPrimaryAccount) SetLinkId(v string) {
	o.LinkId = &v
}

// GetPdfFieldHandlingOption returns the PdfFieldHandlingOption field value if set, zero value otherwise.
func (o *LinkedExternalPrimaryAccount) GetPdfFieldHandlingOption() string {
	if o == nil || IsNil(o.PdfFieldHandlingOption) {
		var ret string
		return ret
	}
	return *o.PdfFieldHandlingOption
}

// GetPdfFieldHandlingOptionOk returns a tuple with the PdfFieldHandlingOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedExternalPrimaryAccount) GetPdfFieldHandlingOptionOk() (*string, bool) {
	if o == nil || IsNil(o.PdfFieldHandlingOption) {
		return nil, false
	}
	return o.PdfFieldHandlingOption, true
}

// HasPdfFieldHandlingOption returns a boolean if a field has been set.
func (o *LinkedExternalPrimaryAccount) HasPdfFieldHandlingOption() bool {
	if o != nil && !IsNil(o.PdfFieldHandlingOption) {
		return true
	}

	return false
}

// SetPdfFieldHandlingOption gets a reference to the given string and assigns it to the PdfFieldHandlingOption field.
func (o *LinkedExternalPrimaryAccount) SetPdfFieldHandlingOption(v string) {
	o.PdfFieldHandlingOption = &v
}

// GetRecipientAuthRequirements returns the RecipientAuthRequirements field value if set, zero value otherwise.
func (o *LinkedExternalPrimaryAccount) GetRecipientAuthRequirements() ExternalPrimaryAccountRecipientAuthRequirements {
	if o == nil || IsNil(o.RecipientAuthRequirements) {
		var ret ExternalPrimaryAccountRecipientAuthRequirements
		return ret
	}
	return *o.RecipientAuthRequirements
}

// GetRecipientAuthRequirementsOk returns a tuple with the RecipientAuthRequirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedExternalPrimaryAccount) GetRecipientAuthRequirementsOk() (*ExternalPrimaryAccountRecipientAuthRequirements, bool) {
	if o == nil || IsNil(o.RecipientAuthRequirements) {
		return nil, false
	}
	return o.RecipientAuthRequirements, true
}

// HasRecipientAuthRequirements returns a boolean if a field has been set.
func (o *LinkedExternalPrimaryAccount) HasRecipientAuthRequirements() bool {
	if o != nil && !IsNil(o.RecipientAuthRequirements) {
		return true
	}

	return false
}

// SetRecipientAuthRequirements gets a reference to the given ExternalPrimaryAccountRecipientAuthRequirements and assigns it to the RecipientAuthRequirements field.
func (o *LinkedExternalPrimaryAccount) SetRecipientAuthRequirements(v ExternalPrimaryAccountRecipientAuthRequirements) {
	o.RecipientAuthRequirements = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *LinkedExternalPrimaryAccount) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedExternalPrimaryAccount) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *LinkedExternalPrimaryAccount) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *LinkedExternalPrimaryAccount) SetStatus(v string) {
	o.Status = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *LinkedExternalPrimaryAccount) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedExternalPrimaryAccount) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *LinkedExternalPrimaryAccount) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *LinkedExternalPrimaryAccount) SetUserId(v string) {
	o.UserId = &v
}

func (o LinkedExternalPrimaryAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinkedExternalPrimaryAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountName) {
		toSerialize["accountName"] = o.AccountName
	}
	if !IsNil(o.ConfigurationId) {
		toSerialize["configurationId"] = o.ConfigurationId
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.LinkId) {
		toSerialize["linkId"] = o.LinkId
	}
	if !IsNil(o.PdfFieldHandlingOption) {
		toSerialize["pdfFieldHandlingOption"] = o.PdfFieldHandlingOption
	}
	if !IsNil(o.RecipientAuthRequirements) {
		toSerialize["recipientAuthRequirements"] = o.RecipientAuthRequirements
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableLinkedExternalPrimaryAccount struct {
	value *LinkedExternalPrimaryAccount
	isSet bool
}

func (v NullableLinkedExternalPrimaryAccount) Get() *LinkedExternalPrimaryAccount {
	return v.value
}

func (v *NullableLinkedExternalPrimaryAccount) Set(val *LinkedExternalPrimaryAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkedExternalPrimaryAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkedExternalPrimaryAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkedExternalPrimaryAccount(val *LinkedExternalPrimaryAccount) *NullableLinkedExternalPrimaryAccount {
	return &NullableLinkedExternalPrimaryAccount{value: val, isSet: true}
}

func (v NullableLinkedExternalPrimaryAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkedExternalPrimaryAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


