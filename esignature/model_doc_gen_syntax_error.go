/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DocGenSyntaxError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocGenSyntaxError{}

// DocGenSyntaxError Describes document generation errors.
type DocGenSyntaxError struct {
	// A code associated with the error condition.
	ErrorCode *string `json:"errorCode,omitempty"`
	// The error message.
	Message *string `json:"message,omitempty"`
	// The tag that caused the syntax error. See [Document Generation Syntax](https://support.docusign.com/s/document-item?bundleId=als1679428547895&topicId=ftc1679700030026.html) to learn more about document generation syntax rules.
	TagIdentifier *string `json:"tagIdentifier,omitempty"`
}

// NewDocGenSyntaxError instantiates a new DocGenSyntaxError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocGenSyntaxError() *DocGenSyntaxError {
	this := DocGenSyntaxError{}
	return &this
}

// NewDocGenSyntaxErrorWithDefaults instantiates a new DocGenSyntaxError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocGenSyntaxErrorWithDefaults() *DocGenSyntaxError {
	this := DocGenSyntaxError{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *DocGenSyntaxError) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocGenSyntaxError) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *DocGenSyntaxError) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *DocGenSyntaxError) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *DocGenSyntaxError) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocGenSyntaxError) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *DocGenSyntaxError) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *DocGenSyntaxError) SetMessage(v string) {
	o.Message = &v
}

// GetTagIdentifier returns the TagIdentifier field value if set, zero value otherwise.
func (o *DocGenSyntaxError) GetTagIdentifier() string {
	if o == nil || IsNil(o.TagIdentifier) {
		var ret string
		return ret
	}
	return *o.TagIdentifier
}

// GetTagIdentifierOk returns a tuple with the TagIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocGenSyntaxError) GetTagIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.TagIdentifier) {
		return nil, false
	}
	return o.TagIdentifier, true
}

// HasTagIdentifier returns a boolean if a field has been set.
func (o *DocGenSyntaxError) HasTagIdentifier() bool {
	if o != nil && !IsNil(o.TagIdentifier) {
		return true
	}

	return false
}

// SetTagIdentifier gets a reference to the given string and assigns it to the TagIdentifier field.
func (o *DocGenSyntaxError) SetTagIdentifier(v string) {
	o.TagIdentifier = &v
}

func (o DocGenSyntaxError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocGenSyntaxError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.TagIdentifier) {
		toSerialize["tagIdentifier"] = o.TagIdentifier
	}
	return toSerialize, nil
}

type NullableDocGenSyntaxError struct {
	value *DocGenSyntaxError
	isSet bool
}

func (v NullableDocGenSyntaxError) Get() *DocGenSyntaxError {
	return v.value
}

func (v *NullableDocGenSyntaxError) Set(val *DocGenSyntaxError) {
	v.value = val
	v.isSet = true
}

func (v NullableDocGenSyntaxError) IsSet() bool {
	return v.isSet
}

func (v *NullableDocGenSyntaxError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocGenSyntaxError(val *DocGenSyntaxError) *NullableDocGenSyntaxError {
	return &NullableDocGenSyntaxError{value: val, isSet: true}
}

func (v NullableDocGenSyntaxError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocGenSyntaxError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


