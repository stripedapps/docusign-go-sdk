/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BulkEnvelope type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkEnvelope{}

// BulkEnvelope 
type BulkEnvelope struct {
	// The row of the recipient in the CSV file used to create the bulk recipient list.
	BulkRecipientRow *string `json:"bulkRecipientRow,omitempty"`
	// Indicates the status of the bulk send operation. Returned values can be: - `queued` - `processing` - `sent` - `failed`
	BulkStatus *string `json:"bulkStatus,omitempty"`
	// The email address of the recipient assigned to this envelope transaction.
	Email *string `json:"email,omitempty"`
	// GUID of the bulk envelope.
	EnvelopeId *string `json:"envelopeId,omitempty"`
	// The URI for retrieving the envelope or envelopes.
	EnvelopeUri *string `json:"envelopeUri,omitempty"`
	ErrorDetails *ErrorDetails `json:"errorDetails,omitempty"`
	// The name of the recipient assigned to this envelope transaction.
	Name *string `json:"name,omitempty"`
	// The date and time on which the bulk envelope was created.
	SubmittedDateTime *string `json:"submittedDateTime,omitempty"`
	// Identifier for the envelope transaction. The ID is a sender-generated value and is valid in the DocuSign system for 7 days. DocuSign recommends that you use a transaction ID for offline signing to ensure that an envelope is not sent multiple times. You can use the transaction ID to determine an envelope's status (queued, processing, sent, or failed) in cases where the Internet connection is lost before envelope status is returned.
	TransactionId *string `json:"transactionId,omitempty"`
}

// NewBulkEnvelope instantiates a new BulkEnvelope object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkEnvelope() *BulkEnvelope {
	this := BulkEnvelope{}
	return &this
}

// NewBulkEnvelopeWithDefaults instantiates a new BulkEnvelope object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkEnvelopeWithDefaults() *BulkEnvelope {
	this := BulkEnvelope{}
	return &this
}

// GetBulkRecipientRow returns the BulkRecipientRow field value if set, zero value otherwise.
func (o *BulkEnvelope) GetBulkRecipientRow() string {
	if o == nil || IsNil(o.BulkRecipientRow) {
		var ret string
		return ret
	}
	return *o.BulkRecipientRow
}

// GetBulkRecipientRowOk returns a tuple with the BulkRecipientRow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelope) GetBulkRecipientRowOk() (*string, bool) {
	if o == nil || IsNil(o.BulkRecipientRow) {
		return nil, false
	}
	return o.BulkRecipientRow, true
}

// HasBulkRecipientRow returns a boolean if a field has been set.
func (o *BulkEnvelope) HasBulkRecipientRow() bool {
	if o != nil && !IsNil(o.BulkRecipientRow) {
		return true
	}

	return false
}

// SetBulkRecipientRow gets a reference to the given string and assigns it to the BulkRecipientRow field.
func (o *BulkEnvelope) SetBulkRecipientRow(v string) {
	o.BulkRecipientRow = &v
}

// GetBulkStatus returns the BulkStatus field value if set, zero value otherwise.
func (o *BulkEnvelope) GetBulkStatus() string {
	if o == nil || IsNil(o.BulkStatus) {
		var ret string
		return ret
	}
	return *o.BulkStatus
}

// GetBulkStatusOk returns a tuple with the BulkStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelope) GetBulkStatusOk() (*string, bool) {
	if o == nil || IsNil(o.BulkStatus) {
		return nil, false
	}
	return o.BulkStatus, true
}

// HasBulkStatus returns a boolean if a field has been set.
func (o *BulkEnvelope) HasBulkStatus() bool {
	if o != nil && !IsNil(o.BulkStatus) {
		return true
	}

	return false
}

// SetBulkStatus gets a reference to the given string and assigns it to the BulkStatus field.
func (o *BulkEnvelope) SetBulkStatus(v string) {
	o.BulkStatus = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *BulkEnvelope) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelope) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *BulkEnvelope) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *BulkEnvelope) SetEmail(v string) {
	o.Email = &v
}

// GetEnvelopeId returns the EnvelopeId field value if set, zero value otherwise.
func (o *BulkEnvelope) GetEnvelopeId() string {
	if o == nil || IsNil(o.EnvelopeId) {
		var ret string
		return ret
	}
	return *o.EnvelopeId
}

// GetEnvelopeIdOk returns a tuple with the EnvelopeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelope) GetEnvelopeIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeId) {
		return nil, false
	}
	return o.EnvelopeId, true
}

// HasEnvelopeId returns a boolean if a field has been set.
func (o *BulkEnvelope) HasEnvelopeId() bool {
	if o != nil && !IsNil(o.EnvelopeId) {
		return true
	}

	return false
}

// SetEnvelopeId gets a reference to the given string and assigns it to the EnvelopeId field.
func (o *BulkEnvelope) SetEnvelopeId(v string) {
	o.EnvelopeId = &v
}

// GetEnvelopeUri returns the EnvelopeUri field value if set, zero value otherwise.
func (o *BulkEnvelope) GetEnvelopeUri() string {
	if o == nil || IsNil(o.EnvelopeUri) {
		var ret string
		return ret
	}
	return *o.EnvelopeUri
}

// GetEnvelopeUriOk returns a tuple with the EnvelopeUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelope) GetEnvelopeUriOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeUri) {
		return nil, false
	}
	return o.EnvelopeUri, true
}

// HasEnvelopeUri returns a boolean if a field has been set.
func (o *BulkEnvelope) HasEnvelopeUri() bool {
	if o != nil && !IsNil(o.EnvelopeUri) {
		return true
	}

	return false
}

// SetEnvelopeUri gets a reference to the given string and assigns it to the EnvelopeUri field.
func (o *BulkEnvelope) SetEnvelopeUri(v string) {
	o.EnvelopeUri = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *BulkEnvelope) GetErrorDetails() ErrorDetails {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret ErrorDetails
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelope) GetErrorDetailsOk() (*ErrorDetails, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *BulkEnvelope) HasErrorDetails() bool {
	if o != nil && !IsNil(o.ErrorDetails) {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given ErrorDetails and assigns it to the ErrorDetails field.
func (o *BulkEnvelope) SetErrorDetails(v ErrorDetails) {
	o.ErrorDetails = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BulkEnvelope) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelope) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BulkEnvelope) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BulkEnvelope) SetName(v string) {
	o.Name = &v
}

// GetSubmittedDateTime returns the SubmittedDateTime field value if set, zero value otherwise.
func (o *BulkEnvelope) GetSubmittedDateTime() string {
	if o == nil || IsNil(o.SubmittedDateTime) {
		var ret string
		return ret
	}
	return *o.SubmittedDateTime
}

// GetSubmittedDateTimeOk returns a tuple with the SubmittedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelope) GetSubmittedDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.SubmittedDateTime) {
		return nil, false
	}
	return o.SubmittedDateTime, true
}

// HasSubmittedDateTime returns a boolean if a field has been set.
func (o *BulkEnvelope) HasSubmittedDateTime() bool {
	if o != nil && !IsNil(o.SubmittedDateTime) {
		return true
	}

	return false
}

// SetSubmittedDateTime gets a reference to the given string and assigns it to the SubmittedDateTime field.
func (o *BulkEnvelope) SetSubmittedDateTime(v string) {
	o.SubmittedDateTime = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *BulkEnvelope) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkEnvelope) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *BulkEnvelope) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *BulkEnvelope) SetTransactionId(v string) {
	o.TransactionId = &v
}

func (o BulkEnvelope) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkEnvelope) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BulkRecipientRow) {
		toSerialize["bulkRecipientRow"] = o.BulkRecipientRow
	}
	if !IsNil(o.BulkStatus) {
		toSerialize["bulkStatus"] = o.BulkStatus
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.EnvelopeId) {
		toSerialize["envelopeId"] = o.EnvelopeId
	}
	if !IsNil(o.EnvelopeUri) {
		toSerialize["envelopeUri"] = o.EnvelopeUri
	}
	if !IsNil(o.ErrorDetails) {
		toSerialize["errorDetails"] = o.ErrorDetails
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SubmittedDateTime) {
		toSerialize["submittedDateTime"] = o.SubmittedDateTime
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	return toSerialize, nil
}

type NullableBulkEnvelope struct {
	value *BulkEnvelope
	isSet bool
}

func (v NullableBulkEnvelope) Get() *BulkEnvelope {
	return v.value
}

func (v *NullableBulkEnvelope) Set(val *BulkEnvelope) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkEnvelope) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkEnvelope) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkEnvelope(val *BulkEnvelope) *NullableBulkEnvelope {
	return &NullableBulkEnvelope{value: val, isSet: true}
}

func (v NullableBulkEnvelope) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkEnvelope) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


