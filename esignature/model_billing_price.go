/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BillingPrice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingPrice{}

// BillingPrice 
type BillingPrice struct {
	// Reserved for DocuSign.
	BeginQuantity *string `json:"beginQuantity,omitempty"`
	// 
	EndQuantity *string `json:"endQuantity,omitempty"`
	// Reserved for DocuSign.
	UnitPrice *string `json:"unitPrice,omitempty"`
}

// NewBillingPrice instantiates a new BillingPrice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingPrice() *BillingPrice {
	this := BillingPrice{}
	return &this
}

// NewBillingPriceWithDefaults instantiates a new BillingPrice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingPriceWithDefaults() *BillingPrice {
	this := BillingPrice{}
	return &this
}

// GetBeginQuantity returns the BeginQuantity field value if set, zero value otherwise.
func (o *BillingPrice) GetBeginQuantity() string {
	if o == nil || IsNil(o.BeginQuantity) {
		var ret string
		return ret
	}
	return *o.BeginQuantity
}

// GetBeginQuantityOk returns a tuple with the BeginQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPrice) GetBeginQuantityOk() (*string, bool) {
	if o == nil || IsNil(o.BeginQuantity) {
		return nil, false
	}
	return o.BeginQuantity, true
}

// HasBeginQuantity returns a boolean if a field has been set.
func (o *BillingPrice) HasBeginQuantity() bool {
	if o != nil && !IsNil(o.BeginQuantity) {
		return true
	}

	return false
}

// SetBeginQuantity gets a reference to the given string and assigns it to the BeginQuantity field.
func (o *BillingPrice) SetBeginQuantity(v string) {
	o.BeginQuantity = &v
}

// GetEndQuantity returns the EndQuantity field value if set, zero value otherwise.
func (o *BillingPrice) GetEndQuantity() string {
	if o == nil || IsNil(o.EndQuantity) {
		var ret string
		return ret
	}
	return *o.EndQuantity
}

// GetEndQuantityOk returns a tuple with the EndQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPrice) GetEndQuantityOk() (*string, bool) {
	if o == nil || IsNil(o.EndQuantity) {
		return nil, false
	}
	return o.EndQuantity, true
}

// HasEndQuantity returns a boolean if a field has been set.
func (o *BillingPrice) HasEndQuantity() bool {
	if o != nil && !IsNil(o.EndQuantity) {
		return true
	}

	return false
}

// SetEndQuantity gets a reference to the given string and assigns it to the EndQuantity field.
func (o *BillingPrice) SetEndQuantity(v string) {
	o.EndQuantity = &v
}

// GetUnitPrice returns the UnitPrice field value if set, zero value otherwise.
func (o *BillingPrice) GetUnitPrice() string {
	if o == nil || IsNil(o.UnitPrice) {
		var ret string
		return ret
	}
	return *o.UnitPrice
}

// GetUnitPriceOk returns a tuple with the UnitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPrice) GetUnitPriceOk() (*string, bool) {
	if o == nil || IsNil(o.UnitPrice) {
		return nil, false
	}
	return o.UnitPrice, true
}

// HasUnitPrice returns a boolean if a field has been set.
func (o *BillingPrice) HasUnitPrice() bool {
	if o != nil && !IsNil(o.UnitPrice) {
		return true
	}

	return false
}

// SetUnitPrice gets a reference to the given string and assigns it to the UnitPrice field.
func (o *BillingPrice) SetUnitPrice(v string) {
	o.UnitPrice = &v
}

func (o BillingPrice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingPrice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BeginQuantity) {
		toSerialize["beginQuantity"] = o.BeginQuantity
	}
	if !IsNil(o.EndQuantity) {
		toSerialize["endQuantity"] = o.EndQuantity
	}
	if !IsNil(o.UnitPrice) {
		toSerialize["unitPrice"] = o.UnitPrice
	}
	return toSerialize, nil
}

type NullableBillingPrice struct {
	value *BillingPrice
	isSet bool
}

func (v NullableBillingPrice) Get() *BillingPrice {
	return v.value
}

func (v *NullableBillingPrice) Set(val *BillingPrice) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingPrice) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingPrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingPrice(val *BillingPrice) *NullableBillingPrice {
	return &NullableBillingPrice{value: val, isSet: true}
}

func (v NullableBillingPrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingPrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


