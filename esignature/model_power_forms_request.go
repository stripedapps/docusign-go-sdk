/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PowerFormsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PowerFormsRequest{}

// PowerFormsRequest 
type PowerFormsRequest struct {
	// An array of PowerForm objects.
	PowerForms []PowerForm `json:"powerForms,omitempty"`
}

// NewPowerFormsRequest instantiates a new PowerFormsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPowerFormsRequest() *PowerFormsRequest {
	this := PowerFormsRequest{}
	return &this
}

// NewPowerFormsRequestWithDefaults instantiates a new PowerFormsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPowerFormsRequestWithDefaults() *PowerFormsRequest {
	this := PowerFormsRequest{}
	return &this
}

// GetPowerForms returns the PowerForms field value if set, zero value otherwise.
func (o *PowerFormsRequest) GetPowerForms() []PowerForm {
	if o == nil || IsNil(o.PowerForms) {
		var ret []PowerForm
		return ret
	}
	return o.PowerForms
}

// GetPowerFormsOk returns a tuple with the PowerForms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerFormsRequest) GetPowerFormsOk() ([]PowerForm, bool) {
	if o == nil || IsNil(o.PowerForms) {
		return nil, false
	}
	return o.PowerForms, true
}

// HasPowerForms returns a boolean if a field has been set.
func (o *PowerFormsRequest) HasPowerForms() bool {
	if o != nil && !IsNil(o.PowerForms) {
		return true
	}

	return false
}

// SetPowerForms gets a reference to the given []PowerForm and assigns it to the PowerForms field.
func (o *PowerFormsRequest) SetPowerForms(v []PowerForm) {
	o.PowerForms = v
}

func (o PowerFormsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PowerFormsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PowerForms) {
		toSerialize["powerForms"] = o.PowerForms
	}
	return toSerialize, nil
}

type NullablePowerFormsRequest struct {
	value *PowerFormsRequest
	isSet bool
}

func (v NullablePowerFormsRequest) Get() *PowerFormsRequest {
	return v.value
}

func (v *NullablePowerFormsRequest) Set(val *PowerFormsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePowerFormsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePowerFormsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePowerFormsRequest(val *PowerFormsRequest) *NullablePowerFormsRequest {
	return &NullablePowerFormsRequest{value: val, isSet: true}
}

func (v NullablePowerFormsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePowerFormsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


