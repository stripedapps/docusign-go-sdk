/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RadioGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RadioGroup{}

// RadioGroup This group tab is used to place radio buttons on a document. The `radios` property contains a list of [`radio`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/) objects  associated with the group. Only one radio button can be selected in a group. 
type RadioGroup struct {
	// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
	ConditionalParentLabel *string `json:"conditionalParentLabel,omitempty"`
	ConditionalParentLabelMetadata *PropertyMetadata `json:"conditionalParentLabelMetadata,omitempty"`
	// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active. 
	ConditionalParentValue *string `json:"conditionalParentValue,omitempty"`
	ConditionalParentValueMetadata *PropertyMetadata `json:"conditionalParentValueMetadata,omitempty"`
	// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
	DocumentId *string `json:"documentId,omitempty"`
	DocumentIdMetadata *PropertyMetadata `json:"documentIdMetadata,omitempty"`
	// The name of the group. The search_text provided in the call automatically performs a wild card search on group_name.
	GroupName *string `json:"groupName,omitempty"`
	GroupNameMetadata *PropertyMetadata `json:"groupNameMetadata,omitempty"`
	// The initial value of the tab. 
	OriginalValue *string `json:"originalValue,omitempty"`
	OriginalValueMetadata *PropertyMetadata `json:"originalValueMetadata,omitempty"`
	// Specifies the locations and status for radio buttons that are grouped together.
	Radios []Radio `json:"radios,omitempty"`
	// A local reference used to map recipients to other objects, such as specific document tabs.  A `recipientId` must be either an integer or a GUID, and the `recipientId` must be unique within an envelope.  For example, many envelopes assign the first recipient a `recipientId` of `1`. 
	RecipientId *string `json:"recipientId,omitempty"`
	// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
	RecipientIdGuid *string `json:"recipientIdGuid,omitempty"`
	RecipientIdGuidMetadata *PropertyMetadata `json:"recipientIdGuidMetadata,omitempty"`
	RecipientIdMetadata *PropertyMetadata `json:"recipientIdMetadata,omitempty"`
	// When **true** and shared is true, information must be entered in this field to complete the envelope. 
	RequireAll *string `json:"requireAll,omitempty"`
	RequireAllMetadata *PropertyMetadata `json:"requireAllMetadata,omitempty"`
	// Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.
	RequireInitialOnSharedChange *string `json:"requireInitialOnSharedChange,omitempty"`
	RequireInitialOnSharedChangeMetadata *PropertyMetadata `json:"requireInitialOnSharedChangeMetadata,omitempty"`
	// When **true,** this custom tab is shared.
	Shared *string `json:"shared,omitempty"`
	SharedMetadata *PropertyMetadata `json:"sharedMetadata,omitempty"`
	// Reserved for DocuSign.
	ShareToRecipients *string `json:"shareToRecipients,omitempty"`
	ShareToRecipientsMetadata *PropertyMetadata `json:"shareToRecipientsMetadata,omitempty"`
	// Indicates the type of tab (for example, `signHere` or `initialHere`).
	TabType *string `json:"tabType,omitempty"`
	TabTypeMetadata *PropertyMetadata `json:"tabTypeMetadata,omitempty"`
	// When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. 
	TemplateLocked *string `json:"templateLocked,omitempty"`
	TemplateLockedMetadata *PropertyMetadata `json:"templateLockedMetadata,omitempty"`
	// When **true,** the sender may not remove the recipient. Used only when working with template recipients.
	TemplateRequired *string `json:"templateRequired,omitempty"`
	TemplateRequiredMetadata *PropertyMetadata `json:"templateRequiredMetadata,omitempty"`
	// The text of a tooltip that appears when a user hovers over a form field or tab. 
	Tooltip *string `json:"tooltip,omitempty"`
	TooltipMetadata *PropertyMetadata `json:"tooltipMetadata,omitempty"`
	// Specifies the value of the tab. 
	Value *string `json:"value,omitempty"`
	ValueMetadata *PropertyMetadata `json:"valueMetadata,omitempty"`
}

// NewRadioGroup instantiates a new RadioGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRadioGroup() *RadioGroup {
	this := RadioGroup{}
	return &this
}

// NewRadioGroupWithDefaults instantiates a new RadioGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRadioGroupWithDefaults() *RadioGroup {
	this := RadioGroup{}
	return &this
}

// GetConditionalParentLabel returns the ConditionalParentLabel field value if set, zero value otherwise.
func (o *RadioGroup) GetConditionalParentLabel() string {
	if o == nil || IsNil(o.ConditionalParentLabel) {
		var ret string
		return ret
	}
	return *o.ConditionalParentLabel
}

// GetConditionalParentLabelOk returns a tuple with the ConditionalParentLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetConditionalParentLabelOk() (*string, bool) {
	if o == nil || IsNil(o.ConditionalParentLabel) {
		return nil, false
	}
	return o.ConditionalParentLabel, true
}

// HasConditionalParentLabel returns a boolean if a field has been set.
func (o *RadioGroup) HasConditionalParentLabel() bool {
	if o != nil && !IsNil(o.ConditionalParentLabel) {
		return true
	}

	return false
}

// SetConditionalParentLabel gets a reference to the given string and assigns it to the ConditionalParentLabel field.
func (o *RadioGroup) SetConditionalParentLabel(v string) {
	o.ConditionalParentLabel = &v
}

// GetConditionalParentLabelMetadata returns the ConditionalParentLabelMetadata field value if set, zero value otherwise.
func (o *RadioGroup) GetConditionalParentLabelMetadata() PropertyMetadata {
	if o == nil || IsNil(o.ConditionalParentLabelMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.ConditionalParentLabelMetadata
}

// GetConditionalParentLabelMetadataOk returns a tuple with the ConditionalParentLabelMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetConditionalParentLabelMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.ConditionalParentLabelMetadata) {
		return nil, false
	}
	return o.ConditionalParentLabelMetadata, true
}

// HasConditionalParentLabelMetadata returns a boolean if a field has been set.
func (o *RadioGroup) HasConditionalParentLabelMetadata() bool {
	if o != nil && !IsNil(o.ConditionalParentLabelMetadata) {
		return true
	}

	return false
}

// SetConditionalParentLabelMetadata gets a reference to the given PropertyMetadata and assigns it to the ConditionalParentLabelMetadata field.
func (o *RadioGroup) SetConditionalParentLabelMetadata(v PropertyMetadata) {
	o.ConditionalParentLabelMetadata = &v
}

// GetConditionalParentValue returns the ConditionalParentValue field value if set, zero value otherwise.
func (o *RadioGroup) GetConditionalParentValue() string {
	if o == nil || IsNil(o.ConditionalParentValue) {
		var ret string
		return ret
	}
	return *o.ConditionalParentValue
}

// GetConditionalParentValueOk returns a tuple with the ConditionalParentValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetConditionalParentValueOk() (*string, bool) {
	if o == nil || IsNil(o.ConditionalParentValue) {
		return nil, false
	}
	return o.ConditionalParentValue, true
}

// HasConditionalParentValue returns a boolean if a field has been set.
func (o *RadioGroup) HasConditionalParentValue() bool {
	if o != nil && !IsNil(o.ConditionalParentValue) {
		return true
	}

	return false
}

// SetConditionalParentValue gets a reference to the given string and assigns it to the ConditionalParentValue field.
func (o *RadioGroup) SetConditionalParentValue(v string) {
	o.ConditionalParentValue = &v
}

// GetConditionalParentValueMetadata returns the ConditionalParentValueMetadata field value if set, zero value otherwise.
func (o *RadioGroup) GetConditionalParentValueMetadata() PropertyMetadata {
	if o == nil || IsNil(o.ConditionalParentValueMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.ConditionalParentValueMetadata
}

// GetConditionalParentValueMetadataOk returns a tuple with the ConditionalParentValueMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetConditionalParentValueMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.ConditionalParentValueMetadata) {
		return nil, false
	}
	return o.ConditionalParentValueMetadata, true
}

// HasConditionalParentValueMetadata returns a boolean if a field has been set.
func (o *RadioGroup) HasConditionalParentValueMetadata() bool {
	if o != nil && !IsNil(o.ConditionalParentValueMetadata) {
		return true
	}

	return false
}

// SetConditionalParentValueMetadata gets a reference to the given PropertyMetadata and assigns it to the ConditionalParentValueMetadata field.
func (o *RadioGroup) SetConditionalParentValueMetadata(v PropertyMetadata) {
	o.ConditionalParentValueMetadata = &v
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *RadioGroup) GetDocumentId() string {
	if o == nil || IsNil(o.DocumentId) {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetDocumentIdOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentId) {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *RadioGroup) HasDocumentId() bool {
	if o != nil && !IsNil(o.DocumentId) {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *RadioGroup) SetDocumentId(v string) {
	o.DocumentId = &v
}

// GetDocumentIdMetadata returns the DocumentIdMetadata field value if set, zero value otherwise.
func (o *RadioGroup) GetDocumentIdMetadata() PropertyMetadata {
	if o == nil || IsNil(o.DocumentIdMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.DocumentIdMetadata
}

// GetDocumentIdMetadataOk returns a tuple with the DocumentIdMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetDocumentIdMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.DocumentIdMetadata) {
		return nil, false
	}
	return o.DocumentIdMetadata, true
}

// HasDocumentIdMetadata returns a boolean if a field has been set.
func (o *RadioGroup) HasDocumentIdMetadata() bool {
	if o != nil && !IsNil(o.DocumentIdMetadata) {
		return true
	}

	return false
}

// SetDocumentIdMetadata gets a reference to the given PropertyMetadata and assigns it to the DocumentIdMetadata field.
func (o *RadioGroup) SetDocumentIdMetadata(v PropertyMetadata) {
	o.DocumentIdMetadata = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *RadioGroup) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *RadioGroup) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *RadioGroup) SetGroupName(v string) {
	o.GroupName = &v
}

// GetGroupNameMetadata returns the GroupNameMetadata field value if set, zero value otherwise.
func (o *RadioGroup) GetGroupNameMetadata() PropertyMetadata {
	if o == nil || IsNil(o.GroupNameMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.GroupNameMetadata
}

// GetGroupNameMetadataOk returns a tuple with the GroupNameMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetGroupNameMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.GroupNameMetadata) {
		return nil, false
	}
	return o.GroupNameMetadata, true
}

// HasGroupNameMetadata returns a boolean if a field has been set.
func (o *RadioGroup) HasGroupNameMetadata() bool {
	if o != nil && !IsNil(o.GroupNameMetadata) {
		return true
	}

	return false
}

// SetGroupNameMetadata gets a reference to the given PropertyMetadata and assigns it to the GroupNameMetadata field.
func (o *RadioGroup) SetGroupNameMetadata(v PropertyMetadata) {
	o.GroupNameMetadata = &v
}

// GetOriginalValue returns the OriginalValue field value if set, zero value otherwise.
func (o *RadioGroup) GetOriginalValue() string {
	if o == nil || IsNil(o.OriginalValue) {
		var ret string
		return ret
	}
	return *o.OriginalValue
}

// GetOriginalValueOk returns a tuple with the OriginalValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetOriginalValueOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalValue) {
		return nil, false
	}
	return o.OriginalValue, true
}

// HasOriginalValue returns a boolean if a field has been set.
func (o *RadioGroup) HasOriginalValue() bool {
	if o != nil && !IsNil(o.OriginalValue) {
		return true
	}

	return false
}

// SetOriginalValue gets a reference to the given string and assigns it to the OriginalValue field.
func (o *RadioGroup) SetOriginalValue(v string) {
	o.OriginalValue = &v
}

// GetOriginalValueMetadata returns the OriginalValueMetadata field value if set, zero value otherwise.
func (o *RadioGroup) GetOriginalValueMetadata() PropertyMetadata {
	if o == nil || IsNil(o.OriginalValueMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.OriginalValueMetadata
}

// GetOriginalValueMetadataOk returns a tuple with the OriginalValueMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetOriginalValueMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.OriginalValueMetadata) {
		return nil, false
	}
	return o.OriginalValueMetadata, true
}

// HasOriginalValueMetadata returns a boolean if a field has been set.
func (o *RadioGroup) HasOriginalValueMetadata() bool {
	if o != nil && !IsNil(o.OriginalValueMetadata) {
		return true
	}

	return false
}

// SetOriginalValueMetadata gets a reference to the given PropertyMetadata and assigns it to the OriginalValueMetadata field.
func (o *RadioGroup) SetOriginalValueMetadata(v PropertyMetadata) {
	o.OriginalValueMetadata = &v
}

// GetRadios returns the Radios field value if set, zero value otherwise.
func (o *RadioGroup) GetRadios() []Radio {
	if o == nil || IsNil(o.Radios) {
		var ret []Radio
		return ret
	}
	return o.Radios
}

// GetRadiosOk returns a tuple with the Radios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetRadiosOk() ([]Radio, bool) {
	if o == nil || IsNil(o.Radios) {
		return nil, false
	}
	return o.Radios, true
}

// HasRadios returns a boolean if a field has been set.
func (o *RadioGroup) HasRadios() bool {
	if o != nil && !IsNil(o.Radios) {
		return true
	}

	return false
}

// SetRadios gets a reference to the given []Radio and assigns it to the Radios field.
func (o *RadioGroup) SetRadios(v []Radio) {
	o.Radios = v
}

// GetRecipientId returns the RecipientId field value if set, zero value otherwise.
func (o *RadioGroup) GetRecipientId() string {
	if o == nil || IsNil(o.RecipientId) {
		var ret string
		return ret
	}
	return *o.RecipientId
}

// GetRecipientIdOk returns a tuple with the RecipientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetRecipientIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientId) {
		return nil, false
	}
	return o.RecipientId, true
}

// HasRecipientId returns a boolean if a field has been set.
func (o *RadioGroup) HasRecipientId() bool {
	if o != nil && !IsNil(o.RecipientId) {
		return true
	}

	return false
}

// SetRecipientId gets a reference to the given string and assigns it to the RecipientId field.
func (o *RadioGroup) SetRecipientId(v string) {
	o.RecipientId = &v
}

// GetRecipientIdGuid returns the RecipientIdGuid field value if set, zero value otherwise.
func (o *RadioGroup) GetRecipientIdGuid() string {
	if o == nil || IsNil(o.RecipientIdGuid) {
		var ret string
		return ret
	}
	return *o.RecipientIdGuid
}

// GetRecipientIdGuidOk returns a tuple with the RecipientIdGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetRecipientIdGuidOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientIdGuid) {
		return nil, false
	}
	return o.RecipientIdGuid, true
}

// HasRecipientIdGuid returns a boolean if a field has been set.
func (o *RadioGroup) HasRecipientIdGuid() bool {
	if o != nil && !IsNil(o.RecipientIdGuid) {
		return true
	}

	return false
}

// SetRecipientIdGuid gets a reference to the given string and assigns it to the RecipientIdGuid field.
func (o *RadioGroup) SetRecipientIdGuid(v string) {
	o.RecipientIdGuid = &v
}

// GetRecipientIdGuidMetadata returns the RecipientIdGuidMetadata field value if set, zero value otherwise.
func (o *RadioGroup) GetRecipientIdGuidMetadata() PropertyMetadata {
	if o == nil || IsNil(o.RecipientIdGuidMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.RecipientIdGuidMetadata
}

// GetRecipientIdGuidMetadataOk returns a tuple with the RecipientIdGuidMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetRecipientIdGuidMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.RecipientIdGuidMetadata) {
		return nil, false
	}
	return o.RecipientIdGuidMetadata, true
}

// HasRecipientIdGuidMetadata returns a boolean if a field has been set.
func (o *RadioGroup) HasRecipientIdGuidMetadata() bool {
	if o != nil && !IsNil(o.RecipientIdGuidMetadata) {
		return true
	}

	return false
}

// SetRecipientIdGuidMetadata gets a reference to the given PropertyMetadata and assigns it to the RecipientIdGuidMetadata field.
func (o *RadioGroup) SetRecipientIdGuidMetadata(v PropertyMetadata) {
	o.RecipientIdGuidMetadata = &v
}

// GetRecipientIdMetadata returns the RecipientIdMetadata field value if set, zero value otherwise.
func (o *RadioGroup) GetRecipientIdMetadata() PropertyMetadata {
	if o == nil || IsNil(o.RecipientIdMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.RecipientIdMetadata
}

// GetRecipientIdMetadataOk returns a tuple with the RecipientIdMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetRecipientIdMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.RecipientIdMetadata) {
		return nil, false
	}
	return o.RecipientIdMetadata, true
}

// HasRecipientIdMetadata returns a boolean if a field has been set.
func (o *RadioGroup) HasRecipientIdMetadata() bool {
	if o != nil && !IsNil(o.RecipientIdMetadata) {
		return true
	}

	return false
}

// SetRecipientIdMetadata gets a reference to the given PropertyMetadata and assigns it to the RecipientIdMetadata field.
func (o *RadioGroup) SetRecipientIdMetadata(v PropertyMetadata) {
	o.RecipientIdMetadata = &v
}

// GetRequireAll returns the RequireAll field value if set, zero value otherwise.
func (o *RadioGroup) GetRequireAll() string {
	if o == nil || IsNil(o.RequireAll) {
		var ret string
		return ret
	}
	return *o.RequireAll
}

// GetRequireAllOk returns a tuple with the RequireAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetRequireAllOk() (*string, bool) {
	if o == nil || IsNil(o.RequireAll) {
		return nil, false
	}
	return o.RequireAll, true
}

// HasRequireAll returns a boolean if a field has been set.
func (o *RadioGroup) HasRequireAll() bool {
	if o != nil && !IsNil(o.RequireAll) {
		return true
	}

	return false
}

// SetRequireAll gets a reference to the given string and assigns it to the RequireAll field.
func (o *RadioGroup) SetRequireAll(v string) {
	o.RequireAll = &v
}

// GetRequireAllMetadata returns the RequireAllMetadata field value if set, zero value otherwise.
func (o *RadioGroup) GetRequireAllMetadata() PropertyMetadata {
	if o == nil || IsNil(o.RequireAllMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.RequireAllMetadata
}

// GetRequireAllMetadataOk returns a tuple with the RequireAllMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetRequireAllMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.RequireAllMetadata) {
		return nil, false
	}
	return o.RequireAllMetadata, true
}

// HasRequireAllMetadata returns a boolean if a field has been set.
func (o *RadioGroup) HasRequireAllMetadata() bool {
	if o != nil && !IsNil(o.RequireAllMetadata) {
		return true
	}

	return false
}

// SetRequireAllMetadata gets a reference to the given PropertyMetadata and assigns it to the RequireAllMetadata field.
func (o *RadioGroup) SetRequireAllMetadata(v PropertyMetadata) {
	o.RequireAllMetadata = &v
}

// GetRequireInitialOnSharedChange returns the RequireInitialOnSharedChange field value if set, zero value otherwise.
func (o *RadioGroup) GetRequireInitialOnSharedChange() string {
	if o == nil || IsNil(o.RequireInitialOnSharedChange) {
		var ret string
		return ret
	}
	return *o.RequireInitialOnSharedChange
}

// GetRequireInitialOnSharedChangeOk returns a tuple with the RequireInitialOnSharedChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetRequireInitialOnSharedChangeOk() (*string, bool) {
	if o == nil || IsNil(o.RequireInitialOnSharedChange) {
		return nil, false
	}
	return o.RequireInitialOnSharedChange, true
}

// HasRequireInitialOnSharedChange returns a boolean if a field has been set.
func (o *RadioGroup) HasRequireInitialOnSharedChange() bool {
	if o != nil && !IsNil(o.RequireInitialOnSharedChange) {
		return true
	}

	return false
}

// SetRequireInitialOnSharedChange gets a reference to the given string and assigns it to the RequireInitialOnSharedChange field.
func (o *RadioGroup) SetRequireInitialOnSharedChange(v string) {
	o.RequireInitialOnSharedChange = &v
}

// GetRequireInitialOnSharedChangeMetadata returns the RequireInitialOnSharedChangeMetadata field value if set, zero value otherwise.
func (o *RadioGroup) GetRequireInitialOnSharedChangeMetadata() PropertyMetadata {
	if o == nil || IsNil(o.RequireInitialOnSharedChangeMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.RequireInitialOnSharedChangeMetadata
}

// GetRequireInitialOnSharedChangeMetadataOk returns a tuple with the RequireInitialOnSharedChangeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetRequireInitialOnSharedChangeMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.RequireInitialOnSharedChangeMetadata) {
		return nil, false
	}
	return o.RequireInitialOnSharedChangeMetadata, true
}

// HasRequireInitialOnSharedChangeMetadata returns a boolean if a field has been set.
func (o *RadioGroup) HasRequireInitialOnSharedChangeMetadata() bool {
	if o != nil && !IsNil(o.RequireInitialOnSharedChangeMetadata) {
		return true
	}

	return false
}

// SetRequireInitialOnSharedChangeMetadata gets a reference to the given PropertyMetadata and assigns it to the RequireInitialOnSharedChangeMetadata field.
func (o *RadioGroup) SetRequireInitialOnSharedChangeMetadata(v PropertyMetadata) {
	o.RequireInitialOnSharedChangeMetadata = &v
}

// GetShared returns the Shared field value if set, zero value otherwise.
func (o *RadioGroup) GetShared() string {
	if o == nil || IsNil(o.Shared) {
		var ret string
		return ret
	}
	return *o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetSharedOk() (*string, bool) {
	if o == nil || IsNil(o.Shared) {
		return nil, false
	}
	return o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *RadioGroup) HasShared() bool {
	if o != nil && !IsNil(o.Shared) {
		return true
	}

	return false
}

// SetShared gets a reference to the given string and assigns it to the Shared field.
func (o *RadioGroup) SetShared(v string) {
	o.Shared = &v
}

// GetSharedMetadata returns the SharedMetadata field value if set, zero value otherwise.
func (o *RadioGroup) GetSharedMetadata() PropertyMetadata {
	if o == nil || IsNil(o.SharedMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.SharedMetadata
}

// GetSharedMetadataOk returns a tuple with the SharedMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetSharedMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.SharedMetadata) {
		return nil, false
	}
	return o.SharedMetadata, true
}

// HasSharedMetadata returns a boolean if a field has been set.
func (o *RadioGroup) HasSharedMetadata() bool {
	if o != nil && !IsNil(o.SharedMetadata) {
		return true
	}

	return false
}

// SetSharedMetadata gets a reference to the given PropertyMetadata and assigns it to the SharedMetadata field.
func (o *RadioGroup) SetSharedMetadata(v PropertyMetadata) {
	o.SharedMetadata = &v
}

// GetShareToRecipients returns the ShareToRecipients field value if set, zero value otherwise.
func (o *RadioGroup) GetShareToRecipients() string {
	if o == nil || IsNil(o.ShareToRecipients) {
		var ret string
		return ret
	}
	return *o.ShareToRecipients
}

// GetShareToRecipientsOk returns a tuple with the ShareToRecipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetShareToRecipientsOk() (*string, bool) {
	if o == nil || IsNil(o.ShareToRecipients) {
		return nil, false
	}
	return o.ShareToRecipients, true
}

// HasShareToRecipients returns a boolean if a field has been set.
func (o *RadioGroup) HasShareToRecipients() bool {
	if o != nil && !IsNil(o.ShareToRecipients) {
		return true
	}

	return false
}

// SetShareToRecipients gets a reference to the given string and assigns it to the ShareToRecipients field.
func (o *RadioGroup) SetShareToRecipients(v string) {
	o.ShareToRecipients = &v
}

// GetShareToRecipientsMetadata returns the ShareToRecipientsMetadata field value if set, zero value otherwise.
func (o *RadioGroup) GetShareToRecipientsMetadata() PropertyMetadata {
	if o == nil || IsNil(o.ShareToRecipientsMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.ShareToRecipientsMetadata
}

// GetShareToRecipientsMetadataOk returns a tuple with the ShareToRecipientsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetShareToRecipientsMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.ShareToRecipientsMetadata) {
		return nil, false
	}
	return o.ShareToRecipientsMetadata, true
}

// HasShareToRecipientsMetadata returns a boolean if a field has been set.
func (o *RadioGroup) HasShareToRecipientsMetadata() bool {
	if o != nil && !IsNil(o.ShareToRecipientsMetadata) {
		return true
	}

	return false
}

// SetShareToRecipientsMetadata gets a reference to the given PropertyMetadata and assigns it to the ShareToRecipientsMetadata field.
func (o *RadioGroup) SetShareToRecipientsMetadata(v PropertyMetadata) {
	o.ShareToRecipientsMetadata = &v
}

// GetTabType returns the TabType field value if set, zero value otherwise.
func (o *RadioGroup) GetTabType() string {
	if o == nil || IsNil(o.TabType) {
		var ret string
		return ret
	}
	return *o.TabType
}

// GetTabTypeOk returns a tuple with the TabType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetTabTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TabType) {
		return nil, false
	}
	return o.TabType, true
}

// HasTabType returns a boolean if a field has been set.
func (o *RadioGroup) HasTabType() bool {
	if o != nil && !IsNil(o.TabType) {
		return true
	}

	return false
}

// SetTabType gets a reference to the given string and assigns it to the TabType field.
func (o *RadioGroup) SetTabType(v string) {
	o.TabType = &v
}

// GetTabTypeMetadata returns the TabTypeMetadata field value if set, zero value otherwise.
func (o *RadioGroup) GetTabTypeMetadata() PropertyMetadata {
	if o == nil || IsNil(o.TabTypeMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.TabTypeMetadata
}

// GetTabTypeMetadataOk returns a tuple with the TabTypeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetTabTypeMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.TabTypeMetadata) {
		return nil, false
	}
	return o.TabTypeMetadata, true
}

// HasTabTypeMetadata returns a boolean if a field has been set.
func (o *RadioGroup) HasTabTypeMetadata() bool {
	if o != nil && !IsNil(o.TabTypeMetadata) {
		return true
	}

	return false
}

// SetTabTypeMetadata gets a reference to the given PropertyMetadata and assigns it to the TabTypeMetadata field.
func (o *RadioGroup) SetTabTypeMetadata(v PropertyMetadata) {
	o.TabTypeMetadata = &v
}

// GetTemplateLocked returns the TemplateLocked field value if set, zero value otherwise.
func (o *RadioGroup) GetTemplateLocked() string {
	if o == nil || IsNil(o.TemplateLocked) {
		var ret string
		return ret
	}
	return *o.TemplateLocked
}

// GetTemplateLockedOk returns a tuple with the TemplateLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetTemplateLockedOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateLocked) {
		return nil, false
	}
	return o.TemplateLocked, true
}

// HasTemplateLocked returns a boolean if a field has been set.
func (o *RadioGroup) HasTemplateLocked() bool {
	if o != nil && !IsNil(o.TemplateLocked) {
		return true
	}

	return false
}

// SetTemplateLocked gets a reference to the given string and assigns it to the TemplateLocked field.
func (o *RadioGroup) SetTemplateLocked(v string) {
	o.TemplateLocked = &v
}

// GetTemplateLockedMetadata returns the TemplateLockedMetadata field value if set, zero value otherwise.
func (o *RadioGroup) GetTemplateLockedMetadata() PropertyMetadata {
	if o == nil || IsNil(o.TemplateLockedMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.TemplateLockedMetadata
}

// GetTemplateLockedMetadataOk returns a tuple with the TemplateLockedMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetTemplateLockedMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.TemplateLockedMetadata) {
		return nil, false
	}
	return o.TemplateLockedMetadata, true
}

// HasTemplateLockedMetadata returns a boolean if a field has been set.
func (o *RadioGroup) HasTemplateLockedMetadata() bool {
	if o != nil && !IsNil(o.TemplateLockedMetadata) {
		return true
	}

	return false
}

// SetTemplateLockedMetadata gets a reference to the given PropertyMetadata and assigns it to the TemplateLockedMetadata field.
func (o *RadioGroup) SetTemplateLockedMetadata(v PropertyMetadata) {
	o.TemplateLockedMetadata = &v
}

// GetTemplateRequired returns the TemplateRequired field value if set, zero value otherwise.
func (o *RadioGroup) GetTemplateRequired() string {
	if o == nil || IsNil(o.TemplateRequired) {
		var ret string
		return ret
	}
	return *o.TemplateRequired
}

// GetTemplateRequiredOk returns a tuple with the TemplateRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetTemplateRequiredOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateRequired) {
		return nil, false
	}
	return o.TemplateRequired, true
}

// HasTemplateRequired returns a boolean if a field has been set.
func (o *RadioGroup) HasTemplateRequired() bool {
	if o != nil && !IsNil(o.TemplateRequired) {
		return true
	}

	return false
}

// SetTemplateRequired gets a reference to the given string and assigns it to the TemplateRequired field.
func (o *RadioGroup) SetTemplateRequired(v string) {
	o.TemplateRequired = &v
}

// GetTemplateRequiredMetadata returns the TemplateRequiredMetadata field value if set, zero value otherwise.
func (o *RadioGroup) GetTemplateRequiredMetadata() PropertyMetadata {
	if o == nil || IsNil(o.TemplateRequiredMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.TemplateRequiredMetadata
}

// GetTemplateRequiredMetadataOk returns a tuple with the TemplateRequiredMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetTemplateRequiredMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.TemplateRequiredMetadata) {
		return nil, false
	}
	return o.TemplateRequiredMetadata, true
}

// HasTemplateRequiredMetadata returns a boolean if a field has been set.
func (o *RadioGroup) HasTemplateRequiredMetadata() bool {
	if o != nil && !IsNil(o.TemplateRequiredMetadata) {
		return true
	}

	return false
}

// SetTemplateRequiredMetadata gets a reference to the given PropertyMetadata and assigns it to the TemplateRequiredMetadata field.
func (o *RadioGroup) SetTemplateRequiredMetadata(v PropertyMetadata) {
	o.TemplateRequiredMetadata = &v
}

// GetTooltip returns the Tooltip field value if set, zero value otherwise.
func (o *RadioGroup) GetTooltip() string {
	if o == nil || IsNil(o.Tooltip) {
		var ret string
		return ret
	}
	return *o.Tooltip
}

// GetTooltipOk returns a tuple with the Tooltip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetTooltipOk() (*string, bool) {
	if o == nil || IsNil(o.Tooltip) {
		return nil, false
	}
	return o.Tooltip, true
}

// HasTooltip returns a boolean if a field has been set.
func (o *RadioGroup) HasTooltip() bool {
	if o != nil && !IsNil(o.Tooltip) {
		return true
	}

	return false
}

// SetTooltip gets a reference to the given string and assigns it to the Tooltip field.
func (o *RadioGroup) SetTooltip(v string) {
	o.Tooltip = &v
}

// GetTooltipMetadata returns the TooltipMetadata field value if set, zero value otherwise.
func (o *RadioGroup) GetTooltipMetadata() PropertyMetadata {
	if o == nil || IsNil(o.TooltipMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.TooltipMetadata
}

// GetTooltipMetadataOk returns a tuple with the TooltipMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetTooltipMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.TooltipMetadata) {
		return nil, false
	}
	return o.TooltipMetadata, true
}

// HasTooltipMetadata returns a boolean if a field has been set.
func (o *RadioGroup) HasTooltipMetadata() bool {
	if o != nil && !IsNil(o.TooltipMetadata) {
		return true
	}

	return false
}

// SetTooltipMetadata gets a reference to the given PropertyMetadata and assigns it to the TooltipMetadata field.
func (o *RadioGroup) SetTooltipMetadata(v PropertyMetadata) {
	o.TooltipMetadata = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *RadioGroup) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *RadioGroup) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *RadioGroup) SetValue(v string) {
	o.Value = &v
}

// GetValueMetadata returns the ValueMetadata field value if set, zero value otherwise.
func (o *RadioGroup) GetValueMetadata() PropertyMetadata {
	if o == nil || IsNil(o.ValueMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.ValueMetadata
}

// GetValueMetadataOk returns a tuple with the ValueMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioGroup) GetValueMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.ValueMetadata) {
		return nil, false
	}
	return o.ValueMetadata, true
}

// HasValueMetadata returns a boolean if a field has been set.
func (o *RadioGroup) HasValueMetadata() bool {
	if o != nil && !IsNil(o.ValueMetadata) {
		return true
	}

	return false
}

// SetValueMetadata gets a reference to the given PropertyMetadata and assigns it to the ValueMetadata field.
func (o *RadioGroup) SetValueMetadata(v PropertyMetadata) {
	o.ValueMetadata = &v
}

func (o RadioGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RadioGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConditionalParentLabel) {
		toSerialize["conditionalParentLabel"] = o.ConditionalParentLabel
	}
	if !IsNil(o.ConditionalParentLabelMetadata) {
		toSerialize["conditionalParentLabelMetadata"] = o.ConditionalParentLabelMetadata
	}
	if !IsNil(o.ConditionalParentValue) {
		toSerialize["conditionalParentValue"] = o.ConditionalParentValue
	}
	if !IsNil(o.ConditionalParentValueMetadata) {
		toSerialize["conditionalParentValueMetadata"] = o.ConditionalParentValueMetadata
	}
	if !IsNil(o.DocumentId) {
		toSerialize["documentId"] = o.DocumentId
	}
	if !IsNil(o.DocumentIdMetadata) {
		toSerialize["documentIdMetadata"] = o.DocumentIdMetadata
	}
	if !IsNil(o.GroupName) {
		toSerialize["groupName"] = o.GroupName
	}
	if !IsNil(o.GroupNameMetadata) {
		toSerialize["groupNameMetadata"] = o.GroupNameMetadata
	}
	if !IsNil(o.OriginalValue) {
		toSerialize["originalValue"] = o.OriginalValue
	}
	if !IsNil(o.OriginalValueMetadata) {
		toSerialize["originalValueMetadata"] = o.OriginalValueMetadata
	}
	if !IsNil(o.Radios) {
		toSerialize["radios"] = o.Radios
	}
	if !IsNil(o.RecipientId) {
		toSerialize["recipientId"] = o.RecipientId
	}
	if !IsNil(o.RecipientIdGuid) {
		toSerialize["recipientIdGuid"] = o.RecipientIdGuid
	}
	if !IsNil(o.RecipientIdGuidMetadata) {
		toSerialize["recipientIdGuidMetadata"] = o.RecipientIdGuidMetadata
	}
	if !IsNil(o.RecipientIdMetadata) {
		toSerialize["recipientIdMetadata"] = o.RecipientIdMetadata
	}
	if !IsNil(o.RequireAll) {
		toSerialize["requireAll"] = o.RequireAll
	}
	if !IsNil(o.RequireAllMetadata) {
		toSerialize["requireAllMetadata"] = o.RequireAllMetadata
	}
	if !IsNil(o.RequireInitialOnSharedChange) {
		toSerialize["requireInitialOnSharedChange"] = o.RequireInitialOnSharedChange
	}
	if !IsNil(o.RequireInitialOnSharedChangeMetadata) {
		toSerialize["requireInitialOnSharedChangeMetadata"] = o.RequireInitialOnSharedChangeMetadata
	}
	if !IsNil(o.Shared) {
		toSerialize["shared"] = o.Shared
	}
	if !IsNil(o.SharedMetadata) {
		toSerialize["sharedMetadata"] = o.SharedMetadata
	}
	if !IsNil(o.ShareToRecipients) {
		toSerialize["shareToRecipients"] = o.ShareToRecipients
	}
	if !IsNil(o.ShareToRecipientsMetadata) {
		toSerialize["shareToRecipientsMetadata"] = o.ShareToRecipientsMetadata
	}
	if !IsNil(o.TabType) {
		toSerialize["tabType"] = o.TabType
	}
	if !IsNil(o.TabTypeMetadata) {
		toSerialize["tabTypeMetadata"] = o.TabTypeMetadata
	}
	if !IsNil(o.TemplateLocked) {
		toSerialize["templateLocked"] = o.TemplateLocked
	}
	if !IsNil(o.TemplateLockedMetadata) {
		toSerialize["templateLockedMetadata"] = o.TemplateLockedMetadata
	}
	if !IsNil(o.TemplateRequired) {
		toSerialize["templateRequired"] = o.TemplateRequired
	}
	if !IsNil(o.TemplateRequiredMetadata) {
		toSerialize["templateRequiredMetadata"] = o.TemplateRequiredMetadata
	}
	if !IsNil(o.Tooltip) {
		toSerialize["tooltip"] = o.Tooltip
	}
	if !IsNil(o.TooltipMetadata) {
		toSerialize["tooltipMetadata"] = o.TooltipMetadata
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.ValueMetadata) {
		toSerialize["valueMetadata"] = o.ValueMetadata
	}
	return toSerialize, nil
}

type NullableRadioGroup struct {
	value *RadioGroup
	isSet bool
}

func (v NullableRadioGroup) Get() *RadioGroup {
	return v.value
}

func (v *NullableRadioGroup) Set(val *RadioGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableRadioGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableRadioGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRadioGroup(val *RadioGroup) *NullableRadioGroup {
	return &NullableRadioGroup{value: val, isSet: true}
}

func (v NullableRadioGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRadioGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


