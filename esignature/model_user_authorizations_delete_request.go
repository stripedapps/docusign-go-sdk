/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserAuthorizationsDeleteRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserAuthorizationsDeleteRequest{}

// UserAuthorizationsDeleteRequest 
type UserAuthorizationsDeleteRequest struct {
	// 
	Authorizations []string `json:"authorizations,omitempty"`
}

// NewUserAuthorizationsDeleteRequest instantiates a new UserAuthorizationsDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAuthorizationsDeleteRequest() *UserAuthorizationsDeleteRequest {
	this := UserAuthorizationsDeleteRequest{}
	return &this
}

// NewUserAuthorizationsDeleteRequestWithDefaults instantiates a new UserAuthorizationsDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAuthorizationsDeleteRequestWithDefaults() *UserAuthorizationsDeleteRequest {
	this := UserAuthorizationsDeleteRequest{}
	return &this
}

// GetAuthorizations returns the Authorizations field value if set, zero value otherwise.
func (o *UserAuthorizationsDeleteRequest) GetAuthorizations() []string {
	if o == nil || IsNil(o.Authorizations) {
		var ret []string
		return ret
	}
	return o.Authorizations
}

// GetAuthorizationsOk returns a tuple with the Authorizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAuthorizationsDeleteRequest) GetAuthorizationsOk() ([]string, bool) {
	if o == nil || IsNil(o.Authorizations) {
		return nil, false
	}
	return o.Authorizations, true
}

// HasAuthorizations returns a boolean if a field has been set.
func (o *UserAuthorizationsDeleteRequest) HasAuthorizations() bool {
	if o != nil && !IsNil(o.Authorizations) {
		return true
	}

	return false
}

// SetAuthorizations gets a reference to the given []string and assigns it to the Authorizations field.
func (o *UserAuthorizationsDeleteRequest) SetAuthorizations(v []string) {
	o.Authorizations = v
}

func (o UserAuthorizationsDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserAuthorizationsDeleteRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Authorizations) {
		toSerialize["authorizations"] = o.Authorizations
	}
	return toSerialize, nil
}

type NullableUserAuthorizationsDeleteRequest struct {
	value *UserAuthorizationsDeleteRequest
	isSet bool
}

func (v NullableUserAuthorizationsDeleteRequest) Get() *UserAuthorizationsDeleteRequest {
	return v.value
}

func (v *NullableUserAuthorizationsDeleteRequest) Set(val *UserAuthorizationsDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAuthorizationsDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAuthorizationsDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAuthorizationsDeleteRequest(val *UserAuthorizationsDeleteRequest) *NullableUserAuthorizationsDeleteRequest {
	return &NullableUserAuthorizationsDeleteRequest{value: val, isSet: true}
}

func (v NullableUserAuthorizationsDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAuthorizationsDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


