/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DocGenFormFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocGenFormFields{}

// DocGenFormFields A collection of document generation fields.
type DocGenFormFields struct {
	// The status of the document. This is a read-only property. Valid values:  - `mergesuceeded` - `created` - `hassyntaxerror` 
	DocGenDocumentStatus *string `json:"docGenDocumentStatus,omitempty"`
	// A list of `docGenSyntaxError` objects.
	DocGenErrors []DocGenSyntaxError `json:"docGenErrors,omitempty"`
	// A list of `docGenFormField` objects.
	DocGenFormFieldList []DocGenFormField `json:"docGenFormFieldList,omitempty"`
	// The GUID of the document.
	DocumentId *string `json:"documentId,omitempty"`
}

// NewDocGenFormFields instantiates a new DocGenFormFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocGenFormFields() *DocGenFormFields {
	this := DocGenFormFields{}
	return &this
}

// NewDocGenFormFieldsWithDefaults instantiates a new DocGenFormFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocGenFormFieldsWithDefaults() *DocGenFormFields {
	this := DocGenFormFields{}
	return &this
}

// GetDocGenDocumentStatus returns the DocGenDocumentStatus field value if set, zero value otherwise.
func (o *DocGenFormFields) GetDocGenDocumentStatus() string {
	if o == nil || IsNil(o.DocGenDocumentStatus) {
		var ret string
		return ret
	}
	return *o.DocGenDocumentStatus
}

// GetDocGenDocumentStatusOk returns a tuple with the DocGenDocumentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocGenFormFields) GetDocGenDocumentStatusOk() (*string, bool) {
	if o == nil || IsNil(o.DocGenDocumentStatus) {
		return nil, false
	}
	return o.DocGenDocumentStatus, true
}

// HasDocGenDocumentStatus returns a boolean if a field has been set.
func (o *DocGenFormFields) HasDocGenDocumentStatus() bool {
	if o != nil && !IsNil(o.DocGenDocumentStatus) {
		return true
	}

	return false
}

// SetDocGenDocumentStatus gets a reference to the given string and assigns it to the DocGenDocumentStatus field.
func (o *DocGenFormFields) SetDocGenDocumentStatus(v string) {
	o.DocGenDocumentStatus = &v
}

// GetDocGenErrors returns the DocGenErrors field value if set, zero value otherwise.
func (o *DocGenFormFields) GetDocGenErrors() []DocGenSyntaxError {
	if o == nil || IsNil(o.DocGenErrors) {
		var ret []DocGenSyntaxError
		return ret
	}
	return o.DocGenErrors
}

// GetDocGenErrorsOk returns a tuple with the DocGenErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocGenFormFields) GetDocGenErrorsOk() ([]DocGenSyntaxError, bool) {
	if o == nil || IsNil(o.DocGenErrors) {
		return nil, false
	}
	return o.DocGenErrors, true
}

// HasDocGenErrors returns a boolean if a field has been set.
func (o *DocGenFormFields) HasDocGenErrors() bool {
	if o != nil && !IsNil(o.DocGenErrors) {
		return true
	}

	return false
}

// SetDocGenErrors gets a reference to the given []DocGenSyntaxError and assigns it to the DocGenErrors field.
func (o *DocGenFormFields) SetDocGenErrors(v []DocGenSyntaxError) {
	o.DocGenErrors = v
}

// GetDocGenFormFieldList returns the DocGenFormFieldList field value if set, zero value otherwise.
func (o *DocGenFormFields) GetDocGenFormFieldList() []DocGenFormField {
	if o == nil || IsNil(o.DocGenFormFieldList) {
		var ret []DocGenFormField
		return ret
	}
	return o.DocGenFormFieldList
}

// GetDocGenFormFieldListOk returns a tuple with the DocGenFormFieldList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocGenFormFields) GetDocGenFormFieldListOk() ([]DocGenFormField, bool) {
	if o == nil || IsNil(o.DocGenFormFieldList) {
		return nil, false
	}
	return o.DocGenFormFieldList, true
}

// HasDocGenFormFieldList returns a boolean if a field has been set.
func (o *DocGenFormFields) HasDocGenFormFieldList() bool {
	if o != nil && !IsNil(o.DocGenFormFieldList) {
		return true
	}

	return false
}

// SetDocGenFormFieldList gets a reference to the given []DocGenFormField and assigns it to the DocGenFormFieldList field.
func (o *DocGenFormFields) SetDocGenFormFieldList(v []DocGenFormField) {
	o.DocGenFormFieldList = v
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *DocGenFormFields) GetDocumentId() string {
	if o == nil || IsNil(o.DocumentId) {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocGenFormFields) GetDocumentIdOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentId) {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *DocGenFormFields) HasDocumentId() bool {
	if o != nil && !IsNil(o.DocumentId) {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *DocGenFormFields) SetDocumentId(v string) {
	o.DocumentId = &v
}

func (o DocGenFormFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocGenFormFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DocGenDocumentStatus) {
		toSerialize["docGenDocumentStatus"] = o.DocGenDocumentStatus
	}
	if !IsNil(o.DocGenErrors) {
		toSerialize["docGenErrors"] = o.DocGenErrors
	}
	if !IsNil(o.DocGenFormFieldList) {
		toSerialize["docGenFormFieldList"] = o.DocGenFormFieldList
	}
	if !IsNil(o.DocumentId) {
		toSerialize["documentId"] = o.DocumentId
	}
	return toSerialize, nil
}

type NullableDocGenFormFields struct {
	value *DocGenFormFields
	isSet bool
}

func (v NullableDocGenFormFields) Get() *DocGenFormFields {
	return v.value
}

func (v *NullableDocGenFormFields) Set(val *DocGenFormFields) {
	v.value = val
	v.isSet = true
}

func (v NullableDocGenFormFields) IsSet() bool {
	return v.isSet
}

func (v *NullableDocGenFormFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocGenFormFields(val *DocGenFormFields) *NullableDocGenFormFields {
	return &NullableDocGenFormFields{value: val, isSet: true}
}

func (v NullableDocGenFormFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocGenFormFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


