/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Email type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Email{}

// Email A tab that allows the recipient to enter an email address. This is a one-line field that checks that a valid email address is entered. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.  When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response. 
type Email struct {
	// When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.  First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.  Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.  The default value is **true.** 
	AnchorAllowWhiteSpaceInCharacters *string `json:"anchorAllowWhiteSpaceInCharacters,omitempty"`
	AnchorAllowWhiteSpaceInCharactersMetadata *PropertyMetadata `json:"anchorAllowWhiteSpaceInCharactersMetadata,omitempty"`
	// This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**  For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).  **Note:** You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
	AnchorCaseSensitive *string `json:"anchorCaseSensitive,omitempty"`
	AnchorCaseSensitiveMetadata *PropertyMetadata `json:"anchorCaseSensitiveMetadata,omitempty"`
	// This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :  - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value. - `right`: Aligns the tabâ€™s left side with the last character of the matching anchor word.  **Note:** You can only specify the value of this property in POST requests.  [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/ 
	AnchorHorizontalAlignment *string `json:"anchorHorizontalAlignment,omitempty"`
	AnchorHorizontalAlignmentMetadata *PropertyMetadata `json:"anchorHorizontalAlignmentMetadata,omitempty"`
	// When **true,** this tab is ignored if the `anchorString` is not found in the document.
	AnchorIgnoreIfNotPresent *string `json:"anchorIgnoreIfNotPresent,omitempty"`
	AnchorIgnoreIfNotPresentMetadata *PropertyMetadata `json:"anchorIgnoreIfNotPresentMetadata,omitempty"`
	// When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**  For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.  This functionality uses the following rules:  - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:    $~><|^+=    For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`  - Strings embedded in other strings are ignored during the matching process.  - In words that have dashes, the parts separated by dashes are treated as distinct words.    Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**  - Letters with accent marks are treated as distinct characters from their unaccented counterparts.  - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.    Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.  - Unlike punctuation, numbers are not ignored when finding anchor words.    Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).   **Note:** You can only specify the value of this property in POST requests.  [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/ 
	AnchorMatchWholeWord *string `json:"anchorMatchWholeWord,omitempty"`
	AnchorMatchWholeWordMetadata *PropertyMetadata `json:"anchorMatchWholeWordMetadata,omitempty"`
	// Specifies the string to find in the document and use as the basis for tab placement.
	AnchorString *string `json:"anchorString,omitempty"`
	AnchorStringMetadata *PropertyMetadata `json:"anchorStringMetadata,omitempty"`
	// Reserved for DocuSign.
	AnchorTabProcessorVersion *string `json:"anchorTabProcessorVersion,omitempty"`
	AnchorTabProcessorVersionMetadata *PropertyMetadata `json:"anchorTabProcessorVersionMetadata,omitempty"`
	// Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:  - `pixels` (default) - `inches` - `mms` - `cms` 
	AnchorUnits *string `json:"anchorUnits,omitempty"`
	AnchorUnitsMetadata *PropertyMetadata `json:"anchorUnitsMetadata,omitempty"`
	// Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`. 
	AnchorXOffset *string `json:"anchorXOffset,omitempty"`
	AnchorXOffsetMetadata *PropertyMetadata `json:"anchorXOffsetMetadata,omitempty"`
	// Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`. 
	AnchorYOffset *string `json:"anchorYOffset,omitempty"`
	AnchorYOffsetMetadata *PropertyMetadata `json:"anchorYOffsetMetadata,omitempty"`
	// When **true,** the information in the tab is bold.
	Bold *string `json:"bold,omitempty"`
	BoldMetadata *PropertyMetadata `json:"boldMetadata,omitempty"`
	// 
	Caption *string `json:"caption,omitempty"`
	CaptionMetadata *PropertyMetadata `json:"captionMetadata,omitempty"`
	// When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.  When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.  This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
	ConcealValueOnDocument *string `json:"concealValueOnDocument,omitempty"`
	ConcealValueOnDocumentMetadata *PropertyMetadata `json:"concealValueOnDocumentMetadata,omitempty"`
	// For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.
	ConditionalParentLabel *string `json:"conditionalParentLabel,omitempty"`
	ConditionalParentLabelMetadata *PropertyMetadata `json:"conditionalParentLabelMetadata,omitempty"`
	// For conditional fields, this is the value of the parent tab that controls the tab's visibility.  If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active. 
	ConditionalParentValue *string `json:"conditionalParentValue,omitempty"`
	ConditionalParentValueMetadata *PropertyMetadata `json:"conditionalParentValueMetadata,omitempty"`
	// The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.
	CustomTabId *string `json:"customTabId,omitempty"`
	CustomTabIdMetadata *PropertyMetadata `json:"customTabIdMetadata,omitempty"`
	// When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.
	DisableAutoSize *string `json:"disableAutoSize,omitempty"`
	DisableAutoSizeMetadata *PropertyMetadata `json:"disableAutoSizeMetadata,omitempty"`
	// Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
	DocumentId *string `json:"documentId,omitempty"`
	DocumentIdMetadata *PropertyMetadata `json:"documentIdMetadata,omitempty"`
	ErrorDetails *ErrorDetails `json:"errorDetails,omitempty"`
	// The font to be used for the tab value. Supported fonts include:  - Default - Arial - ArialNarrow - Calibri - CourierNew - Garamond - Georgia - Helvetica - LucidaConsole - MSGothic - MSMincho - OCR-A - Tahoma - TimesNewRoman - Trebuchet - Verdana 
	Font *string `json:"font,omitempty"`
	// The font color to use for the information in the tab. Possible values are:   - Black - BrightBlue - BrightRed - DarkGreen - DarkRed - Gold - Green - NavyBlue - Purple - White 
	FontColor *string `json:"fontColor,omitempty"`
	FontColorMetadata *PropertyMetadata `json:"fontColorMetadata,omitempty"`
	FontMetadata *PropertyMetadata `json:"fontMetadata,omitempty"`
	// The font size used for the information in the tab. Possible values are:  - Size7 - Size8 - Size9 - Size10 - Size11 - Size12 - Size14 - Size16 - Size18 - Size20 - Size22 - Size24 - Size26 - Size28 - Size36 - Size48 - Size72
	FontSize *string `json:"fontSize,omitempty"`
	FontSizeMetadata *PropertyMetadata `json:"fontSizeMetadata,omitempty"`
	// An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.
	FormOrder *string `json:"formOrder,omitempty"`
	FormOrderMetadata *PropertyMetadata `json:"formOrderMetadata,omitempty"`
	// A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.
	FormPageLabel *string `json:"formPageLabel,omitempty"`
	FormPageLabelMetadata *PropertyMetadata `json:"formPageLabelMetadata,omitempty"`
	// An integer specifying the order in which to present the guided form pages.
	FormPageNumber *string `json:"formPageNumber,omitempty"`
	FormPageNumberMetadata *PropertyMetadata `json:"formPageNumberMetadata,omitempty"`
	// The height of the tab in pixels. Must be an integer.
	Height *string `json:"height,omitempty"`
	HeightMetadata *PropertyMetadata `json:"heightMetadata,omitempty"`
	// When **true,** the information in the tab is italic.
	Italic *string `json:"italic,omitempty"`
	ItalicMetadata *PropertyMetadata `json:"italicMetadata,omitempty"`
	LocalePolicy *LocalePolicyTab `json:"localePolicy,omitempty"`
	// When **true,** the signer cannot change the data of the custom tab.
	Locked *string `json:"locked,omitempty"`
	LockedMetadata *PropertyMetadata `json:"lockedMetadata,omitempty"`
	// An optional value that describes the maximum length of the property when the property is a string.
	MaxLength *string `json:"maxLength,omitempty"`
	MaxLengthMetadata *PropertyMetadata `json:"maxLengthMetadata,omitempty"`
	MergeField *MergeField `json:"mergeField,omitempty"`
	// Reserved for DocuSign.
	MergeFieldXml *string `json:"mergeFieldXml,omitempty"`
	// The name of the tab. For example, `Sign Here` or `Initial Here`.  If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
	Name *string `json:"name,omitempty"`
	NameMetadata *PropertyMetadata `json:"nameMetadata,omitempty"`
	// The initial value of the tab. 
	OriginalValue *string `json:"originalValue,omitempty"`
	OriginalValueMetadata *PropertyMetadata `json:"originalValueMetadata,omitempty"`
	// The page number on which the tab is located. For supplemental documents, this value must be `1`.
	PageNumber *string `json:"pageNumber,omitempty"`
	PageNumberMetadata *PropertyMetadata `json:"pageNumberMetadata,omitempty"`
	// A local reference used to map recipients to other objects, such as specific document tabs.  A `recipientId` must be either an integer or a GUID, and the `recipientId` must be unique within an envelope.  For example, many envelopes assign the first recipient a `recipientId` of `1`. 
	RecipientId *string `json:"recipientId,omitempty"`
	// The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.
	RecipientIdGuid *string `json:"recipientIdGuid,omitempty"`
	RecipientIdGuidMetadata *PropertyMetadata `json:"recipientIdGuidMetadata,omitempty"`
	RecipientIdMetadata *PropertyMetadata `json:"recipientIdMetadata,omitempty"`
	// When **true** and shared is true, information must be entered in this field to complete the envelope. 
	RequireAll *string `json:"requireAll,omitempty"`
	RequireAllMetadata *PropertyMetadata `json:"requireAllMetadata,omitempty"`
	// When **true,** the signer is required to fill out this tab.
	Required *string `json:"required,omitempty"`
	RequiredMetadata *PropertyMetadata `json:"requiredMetadata,omitempty"`
	// Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.
	RequireInitialOnSharedChange *string `json:"requireInitialOnSharedChange,omitempty"`
	RequireInitialOnSharedChangeMetadata *PropertyMetadata `json:"requireInitialOnSharedChangeMetadata,omitempty"`
	// When **true,** the sender must populate the tab before an envelope can be sent using the template.   This value tab can only be changed by modifying (PUT) the template.   Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
	SenderRequired *string `json:"senderRequired,omitempty"`
	SenderRequiredMetadata *PropertyMetadata `json:"senderRequiredMetadata,omitempty"`
	// When **true,** this tab is shared.
	Shared *string `json:"shared,omitempty"`
	SharedMetadata *PropertyMetadata `json:"sharedMetadata,omitempty"`
	// Reserved for DocuSign.
	ShareToRecipients *string `json:"shareToRecipients,omitempty"`
	ShareToRecipientsMetadata *PropertyMetadata `json:"shareToRecipientsMetadata,omitempty"`
	SmartContractInformation *SmartContractInformation `json:"smartContractInformation,omitempty"`
	// Reserved for DocuSign.
	Source *string `json:"source,omitempty"`
	// The status of the tab. Possible values are:  - `active`: The tab is active, but the recipient has not yet interacted with it. - `signed`: The recipient signed the tab. - `declined`: The recipient declined the envelope. - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`). 
	Status *string `json:"status,omitempty"`
	StatusMetadata *PropertyMetadata `json:"statusMetadata,omitempty"`
	// An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.  To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
	TabGroupLabels []string `json:"tabGroupLabels,omitempty"`
	TabGroupLabelsMetadata *PropertyMetadata `json:"tabGroupLabelsMetadata,omitempty"`
	// The unique identifier for the tab.
	TabId *string `json:"tabId,omitempty"`
	TabIdMetadata *PropertyMetadata `json:"tabIdMetadata,omitempty"`
	// The label associated with the tab. This value may be an empty string. If no value is provided, the tab type is used as the value.  Maximum Length: 500 characters. 
	TabLabel *string `json:"tabLabel,omitempty"`
	TabLabelMetadata *PropertyMetadata `json:"tabLabelMetadata,omitempty"`
	// A positive integer that sets the order the tab is navigated to during signing.  Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
	TabOrder *string `json:"tabOrder,omitempty"`
	TabOrderMetadata *PropertyMetadata `json:"tabOrderMetadata,omitempty"`
	// Indicates the type of tab (for example, `signHere` or `initialHere`).
	TabType *string `json:"tabType,omitempty"`
	TabTypeMetadata *PropertyMetadata `json:"tabTypeMetadata,omitempty"`
	// When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. 
	TemplateLocked *string `json:"templateLocked,omitempty"`
	TemplateLockedMetadata *PropertyMetadata `json:"templateLockedMetadata,omitempty"`
	// When **true,** the sender may not remove the recipient. Used only when working with template recipients.
	TemplateRequired *string `json:"templateRequired,omitempty"`
	TemplateRequiredMetadata *PropertyMetadata `json:"templateRequiredMetadata,omitempty"`
	// The text of a tooltip that appears when a user hovers over a form field or tab. 
	Tooltip *string `json:"tooltip,omitempty"`
	ToolTipMetadata *PropertyMetadata `json:"toolTipMetadata,omitempty"`
	// When **true,** the information in the tab is underlined.
	Underline *string `json:"underline,omitempty"`
	UnderlineMetadata *PropertyMetadata `json:"underlineMetadata,omitempty"`
	// The message displayed if the custom tab fails input validation (either custom of embedded).
	ValidationMessage *string `json:"validationMessage,omitempty"`
	ValidationMessageMetadata *PropertyMetadata `json:"validationMessageMetadata,omitempty"`
	// A regular expression used to validate input for the tab.
	ValidationPattern *string `json:"validationPattern,omitempty"`
	ValidationPatternMetadata *PropertyMetadata `json:"validationPatternMetadata,omitempty"`
	// Specifies the value of the tab. 
	Value *string `json:"value,omitempty"`
	ValueMetadata *PropertyMetadata `json:"valueMetadata,omitempty"`
	// The width of the tab in pixels. Must be an integer.
	Width *string `json:"width,omitempty"`
	WidthMetadata *PropertyMetadata `json:"widthMetadata,omitempty"`
	// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. Must be an integer. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2) 
	XPosition *string `json:"xPosition,omitempty"`
	XPositionMetadata *PropertyMetadata `json:"xPositionMetadata,omitempty"`
	// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. Must be an integer. May be zero.  To improve the tab's position on the document, DocuSign recommends adjusting `xPosition` and `yPosition` coordinates by (-3, -2) 
	YPosition *string `json:"yPosition,omitempty"`
	YPositionMetadata *PropertyMetadata `json:"yPositionMetadata,omitempty"`
}

// NewEmail instantiates a new Email object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmail() *Email {
	this := Email{}
	return &this
}

// NewEmailWithDefaults instantiates a new Email object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailWithDefaults() *Email {
	this := Email{}
	return &this
}

// GetAnchorAllowWhiteSpaceInCharacters returns the AnchorAllowWhiteSpaceInCharacters field value if set, zero value otherwise.
func (o *Email) GetAnchorAllowWhiteSpaceInCharacters() string {
	if o == nil || IsNil(o.AnchorAllowWhiteSpaceInCharacters) {
		var ret string
		return ret
	}
	return *o.AnchorAllowWhiteSpaceInCharacters
}

// GetAnchorAllowWhiteSpaceInCharactersOk returns a tuple with the AnchorAllowWhiteSpaceInCharacters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorAllowWhiteSpaceInCharactersOk() (*string, bool) {
	if o == nil || IsNil(o.AnchorAllowWhiteSpaceInCharacters) {
		return nil, false
	}
	return o.AnchorAllowWhiteSpaceInCharacters, true
}

// HasAnchorAllowWhiteSpaceInCharacters returns a boolean if a field has been set.
func (o *Email) HasAnchorAllowWhiteSpaceInCharacters() bool {
	if o != nil && !IsNil(o.AnchorAllowWhiteSpaceInCharacters) {
		return true
	}

	return false
}

// SetAnchorAllowWhiteSpaceInCharacters gets a reference to the given string and assigns it to the AnchorAllowWhiteSpaceInCharacters field.
func (o *Email) SetAnchorAllowWhiteSpaceInCharacters(v string) {
	o.AnchorAllowWhiteSpaceInCharacters = &v
}

// GetAnchorAllowWhiteSpaceInCharactersMetadata returns the AnchorAllowWhiteSpaceInCharactersMetadata field value if set, zero value otherwise.
func (o *Email) GetAnchorAllowWhiteSpaceInCharactersMetadata() PropertyMetadata {
	if o == nil || IsNil(o.AnchorAllowWhiteSpaceInCharactersMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.AnchorAllowWhiteSpaceInCharactersMetadata
}

// GetAnchorAllowWhiteSpaceInCharactersMetadataOk returns a tuple with the AnchorAllowWhiteSpaceInCharactersMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorAllowWhiteSpaceInCharactersMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.AnchorAllowWhiteSpaceInCharactersMetadata) {
		return nil, false
	}
	return o.AnchorAllowWhiteSpaceInCharactersMetadata, true
}

// HasAnchorAllowWhiteSpaceInCharactersMetadata returns a boolean if a field has been set.
func (o *Email) HasAnchorAllowWhiteSpaceInCharactersMetadata() bool {
	if o != nil && !IsNil(o.AnchorAllowWhiteSpaceInCharactersMetadata) {
		return true
	}

	return false
}

// SetAnchorAllowWhiteSpaceInCharactersMetadata gets a reference to the given PropertyMetadata and assigns it to the AnchorAllowWhiteSpaceInCharactersMetadata field.
func (o *Email) SetAnchorAllowWhiteSpaceInCharactersMetadata(v PropertyMetadata) {
	o.AnchorAllowWhiteSpaceInCharactersMetadata = &v
}

// GetAnchorCaseSensitive returns the AnchorCaseSensitive field value if set, zero value otherwise.
func (o *Email) GetAnchorCaseSensitive() string {
	if o == nil || IsNil(o.AnchorCaseSensitive) {
		var ret string
		return ret
	}
	return *o.AnchorCaseSensitive
}

// GetAnchorCaseSensitiveOk returns a tuple with the AnchorCaseSensitive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorCaseSensitiveOk() (*string, bool) {
	if o == nil || IsNil(o.AnchorCaseSensitive) {
		return nil, false
	}
	return o.AnchorCaseSensitive, true
}

// HasAnchorCaseSensitive returns a boolean if a field has been set.
func (o *Email) HasAnchorCaseSensitive() bool {
	if o != nil && !IsNil(o.AnchorCaseSensitive) {
		return true
	}

	return false
}

// SetAnchorCaseSensitive gets a reference to the given string and assigns it to the AnchorCaseSensitive field.
func (o *Email) SetAnchorCaseSensitive(v string) {
	o.AnchorCaseSensitive = &v
}

// GetAnchorCaseSensitiveMetadata returns the AnchorCaseSensitiveMetadata field value if set, zero value otherwise.
func (o *Email) GetAnchorCaseSensitiveMetadata() PropertyMetadata {
	if o == nil || IsNil(o.AnchorCaseSensitiveMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.AnchorCaseSensitiveMetadata
}

// GetAnchorCaseSensitiveMetadataOk returns a tuple with the AnchorCaseSensitiveMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorCaseSensitiveMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.AnchorCaseSensitiveMetadata) {
		return nil, false
	}
	return o.AnchorCaseSensitiveMetadata, true
}

// HasAnchorCaseSensitiveMetadata returns a boolean if a field has been set.
func (o *Email) HasAnchorCaseSensitiveMetadata() bool {
	if o != nil && !IsNil(o.AnchorCaseSensitiveMetadata) {
		return true
	}

	return false
}

// SetAnchorCaseSensitiveMetadata gets a reference to the given PropertyMetadata and assigns it to the AnchorCaseSensitiveMetadata field.
func (o *Email) SetAnchorCaseSensitiveMetadata(v PropertyMetadata) {
	o.AnchorCaseSensitiveMetadata = &v
}

// GetAnchorHorizontalAlignment returns the AnchorHorizontalAlignment field value if set, zero value otherwise.
func (o *Email) GetAnchorHorizontalAlignment() string {
	if o == nil || IsNil(o.AnchorHorizontalAlignment) {
		var ret string
		return ret
	}
	return *o.AnchorHorizontalAlignment
}

// GetAnchorHorizontalAlignmentOk returns a tuple with the AnchorHorizontalAlignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorHorizontalAlignmentOk() (*string, bool) {
	if o == nil || IsNil(o.AnchorHorizontalAlignment) {
		return nil, false
	}
	return o.AnchorHorizontalAlignment, true
}

// HasAnchorHorizontalAlignment returns a boolean if a field has been set.
func (o *Email) HasAnchorHorizontalAlignment() bool {
	if o != nil && !IsNil(o.AnchorHorizontalAlignment) {
		return true
	}

	return false
}

// SetAnchorHorizontalAlignment gets a reference to the given string and assigns it to the AnchorHorizontalAlignment field.
func (o *Email) SetAnchorHorizontalAlignment(v string) {
	o.AnchorHorizontalAlignment = &v
}

// GetAnchorHorizontalAlignmentMetadata returns the AnchorHorizontalAlignmentMetadata field value if set, zero value otherwise.
func (o *Email) GetAnchorHorizontalAlignmentMetadata() PropertyMetadata {
	if o == nil || IsNil(o.AnchorHorizontalAlignmentMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.AnchorHorizontalAlignmentMetadata
}

// GetAnchorHorizontalAlignmentMetadataOk returns a tuple with the AnchorHorizontalAlignmentMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorHorizontalAlignmentMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.AnchorHorizontalAlignmentMetadata) {
		return nil, false
	}
	return o.AnchorHorizontalAlignmentMetadata, true
}

// HasAnchorHorizontalAlignmentMetadata returns a boolean if a field has been set.
func (o *Email) HasAnchorHorizontalAlignmentMetadata() bool {
	if o != nil && !IsNil(o.AnchorHorizontalAlignmentMetadata) {
		return true
	}

	return false
}

// SetAnchorHorizontalAlignmentMetadata gets a reference to the given PropertyMetadata and assigns it to the AnchorHorizontalAlignmentMetadata field.
func (o *Email) SetAnchorHorizontalAlignmentMetadata(v PropertyMetadata) {
	o.AnchorHorizontalAlignmentMetadata = &v
}

// GetAnchorIgnoreIfNotPresent returns the AnchorIgnoreIfNotPresent field value if set, zero value otherwise.
func (o *Email) GetAnchorIgnoreIfNotPresent() string {
	if o == nil || IsNil(o.AnchorIgnoreIfNotPresent) {
		var ret string
		return ret
	}
	return *o.AnchorIgnoreIfNotPresent
}

// GetAnchorIgnoreIfNotPresentOk returns a tuple with the AnchorIgnoreIfNotPresent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorIgnoreIfNotPresentOk() (*string, bool) {
	if o == nil || IsNil(o.AnchorIgnoreIfNotPresent) {
		return nil, false
	}
	return o.AnchorIgnoreIfNotPresent, true
}

// HasAnchorIgnoreIfNotPresent returns a boolean if a field has been set.
func (o *Email) HasAnchorIgnoreIfNotPresent() bool {
	if o != nil && !IsNil(o.AnchorIgnoreIfNotPresent) {
		return true
	}

	return false
}

// SetAnchorIgnoreIfNotPresent gets a reference to the given string and assigns it to the AnchorIgnoreIfNotPresent field.
func (o *Email) SetAnchorIgnoreIfNotPresent(v string) {
	o.AnchorIgnoreIfNotPresent = &v
}

// GetAnchorIgnoreIfNotPresentMetadata returns the AnchorIgnoreIfNotPresentMetadata field value if set, zero value otherwise.
func (o *Email) GetAnchorIgnoreIfNotPresentMetadata() PropertyMetadata {
	if o == nil || IsNil(o.AnchorIgnoreIfNotPresentMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.AnchorIgnoreIfNotPresentMetadata
}

// GetAnchorIgnoreIfNotPresentMetadataOk returns a tuple with the AnchorIgnoreIfNotPresentMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorIgnoreIfNotPresentMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.AnchorIgnoreIfNotPresentMetadata) {
		return nil, false
	}
	return o.AnchorIgnoreIfNotPresentMetadata, true
}

// HasAnchorIgnoreIfNotPresentMetadata returns a boolean if a field has been set.
func (o *Email) HasAnchorIgnoreIfNotPresentMetadata() bool {
	if o != nil && !IsNil(o.AnchorIgnoreIfNotPresentMetadata) {
		return true
	}

	return false
}

// SetAnchorIgnoreIfNotPresentMetadata gets a reference to the given PropertyMetadata and assigns it to the AnchorIgnoreIfNotPresentMetadata field.
func (o *Email) SetAnchorIgnoreIfNotPresentMetadata(v PropertyMetadata) {
	o.AnchorIgnoreIfNotPresentMetadata = &v
}

// GetAnchorMatchWholeWord returns the AnchorMatchWholeWord field value if set, zero value otherwise.
func (o *Email) GetAnchorMatchWholeWord() string {
	if o == nil || IsNil(o.AnchorMatchWholeWord) {
		var ret string
		return ret
	}
	return *o.AnchorMatchWholeWord
}

// GetAnchorMatchWholeWordOk returns a tuple with the AnchorMatchWholeWord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorMatchWholeWordOk() (*string, bool) {
	if o == nil || IsNil(o.AnchorMatchWholeWord) {
		return nil, false
	}
	return o.AnchorMatchWholeWord, true
}

// HasAnchorMatchWholeWord returns a boolean if a field has been set.
func (o *Email) HasAnchorMatchWholeWord() bool {
	if o != nil && !IsNil(o.AnchorMatchWholeWord) {
		return true
	}

	return false
}

// SetAnchorMatchWholeWord gets a reference to the given string and assigns it to the AnchorMatchWholeWord field.
func (o *Email) SetAnchorMatchWholeWord(v string) {
	o.AnchorMatchWholeWord = &v
}

// GetAnchorMatchWholeWordMetadata returns the AnchorMatchWholeWordMetadata field value if set, zero value otherwise.
func (o *Email) GetAnchorMatchWholeWordMetadata() PropertyMetadata {
	if o == nil || IsNil(o.AnchorMatchWholeWordMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.AnchorMatchWholeWordMetadata
}

// GetAnchorMatchWholeWordMetadataOk returns a tuple with the AnchorMatchWholeWordMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorMatchWholeWordMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.AnchorMatchWholeWordMetadata) {
		return nil, false
	}
	return o.AnchorMatchWholeWordMetadata, true
}

// HasAnchorMatchWholeWordMetadata returns a boolean if a field has been set.
func (o *Email) HasAnchorMatchWholeWordMetadata() bool {
	if o != nil && !IsNil(o.AnchorMatchWholeWordMetadata) {
		return true
	}

	return false
}

// SetAnchorMatchWholeWordMetadata gets a reference to the given PropertyMetadata and assigns it to the AnchorMatchWholeWordMetadata field.
func (o *Email) SetAnchorMatchWholeWordMetadata(v PropertyMetadata) {
	o.AnchorMatchWholeWordMetadata = &v
}

// GetAnchorString returns the AnchorString field value if set, zero value otherwise.
func (o *Email) GetAnchorString() string {
	if o == nil || IsNil(o.AnchorString) {
		var ret string
		return ret
	}
	return *o.AnchorString
}

// GetAnchorStringOk returns a tuple with the AnchorString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorStringOk() (*string, bool) {
	if o == nil || IsNil(o.AnchorString) {
		return nil, false
	}
	return o.AnchorString, true
}

// HasAnchorString returns a boolean if a field has been set.
func (o *Email) HasAnchorString() bool {
	if o != nil && !IsNil(o.AnchorString) {
		return true
	}

	return false
}

// SetAnchorString gets a reference to the given string and assigns it to the AnchorString field.
func (o *Email) SetAnchorString(v string) {
	o.AnchorString = &v
}

// GetAnchorStringMetadata returns the AnchorStringMetadata field value if set, zero value otherwise.
func (o *Email) GetAnchorStringMetadata() PropertyMetadata {
	if o == nil || IsNil(o.AnchorStringMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.AnchorStringMetadata
}

// GetAnchorStringMetadataOk returns a tuple with the AnchorStringMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorStringMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.AnchorStringMetadata) {
		return nil, false
	}
	return o.AnchorStringMetadata, true
}

// HasAnchorStringMetadata returns a boolean if a field has been set.
func (o *Email) HasAnchorStringMetadata() bool {
	if o != nil && !IsNil(o.AnchorStringMetadata) {
		return true
	}

	return false
}

// SetAnchorStringMetadata gets a reference to the given PropertyMetadata and assigns it to the AnchorStringMetadata field.
func (o *Email) SetAnchorStringMetadata(v PropertyMetadata) {
	o.AnchorStringMetadata = &v
}

// GetAnchorTabProcessorVersion returns the AnchorTabProcessorVersion field value if set, zero value otherwise.
func (o *Email) GetAnchorTabProcessorVersion() string {
	if o == nil || IsNil(o.AnchorTabProcessorVersion) {
		var ret string
		return ret
	}
	return *o.AnchorTabProcessorVersion
}

// GetAnchorTabProcessorVersionOk returns a tuple with the AnchorTabProcessorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorTabProcessorVersionOk() (*string, bool) {
	if o == nil || IsNil(o.AnchorTabProcessorVersion) {
		return nil, false
	}
	return o.AnchorTabProcessorVersion, true
}

// HasAnchorTabProcessorVersion returns a boolean if a field has been set.
func (o *Email) HasAnchorTabProcessorVersion() bool {
	if o != nil && !IsNil(o.AnchorTabProcessorVersion) {
		return true
	}

	return false
}

// SetAnchorTabProcessorVersion gets a reference to the given string and assigns it to the AnchorTabProcessorVersion field.
func (o *Email) SetAnchorTabProcessorVersion(v string) {
	o.AnchorTabProcessorVersion = &v
}

// GetAnchorTabProcessorVersionMetadata returns the AnchorTabProcessorVersionMetadata field value if set, zero value otherwise.
func (o *Email) GetAnchorTabProcessorVersionMetadata() PropertyMetadata {
	if o == nil || IsNil(o.AnchorTabProcessorVersionMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.AnchorTabProcessorVersionMetadata
}

// GetAnchorTabProcessorVersionMetadataOk returns a tuple with the AnchorTabProcessorVersionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorTabProcessorVersionMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.AnchorTabProcessorVersionMetadata) {
		return nil, false
	}
	return o.AnchorTabProcessorVersionMetadata, true
}

// HasAnchorTabProcessorVersionMetadata returns a boolean if a field has been set.
func (o *Email) HasAnchorTabProcessorVersionMetadata() bool {
	if o != nil && !IsNil(o.AnchorTabProcessorVersionMetadata) {
		return true
	}

	return false
}

// SetAnchorTabProcessorVersionMetadata gets a reference to the given PropertyMetadata and assigns it to the AnchorTabProcessorVersionMetadata field.
func (o *Email) SetAnchorTabProcessorVersionMetadata(v PropertyMetadata) {
	o.AnchorTabProcessorVersionMetadata = &v
}

// GetAnchorUnits returns the AnchorUnits field value if set, zero value otherwise.
func (o *Email) GetAnchorUnits() string {
	if o == nil || IsNil(o.AnchorUnits) {
		var ret string
		return ret
	}
	return *o.AnchorUnits
}

// GetAnchorUnitsOk returns a tuple with the AnchorUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorUnitsOk() (*string, bool) {
	if o == nil || IsNil(o.AnchorUnits) {
		return nil, false
	}
	return o.AnchorUnits, true
}

// HasAnchorUnits returns a boolean if a field has been set.
func (o *Email) HasAnchorUnits() bool {
	if o != nil && !IsNil(o.AnchorUnits) {
		return true
	}

	return false
}

// SetAnchorUnits gets a reference to the given string and assigns it to the AnchorUnits field.
func (o *Email) SetAnchorUnits(v string) {
	o.AnchorUnits = &v
}

// GetAnchorUnitsMetadata returns the AnchorUnitsMetadata field value if set, zero value otherwise.
func (o *Email) GetAnchorUnitsMetadata() PropertyMetadata {
	if o == nil || IsNil(o.AnchorUnitsMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.AnchorUnitsMetadata
}

// GetAnchorUnitsMetadataOk returns a tuple with the AnchorUnitsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorUnitsMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.AnchorUnitsMetadata) {
		return nil, false
	}
	return o.AnchorUnitsMetadata, true
}

// HasAnchorUnitsMetadata returns a boolean if a field has been set.
func (o *Email) HasAnchorUnitsMetadata() bool {
	if o != nil && !IsNil(o.AnchorUnitsMetadata) {
		return true
	}

	return false
}

// SetAnchorUnitsMetadata gets a reference to the given PropertyMetadata and assigns it to the AnchorUnitsMetadata field.
func (o *Email) SetAnchorUnitsMetadata(v PropertyMetadata) {
	o.AnchorUnitsMetadata = &v
}

// GetAnchorXOffset returns the AnchorXOffset field value if set, zero value otherwise.
func (o *Email) GetAnchorXOffset() string {
	if o == nil || IsNil(o.AnchorXOffset) {
		var ret string
		return ret
	}
	return *o.AnchorXOffset
}

// GetAnchorXOffsetOk returns a tuple with the AnchorXOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorXOffsetOk() (*string, bool) {
	if o == nil || IsNil(o.AnchorXOffset) {
		return nil, false
	}
	return o.AnchorXOffset, true
}

// HasAnchorXOffset returns a boolean if a field has been set.
func (o *Email) HasAnchorXOffset() bool {
	if o != nil && !IsNil(o.AnchorXOffset) {
		return true
	}

	return false
}

// SetAnchorXOffset gets a reference to the given string and assigns it to the AnchorXOffset field.
func (o *Email) SetAnchorXOffset(v string) {
	o.AnchorXOffset = &v
}

// GetAnchorXOffsetMetadata returns the AnchorXOffsetMetadata field value if set, zero value otherwise.
func (o *Email) GetAnchorXOffsetMetadata() PropertyMetadata {
	if o == nil || IsNil(o.AnchorXOffsetMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.AnchorXOffsetMetadata
}

// GetAnchorXOffsetMetadataOk returns a tuple with the AnchorXOffsetMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorXOffsetMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.AnchorXOffsetMetadata) {
		return nil, false
	}
	return o.AnchorXOffsetMetadata, true
}

// HasAnchorXOffsetMetadata returns a boolean if a field has been set.
func (o *Email) HasAnchorXOffsetMetadata() bool {
	if o != nil && !IsNil(o.AnchorXOffsetMetadata) {
		return true
	}

	return false
}

// SetAnchorXOffsetMetadata gets a reference to the given PropertyMetadata and assigns it to the AnchorXOffsetMetadata field.
func (o *Email) SetAnchorXOffsetMetadata(v PropertyMetadata) {
	o.AnchorXOffsetMetadata = &v
}

// GetAnchorYOffset returns the AnchorYOffset field value if set, zero value otherwise.
func (o *Email) GetAnchorYOffset() string {
	if o == nil || IsNil(o.AnchorYOffset) {
		var ret string
		return ret
	}
	return *o.AnchorYOffset
}

// GetAnchorYOffsetOk returns a tuple with the AnchorYOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorYOffsetOk() (*string, bool) {
	if o == nil || IsNil(o.AnchorYOffset) {
		return nil, false
	}
	return o.AnchorYOffset, true
}

// HasAnchorYOffset returns a boolean if a field has been set.
func (o *Email) HasAnchorYOffset() bool {
	if o != nil && !IsNil(o.AnchorYOffset) {
		return true
	}

	return false
}

// SetAnchorYOffset gets a reference to the given string and assigns it to the AnchorYOffset field.
func (o *Email) SetAnchorYOffset(v string) {
	o.AnchorYOffset = &v
}

// GetAnchorYOffsetMetadata returns the AnchorYOffsetMetadata field value if set, zero value otherwise.
func (o *Email) GetAnchorYOffsetMetadata() PropertyMetadata {
	if o == nil || IsNil(o.AnchorYOffsetMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.AnchorYOffsetMetadata
}

// GetAnchorYOffsetMetadataOk returns a tuple with the AnchorYOffsetMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetAnchorYOffsetMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.AnchorYOffsetMetadata) {
		return nil, false
	}
	return o.AnchorYOffsetMetadata, true
}

// HasAnchorYOffsetMetadata returns a boolean if a field has been set.
func (o *Email) HasAnchorYOffsetMetadata() bool {
	if o != nil && !IsNil(o.AnchorYOffsetMetadata) {
		return true
	}

	return false
}

// SetAnchorYOffsetMetadata gets a reference to the given PropertyMetadata and assigns it to the AnchorYOffsetMetadata field.
func (o *Email) SetAnchorYOffsetMetadata(v PropertyMetadata) {
	o.AnchorYOffsetMetadata = &v
}

// GetBold returns the Bold field value if set, zero value otherwise.
func (o *Email) GetBold() string {
	if o == nil || IsNil(o.Bold) {
		var ret string
		return ret
	}
	return *o.Bold
}

// GetBoldOk returns a tuple with the Bold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetBoldOk() (*string, bool) {
	if o == nil || IsNil(o.Bold) {
		return nil, false
	}
	return o.Bold, true
}

// HasBold returns a boolean if a field has been set.
func (o *Email) HasBold() bool {
	if o != nil && !IsNil(o.Bold) {
		return true
	}

	return false
}

// SetBold gets a reference to the given string and assigns it to the Bold field.
func (o *Email) SetBold(v string) {
	o.Bold = &v
}

// GetBoldMetadata returns the BoldMetadata field value if set, zero value otherwise.
func (o *Email) GetBoldMetadata() PropertyMetadata {
	if o == nil || IsNil(o.BoldMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.BoldMetadata
}

// GetBoldMetadataOk returns a tuple with the BoldMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetBoldMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.BoldMetadata) {
		return nil, false
	}
	return o.BoldMetadata, true
}

// HasBoldMetadata returns a boolean if a field has been set.
func (o *Email) HasBoldMetadata() bool {
	if o != nil && !IsNil(o.BoldMetadata) {
		return true
	}

	return false
}

// SetBoldMetadata gets a reference to the given PropertyMetadata and assigns it to the BoldMetadata field.
func (o *Email) SetBoldMetadata(v PropertyMetadata) {
	o.BoldMetadata = &v
}

// GetCaption returns the Caption field value if set, zero value otherwise.
func (o *Email) GetCaption() string {
	if o == nil || IsNil(o.Caption) {
		var ret string
		return ret
	}
	return *o.Caption
}

// GetCaptionOk returns a tuple with the Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetCaptionOk() (*string, bool) {
	if o == nil || IsNil(o.Caption) {
		return nil, false
	}
	return o.Caption, true
}

// HasCaption returns a boolean if a field has been set.
func (o *Email) HasCaption() bool {
	if o != nil && !IsNil(o.Caption) {
		return true
	}

	return false
}

// SetCaption gets a reference to the given string and assigns it to the Caption field.
func (o *Email) SetCaption(v string) {
	o.Caption = &v
}

// GetCaptionMetadata returns the CaptionMetadata field value if set, zero value otherwise.
func (o *Email) GetCaptionMetadata() PropertyMetadata {
	if o == nil || IsNil(o.CaptionMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.CaptionMetadata
}

// GetCaptionMetadataOk returns a tuple with the CaptionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetCaptionMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.CaptionMetadata) {
		return nil, false
	}
	return o.CaptionMetadata, true
}

// HasCaptionMetadata returns a boolean if a field has been set.
func (o *Email) HasCaptionMetadata() bool {
	if o != nil && !IsNil(o.CaptionMetadata) {
		return true
	}

	return false
}

// SetCaptionMetadata gets a reference to the given PropertyMetadata and assigns it to the CaptionMetadata field.
func (o *Email) SetCaptionMetadata(v PropertyMetadata) {
	o.CaptionMetadata = &v
}

// GetConcealValueOnDocument returns the ConcealValueOnDocument field value if set, zero value otherwise.
func (o *Email) GetConcealValueOnDocument() string {
	if o == nil || IsNil(o.ConcealValueOnDocument) {
		var ret string
		return ret
	}
	return *o.ConcealValueOnDocument
}

// GetConcealValueOnDocumentOk returns a tuple with the ConcealValueOnDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetConcealValueOnDocumentOk() (*string, bool) {
	if o == nil || IsNil(o.ConcealValueOnDocument) {
		return nil, false
	}
	return o.ConcealValueOnDocument, true
}

// HasConcealValueOnDocument returns a boolean if a field has been set.
func (o *Email) HasConcealValueOnDocument() bool {
	if o != nil && !IsNil(o.ConcealValueOnDocument) {
		return true
	}

	return false
}

// SetConcealValueOnDocument gets a reference to the given string and assigns it to the ConcealValueOnDocument field.
func (o *Email) SetConcealValueOnDocument(v string) {
	o.ConcealValueOnDocument = &v
}

// GetConcealValueOnDocumentMetadata returns the ConcealValueOnDocumentMetadata field value if set, zero value otherwise.
func (o *Email) GetConcealValueOnDocumentMetadata() PropertyMetadata {
	if o == nil || IsNil(o.ConcealValueOnDocumentMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.ConcealValueOnDocumentMetadata
}

// GetConcealValueOnDocumentMetadataOk returns a tuple with the ConcealValueOnDocumentMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetConcealValueOnDocumentMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.ConcealValueOnDocumentMetadata) {
		return nil, false
	}
	return o.ConcealValueOnDocumentMetadata, true
}

// HasConcealValueOnDocumentMetadata returns a boolean if a field has been set.
func (o *Email) HasConcealValueOnDocumentMetadata() bool {
	if o != nil && !IsNil(o.ConcealValueOnDocumentMetadata) {
		return true
	}

	return false
}

// SetConcealValueOnDocumentMetadata gets a reference to the given PropertyMetadata and assigns it to the ConcealValueOnDocumentMetadata field.
func (o *Email) SetConcealValueOnDocumentMetadata(v PropertyMetadata) {
	o.ConcealValueOnDocumentMetadata = &v
}

// GetConditionalParentLabel returns the ConditionalParentLabel field value if set, zero value otherwise.
func (o *Email) GetConditionalParentLabel() string {
	if o == nil || IsNil(o.ConditionalParentLabel) {
		var ret string
		return ret
	}
	return *o.ConditionalParentLabel
}

// GetConditionalParentLabelOk returns a tuple with the ConditionalParentLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetConditionalParentLabelOk() (*string, bool) {
	if o == nil || IsNil(o.ConditionalParentLabel) {
		return nil, false
	}
	return o.ConditionalParentLabel, true
}

// HasConditionalParentLabel returns a boolean if a field has been set.
func (o *Email) HasConditionalParentLabel() bool {
	if o != nil && !IsNil(o.ConditionalParentLabel) {
		return true
	}

	return false
}

// SetConditionalParentLabel gets a reference to the given string and assigns it to the ConditionalParentLabel field.
func (o *Email) SetConditionalParentLabel(v string) {
	o.ConditionalParentLabel = &v
}

// GetConditionalParentLabelMetadata returns the ConditionalParentLabelMetadata field value if set, zero value otherwise.
func (o *Email) GetConditionalParentLabelMetadata() PropertyMetadata {
	if o == nil || IsNil(o.ConditionalParentLabelMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.ConditionalParentLabelMetadata
}

// GetConditionalParentLabelMetadataOk returns a tuple with the ConditionalParentLabelMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetConditionalParentLabelMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.ConditionalParentLabelMetadata) {
		return nil, false
	}
	return o.ConditionalParentLabelMetadata, true
}

// HasConditionalParentLabelMetadata returns a boolean if a field has been set.
func (o *Email) HasConditionalParentLabelMetadata() bool {
	if o != nil && !IsNil(o.ConditionalParentLabelMetadata) {
		return true
	}

	return false
}

// SetConditionalParentLabelMetadata gets a reference to the given PropertyMetadata and assigns it to the ConditionalParentLabelMetadata field.
func (o *Email) SetConditionalParentLabelMetadata(v PropertyMetadata) {
	o.ConditionalParentLabelMetadata = &v
}

// GetConditionalParentValue returns the ConditionalParentValue field value if set, zero value otherwise.
func (o *Email) GetConditionalParentValue() string {
	if o == nil || IsNil(o.ConditionalParentValue) {
		var ret string
		return ret
	}
	return *o.ConditionalParentValue
}

// GetConditionalParentValueOk returns a tuple with the ConditionalParentValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetConditionalParentValueOk() (*string, bool) {
	if o == nil || IsNil(o.ConditionalParentValue) {
		return nil, false
	}
	return o.ConditionalParentValue, true
}

// HasConditionalParentValue returns a boolean if a field has been set.
func (o *Email) HasConditionalParentValue() bool {
	if o != nil && !IsNil(o.ConditionalParentValue) {
		return true
	}

	return false
}

// SetConditionalParentValue gets a reference to the given string and assigns it to the ConditionalParentValue field.
func (o *Email) SetConditionalParentValue(v string) {
	o.ConditionalParentValue = &v
}

// GetConditionalParentValueMetadata returns the ConditionalParentValueMetadata field value if set, zero value otherwise.
func (o *Email) GetConditionalParentValueMetadata() PropertyMetadata {
	if o == nil || IsNil(o.ConditionalParentValueMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.ConditionalParentValueMetadata
}

// GetConditionalParentValueMetadataOk returns a tuple with the ConditionalParentValueMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetConditionalParentValueMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.ConditionalParentValueMetadata) {
		return nil, false
	}
	return o.ConditionalParentValueMetadata, true
}

// HasConditionalParentValueMetadata returns a boolean if a field has been set.
func (o *Email) HasConditionalParentValueMetadata() bool {
	if o != nil && !IsNil(o.ConditionalParentValueMetadata) {
		return true
	}

	return false
}

// SetConditionalParentValueMetadata gets a reference to the given PropertyMetadata and assigns it to the ConditionalParentValueMetadata field.
func (o *Email) SetConditionalParentValueMetadata(v PropertyMetadata) {
	o.ConditionalParentValueMetadata = &v
}

// GetCustomTabId returns the CustomTabId field value if set, zero value otherwise.
func (o *Email) GetCustomTabId() string {
	if o == nil || IsNil(o.CustomTabId) {
		var ret string
		return ret
	}
	return *o.CustomTabId
}

// GetCustomTabIdOk returns a tuple with the CustomTabId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetCustomTabIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomTabId) {
		return nil, false
	}
	return o.CustomTabId, true
}

// HasCustomTabId returns a boolean if a field has been set.
func (o *Email) HasCustomTabId() bool {
	if o != nil && !IsNil(o.CustomTabId) {
		return true
	}

	return false
}

// SetCustomTabId gets a reference to the given string and assigns it to the CustomTabId field.
func (o *Email) SetCustomTabId(v string) {
	o.CustomTabId = &v
}

// GetCustomTabIdMetadata returns the CustomTabIdMetadata field value if set, zero value otherwise.
func (o *Email) GetCustomTabIdMetadata() PropertyMetadata {
	if o == nil || IsNil(o.CustomTabIdMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.CustomTabIdMetadata
}

// GetCustomTabIdMetadataOk returns a tuple with the CustomTabIdMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetCustomTabIdMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.CustomTabIdMetadata) {
		return nil, false
	}
	return o.CustomTabIdMetadata, true
}

// HasCustomTabIdMetadata returns a boolean if a field has been set.
func (o *Email) HasCustomTabIdMetadata() bool {
	if o != nil && !IsNil(o.CustomTabIdMetadata) {
		return true
	}

	return false
}

// SetCustomTabIdMetadata gets a reference to the given PropertyMetadata and assigns it to the CustomTabIdMetadata field.
func (o *Email) SetCustomTabIdMetadata(v PropertyMetadata) {
	o.CustomTabIdMetadata = &v
}

// GetDisableAutoSize returns the DisableAutoSize field value if set, zero value otherwise.
func (o *Email) GetDisableAutoSize() string {
	if o == nil || IsNil(o.DisableAutoSize) {
		var ret string
		return ret
	}
	return *o.DisableAutoSize
}

// GetDisableAutoSizeOk returns a tuple with the DisableAutoSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetDisableAutoSizeOk() (*string, bool) {
	if o == nil || IsNil(o.DisableAutoSize) {
		return nil, false
	}
	return o.DisableAutoSize, true
}

// HasDisableAutoSize returns a boolean if a field has been set.
func (o *Email) HasDisableAutoSize() bool {
	if o != nil && !IsNil(o.DisableAutoSize) {
		return true
	}

	return false
}

// SetDisableAutoSize gets a reference to the given string and assigns it to the DisableAutoSize field.
func (o *Email) SetDisableAutoSize(v string) {
	o.DisableAutoSize = &v
}

// GetDisableAutoSizeMetadata returns the DisableAutoSizeMetadata field value if set, zero value otherwise.
func (o *Email) GetDisableAutoSizeMetadata() PropertyMetadata {
	if o == nil || IsNil(o.DisableAutoSizeMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.DisableAutoSizeMetadata
}

// GetDisableAutoSizeMetadataOk returns a tuple with the DisableAutoSizeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetDisableAutoSizeMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.DisableAutoSizeMetadata) {
		return nil, false
	}
	return o.DisableAutoSizeMetadata, true
}

// HasDisableAutoSizeMetadata returns a boolean if a field has been set.
func (o *Email) HasDisableAutoSizeMetadata() bool {
	if o != nil && !IsNil(o.DisableAutoSizeMetadata) {
		return true
	}

	return false
}

// SetDisableAutoSizeMetadata gets a reference to the given PropertyMetadata and assigns it to the DisableAutoSizeMetadata field.
func (o *Email) SetDisableAutoSizeMetadata(v PropertyMetadata) {
	o.DisableAutoSizeMetadata = &v
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *Email) GetDocumentId() string {
	if o == nil || IsNil(o.DocumentId) {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetDocumentIdOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentId) {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *Email) HasDocumentId() bool {
	if o != nil && !IsNil(o.DocumentId) {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *Email) SetDocumentId(v string) {
	o.DocumentId = &v
}

// GetDocumentIdMetadata returns the DocumentIdMetadata field value if set, zero value otherwise.
func (o *Email) GetDocumentIdMetadata() PropertyMetadata {
	if o == nil || IsNil(o.DocumentIdMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.DocumentIdMetadata
}

// GetDocumentIdMetadataOk returns a tuple with the DocumentIdMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetDocumentIdMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.DocumentIdMetadata) {
		return nil, false
	}
	return o.DocumentIdMetadata, true
}

// HasDocumentIdMetadata returns a boolean if a field has been set.
func (o *Email) HasDocumentIdMetadata() bool {
	if o != nil && !IsNil(o.DocumentIdMetadata) {
		return true
	}

	return false
}

// SetDocumentIdMetadata gets a reference to the given PropertyMetadata and assigns it to the DocumentIdMetadata field.
func (o *Email) SetDocumentIdMetadata(v PropertyMetadata) {
	o.DocumentIdMetadata = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *Email) GetErrorDetails() ErrorDetails {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret ErrorDetails
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetErrorDetailsOk() (*ErrorDetails, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *Email) HasErrorDetails() bool {
	if o != nil && !IsNil(o.ErrorDetails) {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given ErrorDetails and assigns it to the ErrorDetails field.
func (o *Email) SetErrorDetails(v ErrorDetails) {
	o.ErrorDetails = &v
}

// GetFont returns the Font field value if set, zero value otherwise.
func (o *Email) GetFont() string {
	if o == nil || IsNil(o.Font) {
		var ret string
		return ret
	}
	return *o.Font
}

// GetFontOk returns a tuple with the Font field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetFontOk() (*string, bool) {
	if o == nil || IsNil(o.Font) {
		return nil, false
	}
	return o.Font, true
}

// HasFont returns a boolean if a field has been set.
func (o *Email) HasFont() bool {
	if o != nil && !IsNil(o.Font) {
		return true
	}

	return false
}

// SetFont gets a reference to the given string and assigns it to the Font field.
func (o *Email) SetFont(v string) {
	o.Font = &v
}

// GetFontColor returns the FontColor field value if set, zero value otherwise.
func (o *Email) GetFontColor() string {
	if o == nil || IsNil(o.FontColor) {
		var ret string
		return ret
	}
	return *o.FontColor
}

// GetFontColorOk returns a tuple with the FontColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetFontColorOk() (*string, bool) {
	if o == nil || IsNil(o.FontColor) {
		return nil, false
	}
	return o.FontColor, true
}

// HasFontColor returns a boolean if a field has been set.
func (o *Email) HasFontColor() bool {
	if o != nil && !IsNil(o.FontColor) {
		return true
	}

	return false
}

// SetFontColor gets a reference to the given string and assigns it to the FontColor field.
func (o *Email) SetFontColor(v string) {
	o.FontColor = &v
}

// GetFontColorMetadata returns the FontColorMetadata field value if set, zero value otherwise.
func (o *Email) GetFontColorMetadata() PropertyMetadata {
	if o == nil || IsNil(o.FontColorMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.FontColorMetadata
}

// GetFontColorMetadataOk returns a tuple with the FontColorMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetFontColorMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.FontColorMetadata) {
		return nil, false
	}
	return o.FontColorMetadata, true
}

// HasFontColorMetadata returns a boolean if a field has been set.
func (o *Email) HasFontColorMetadata() bool {
	if o != nil && !IsNil(o.FontColorMetadata) {
		return true
	}

	return false
}

// SetFontColorMetadata gets a reference to the given PropertyMetadata and assigns it to the FontColorMetadata field.
func (o *Email) SetFontColorMetadata(v PropertyMetadata) {
	o.FontColorMetadata = &v
}

// GetFontMetadata returns the FontMetadata field value if set, zero value otherwise.
func (o *Email) GetFontMetadata() PropertyMetadata {
	if o == nil || IsNil(o.FontMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.FontMetadata
}

// GetFontMetadataOk returns a tuple with the FontMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetFontMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.FontMetadata) {
		return nil, false
	}
	return o.FontMetadata, true
}

// HasFontMetadata returns a boolean if a field has been set.
func (o *Email) HasFontMetadata() bool {
	if o != nil && !IsNil(o.FontMetadata) {
		return true
	}

	return false
}

// SetFontMetadata gets a reference to the given PropertyMetadata and assigns it to the FontMetadata field.
func (o *Email) SetFontMetadata(v PropertyMetadata) {
	o.FontMetadata = &v
}

// GetFontSize returns the FontSize field value if set, zero value otherwise.
func (o *Email) GetFontSize() string {
	if o == nil || IsNil(o.FontSize) {
		var ret string
		return ret
	}
	return *o.FontSize
}

// GetFontSizeOk returns a tuple with the FontSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetFontSizeOk() (*string, bool) {
	if o == nil || IsNil(o.FontSize) {
		return nil, false
	}
	return o.FontSize, true
}

// HasFontSize returns a boolean if a field has been set.
func (o *Email) HasFontSize() bool {
	if o != nil && !IsNil(o.FontSize) {
		return true
	}

	return false
}

// SetFontSize gets a reference to the given string and assigns it to the FontSize field.
func (o *Email) SetFontSize(v string) {
	o.FontSize = &v
}

// GetFontSizeMetadata returns the FontSizeMetadata field value if set, zero value otherwise.
func (o *Email) GetFontSizeMetadata() PropertyMetadata {
	if o == nil || IsNil(o.FontSizeMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.FontSizeMetadata
}

// GetFontSizeMetadataOk returns a tuple with the FontSizeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetFontSizeMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.FontSizeMetadata) {
		return nil, false
	}
	return o.FontSizeMetadata, true
}

// HasFontSizeMetadata returns a boolean if a field has been set.
func (o *Email) HasFontSizeMetadata() bool {
	if o != nil && !IsNil(o.FontSizeMetadata) {
		return true
	}

	return false
}

// SetFontSizeMetadata gets a reference to the given PropertyMetadata and assigns it to the FontSizeMetadata field.
func (o *Email) SetFontSizeMetadata(v PropertyMetadata) {
	o.FontSizeMetadata = &v
}

// GetFormOrder returns the FormOrder field value if set, zero value otherwise.
func (o *Email) GetFormOrder() string {
	if o == nil || IsNil(o.FormOrder) {
		var ret string
		return ret
	}
	return *o.FormOrder
}

// GetFormOrderOk returns a tuple with the FormOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetFormOrderOk() (*string, bool) {
	if o == nil || IsNil(o.FormOrder) {
		return nil, false
	}
	return o.FormOrder, true
}

// HasFormOrder returns a boolean if a field has been set.
func (o *Email) HasFormOrder() bool {
	if o != nil && !IsNil(o.FormOrder) {
		return true
	}

	return false
}

// SetFormOrder gets a reference to the given string and assigns it to the FormOrder field.
func (o *Email) SetFormOrder(v string) {
	o.FormOrder = &v
}

// GetFormOrderMetadata returns the FormOrderMetadata field value if set, zero value otherwise.
func (o *Email) GetFormOrderMetadata() PropertyMetadata {
	if o == nil || IsNil(o.FormOrderMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.FormOrderMetadata
}

// GetFormOrderMetadataOk returns a tuple with the FormOrderMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetFormOrderMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.FormOrderMetadata) {
		return nil, false
	}
	return o.FormOrderMetadata, true
}

// HasFormOrderMetadata returns a boolean if a field has been set.
func (o *Email) HasFormOrderMetadata() bool {
	if o != nil && !IsNil(o.FormOrderMetadata) {
		return true
	}

	return false
}

// SetFormOrderMetadata gets a reference to the given PropertyMetadata and assigns it to the FormOrderMetadata field.
func (o *Email) SetFormOrderMetadata(v PropertyMetadata) {
	o.FormOrderMetadata = &v
}

// GetFormPageLabel returns the FormPageLabel field value if set, zero value otherwise.
func (o *Email) GetFormPageLabel() string {
	if o == nil || IsNil(o.FormPageLabel) {
		var ret string
		return ret
	}
	return *o.FormPageLabel
}

// GetFormPageLabelOk returns a tuple with the FormPageLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetFormPageLabelOk() (*string, bool) {
	if o == nil || IsNil(o.FormPageLabel) {
		return nil, false
	}
	return o.FormPageLabel, true
}

// HasFormPageLabel returns a boolean if a field has been set.
func (o *Email) HasFormPageLabel() bool {
	if o != nil && !IsNil(o.FormPageLabel) {
		return true
	}

	return false
}

// SetFormPageLabel gets a reference to the given string and assigns it to the FormPageLabel field.
func (o *Email) SetFormPageLabel(v string) {
	o.FormPageLabel = &v
}

// GetFormPageLabelMetadata returns the FormPageLabelMetadata field value if set, zero value otherwise.
func (o *Email) GetFormPageLabelMetadata() PropertyMetadata {
	if o == nil || IsNil(o.FormPageLabelMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.FormPageLabelMetadata
}

// GetFormPageLabelMetadataOk returns a tuple with the FormPageLabelMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetFormPageLabelMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.FormPageLabelMetadata) {
		return nil, false
	}
	return o.FormPageLabelMetadata, true
}

// HasFormPageLabelMetadata returns a boolean if a field has been set.
func (o *Email) HasFormPageLabelMetadata() bool {
	if o != nil && !IsNil(o.FormPageLabelMetadata) {
		return true
	}

	return false
}

// SetFormPageLabelMetadata gets a reference to the given PropertyMetadata and assigns it to the FormPageLabelMetadata field.
func (o *Email) SetFormPageLabelMetadata(v PropertyMetadata) {
	o.FormPageLabelMetadata = &v
}

// GetFormPageNumber returns the FormPageNumber field value if set, zero value otherwise.
func (o *Email) GetFormPageNumber() string {
	if o == nil || IsNil(o.FormPageNumber) {
		var ret string
		return ret
	}
	return *o.FormPageNumber
}

// GetFormPageNumberOk returns a tuple with the FormPageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetFormPageNumberOk() (*string, bool) {
	if o == nil || IsNil(o.FormPageNumber) {
		return nil, false
	}
	return o.FormPageNumber, true
}

// HasFormPageNumber returns a boolean if a field has been set.
func (o *Email) HasFormPageNumber() bool {
	if o != nil && !IsNil(o.FormPageNumber) {
		return true
	}

	return false
}

// SetFormPageNumber gets a reference to the given string and assigns it to the FormPageNumber field.
func (o *Email) SetFormPageNumber(v string) {
	o.FormPageNumber = &v
}

// GetFormPageNumberMetadata returns the FormPageNumberMetadata field value if set, zero value otherwise.
func (o *Email) GetFormPageNumberMetadata() PropertyMetadata {
	if o == nil || IsNil(o.FormPageNumberMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.FormPageNumberMetadata
}

// GetFormPageNumberMetadataOk returns a tuple with the FormPageNumberMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetFormPageNumberMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.FormPageNumberMetadata) {
		return nil, false
	}
	return o.FormPageNumberMetadata, true
}

// HasFormPageNumberMetadata returns a boolean if a field has been set.
func (o *Email) HasFormPageNumberMetadata() bool {
	if o != nil && !IsNil(o.FormPageNumberMetadata) {
		return true
	}

	return false
}

// SetFormPageNumberMetadata gets a reference to the given PropertyMetadata and assigns it to the FormPageNumberMetadata field.
func (o *Email) SetFormPageNumberMetadata(v PropertyMetadata) {
	o.FormPageNumberMetadata = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *Email) GetHeight() string {
	if o == nil || IsNil(o.Height) {
		var ret string
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetHeightOk() (*string, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *Email) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given string and assigns it to the Height field.
func (o *Email) SetHeight(v string) {
	o.Height = &v
}

// GetHeightMetadata returns the HeightMetadata field value if set, zero value otherwise.
func (o *Email) GetHeightMetadata() PropertyMetadata {
	if o == nil || IsNil(o.HeightMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.HeightMetadata
}

// GetHeightMetadataOk returns a tuple with the HeightMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetHeightMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.HeightMetadata) {
		return nil, false
	}
	return o.HeightMetadata, true
}

// HasHeightMetadata returns a boolean if a field has been set.
func (o *Email) HasHeightMetadata() bool {
	if o != nil && !IsNil(o.HeightMetadata) {
		return true
	}

	return false
}

// SetHeightMetadata gets a reference to the given PropertyMetadata and assigns it to the HeightMetadata field.
func (o *Email) SetHeightMetadata(v PropertyMetadata) {
	o.HeightMetadata = &v
}

// GetItalic returns the Italic field value if set, zero value otherwise.
func (o *Email) GetItalic() string {
	if o == nil || IsNil(o.Italic) {
		var ret string
		return ret
	}
	return *o.Italic
}

// GetItalicOk returns a tuple with the Italic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetItalicOk() (*string, bool) {
	if o == nil || IsNil(o.Italic) {
		return nil, false
	}
	return o.Italic, true
}

// HasItalic returns a boolean if a field has been set.
func (o *Email) HasItalic() bool {
	if o != nil && !IsNil(o.Italic) {
		return true
	}

	return false
}

// SetItalic gets a reference to the given string and assigns it to the Italic field.
func (o *Email) SetItalic(v string) {
	o.Italic = &v
}

// GetItalicMetadata returns the ItalicMetadata field value if set, zero value otherwise.
func (o *Email) GetItalicMetadata() PropertyMetadata {
	if o == nil || IsNil(o.ItalicMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.ItalicMetadata
}

// GetItalicMetadataOk returns a tuple with the ItalicMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetItalicMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.ItalicMetadata) {
		return nil, false
	}
	return o.ItalicMetadata, true
}

// HasItalicMetadata returns a boolean if a field has been set.
func (o *Email) HasItalicMetadata() bool {
	if o != nil && !IsNil(o.ItalicMetadata) {
		return true
	}

	return false
}

// SetItalicMetadata gets a reference to the given PropertyMetadata and assigns it to the ItalicMetadata field.
func (o *Email) SetItalicMetadata(v PropertyMetadata) {
	o.ItalicMetadata = &v
}

// GetLocalePolicy returns the LocalePolicy field value if set, zero value otherwise.
func (o *Email) GetLocalePolicy() LocalePolicyTab {
	if o == nil || IsNil(o.LocalePolicy) {
		var ret LocalePolicyTab
		return ret
	}
	return *o.LocalePolicy
}

// GetLocalePolicyOk returns a tuple with the LocalePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetLocalePolicyOk() (*LocalePolicyTab, bool) {
	if o == nil || IsNil(o.LocalePolicy) {
		return nil, false
	}
	return o.LocalePolicy, true
}

// HasLocalePolicy returns a boolean if a field has been set.
func (o *Email) HasLocalePolicy() bool {
	if o != nil && !IsNil(o.LocalePolicy) {
		return true
	}

	return false
}

// SetLocalePolicy gets a reference to the given LocalePolicyTab and assigns it to the LocalePolicy field.
func (o *Email) SetLocalePolicy(v LocalePolicyTab) {
	o.LocalePolicy = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *Email) GetLocked() string {
	if o == nil || IsNil(o.Locked) {
		var ret string
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetLockedOk() (*string, bool) {
	if o == nil || IsNil(o.Locked) {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *Email) HasLocked() bool {
	if o != nil && !IsNil(o.Locked) {
		return true
	}

	return false
}

// SetLocked gets a reference to the given string and assigns it to the Locked field.
func (o *Email) SetLocked(v string) {
	o.Locked = &v
}

// GetLockedMetadata returns the LockedMetadata field value if set, zero value otherwise.
func (o *Email) GetLockedMetadata() PropertyMetadata {
	if o == nil || IsNil(o.LockedMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.LockedMetadata
}

// GetLockedMetadataOk returns a tuple with the LockedMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetLockedMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.LockedMetadata) {
		return nil, false
	}
	return o.LockedMetadata, true
}

// HasLockedMetadata returns a boolean if a field has been set.
func (o *Email) HasLockedMetadata() bool {
	if o != nil && !IsNil(o.LockedMetadata) {
		return true
	}

	return false
}

// SetLockedMetadata gets a reference to the given PropertyMetadata and assigns it to the LockedMetadata field.
func (o *Email) SetLockedMetadata(v PropertyMetadata) {
	o.LockedMetadata = &v
}

// GetMaxLength returns the MaxLength field value if set, zero value otherwise.
func (o *Email) GetMaxLength() string {
	if o == nil || IsNil(o.MaxLength) {
		var ret string
		return ret
	}
	return *o.MaxLength
}

// GetMaxLengthOk returns a tuple with the MaxLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetMaxLengthOk() (*string, bool) {
	if o == nil || IsNil(o.MaxLength) {
		return nil, false
	}
	return o.MaxLength, true
}

// HasMaxLength returns a boolean if a field has been set.
func (o *Email) HasMaxLength() bool {
	if o != nil && !IsNil(o.MaxLength) {
		return true
	}

	return false
}

// SetMaxLength gets a reference to the given string and assigns it to the MaxLength field.
func (o *Email) SetMaxLength(v string) {
	o.MaxLength = &v
}

// GetMaxLengthMetadata returns the MaxLengthMetadata field value if set, zero value otherwise.
func (o *Email) GetMaxLengthMetadata() PropertyMetadata {
	if o == nil || IsNil(o.MaxLengthMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.MaxLengthMetadata
}

// GetMaxLengthMetadataOk returns a tuple with the MaxLengthMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetMaxLengthMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.MaxLengthMetadata) {
		return nil, false
	}
	return o.MaxLengthMetadata, true
}

// HasMaxLengthMetadata returns a boolean if a field has been set.
func (o *Email) HasMaxLengthMetadata() bool {
	if o != nil && !IsNil(o.MaxLengthMetadata) {
		return true
	}

	return false
}

// SetMaxLengthMetadata gets a reference to the given PropertyMetadata and assigns it to the MaxLengthMetadata field.
func (o *Email) SetMaxLengthMetadata(v PropertyMetadata) {
	o.MaxLengthMetadata = &v
}

// GetMergeField returns the MergeField field value if set, zero value otherwise.
func (o *Email) GetMergeField() MergeField {
	if o == nil || IsNil(o.MergeField) {
		var ret MergeField
		return ret
	}
	return *o.MergeField
}

// GetMergeFieldOk returns a tuple with the MergeField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetMergeFieldOk() (*MergeField, bool) {
	if o == nil || IsNil(o.MergeField) {
		return nil, false
	}
	return o.MergeField, true
}

// HasMergeField returns a boolean if a field has been set.
func (o *Email) HasMergeField() bool {
	if o != nil && !IsNil(o.MergeField) {
		return true
	}

	return false
}

// SetMergeField gets a reference to the given MergeField and assigns it to the MergeField field.
func (o *Email) SetMergeField(v MergeField) {
	o.MergeField = &v
}

// GetMergeFieldXml returns the MergeFieldXml field value if set, zero value otherwise.
func (o *Email) GetMergeFieldXml() string {
	if o == nil || IsNil(o.MergeFieldXml) {
		var ret string
		return ret
	}
	return *o.MergeFieldXml
}

// GetMergeFieldXmlOk returns a tuple with the MergeFieldXml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetMergeFieldXmlOk() (*string, bool) {
	if o == nil || IsNil(o.MergeFieldXml) {
		return nil, false
	}
	return o.MergeFieldXml, true
}

// HasMergeFieldXml returns a boolean if a field has been set.
func (o *Email) HasMergeFieldXml() bool {
	if o != nil && !IsNil(o.MergeFieldXml) {
		return true
	}

	return false
}

// SetMergeFieldXml gets a reference to the given string and assigns it to the MergeFieldXml field.
func (o *Email) SetMergeFieldXml(v string) {
	o.MergeFieldXml = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Email) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Email) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Email) SetName(v string) {
	o.Name = &v
}

// GetNameMetadata returns the NameMetadata field value if set, zero value otherwise.
func (o *Email) GetNameMetadata() PropertyMetadata {
	if o == nil || IsNil(o.NameMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.NameMetadata
}

// GetNameMetadataOk returns a tuple with the NameMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetNameMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.NameMetadata) {
		return nil, false
	}
	return o.NameMetadata, true
}

// HasNameMetadata returns a boolean if a field has been set.
func (o *Email) HasNameMetadata() bool {
	if o != nil && !IsNil(o.NameMetadata) {
		return true
	}

	return false
}

// SetNameMetadata gets a reference to the given PropertyMetadata and assigns it to the NameMetadata field.
func (o *Email) SetNameMetadata(v PropertyMetadata) {
	o.NameMetadata = &v
}

// GetOriginalValue returns the OriginalValue field value if set, zero value otherwise.
func (o *Email) GetOriginalValue() string {
	if o == nil || IsNil(o.OriginalValue) {
		var ret string
		return ret
	}
	return *o.OriginalValue
}

// GetOriginalValueOk returns a tuple with the OriginalValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetOriginalValueOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalValue) {
		return nil, false
	}
	return o.OriginalValue, true
}

// HasOriginalValue returns a boolean if a field has been set.
func (o *Email) HasOriginalValue() bool {
	if o != nil && !IsNil(o.OriginalValue) {
		return true
	}

	return false
}

// SetOriginalValue gets a reference to the given string and assigns it to the OriginalValue field.
func (o *Email) SetOriginalValue(v string) {
	o.OriginalValue = &v
}

// GetOriginalValueMetadata returns the OriginalValueMetadata field value if set, zero value otherwise.
func (o *Email) GetOriginalValueMetadata() PropertyMetadata {
	if o == nil || IsNil(o.OriginalValueMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.OriginalValueMetadata
}

// GetOriginalValueMetadataOk returns a tuple with the OriginalValueMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetOriginalValueMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.OriginalValueMetadata) {
		return nil, false
	}
	return o.OriginalValueMetadata, true
}

// HasOriginalValueMetadata returns a boolean if a field has been set.
func (o *Email) HasOriginalValueMetadata() bool {
	if o != nil && !IsNil(o.OriginalValueMetadata) {
		return true
	}

	return false
}

// SetOriginalValueMetadata gets a reference to the given PropertyMetadata and assigns it to the OriginalValueMetadata field.
func (o *Email) SetOriginalValueMetadata(v PropertyMetadata) {
	o.OriginalValueMetadata = &v
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *Email) GetPageNumber() string {
	if o == nil || IsNil(o.PageNumber) {
		var ret string
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetPageNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *Email) HasPageNumber() bool {
	if o != nil && !IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given string and assigns it to the PageNumber field.
func (o *Email) SetPageNumber(v string) {
	o.PageNumber = &v
}

// GetPageNumberMetadata returns the PageNumberMetadata field value if set, zero value otherwise.
func (o *Email) GetPageNumberMetadata() PropertyMetadata {
	if o == nil || IsNil(o.PageNumberMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.PageNumberMetadata
}

// GetPageNumberMetadataOk returns a tuple with the PageNumberMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetPageNumberMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.PageNumberMetadata) {
		return nil, false
	}
	return o.PageNumberMetadata, true
}

// HasPageNumberMetadata returns a boolean if a field has been set.
func (o *Email) HasPageNumberMetadata() bool {
	if o != nil && !IsNil(o.PageNumberMetadata) {
		return true
	}

	return false
}

// SetPageNumberMetadata gets a reference to the given PropertyMetadata and assigns it to the PageNumberMetadata field.
func (o *Email) SetPageNumberMetadata(v PropertyMetadata) {
	o.PageNumberMetadata = &v
}

// GetRecipientId returns the RecipientId field value if set, zero value otherwise.
func (o *Email) GetRecipientId() string {
	if o == nil || IsNil(o.RecipientId) {
		var ret string
		return ret
	}
	return *o.RecipientId
}

// GetRecipientIdOk returns a tuple with the RecipientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetRecipientIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientId) {
		return nil, false
	}
	return o.RecipientId, true
}

// HasRecipientId returns a boolean if a field has been set.
func (o *Email) HasRecipientId() bool {
	if o != nil && !IsNil(o.RecipientId) {
		return true
	}

	return false
}

// SetRecipientId gets a reference to the given string and assigns it to the RecipientId field.
func (o *Email) SetRecipientId(v string) {
	o.RecipientId = &v
}

// GetRecipientIdGuid returns the RecipientIdGuid field value if set, zero value otherwise.
func (o *Email) GetRecipientIdGuid() string {
	if o == nil || IsNil(o.RecipientIdGuid) {
		var ret string
		return ret
	}
	return *o.RecipientIdGuid
}

// GetRecipientIdGuidOk returns a tuple with the RecipientIdGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetRecipientIdGuidOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientIdGuid) {
		return nil, false
	}
	return o.RecipientIdGuid, true
}

// HasRecipientIdGuid returns a boolean if a field has been set.
func (o *Email) HasRecipientIdGuid() bool {
	if o != nil && !IsNil(o.RecipientIdGuid) {
		return true
	}

	return false
}

// SetRecipientIdGuid gets a reference to the given string and assigns it to the RecipientIdGuid field.
func (o *Email) SetRecipientIdGuid(v string) {
	o.RecipientIdGuid = &v
}

// GetRecipientIdGuidMetadata returns the RecipientIdGuidMetadata field value if set, zero value otherwise.
func (o *Email) GetRecipientIdGuidMetadata() PropertyMetadata {
	if o == nil || IsNil(o.RecipientIdGuidMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.RecipientIdGuidMetadata
}

// GetRecipientIdGuidMetadataOk returns a tuple with the RecipientIdGuidMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetRecipientIdGuidMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.RecipientIdGuidMetadata) {
		return nil, false
	}
	return o.RecipientIdGuidMetadata, true
}

// HasRecipientIdGuidMetadata returns a boolean if a field has been set.
func (o *Email) HasRecipientIdGuidMetadata() bool {
	if o != nil && !IsNil(o.RecipientIdGuidMetadata) {
		return true
	}

	return false
}

// SetRecipientIdGuidMetadata gets a reference to the given PropertyMetadata and assigns it to the RecipientIdGuidMetadata field.
func (o *Email) SetRecipientIdGuidMetadata(v PropertyMetadata) {
	o.RecipientIdGuidMetadata = &v
}

// GetRecipientIdMetadata returns the RecipientIdMetadata field value if set, zero value otherwise.
func (o *Email) GetRecipientIdMetadata() PropertyMetadata {
	if o == nil || IsNil(o.RecipientIdMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.RecipientIdMetadata
}

// GetRecipientIdMetadataOk returns a tuple with the RecipientIdMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetRecipientIdMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.RecipientIdMetadata) {
		return nil, false
	}
	return o.RecipientIdMetadata, true
}

// HasRecipientIdMetadata returns a boolean if a field has been set.
func (o *Email) HasRecipientIdMetadata() bool {
	if o != nil && !IsNil(o.RecipientIdMetadata) {
		return true
	}

	return false
}

// SetRecipientIdMetadata gets a reference to the given PropertyMetadata and assigns it to the RecipientIdMetadata field.
func (o *Email) SetRecipientIdMetadata(v PropertyMetadata) {
	o.RecipientIdMetadata = &v
}

// GetRequireAll returns the RequireAll field value if set, zero value otherwise.
func (o *Email) GetRequireAll() string {
	if o == nil || IsNil(o.RequireAll) {
		var ret string
		return ret
	}
	return *o.RequireAll
}

// GetRequireAllOk returns a tuple with the RequireAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetRequireAllOk() (*string, bool) {
	if o == nil || IsNil(o.RequireAll) {
		return nil, false
	}
	return o.RequireAll, true
}

// HasRequireAll returns a boolean if a field has been set.
func (o *Email) HasRequireAll() bool {
	if o != nil && !IsNil(o.RequireAll) {
		return true
	}

	return false
}

// SetRequireAll gets a reference to the given string and assigns it to the RequireAll field.
func (o *Email) SetRequireAll(v string) {
	o.RequireAll = &v
}

// GetRequireAllMetadata returns the RequireAllMetadata field value if set, zero value otherwise.
func (o *Email) GetRequireAllMetadata() PropertyMetadata {
	if o == nil || IsNil(o.RequireAllMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.RequireAllMetadata
}

// GetRequireAllMetadataOk returns a tuple with the RequireAllMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetRequireAllMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.RequireAllMetadata) {
		return nil, false
	}
	return o.RequireAllMetadata, true
}

// HasRequireAllMetadata returns a boolean if a field has been set.
func (o *Email) HasRequireAllMetadata() bool {
	if o != nil && !IsNil(o.RequireAllMetadata) {
		return true
	}

	return false
}

// SetRequireAllMetadata gets a reference to the given PropertyMetadata and assigns it to the RequireAllMetadata field.
func (o *Email) SetRequireAllMetadata(v PropertyMetadata) {
	o.RequireAllMetadata = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *Email) GetRequired() string {
	if o == nil || IsNil(o.Required) {
		var ret string
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetRequiredOk() (*string, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *Email) HasRequired() bool {
	if o != nil && !IsNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given string and assigns it to the Required field.
func (o *Email) SetRequired(v string) {
	o.Required = &v
}

// GetRequiredMetadata returns the RequiredMetadata field value if set, zero value otherwise.
func (o *Email) GetRequiredMetadata() PropertyMetadata {
	if o == nil || IsNil(o.RequiredMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.RequiredMetadata
}

// GetRequiredMetadataOk returns a tuple with the RequiredMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetRequiredMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.RequiredMetadata) {
		return nil, false
	}
	return o.RequiredMetadata, true
}

// HasRequiredMetadata returns a boolean if a field has been set.
func (o *Email) HasRequiredMetadata() bool {
	if o != nil && !IsNil(o.RequiredMetadata) {
		return true
	}

	return false
}

// SetRequiredMetadata gets a reference to the given PropertyMetadata and assigns it to the RequiredMetadata field.
func (o *Email) SetRequiredMetadata(v PropertyMetadata) {
	o.RequiredMetadata = &v
}

// GetRequireInitialOnSharedChange returns the RequireInitialOnSharedChange field value if set, zero value otherwise.
func (o *Email) GetRequireInitialOnSharedChange() string {
	if o == nil || IsNil(o.RequireInitialOnSharedChange) {
		var ret string
		return ret
	}
	return *o.RequireInitialOnSharedChange
}

// GetRequireInitialOnSharedChangeOk returns a tuple with the RequireInitialOnSharedChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetRequireInitialOnSharedChangeOk() (*string, bool) {
	if o == nil || IsNil(o.RequireInitialOnSharedChange) {
		return nil, false
	}
	return o.RequireInitialOnSharedChange, true
}

// HasRequireInitialOnSharedChange returns a boolean if a field has been set.
func (o *Email) HasRequireInitialOnSharedChange() bool {
	if o != nil && !IsNil(o.RequireInitialOnSharedChange) {
		return true
	}

	return false
}

// SetRequireInitialOnSharedChange gets a reference to the given string and assigns it to the RequireInitialOnSharedChange field.
func (o *Email) SetRequireInitialOnSharedChange(v string) {
	o.RequireInitialOnSharedChange = &v
}

// GetRequireInitialOnSharedChangeMetadata returns the RequireInitialOnSharedChangeMetadata field value if set, zero value otherwise.
func (o *Email) GetRequireInitialOnSharedChangeMetadata() PropertyMetadata {
	if o == nil || IsNil(o.RequireInitialOnSharedChangeMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.RequireInitialOnSharedChangeMetadata
}

// GetRequireInitialOnSharedChangeMetadataOk returns a tuple with the RequireInitialOnSharedChangeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetRequireInitialOnSharedChangeMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.RequireInitialOnSharedChangeMetadata) {
		return nil, false
	}
	return o.RequireInitialOnSharedChangeMetadata, true
}

// HasRequireInitialOnSharedChangeMetadata returns a boolean if a field has been set.
func (o *Email) HasRequireInitialOnSharedChangeMetadata() bool {
	if o != nil && !IsNil(o.RequireInitialOnSharedChangeMetadata) {
		return true
	}

	return false
}

// SetRequireInitialOnSharedChangeMetadata gets a reference to the given PropertyMetadata and assigns it to the RequireInitialOnSharedChangeMetadata field.
func (o *Email) SetRequireInitialOnSharedChangeMetadata(v PropertyMetadata) {
	o.RequireInitialOnSharedChangeMetadata = &v
}

// GetSenderRequired returns the SenderRequired field value if set, zero value otherwise.
func (o *Email) GetSenderRequired() string {
	if o == nil || IsNil(o.SenderRequired) {
		var ret string
		return ret
	}
	return *o.SenderRequired
}

// GetSenderRequiredOk returns a tuple with the SenderRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetSenderRequiredOk() (*string, bool) {
	if o == nil || IsNil(o.SenderRequired) {
		return nil, false
	}
	return o.SenderRequired, true
}

// HasSenderRequired returns a boolean if a field has been set.
func (o *Email) HasSenderRequired() bool {
	if o != nil && !IsNil(o.SenderRequired) {
		return true
	}

	return false
}

// SetSenderRequired gets a reference to the given string and assigns it to the SenderRequired field.
func (o *Email) SetSenderRequired(v string) {
	o.SenderRequired = &v
}

// GetSenderRequiredMetadata returns the SenderRequiredMetadata field value if set, zero value otherwise.
func (o *Email) GetSenderRequiredMetadata() PropertyMetadata {
	if o == nil || IsNil(o.SenderRequiredMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.SenderRequiredMetadata
}

// GetSenderRequiredMetadataOk returns a tuple with the SenderRequiredMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetSenderRequiredMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.SenderRequiredMetadata) {
		return nil, false
	}
	return o.SenderRequiredMetadata, true
}

// HasSenderRequiredMetadata returns a boolean if a field has been set.
func (o *Email) HasSenderRequiredMetadata() bool {
	if o != nil && !IsNil(o.SenderRequiredMetadata) {
		return true
	}

	return false
}

// SetSenderRequiredMetadata gets a reference to the given PropertyMetadata and assigns it to the SenderRequiredMetadata field.
func (o *Email) SetSenderRequiredMetadata(v PropertyMetadata) {
	o.SenderRequiredMetadata = &v
}

// GetShared returns the Shared field value if set, zero value otherwise.
func (o *Email) GetShared() string {
	if o == nil || IsNil(o.Shared) {
		var ret string
		return ret
	}
	return *o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetSharedOk() (*string, bool) {
	if o == nil || IsNil(o.Shared) {
		return nil, false
	}
	return o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *Email) HasShared() bool {
	if o != nil && !IsNil(o.Shared) {
		return true
	}

	return false
}

// SetShared gets a reference to the given string and assigns it to the Shared field.
func (o *Email) SetShared(v string) {
	o.Shared = &v
}

// GetSharedMetadata returns the SharedMetadata field value if set, zero value otherwise.
func (o *Email) GetSharedMetadata() PropertyMetadata {
	if o == nil || IsNil(o.SharedMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.SharedMetadata
}

// GetSharedMetadataOk returns a tuple with the SharedMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetSharedMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.SharedMetadata) {
		return nil, false
	}
	return o.SharedMetadata, true
}

// HasSharedMetadata returns a boolean if a field has been set.
func (o *Email) HasSharedMetadata() bool {
	if o != nil && !IsNil(o.SharedMetadata) {
		return true
	}

	return false
}

// SetSharedMetadata gets a reference to the given PropertyMetadata and assigns it to the SharedMetadata field.
func (o *Email) SetSharedMetadata(v PropertyMetadata) {
	o.SharedMetadata = &v
}

// GetShareToRecipients returns the ShareToRecipients field value if set, zero value otherwise.
func (o *Email) GetShareToRecipients() string {
	if o == nil || IsNil(o.ShareToRecipients) {
		var ret string
		return ret
	}
	return *o.ShareToRecipients
}

// GetShareToRecipientsOk returns a tuple with the ShareToRecipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetShareToRecipientsOk() (*string, bool) {
	if o == nil || IsNil(o.ShareToRecipients) {
		return nil, false
	}
	return o.ShareToRecipients, true
}

// HasShareToRecipients returns a boolean if a field has been set.
func (o *Email) HasShareToRecipients() bool {
	if o != nil && !IsNil(o.ShareToRecipients) {
		return true
	}

	return false
}

// SetShareToRecipients gets a reference to the given string and assigns it to the ShareToRecipients field.
func (o *Email) SetShareToRecipients(v string) {
	o.ShareToRecipients = &v
}

// GetShareToRecipientsMetadata returns the ShareToRecipientsMetadata field value if set, zero value otherwise.
func (o *Email) GetShareToRecipientsMetadata() PropertyMetadata {
	if o == nil || IsNil(o.ShareToRecipientsMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.ShareToRecipientsMetadata
}

// GetShareToRecipientsMetadataOk returns a tuple with the ShareToRecipientsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetShareToRecipientsMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.ShareToRecipientsMetadata) {
		return nil, false
	}
	return o.ShareToRecipientsMetadata, true
}

// HasShareToRecipientsMetadata returns a boolean if a field has been set.
func (o *Email) HasShareToRecipientsMetadata() bool {
	if o != nil && !IsNil(o.ShareToRecipientsMetadata) {
		return true
	}

	return false
}

// SetShareToRecipientsMetadata gets a reference to the given PropertyMetadata and assigns it to the ShareToRecipientsMetadata field.
func (o *Email) SetShareToRecipientsMetadata(v PropertyMetadata) {
	o.ShareToRecipientsMetadata = &v
}

// GetSmartContractInformation returns the SmartContractInformation field value if set, zero value otherwise.
func (o *Email) GetSmartContractInformation() SmartContractInformation {
	if o == nil || IsNil(o.SmartContractInformation) {
		var ret SmartContractInformation
		return ret
	}
	return *o.SmartContractInformation
}

// GetSmartContractInformationOk returns a tuple with the SmartContractInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetSmartContractInformationOk() (*SmartContractInformation, bool) {
	if o == nil || IsNil(o.SmartContractInformation) {
		return nil, false
	}
	return o.SmartContractInformation, true
}

// HasSmartContractInformation returns a boolean if a field has been set.
func (o *Email) HasSmartContractInformation() bool {
	if o != nil && !IsNil(o.SmartContractInformation) {
		return true
	}

	return false
}

// SetSmartContractInformation gets a reference to the given SmartContractInformation and assigns it to the SmartContractInformation field.
func (o *Email) SetSmartContractInformation(v SmartContractInformation) {
	o.SmartContractInformation = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *Email) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *Email) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *Email) SetSource(v string) {
	o.Source = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Email) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Email) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Email) SetStatus(v string) {
	o.Status = &v
}

// GetStatusMetadata returns the StatusMetadata field value if set, zero value otherwise.
func (o *Email) GetStatusMetadata() PropertyMetadata {
	if o == nil || IsNil(o.StatusMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.StatusMetadata
}

// GetStatusMetadataOk returns a tuple with the StatusMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetStatusMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.StatusMetadata) {
		return nil, false
	}
	return o.StatusMetadata, true
}

// HasStatusMetadata returns a boolean if a field has been set.
func (o *Email) HasStatusMetadata() bool {
	if o != nil && !IsNil(o.StatusMetadata) {
		return true
	}

	return false
}

// SetStatusMetadata gets a reference to the given PropertyMetadata and assigns it to the StatusMetadata field.
func (o *Email) SetStatusMetadata(v PropertyMetadata) {
	o.StatusMetadata = &v
}

// GetTabGroupLabels returns the TabGroupLabels field value if set, zero value otherwise.
func (o *Email) GetTabGroupLabels() []string {
	if o == nil || IsNil(o.TabGroupLabels) {
		var ret []string
		return ret
	}
	return o.TabGroupLabels
}

// GetTabGroupLabelsOk returns a tuple with the TabGroupLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetTabGroupLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.TabGroupLabels) {
		return nil, false
	}
	return o.TabGroupLabels, true
}

// HasTabGroupLabels returns a boolean if a field has been set.
func (o *Email) HasTabGroupLabels() bool {
	if o != nil && !IsNil(o.TabGroupLabels) {
		return true
	}

	return false
}

// SetTabGroupLabels gets a reference to the given []string and assigns it to the TabGroupLabels field.
func (o *Email) SetTabGroupLabels(v []string) {
	o.TabGroupLabels = v
}

// GetTabGroupLabelsMetadata returns the TabGroupLabelsMetadata field value if set, zero value otherwise.
func (o *Email) GetTabGroupLabelsMetadata() PropertyMetadata {
	if o == nil || IsNil(o.TabGroupLabelsMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.TabGroupLabelsMetadata
}

// GetTabGroupLabelsMetadataOk returns a tuple with the TabGroupLabelsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetTabGroupLabelsMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.TabGroupLabelsMetadata) {
		return nil, false
	}
	return o.TabGroupLabelsMetadata, true
}

// HasTabGroupLabelsMetadata returns a boolean if a field has been set.
func (o *Email) HasTabGroupLabelsMetadata() bool {
	if o != nil && !IsNil(o.TabGroupLabelsMetadata) {
		return true
	}

	return false
}

// SetTabGroupLabelsMetadata gets a reference to the given PropertyMetadata and assigns it to the TabGroupLabelsMetadata field.
func (o *Email) SetTabGroupLabelsMetadata(v PropertyMetadata) {
	o.TabGroupLabelsMetadata = &v
}

// GetTabId returns the TabId field value if set, zero value otherwise.
func (o *Email) GetTabId() string {
	if o == nil || IsNil(o.TabId) {
		var ret string
		return ret
	}
	return *o.TabId
}

// GetTabIdOk returns a tuple with the TabId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetTabIdOk() (*string, bool) {
	if o == nil || IsNil(o.TabId) {
		return nil, false
	}
	return o.TabId, true
}

// HasTabId returns a boolean if a field has been set.
func (o *Email) HasTabId() bool {
	if o != nil && !IsNil(o.TabId) {
		return true
	}

	return false
}

// SetTabId gets a reference to the given string and assigns it to the TabId field.
func (o *Email) SetTabId(v string) {
	o.TabId = &v
}

// GetTabIdMetadata returns the TabIdMetadata field value if set, zero value otherwise.
func (o *Email) GetTabIdMetadata() PropertyMetadata {
	if o == nil || IsNil(o.TabIdMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.TabIdMetadata
}

// GetTabIdMetadataOk returns a tuple with the TabIdMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetTabIdMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.TabIdMetadata) {
		return nil, false
	}
	return o.TabIdMetadata, true
}

// HasTabIdMetadata returns a boolean if a field has been set.
func (o *Email) HasTabIdMetadata() bool {
	if o != nil && !IsNil(o.TabIdMetadata) {
		return true
	}

	return false
}

// SetTabIdMetadata gets a reference to the given PropertyMetadata and assigns it to the TabIdMetadata field.
func (o *Email) SetTabIdMetadata(v PropertyMetadata) {
	o.TabIdMetadata = &v
}

// GetTabLabel returns the TabLabel field value if set, zero value otherwise.
func (o *Email) GetTabLabel() string {
	if o == nil || IsNil(o.TabLabel) {
		var ret string
		return ret
	}
	return *o.TabLabel
}

// GetTabLabelOk returns a tuple with the TabLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetTabLabelOk() (*string, bool) {
	if o == nil || IsNil(o.TabLabel) {
		return nil, false
	}
	return o.TabLabel, true
}

// HasTabLabel returns a boolean if a field has been set.
func (o *Email) HasTabLabel() bool {
	if o != nil && !IsNil(o.TabLabel) {
		return true
	}

	return false
}

// SetTabLabel gets a reference to the given string and assigns it to the TabLabel field.
func (o *Email) SetTabLabel(v string) {
	o.TabLabel = &v
}

// GetTabLabelMetadata returns the TabLabelMetadata field value if set, zero value otherwise.
func (o *Email) GetTabLabelMetadata() PropertyMetadata {
	if o == nil || IsNil(o.TabLabelMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.TabLabelMetadata
}

// GetTabLabelMetadataOk returns a tuple with the TabLabelMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetTabLabelMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.TabLabelMetadata) {
		return nil, false
	}
	return o.TabLabelMetadata, true
}

// HasTabLabelMetadata returns a boolean if a field has been set.
func (o *Email) HasTabLabelMetadata() bool {
	if o != nil && !IsNil(o.TabLabelMetadata) {
		return true
	}

	return false
}

// SetTabLabelMetadata gets a reference to the given PropertyMetadata and assigns it to the TabLabelMetadata field.
func (o *Email) SetTabLabelMetadata(v PropertyMetadata) {
	o.TabLabelMetadata = &v
}

// GetTabOrder returns the TabOrder field value if set, zero value otherwise.
func (o *Email) GetTabOrder() string {
	if o == nil || IsNil(o.TabOrder) {
		var ret string
		return ret
	}
	return *o.TabOrder
}

// GetTabOrderOk returns a tuple with the TabOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetTabOrderOk() (*string, bool) {
	if o == nil || IsNil(o.TabOrder) {
		return nil, false
	}
	return o.TabOrder, true
}

// HasTabOrder returns a boolean if a field has been set.
func (o *Email) HasTabOrder() bool {
	if o != nil && !IsNil(o.TabOrder) {
		return true
	}

	return false
}

// SetTabOrder gets a reference to the given string and assigns it to the TabOrder field.
func (o *Email) SetTabOrder(v string) {
	o.TabOrder = &v
}

// GetTabOrderMetadata returns the TabOrderMetadata field value if set, zero value otherwise.
func (o *Email) GetTabOrderMetadata() PropertyMetadata {
	if o == nil || IsNil(o.TabOrderMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.TabOrderMetadata
}

// GetTabOrderMetadataOk returns a tuple with the TabOrderMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetTabOrderMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.TabOrderMetadata) {
		return nil, false
	}
	return o.TabOrderMetadata, true
}

// HasTabOrderMetadata returns a boolean if a field has been set.
func (o *Email) HasTabOrderMetadata() bool {
	if o != nil && !IsNil(o.TabOrderMetadata) {
		return true
	}

	return false
}

// SetTabOrderMetadata gets a reference to the given PropertyMetadata and assigns it to the TabOrderMetadata field.
func (o *Email) SetTabOrderMetadata(v PropertyMetadata) {
	o.TabOrderMetadata = &v
}

// GetTabType returns the TabType field value if set, zero value otherwise.
func (o *Email) GetTabType() string {
	if o == nil || IsNil(o.TabType) {
		var ret string
		return ret
	}
	return *o.TabType
}

// GetTabTypeOk returns a tuple with the TabType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetTabTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TabType) {
		return nil, false
	}
	return o.TabType, true
}

// HasTabType returns a boolean if a field has been set.
func (o *Email) HasTabType() bool {
	if o != nil && !IsNil(o.TabType) {
		return true
	}

	return false
}

// SetTabType gets a reference to the given string and assigns it to the TabType field.
func (o *Email) SetTabType(v string) {
	o.TabType = &v
}

// GetTabTypeMetadata returns the TabTypeMetadata field value if set, zero value otherwise.
func (o *Email) GetTabTypeMetadata() PropertyMetadata {
	if o == nil || IsNil(o.TabTypeMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.TabTypeMetadata
}

// GetTabTypeMetadataOk returns a tuple with the TabTypeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetTabTypeMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.TabTypeMetadata) {
		return nil, false
	}
	return o.TabTypeMetadata, true
}

// HasTabTypeMetadata returns a boolean if a field has been set.
func (o *Email) HasTabTypeMetadata() bool {
	if o != nil && !IsNil(o.TabTypeMetadata) {
		return true
	}

	return false
}

// SetTabTypeMetadata gets a reference to the given PropertyMetadata and assigns it to the TabTypeMetadata field.
func (o *Email) SetTabTypeMetadata(v PropertyMetadata) {
	o.TabTypeMetadata = &v
}

// GetTemplateLocked returns the TemplateLocked field value if set, zero value otherwise.
func (o *Email) GetTemplateLocked() string {
	if o == nil || IsNil(o.TemplateLocked) {
		var ret string
		return ret
	}
	return *o.TemplateLocked
}

// GetTemplateLockedOk returns a tuple with the TemplateLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetTemplateLockedOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateLocked) {
		return nil, false
	}
	return o.TemplateLocked, true
}

// HasTemplateLocked returns a boolean if a field has been set.
func (o *Email) HasTemplateLocked() bool {
	if o != nil && !IsNil(o.TemplateLocked) {
		return true
	}

	return false
}

// SetTemplateLocked gets a reference to the given string and assigns it to the TemplateLocked field.
func (o *Email) SetTemplateLocked(v string) {
	o.TemplateLocked = &v
}

// GetTemplateLockedMetadata returns the TemplateLockedMetadata field value if set, zero value otherwise.
func (o *Email) GetTemplateLockedMetadata() PropertyMetadata {
	if o == nil || IsNil(o.TemplateLockedMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.TemplateLockedMetadata
}

// GetTemplateLockedMetadataOk returns a tuple with the TemplateLockedMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetTemplateLockedMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.TemplateLockedMetadata) {
		return nil, false
	}
	return o.TemplateLockedMetadata, true
}

// HasTemplateLockedMetadata returns a boolean if a field has been set.
func (o *Email) HasTemplateLockedMetadata() bool {
	if o != nil && !IsNil(o.TemplateLockedMetadata) {
		return true
	}

	return false
}

// SetTemplateLockedMetadata gets a reference to the given PropertyMetadata and assigns it to the TemplateLockedMetadata field.
func (o *Email) SetTemplateLockedMetadata(v PropertyMetadata) {
	o.TemplateLockedMetadata = &v
}

// GetTemplateRequired returns the TemplateRequired field value if set, zero value otherwise.
func (o *Email) GetTemplateRequired() string {
	if o == nil || IsNil(o.TemplateRequired) {
		var ret string
		return ret
	}
	return *o.TemplateRequired
}

// GetTemplateRequiredOk returns a tuple with the TemplateRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetTemplateRequiredOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateRequired) {
		return nil, false
	}
	return o.TemplateRequired, true
}

// HasTemplateRequired returns a boolean if a field has been set.
func (o *Email) HasTemplateRequired() bool {
	if o != nil && !IsNil(o.TemplateRequired) {
		return true
	}

	return false
}

// SetTemplateRequired gets a reference to the given string and assigns it to the TemplateRequired field.
func (o *Email) SetTemplateRequired(v string) {
	o.TemplateRequired = &v
}

// GetTemplateRequiredMetadata returns the TemplateRequiredMetadata field value if set, zero value otherwise.
func (o *Email) GetTemplateRequiredMetadata() PropertyMetadata {
	if o == nil || IsNil(o.TemplateRequiredMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.TemplateRequiredMetadata
}

// GetTemplateRequiredMetadataOk returns a tuple with the TemplateRequiredMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetTemplateRequiredMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.TemplateRequiredMetadata) {
		return nil, false
	}
	return o.TemplateRequiredMetadata, true
}

// HasTemplateRequiredMetadata returns a boolean if a field has been set.
func (o *Email) HasTemplateRequiredMetadata() bool {
	if o != nil && !IsNil(o.TemplateRequiredMetadata) {
		return true
	}

	return false
}

// SetTemplateRequiredMetadata gets a reference to the given PropertyMetadata and assigns it to the TemplateRequiredMetadata field.
func (o *Email) SetTemplateRequiredMetadata(v PropertyMetadata) {
	o.TemplateRequiredMetadata = &v
}

// GetTooltip returns the Tooltip field value if set, zero value otherwise.
func (o *Email) GetTooltip() string {
	if o == nil || IsNil(o.Tooltip) {
		var ret string
		return ret
	}
	return *o.Tooltip
}

// GetTooltipOk returns a tuple with the Tooltip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetTooltipOk() (*string, bool) {
	if o == nil || IsNil(o.Tooltip) {
		return nil, false
	}
	return o.Tooltip, true
}

// HasTooltip returns a boolean if a field has been set.
func (o *Email) HasTooltip() bool {
	if o != nil && !IsNil(o.Tooltip) {
		return true
	}

	return false
}

// SetTooltip gets a reference to the given string and assigns it to the Tooltip field.
func (o *Email) SetTooltip(v string) {
	o.Tooltip = &v
}

// GetToolTipMetadata returns the ToolTipMetadata field value if set, zero value otherwise.
func (o *Email) GetToolTipMetadata() PropertyMetadata {
	if o == nil || IsNil(o.ToolTipMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.ToolTipMetadata
}

// GetToolTipMetadataOk returns a tuple with the ToolTipMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetToolTipMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.ToolTipMetadata) {
		return nil, false
	}
	return o.ToolTipMetadata, true
}

// HasToolTipMetadata returns a boolean if a field has been set.
func (o *Email) HasToolTipMetadata() bool {
	if o != nil && !IsNil(o.ToolTipMetadata) {
		return true
	}

	return false
}

// SetToolTipMetadata gets a reference to the given PropertyMetadata and assigns it to the ToolTipMetadata field.
func (o *Email) SetToolTipMetadata(v PropertyMetadata) {
	o.ToolTipMetadata = &v
}

// GetUnderline returns the Underline field value if set, zero value otherwise.
func (o *Email) GetUnderline() string {
	if o == nil || IsNil(o.Underline) {
		var ret string
		return ret
	}
	return *o.Underline
}

// GetUnderlineOk returns a tuple with the Underline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetUnderlineOk() (*string, bool) {
	if o == nil || IsNil(o.Underline) {
		return nil, false
	}
	return o.Underline, true
}

// HasUnderline returns a boolean if a field has been set.
func (o *Email) HasUnderline() bool {
	if o != nil && !IsNil(o.Underline) {
		return true
	}

	return false
}

// SetUnderline gets a reference to the given string and assigns it to the Underline field.
func (o *Email) SetUnderline(v string) {
	o.Underline = &v
}

// GetUnderlineMetadata returns the UnderlineMetadata field value if set, zero value otherwise.
func (o *Email) GetUnderlineMetadata() PropertyMetadata {
	if o == nil || IsNil(o.UnderlineMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.UnderlineMetadata
}

// GetUnderlineMetadataOk returns a tuple with the UnderlineMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetUnderlineMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.UnderlineMetadata) {
		return nil, false
	}
	return o.UnderlineMetadata, true
}

// HasUnderlineMetadata returns a boolean if a field has been set.
func (o *Email) HasUnderlineMetadata() bool {
	if o != nil && !IsNil(o.UnderlineMetadata) {
		return true
	}

	return false
}

// SetUnderlineMetadata gets a reference to the given PropertyMetadata and assigns it to the UnderlineMetadata field.
func (o *Email) SetUnderlineMetadata(v PropertyMetadata) {
	o.UnderlineMetadata = &v
}

// GetValidationMessage returns the ValidationMessage field value if set, zero value otherwise.
func (o *Email) GetValidationMessage() string {
	if o == nil || IsNil(o.ValidationMessage) {
		var ret string
		return ret
	}
	return *o.ValidationMessage
}

// GetValidationMessageOk returns a tuple with the ValidationMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetValidationMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ValidationMessage) {
		return nil, false
	}
	return o.ValidationMessage, true
}

// HasValidationMessage returns a boolean if a field has been set.
func (o *Email) HasValidationMessage() bool {
	if o != nil && !IsNil(o.ValidationMessage) {
		return true
	}

	return false
}

// SetValidationMessage gets a reference to the given string and assigns it to the ValidationMessage field.
func (o *Email) SetValidationMessage(v string) {
	o.ValidationMessage = &v
}

// GetValidationMessageMetadata returns the ValidationMessageMetadata field value if set, zero value otherwise.
func (o *Email) GetValidationMessageMetadata() PropertyMetadata {
	if o == nil || IsNil(o.ValidationMessageMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.ValidationMessageMetadata
}

// GetValidationMessageMetadataOk returns a tuple with the ValidationMessageMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetValidationMessageMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.ValidationMessageMetadata) {
		return nil, false
	}
	return o.ValidationMessageMetadata, true
}

// HasValidationMessageMetadata returns a boolean if a field has been set.
func (o *Email) HasValidationMessageMetadata() bool {
	if o != nil && !IsNil(o.ValidationMessageMetadata) {
		return true
	}

	return false
}

// SetValidationMessageMetadata gets a reference to the given PropertyMetadata and assigns it to the ValidationMessageMetadata field.
func (o *Email) SetValidationMessageMetadata(v PropertyMetadata) {
	o.ValidationMessageMetadata = &v
}

// GetValidationPattern returns the ValidationPattern field value if set, zero value otherwise.
func (o *Email) GetValidationPattern() string {
	if o == nil || IsNil(o.ValidationPattern) {
		var ret string
		return ret
	}
	return *o.ValidationPattern
}

// GetValidationPatternOk returns a tuple with the ValidationPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetValidationPatternOk() (*string, bool) {
	if o == nil || IsNil(o.ValidationPattern) {
		return nil, false
	}
	return o.ValidationPattern, true
}

// HasValidationPattern returns a boolean if a field has been set.
func (o *Email) HasValidationPattern() bool {
	if o != nil && !IsNil(o.ValidationPattern) {
		return true
	}

	return false
}

// SetValidationPattern gets a reference to the given string and assigns it to the ValidationPattern field.
func (o *Email) SetValidationPattern(v string) {
	o.ValidationPattern = &v
}

// GetValidationPatternMetadata returns the ValidationPatternMetadata field value if set, zero value otherwise.
func (o *Email) GetValidationPatternMetadata() PropertyMetadata {
	if o == nil || IsNil(o.ValidationPatternMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.ValidationPatternMetadata
}

// GetValidationPatternMetadataOk returns a tuple with the ValidationPatternMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetValidationPatternMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.ValidationPatternMetadata) {
		return nil, false
	}
	return o.ValidationPatternMetadata, true
}

// HasValidationPatternMetadata returns a boolean if a field has been set.
func (o *Email) HasValidationPatternMetadata() bool {
	if o != nil && !IsNil(o.ValidationPatternMetadata) {
		return true
	}

	return false
}

// SetValidationPatternMetadata gets a reference to the given PropertyMetadata and assigns it to the ValidationPatternMetadata field.
func (o *Email) SetValidationPatternMetadata(v PropertyMetadata) {
	o.ValidationPatternMetadata = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *Email) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *Email) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *Email) SetValue(v string) {
	o.Value = &v
}

// GetValueMetadata returns the ValueMetadata field value if set, zero value otherwise.
func (o *Email) GetValueMetadata() PropertyMetadata {
	if o == nil || IsNil(o.ValueMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.ValueMetadata
}

// GetValueMetadataOk returns a tuple with the ValueMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetValueMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.ValueMetadata) {
		return nil, false
	}
	return o.ValueMetadata, true
}

// HasValueMetadata returns a boolean if a field has been set.
func (o *Email) HasValueMetadata() bool {
	if o != nil && !IsNil(o.ValueMetadata) {
		return true
	}

	return false
}

// SetValueMetadata gets a reference to the given PropertyMetadata and assigns it to the ValueMetadata field.
func (o *Email) SetValueMetadata(v PropertyMetadata) {
	o.ValueMetadata = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *Email) GetWidth() string {
	if o == nil || IsNil(o.Width) {
		var ret string
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetWidthOk() (*string, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *Email) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given string and assigns it to the Width field.
func (o *Email) SetWidth(v string) {
	o.Width = &v
}

// GetWidthMetadata returns the WidthMetadata field value if set, zero value otherwise.
func (o *Email) GetWidthMetadata() PropertyMetadata {
	if o == nil || IsNil(o.WidthMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.WidthMetadata
}

// GetWidthMetadataOk returns a tuple with the WidthMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetWidthMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.WidthMetadata) {
		return nil, false
	}
	return o.WidthMetadata, true
}

// HasWidthMetadata returns a boolean if a field has been set.
func (o *Email) HasWidthMetadata() bool {
	if o != nil && !IsNil(o.WidthMetadata) {
		return true
	}

	return false
}

// SetWidthMetadata gets a reference to the given PropertyMetadata and assigns it to the WidthMetadata field.
func (o *Email) SetWidthMetadata(v PropertyMetadata) {
	o.WidthMetadata = &v
}

// GetXPosition returns the XPosition field value if set, zero value otherwise.
func (o *Email) GetXPosition() string {
	if o == nil || IsNil(o.XPosition) {
		var ret string
		return ret
	}
	return *o.XPosition
}

// GetXPositionOk returns a tuple with the XPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetXPositionOk() (*string, bool) {
	if o == nil || IsNil(o.XPosition) {
		return nil, false
	}
	return o.XPosition, true
}

// HasXPosition returns a boolean if a field has been set.
func (o *Email) HasXPosition() bool {
	if o != nil && !IsNil(o.XPosition) {
		return true
	}

	return false
}

// SetXPosition gets a reference to the given string and assigns it to the XPosition field.
func (o *Email) SetXPosition(v string) {
	o.XPosition = &v
}

// GetXPositionMetadata returns the XPositionMetadata field value if set, zero value otherwise.
func (o *Email) GetXPositionMetadata() PropertyMetadata {
	if o == nil || IsNil(o.XPositionMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.XPositionMetadata
}

// GetXPositionMetadataOk returns a tuple with the XPositionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetXPositionMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.XPositionMetadata) {
		return nil, false
	}
	return o.XPositionMetadata, true
}

// HasXPositionMetadata returns a boolean if a field has been set.
func (o *Email) HasXPositionMetadata() bool {
	if o != nil && !IsNil(o.XPositionMetadata) {
		return true
	}

	return false
}

// SetXPositionMetadata gets a reference to the given PropertyMetadata and assigns it to the XPositionMetadata field.
func (o *Email) SetXPositionMetadata(v PropertyMetadata) {
	o.XPositionMetadata = &v
}

// GetYPosition returns the YPosition field value if set, zero value otherwise.
func (o *Email) GetYPosition() string {
	if o == nil || IsNil(o.YPosition) {
		var ret string
		return ret
	}
	return *o.YPosition
}

// GetYPositionOk returns a tuple with the YPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetYPositionOk() (*string, bool) {
	if o == nil || IsNil(o.YPosition) {
		return nil, false
	}
	return o.YPosition, true
}

// HasYPosition returns a boolean if a field has been set.
func (o *Email) HasYPosition() bool {
	if o != nil && !IsNil(o.YPosition) {
		return true
	}

	return false
}

// SetYPosition gets a reference to the given string and assigns it to the YPosition field.
func (o *Email) SetYPosition(v string) {
	o.YPosition = &v
}

// GetYPositionMetadata returns the YPositionMetadata field value if set, zero value otherwise.
func (o *Email) GetYPositionMetadata() PropertyMetadata {
	if o == nil || IsNil(o.YPositionMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.YPositionMetadata
}

// GetYPositionMetadataOk returns a tuple with the YPositionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetYPositionMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.YPositionMetadata) {
		return nil, false
	}
	return o.YPositionMetadata, true
}

// HasYPositionMetadata returns a boolean if a field has been set.
func (o *Email) HasYPositionMetadata() bool {
	if o != nil && !IsNil(o.YPositionMetadata) {
		return true
	}

	return false
}

// SetYPositionMetadata gets a reference to the given PropertyMetadata and assigns it to the YPositionMetadata field.
func (o *Email) SetYPositionMetadata(v PropertyMetadata) {
	o.YPositionMetadata = &v
}

func (o Email) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Email) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnchorAllowWhiteSpaceInCharacters) {
		toSerialize["anchorAllowWhiteSpaceInCharacters"] = o.AnchorAllowWhiteSpaceInCharacters
	}
	if !IsNil(o.AnchorAllowWhiteSpaceInCharactersMetadata) {
		toSerialize["anchorAllowWhiteSpaceInCharactersMetadata"] = o.AnchorAllowWhiteSpaceInCharactersMetadata
	}
	if !IsNil(o.AnchorCaseSensitive) {
		toSerialize["anchorCaseSensitive"] = o.AnchorCaseSensitive
	}
	if !IsNil(o.AnchorCaseSensitiveMetadata) {
		toSerialize["anchorCaseSensitiveMetadata"] = o.AnchorCaseSensitiveMetadata
	}
	if !IsNil(o.AnchorHorizontalAlignment) {
		toSerialize["anchorHorizontalAlignment"] = o.AnchorHorizontalAlignment
	}
	if !IsNil(o.AnchorHorizontalAlignmentMetadata) {
		toSerialize["anchorHorizontalAlignmentMetadata"] = o.AnchorHorizontalAlignmentMetadata
	}
	if !IsNil(o.AnchorIgnoreIfNotPresent) {
		toSerialize["anchorIgnoreIfNotPresent"] = o.AnchorIgnoreIfNotPresent
	}
	if !IsNil(o.AnchorIgnoreIfNotPresentMetadata) {
		toSerialize["anchorIgnoreIfNotPresentMetadata"] = o.AnchorIgnoreIfNotPresentMetadata
	}
	if !IsNil(o.AnchorMatchWholeWord) {
		toSerialize["anchorMatchWholeWord"] = o.AnchorMatchWholeWord
	}
	if !IsNil(o.AnchorMatchWholeWordMetadata) {
		toSerialize["anchorMatchWholeWordMetadata"] = o.AnchorMatchWholeWordMetadata
	}
	if !IsNil(o.AnchorString) {
		toSerialize["anchorString"] = o.AnchorString
	}
	if !IsNil(o.AnchorStringMetadata) {
		toSerialize["anchorStringMetadata"] = o.AnchorStringMetadata
	}
	if !IsNil(o.AnchorTabProcessorVersion) {
		toSerialize["anchorTabProcessorVersion"] = o.AnchorTabProcessorVersion
	}
	if !IsNil(o.AnchorTabProcessorVersionMetadata) {
		toSerialize["anchorTabProcessorVersionMetadata"] = o.AnchorTabProcessorVersionMetadata
	}
	if !IsNil(o.AnchorUnits) {
		toSerialize["anchorUnits"] = o.AnchorUnits
	}
	if !IsNil(o.AnchorUnitsMetadata) {
		toSerialize["anchorUnitsMetadata"] = o.AnchorUnitsMetadata
	}
	if !IsNil(o.AnchorXOffset) {
		toSerialize["anchorXOffset"] = o.AnchorXOffset
	}
	if !IsNil(o.AnchorXOffsetMetadata) {
		toSerialize["anchorXOffsetMetadata"] = o.AnchorXOffsetMetadata
	}
	if !IsNil(o.AnchorYOffset) {
		toSerialize["anchorYOffset"] = o.AnchorYOffset
	}
	if !IsNil(o.AnchorYOffsetMetadata) {
		toSerialize["anchorYOffsetMetadata"] = o.AnchorYOffsetMetadata
	}
	if !IsNil(o.Bold) {
		toSerialize["bold"] = o.Bold
	}
	if !IsNil(o.BoldMetadata) {
		toSerialize["boldMetadata"] = o.BoldMetadata
	}
	if !IsNil(o.Caption) {
		toSerialize["caption"] = o.Caption
	}
	if !IsNil(o.CaptionMetadata) {
		toSerialize["captionMetadata"] = o.CaptionMetadata
	}
	if !IsNil(o.ConcealValueOnDocument) {
		toSerialize["concealValueOnDocument"] = o.ConcealValueOnDocument
	}
	if !IsNil(o.ConcealValueOnDocumentMetadata) {
		toSerialize["concealValueOnDocumentMetadata"] = o.ConcealValueOnDocumentMetadata
	}
	if !IsNil(o.ConditionalParentLabel) {
		toSerialize["conditionalParentLabel"] = o.ConditionalParentLabel
	}
	if !IsNil(o.ConditionalParentLabelMetadata) {
		toSerialize["conditionalParentLabelMetadata"] = o.ConditionalParentLabelMetadata
	}
	if !IsNil(o.ConditionalParentValue) {
		toSerialize["conditionalParentValue"] = o.ConditionalParentValue
	}
	if !IsNil(o.ConditionalParentValueMetadata) {
		toSerialize["conditionalParentValueMetadata"] = o.ConditionalParentValueMetadata
	}
	if !IsNil(o.CustomTabId) {
		toSerialize["customTabId"] = o.CustomTabId
	}
	if !IsNil(o.CustomTabIdMetadata) {
		toSerialize["customTabIdMetadata"] = o.CustomTabIdMetadata
	}
	if !IsNil(o.DisableAutoSize) {
		toSerialize["disableAutoSize"] = o.DisableAutoSize
	}
	if !IsNil(o.DisableAutoSizeMetadata) {
		toSerialize["disableAutoSizeMetadata"] = o.DisableAutoSizeMetadata
	}
	if !IsNil(o.DocumentId) {
		toSerialize["documentId"] = o.DocumentId
	}
	if !IsNil(o.DocumentIdMetadata) {
		toSerialize["documentIdMetadata"] = o.DocumentIdMetadata
	}
	if !IsNil(o.ErrorDetails) {
		toSerialize["errorDetails"] = o.ErrorDetails
	}
	if !IsNil(o.Font) {
		toSerialize["font"] = o.Font
	}
	if !IsNil(o.FontColor) {
		toSerialize["fontColor"] = o.FontColor
	}
	if !IsNil(o.FontColorMetadata) {
		toSerialize["fontColorMetadata"] = o.FontColorMetadata
	}
	if !IsNil(o.FontMetadata) {
		toSerialize["fontMetadata"] = o.FontMetadata
	}
	if !IsNil(o.FontSize) {
		toSerialize["fontSize"] = o.FontSize
	}
	if !IsNil(o.FontSizeMetadata) {
		toSerialize["fontSizeMetadata"] = o.FontSizeMetadata
	}
	if !IsNil(o.FormOrder) {
		toSerialize["formOrder"] = o.FormOrder
	}
	if !IsNil(o.FormOrderMetadata) {
		toSerialize["formOrderMetadata"] = o.FormOrderMetadata
	}
	if !IsNil(o.FormPageLabel) {
		toSerialize["formPageLabel"] = o.FormPageLabel
	}
	if !IsNil(o.FormPageLabelMetadata) {
		toSerialize["formPageLabelMetadata"] = o.FormPageLabelMetadata
	}
	if !IsNil(o.FormPageNumber) {
		toSerialize["formPageNumber"] = o.FormPageNumber
	}
	if !IsNil(o.FormPageNumberMetadata) {
		toSerialize["formPageNumberMetadata"] = o.FormPageNumberMetadata
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.HeightMetadata) {
		toSerialize["heightMetadata"] = o.HeightMetadata
	}
	if !IsNil(o.Italic) {
		toSerialize["italic"] = o.Italic
	}
	if !IsNil(o.ItalicMetadata) {
		toSerialize["italicMetadata"] = o.ItalicMetadata
	}
	if !IsNil(o.LocalePolicy) {
		toSerialize["localePolicy"] = o.LocalePolicy
	}
	if !IsNil(o.Locked) {
		toSerialize["locked"] = o.Locked
	}
	if !IsNil(o.LockedMetadata) {
		toSerialize["lockedMetadata"] = o.LockedMetadata
	}
	if !IsNil(o.MaxLength) {
		toSerialize["maxLength"] = o.MaxLength
	}
	if !IsNil(o.MaxLengthMetadata) {
		toSerialize["maxLengthMetadata"] = o.MaxLengthMetadata
	}
	if !IsNil(o.MergeField) {
		toSerialize["mergeField"] = o.MergeField
	}
	if !IsNil(o.MergeFieldXml) {
		toSerialize["mergeFieldXml"] = o.MergeFieldXml
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NameMetadata) {
		toSerialize["nameMetadata"] = o.NameMetadata
	}
	if !IsNil(o.OriginalValue) {
		toSerialize["originalValue"] = o.OriginalValue
	}
	if !IsNil(o.OriginalValueMetadata) {
		toSerialize["originalValueMetadata"] = o.OriginalValueMetadata
	}
	if !IsNil(o.PageNumber) {
		toSerialize["pageNumber"] = o.PageNumber
	}
	if !IsNil(o.PageNumberMetadata) {
		toSerialize["pageNumberMetadata"] = o.PageNumberMetadata
	}
	if !IsNil(o.RecipientId) {
		toSerialize["recipientId"] = o.RecipientId
	}
	if !IsNil(o.RecipientIdGuid) {
		toSerialize["recipientIdGuid"] = o.RecipientIdGuid
	}
	if !IsNil(o.RecipientIdGuidMetadata) {
		toSerialize["recipientIdGuidMetadata"] = o.RecipientIdGuidMetadata
	}
	if !IsNil(o.RecipientIdMetadata) {
		toSerialize["recipientIdMetadata"] = o.RecipientIdMetadata
	}
	if !IsNil(o.RequireAll) {
		toSerialize["requireAll"] = o.RequireAll
	}
	if !IsNil(o.RequireAllMetadata) {
		toSerialize["requireAllMetadata"] = o.RequireAllMetadata
	}
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	if !IsNil(o.RequiredMetadata) {
		toSerialize["requiredMetadata"] = o.RequiredMetadata
	}
	if !IsNil(o.RequireInitialOnSharedChange) {
		toSerialize["requireInitialOnSharedChange"] = o.RequireInitialOnSharedChange
	}
	if !IsNil(o.RequireInitialOnSharedChangeMetadata) {
		toSerialize["requireInitialOnSharedChangeMetadata"] = o.RequireInitialOnSharedChangeMetadata
	}
	if !IsNil(o.SenderRequired) {
		toSerialize["senderRequired"] = o.SenderRequired
	}
	if !IsNil(o.SenderRequiredMetadata) {
		toSerialize["senderRequiredMetadata"] = o.SenderRequiredMetadata
	}
	if !IsNil(o.Shared) {
		toSerialize["shared"] = o.Shared
	}
	if !IsNil(o.SharedMetadata) {
		toSerialize["sharedMetadata"] = o.SharedMetadata
	}
	if !IsNil(o.ShareToRecipients) {
		toSerialize["shareToRecipients"] = o.ShareToRecipients
	}
	if !IsNil(o.ShareToRecipientsMetadata) {
		toSerialize["shareToRecipientsMetadata"] = o.ShareToRecipientsMetadata
	}
	if !IsNil(o.SmartContractInformation) {
		toSerialize["smartContractInformation"] = o.SmartContractInformation
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusMetadata) {
		toSerialize["statusMetadata"] = o.StatusMetadata
	}
	if !IsNil(o.TabGroupLabels) {
		toSerialize["tabGroupLabels"] = o.TabGroupLabels
	}
	if !IsNil(o.TabGroupLabelsMetadata) {
		toSerialize["tabGroupLabelsMetadata"] = o.TabGroupLabelsMetadata
	}
	if !IsNil(o.TabId) {
		toSerialize["tabId"] = o.TabId
	}
	if !IsNil(o.TabIdMetadata) {
		toSerialize["tabIdMetadata"] = o.TabIdMetadata
	}
	if !IsNil(o.TabLabel) {
		toSerialize["tabLabel"] = o.TabLabel
	}
	if !IsNil(o.TabLabelMetadata) {
		toSerialize["tabLabelMetadata"] = o.TabLabelMetadata
	}
	if !IsNil(o.TabOrder) {
		toSerialize["tabOrder"] = o.TabOrder
	}
	if !IsNil(o.TabOrderMetadata) {
		toSerialize["tabOrderMetadata"] = o.TabOrderMetadata
	}
	if !IsNil(o.TabType) {
		toSerialize["tabType"] = o.TabType
	}
	if !IsNil(o.TabTypeMetadata) {
		toSerialize["tabTypeMetadata"] = o.TabTypeMetadata
	}
	if !IsNil(o.TemplateLocked) {
		toSerialize["templateLocked"] = o.TemplateLocked
	}
	if !IsNil(o.TemplateLockedMetadata) {
		toSerialize["templateLockedMetadata"] = o.TemplateLockedMetadata
	}
	if !IsNil(o.TemplateRequired) {
		toSerialize["templateRequired"] = o.TemplateRequired
	}
	if !IsNil(o.TemplateRequiredMetadata) {
		toSerialize["templateRequiredMetadata"] = o.TemplateRequiredMetadata
	}
	if !IsNil(o.Tooltip) {
		toSerialize["tooltip"] = o.Tooltip
	}
	if !IsNil(o.ToolTipMetadata) {
		toSerialize["toolTipMetadata"] = o.ToolTipMetadata
	}
	if !IsNil(o.Underline) {
		toSerialize["underline"] = o.Underline
	}
	if !IsNil(o.UnderlineMetadata) {
		toSerialize["underlineMetadata"] = o.UnderlineMetadata
	}
	if !IsNil(o.ValidationMessage) {
		toSerialize["validationMessage"] = o.ValidationMessage
	}
	if !IsNil(o.ValidationMessageMetadata) {
		toSerialize["validationMessageMetadata"] = o.ValidationMessageMetadata
	}
	if !IsNil(o.ValidationPattern) {
		toSerialize["validationPattern"] = o.ValidationPattern
	}
	if !IsNil(o.ValidationPatternMetadata) {
		toSerialize["validationPatternMetadata"] = o.ValidationPatternMetadata
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.ValueMetadata) {
		toSerialize["valueMetadata"] = o.ValueMetadata
	}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	if !IsNil(o.WidthMetadata) {
		toSerialize["widthMetadata"] = o.WidthMetadata
	}
	if !IsNil(o.XPosition) {
		toSerialize["xPosition"] = o.XPosition
	}
	if !IsNil(o.XPositionMetadata) {
		toSerialize["xPositionMetadata"] = o.XPositionMetadata
	}
	if !IsNil(o.YPosition) {
		toSerialize["yPosition"] = o.YPosition
	}
	if !IsNil(o.YPositionMetadata) {
		toSerialize["yPositionMetadata"] = o.YPositionMetadata
	}
	return toSerialize, nil
}

type NullableEmail struct {
	value *Email
	isSet bool
}

func (v NullableEmail) Get() *Email {
	return v.value
}

func (v *NullableEmail) Set(val *Email) {
	v.value = val
	v.isSet = true
}

func (v NullableEmail) IsSet() bool {
	return v.isSet
}

func (v *NullableEmail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmail(val *Email) *NullableEmail {
	return &NullableEmail{value: val, isSet: true}
}

func (v NullableEmail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


