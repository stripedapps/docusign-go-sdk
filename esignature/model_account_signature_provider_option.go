/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AccountSignatureProviderOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountSignatureProviderOption{}

// AccountSignatureProviderOption Reserved for DocuSign.
type AccountSignatureProviderOption struct {
	// Reserved for DocuSign.
	SignatureProviderOptionDisplayName *string `json:"signatureProviderOptionDisplayName,omitempty"`
	// Reserved for DocuSign.
	SignatureProviderOptionId *string `json:"signatureProviderOptionId,omitempty"`
	// Reserved for DocuSign.
	SignatureProviderOptionName *string `json:"signatureProviderOptionName,omitempty"`
}

// NewAccountSignatureProviderOption instantiates a new AccountSignatureProviderOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountSignatureProviderOption() *AccountSignatureProviderOption {
	this := AccountSignatureProviderOption{}
	return &this
}

// NewAccountSignatureProviderOptionWithDefaults instantiates a new AccountSignatureProviderOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountSignatureProviderOptionWithDefaults() *AccountSignatureProviderOption {
	this := AccountSignatureProviderOption{}
	return &this
}

// GetSignatureProviderOptionDisplayName returns the SignatureProviderOptionDisplayName field value if set, zero value otherwise.
func (o *AccountSignatureProviderOption) GetSignatureProviderOptionDisplayName() string {
	if o == nil || IsNil(o.SignatureProviderOptionDisplayName) {
		var ret string
		return ret
	}
	return *o.SignatureProviderOptionDisplayName
}

// GetSignatureProviderOptionDisplayNameOk returns a tuple with the SignatureProviderOptionDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSignatureProviderOption) GetSignatureProviderOptionDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.SignatureProviderOptionDisplayName) {
		return nil, false
	}
	return o.SignatureProviderOptionDisplayName, true
}

// HasSignatureProviderOptionDisplayName returns a boolean if a field has been set.
func (o *AccountSignatureProviderOption) HasSignatureProviderOptionDisplayName() bool {
	if o != nil && !IsNil(o.SignatureProviderOptionDisplayName) {
		return true
	}

	return false
}

// SetSignatureProviderOptionDisplayName gets a reference to the given string and assigns it to the SignatureProviderOptionDisplayName field.
func (o *AccountSignatureProviderOption) SetSignatureProviderOptionDisplayName(v string) {
	o.SignatureProviderOptionDisplayName = &v
}

// GetSignatureProviderOptionId returns the SignatureProviderOptionId field value if set, zero value otherwise.
func (o *AccountSignatureProviderOption) GetSignatureProviderOptionId() string {
	if o == nil || IsNil(o.SignatureProviderOptionId) {
		var ret string
		return ret
	}
	return *o.SignatureProviderOptionId
}

// GetSignatureProviderOptionIdOk returns a tuple with the SignatureProviderOptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSignatureProviderOption) GetSignatureProviderOptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SignatureProviderOptionId) {
		return nil, false
	}
	return o.SignatureProviderOptionId, true
}

// HasSignatureProviderOptionId returns a boolean if a field has been set.
func (o *AccountSignatureProviderOption) HasSignatureProviderOptionId() bool {
	if o != nil && !IsNil(o.SignatureProviderOptionId) {
		return true
	}

	return false
}

// SetSignatureProviderOptionId gets a reference to the given string and assigns it to the SignatureProviderOptionId field.
func (o *AccountSignatureProviderOption) SetSignatureProviderOptionId(v string) {
	o.SignatureProviderOptionId = &v
}

// GetSignatureProviderOptionName returns the SignatureProviderOptionName field value if set, zero value otherwise.
func (o *AccountSignatureProviderOption) GetSignatureProviderOptionName() string {
	if o == nil || IsNil(o.SignatureProviderOptionName) {
		var ret string
		return ret
	}
	return *o.SignatureProviderOptionName
}

// GetSignatureProviderOptionNameOk returns a tuple with the SignatureProviderOptionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSignatureProviderOption) GetSignatureProviderOptionNameOk() (*string, bool) {
	if o == nil || IsNil(o.SignatureProviderOptionName) {
		return nil, false
	}
	return o.SignatureProviderOptionName, true
}

// HasSignatureProviderOptionName returns a boolean if a field has been set.
func (o *AccountSignatureProviderOption) HasSignatureProviderOptionName() bool {
	if o != nil && !IsNil(o.SignatureProviderOptionName) {
		return true
	}

	return false
}

// SetSignatureProviderOptionName gets a reference to the given string and assigns it to the SignatureProviderOptionName field.
func (o *AccountSignatureProviderOption) SetSignatureProviderOptionName(v string) {
	o.SignatureProviderOptionName = &v
}

func (o AccountSignatureProviderOption) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountSignatureProviderOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SignatureProviderOptionDisplayName) {
		toSerialize["signatureProviderOptionDisplayName"] = o.SignatureProviderOptionDisplayName
	}
	if !IsNil(o.SignatureProviderOptionId) {
		toSerialize["signatureProviderOptionId"] = o.SignatureProviderOptionId
	}
	if !IsNil(o.SignatureProviderOptionName) {
		toSerialize["signatureProviderOptionName"] = o.SignatureProviderOptionName
	}
	return toSerialize, nil
}

type NullableAccountSignatureProviderOption struct {
	value *AccountSignatureProviderOption
	isSet bool
}

func (v NullableAccountSignatureProviderOption) Get() *AccountSignatureProviderOption {
	return v.value
}

func (v *NullableAccountSignatureProviderOption) Set(val *AccountSignatureProviderOption) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountSignatureProviderOption) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountSignatureProviderOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountSignatureProviderOption(val *AccountSignatureProviderOption) *NullableAccountSignatureProviderOption {
	return &NullableAccountSignatureProviderOption{value: val, isSet: true}
}

func (v NullableAccountSignatureProviderOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountSignatureProviderOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


