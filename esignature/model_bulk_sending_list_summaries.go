/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BulkSendingListSummaries type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkSendingListSummaries{}

// BulkSendingListSummaries This complex type contains summaries that provide basic information about the bulk send lists that belong to the current user.
type BulkSendingListSummaries struct {
	// An array of `bulkSendingListSummary` objects where each summary provides basic information about a bulk send list that belongs to the current user.
	BulkListSummaries []BulkSendingListSummary `json:"bulkListSummaries,omitempty"`
}

// NewBulkSendingListSummaries instantiates a new BulkSendingListSummaries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkSendingListSummaries() *BulkSendingListSummaries {
	this := BulkSendingListSummaries{}
	return &this
}

// NewBulkSendingListSummariesWithDefaults instantiates a new BulkSendingListSummaries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkSendingListSummariesWithDefaults() *BulkSendingListSummaries {
	this := BulkSendingListSummaries{}
	return &this
}

// GetBulkListSummaries returns the BulkListSummaries field value if set, zero value otherwise.
func (o *BulkSendingListSummaries) GetBulkListSummaries() []BulkSendingListSummary {
	if o == nil || IsNil(o.BulkListSummaries) {
		var ret []BulkSendingListSummary
		return ret
	}
	return o.BulkListSummaries
}

// GetBulkListSummariesOk returns a tuple with the BulkListSummaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendingListSummaries) GetBulkListSummariesOk() ([]BulkSendingListSummary, bool) {
	if o == nil || IsNil(o.BulkListSummaries) {
		return nil, false
	}
	return o.BulkListSummaries, true
}

// HasBulkListSummaries returns a boolean if a field has been set.
func (o *BulkSendingListSummaries) HasBulkListSummaries() bool {
	if o != nil && !IsNil(o.BulkListSummaries) {
		return true
	}

	return false
}

// SetBulkListSummaries gets a reference to the given []BulkSendingListSummary and assigns it to the BulkListSummaries field.
func (o *BulkSendingListSummaries) SetBulkListSummaries(v []BulkSendingListSummary) {
	o.BulkListSummaries = v
}

func (o BulkSendingListSummaries) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkSendingListSummaries) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BulkListSummaries) {
		toSerialize["bulkListSummaries"] = o.BulkListSummaries
	}
	return toSerialize, nil
}

type NullableBulkSendingListSummaries struct {
	value *BulkSendingListSummaries
	isSet bool
}

func (v NullableBulkSendingListSummaries) Get() *BulkSendingListSummaries {
	return v.value
}

func (v *NullableBulkSendingListSummaries) Set(val *BulkSendingListSummaries) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkSendingListSummaries) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkSendingListSummaries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkSendingListSummaries(val *BulkSendingListSummaries) *NullableBulkSendingListSummaries {
	return &NullableBulkSendingListSummaries{value: val, isSet: true}
}

func (v NullableBulkSendingListSummaries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkSendingListSummaries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


