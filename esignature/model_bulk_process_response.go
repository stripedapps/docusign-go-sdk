/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BulkProcessResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkProcessResponse{}

// BulkProcessResponse 
type BulkProcessResponse struct {
	// Identifier used to query the status of an individual bulk recipient batch.
	BatchId *string `json:"batchId,omitempty"`
	// 
	BatchName *string `json:"batchName,omitempty"`
	// The total number of items in the batch being queried.
	BatchSize *string `json:"batchSize,omitempty"`
	// Error details. 
	ErrorDetails []string `json:"errorDetails,omitempty"`
	// 
	Errors []string `json:"errors,omitempty"`
	// 
	QueueLimit *string `json:"queueLimit,omitempty"`
	// 
	TotalQueued *string `json:"totalQueued,omitempty"`
}

// NewBulkProcessResponse instantiates a new BulkProcessResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkProcessResponse() *BulkProcessResponse {
	this := BulkProcessResponse{}
	return &this
}

// NewBulkProcessResponseWithDefaults instantiates a new BulkProcessResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkProcessResponseWithDefaults() *BulkProcessResponse {
	this := BulkProcessResponse{}
	return &this
}

// GetBatchId returns the BatchId field value if set, zero value otherwise.
func (o *BulkProcessResponse) GetBatchId() string {
	if o == nil || IsNil(o.BatchId) {
		var ret string
		return ret
	}
	return *o.BatchId
}

// GetBatchIdOk returns a tuple with the BatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkProcessResponse) GetBatchIdOk() (*string, bool) {
	if o == nil || IsNil(o.BatchId) {
		return nil, false
	}
	return o.BatchId, true
}

// HasBatchId returns a boolean if a field has been set.
func (o *BulkProcessResponse) HasBatchId() bool {
	if o != nil && !IsNil(o.BatchId) {
		return true
	}

	return false
}

// SetBatchId gets a reference to the given string and assigns it to the BatchId field.
func (o *BulkProcessResponse) SetBatchId(v string) {
	o.BatchId = &v
}

// GetBatchName returns the BatchName field value if set, zero value otherwise.
func (o *BulkProcessResponse) GetBatchName() string {
	if o == nil || IsNil(o.BatchName) {
		var ret string
		return ret
	}
	return *o.BatchName
}

// GetBatchNameOk returns a tuple with the BatchName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkProcessResponse) GetBatchNameOk() (*string, bool) {
	if o == nil || IsNil(o.BatchName) {
		return nil, false
	}
	return o.BatchName, true
}

// HasBatchName returns a boolean if a field has been set.
func (o *BulkProcessResponse) HasBatchName() bool {
	if o != nil && !IsNil(o.BatchName) {
		return true
	}

	return false
}

// SetBatchName gets a reference to the given string and assigns it to the BatchName field.
func (o *BulkProcessResponse) SetBatchName(v string) {
	o.BatchName = &v
}

// GetBatchSize returns the BatchSize field value if set, zero value otherwise.
func (o *BulkProcessResponse) GetBatchSize() string {
	if o == nil || IsNil(o.BatchSize) {
		var ret string
		return ret
	}
	return *o.BatchSize
}

// GetBatchSizeOk returns a tuple with the BatchSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkProcessResponse) GetBatchSizeOk() (*string, bool) {
	if o == nil || IsNil(o.BatchSize) {
		return nil, false
	}
	return o.BatchSize, true
}

// HasBatchSize returns a boolean if a field has been set.
func (o *BulkProcessResponse) HasBatchSize() bool {
	if o != nil && !IsNil(o.BatchSize) {
		return true
	}

	return false
}

// SetBatchSize gets a reference to the given string and assigns it to the BatchSize field.
func (o *BulkProcessResponse) SetBatchSize(v string) {
	o.BatchSize = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *BulkProcessResponse) GetErrorDetails() []string {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret []string
		return ret
	}
	return o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkProcessResponse) GetErrorDetailsOk() ([]string, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *BulkProcessResponse) HasErrorDetails() bool {
	if o != nil && !IsNil(o.ErrorDetails) {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given []string and assigns it to the ErrorDetails field.
func (o *BulkProcessResponse) SetErrorDetails(v []string) {
	o.ErrorDetails = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *BulkProcessResponse) GetErrors() []string {
	if o == nil || IsNil(o.Errors) {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkProcessResponse) GetErrorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *BulkProcessResponse) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *BulkProcessResponse) SetErrors(v []string) {
	o.Errors = v
}

// GetQueueLimit returns the QueueLimit field value if set, zero value otherwise.
func (o *BulkProcessResponse) GetQueueLimit() string {
	if o == nil || IsNil(o.QueueLimit) {
		var ret string
		return ret
	}
	return *o.QueueLimit
}

// GetQueueLimitOk returns a tuple with the QueueLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkProcessResponse) GetQueueLimitOk() (*string, bool) {
	if o == nil || IsNil(o.QueueLimit) {
		return nil, false
	}
	return o.QueueLimit, true
}

// HasQueueLimit returns a boolean if a field has been set.
func (o *BulkProcessResponse) HasQueueLimit() bool {
	if o != nil && !IsNil(o.QueueLimit) {
		return true
	}

	return false
}

// SetQueueLimit gets a reference to the given string and assigns it to the QueueLimit field.
func (o *BulkProcessResponse) SetQueueLimit(v string) {
	o.QueueLimit = &v
}

// GetTotalQueued returns the TotalQueued field value if set, zero value otherwise.
func (o *BulkProcessResponse) GetTotalQueued() string {
	if o == nil || IsNil(o.TotalQueued) {
		var ret string
		return ret
	}
	return *o.TotalQueued
}

// GetTotalQueuedOk returns a tuple with the TotalQueued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkProcessResponse) GetTotalQueuedOk() (*string, bool) {
	if o == nil || IsNil(o.TotalQueued) {
		return nil, false
	}
	return o.TotalQueued, true
}

// HasTotalQueued returns a boolean if a field has been set.
func (o *BulkProcessResponse) HasTotalQueued() bool {
	if o != nil && !IsNil(o.TotalQueued) {
		return true
	}

	return false
}

// SetTotalQueued gets a reference to the given string and assigns it to the TotalQueued field.
func (o *BulkProcessResponse) SetTotalQueued(v string) {
	o.TotalQueued = &v
}

func (o BulkProcessResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkProcessResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BatchId) {
		toSerialize["batchId"] = o.BatchId
	}
	if !IsNil(o.BatchName) {
		toSerialize["batchName"] = o.BatchName
	}
	if !IsNil(o.BatchSize) {
		toSerialize["batchSize"] = o.BatchSize
	}
	if !IsNil(o.ErrorDetails) {
		toSerialize["errorDetails"] = o.ErrorDetails
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.QueueLimit) {
		toSerialize["queueLimit"] = o.QueueLimit
	}
	if !IsNil(o.TotalQueued) {
		toSerialize["totalQueued"] = o.TotalQueued
	}
	return toSerialize, nil
}

type NullableBulkProcessResponse struct {
	value *BulkProcessResponse
	isSet bool
}

func (v NullableBulkProcessResponse) Get() *BulkProcessResponse {
	return v.value
}

func (v *NullableBulkProcessResponse) Set(val *BulkProcessResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkProcessResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkProcessResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkProcessResponse(val *BulkProcessResponse) *NullableBulkProcessResponse {
	return &NullableBulkProcessResponse{value: val, isSet: true}
}

func (v NullableBulkProcessResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkProcessResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


