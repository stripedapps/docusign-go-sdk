/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EnvelopeIdsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvelopeIdsRequest{}

// EnvelopeIdsRequest Lists of envelope and transaction IDs to use in the results.  If you use this request body with Envelopes: listStatus, you must set one or both of the following query parameters to the special value `request_body`:  - `envelope_ids=request_body` - `transaction_ids=request_body` 
type EnvelopeIdsRequest struct {
	// A comma-separated list of envelope IDs to include in the results.
	EnvelopeIds []string `json:"envelopeIds,omitempty"`
	// A comma-separated list of transaction IDs to include in the results. Note that transaction IDs are valid for seven days.
	TransactionIds []string `json:"transactionIds,omitempty"`
}

// NewEnvelopeIdsRequest instantiates a new EnvelopeIdsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvelopeIdsRequest() *EnvelopeIdsRequest {
	this := EnvelopeIdsRequest{}
	return &this
}

// NewEnvelopeIdsRequestWithDefaults instantiates a new EnvelopeIdsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvelopeIdsRequestWithDefaults() *EnvelopeIdsRequest {
	this := EnvelopeIdsRequest{}
	return &this
}

// GetEnvelopeIds returns the EnvelopeIds field value if set, zero value otherwise.
func (o *EnvelopeIdsRequest) GetEnvelopeIds() []string {
	if o == nil || IsNil(o.EnvelopeIds) {
		var ret []string
		return ret
	}
	return o.EnvelopeIds
}

// GetEnvelopeIdsOk returns a tuple with the EnvelopeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvelopeIdsRequest) GetEnvelopeIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.EnvelopeIds) {
		return nil, false
	}
	return o.EnvelopeIds, true
}

// HasEnvelopeIds returns a boolean if a field has been set.
func (o *EnvelopeIdsRequest) HasEnvelopeIds() bool {
	if o != nil && !IsNil(o.EnvelopeIds) {
		return true
	}

	return false
}

// SetEnvelopeIds gets a reference to the given []string and assigns it to the EnvelopeIds field.
func (o *EnvelopeIdsRequest) SetEnvelopeIds(v []string) {
	o.EnvelopeIds = v
}

// GetTransactionIds returns the TransactionIds field value if set, zero value otherwise.
func (o *EnvelopeIdsRequest) GetTransactionIds() []string {
	if o == nil || IsNil(o.TransactionIds) {
		var ret []string
		return ret
	}
	return o.TransactionIds
}

// GetTransactionIdsOk returns a tuple with the TransactionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvelopeIdsRequest) GetTransactionIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TransactionIds) {
		return nil, false
	}
	return o.TransactionIds, true
}

// HasTransactionIds returns a boolean if a field has been set.
func (o *EnvelopeIdsRequest) HasTransactionIds() bool {
	if o != nil && !IsNil(o.TransactionIds) {
		return true
	}

	return false
}

// SetTransactionIds gets a reference to the given []string and assigns it to the TransactionIds field.
func (o *EnvelopeIdsRequest) SetTransactionIds(v []string) {
	o.TransactionIds = v
}

func (o EnvelopeIdsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvelopeIdsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnvelopeIds) {
		toSerialize["envelopeIds"] = o.EnvelopeIds
	}
	if !IsNil(o.TransactionIds) {
		toSerialize["transactionIds"] = o.TransactionIds
	}
	return toSerialize, nil
}

type NullableEnvelopeIdsRequest struct {
	value *EnvelopeIdsRequest
	isSet bool
}

func (v NullableEnvelopeIdsRequest) Get() *EnvelopeIdsRequest {
	return v.value
}

func (v *NullableEnvelopeIdsRequest) Set(val *EnvelopeIdsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvelopeIdsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvelopeIdsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvelopeIdsRequest(val *EnvelopeIdsRequest) *NullableEnvelopeIdsRequest {
	return &NullableEnvelopeIdsRequest{value: val, isSet: true}
}

func (v NullableEnvelopeIdsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvelopeIdsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


