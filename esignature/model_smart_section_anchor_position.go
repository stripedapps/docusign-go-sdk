/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SmartSectionAnchorPosition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmartSectionAnchorPosition{}

// SmartSectionAnchorPosition 
type SmartSectionAnchorPosition struct {
	// Specifies the page number on which the tab is located.
	PageNumber *int32 `json:"pageNumber,omitempty"`
	// This property indicates the horizontal offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. Must be an integer. May be zero. 
	XPosition *float64 `json:"xPosition,omitempty"`
	// This property indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position. Required. Must be an integer. May be zero. 
	YPosition *float64 `json:"yPosition,omitempty"`
}

// NewSmartSectionAnchorPosition instantiates a new SmartSectionAnchorPosition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmartSectionAnchorPosition() *SmartSectionAnchorPosition {
	this := SmartSectionAnchorPosition{}
	return &this
}

// NewSmartSectionAnchorPositionWithDefaults instantiates a new SmartSectionAnchorPosition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmartSectionAnchorPositionWithDefaults() *SmartSectionAnchorPosition {
	this := SmartSectionAnchorPosition{}
	return &this
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *SmartSectionAnchorPosition) GetPageNumber() int32 {
	if o == nil || IsNil(o.PageNumber) {
		var ret int32
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartSectionAnchorPosition) GetPageNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *SmartSectionAnchorPosition) HasPageNumber() bool {
	if o != nil && !IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int32 and assigns it to the PageNumber field.
func (o *SmartSectionAnchorPosition) SetPageNumber(v int32) {
	o.PageNumber = &v
}

// GetXPosition returns the XPosition field value if set, zero value otherwise.
func (o *SmartSectionAnchorPosition) GetXPosition() float64 {
	if o == nil || IsNil(o.XPosition) {
		var ret float64
		return ret
	}
	return *o.XPosition
}

// GetXPositionOk returns a tuple with the XPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartSectionAnchorPosition) GetXPositionOk() (*float64, bool) {
	if o == nil || IsNil(o.XPosition) {
		return nil, false
	}
	return o.XPosition, true
}

// HasXPosition returns a boolean if a field has been set.
func (o *SmartSectionAnchorPosition) HasXPosition() bool {
	if o != nil && !IsNil(o.XPosition) {
		return true
	}

	return false
}

// SetXPosition gets a reference to the given float64 and assigns it to the XPosition field.
func (o *SmartSectionAnchorPosition) SetXPosition(v float64) {
	o.XPosition = &v
}

// GetYPosition returns the YPosition field value if set, zero value otherwise.
func (o *SmartSectionAnchorPosition) GetYPosition() float64 {
	if o == nil || IsNil(o.YPosition) {
		var ret float64
		return ret
	}
	return *o.YPosition
}

// GetYPositionOk returns a tuple with the YPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartSectionAnchorPosition) GetYPositionOk() (*float64, bool) {
	if o == nil || IsNil(o.YPosition) {
		return nil, false
	}
	return o.YPosition, true
}

// HasYPosition returns a boolean if a field has been set.
func (o *SmartSectionAnchorPosition) HasYPosition() bool {
	if o != nil && !IsNil(o.YPosition) {
		return true
	}

	return false
}

// SetYPosition gets a reference to the given float64 and assigns it to the YPosition field.
func (o *SmartSectionAnchorPosition) SetYPosition(v float64) {
	o.YPosition = &v
}

func (o SmartSectionAnchorPosition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmartSectionAnchorPosition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PageNumber) {
		toSerialize["pageNumber"] = o.PageNumber
	}
	if !IsNil(o.XPosition) {
		toSerialize["xPosition"] = o.XPosition
	}
	if !IsNil(o.YPosition) {
		toSerialize["yPosition"] = o.YPosition
	}
	return toSerialize, nil
}

type NullableSmartSectionAnchorPosition struct {
	value *SmartSectionAnchorPosition
	isSet bool
}

func (v NullableSmartSectionAnchorPosition) Get() *SmartSectionAnchorPosition {
	return v.value
}

func (v *NullableSmartSectionAnchorPosition) Set(val *SmartSectionAnchorPosition) {
	v.value = val
	v.isSet = true
}

func (v NullableSmartSectionAnchorPosition) IsSet() bool {
	return v.isSet
}

func (v *NullableSmartSectionAnchorPosition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmartSectionAnchorPosition(val *SmartSectionAnchorPosition) *NullableSmartSectionAnchorPosition {
	return &NullableSmartSectionAnchorPosition{value: val, isSet: true}
}

func (v NullableSmartSectionAnchorPosition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmartSectionAnchorPosition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


