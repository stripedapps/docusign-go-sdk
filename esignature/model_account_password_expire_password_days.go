/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AccountPasswordExpirePasswordDays type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountPasswordExpirePasswordDays{}

// AccountPasswordExpirePasswordDays 
type AccountPasswordExpirePasswordDays struct {
	// 
	MaximumDays *string `json:"maximumDays,omitempty"`
	// 
	MinimumDays *string `json:"minimumDays,omitempty"`
}

// NewAccountPasswordExpirePasswordDays instantiates a new AccountPasswordExpirePasswordDays object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountPasswordExpirePasswordDays() *AccountPasswordExpirePasswordDays {
	this := AccountPasswordExpirePasswordDays{}
	return &this
}

// NewAccountPasswordExpirePasswordDaysWithDefaults instantiates a new AccountPasswordExpirePasswordDays object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountPasswordExpirePasswordDaysWithDefaults() *AccountPasswordExpirePasswordDays {
	this := AccountPasswordExpirePasswordDays{}
	return &this
}

// GetMaximumDays returns the MaximumDays field value if set, zero value otherwise.
func (o *AccountPasswordExpirePasswordDays) GetMaximumDays() string {
	if o == nil || IsNil(o.MaximumDays) {
		var ret string
		return ret
	}
	return *o.MaximumDays
}

// GetMaximumDaysOk returns a tuple with the MaximumDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountPasswordExpirePasswordDays) GetMaximumDaysOk() (*string, bool) {
	if o == nil || IsNil(o.MaximumDays) {
		return nil, false
	}
	return o.MaximumDays, true
}

// HasMaximumDays returns a boolean if a field has been set.
func (o *AccountPasswordExpirePasswordDays) HasMaximumDays() bool {
	if o != nil && !IsNil(o.MaximumDays) {
		return true
	}

	return false
}

// SetMaximumDays gets a reference to the given string and assigns it to the MaximumDays field.
func (o *AccountPasswordExpirePasswordDays) SetMaximumDays(v string) {
	o.MaximumDays = &v
}

// GetMinimumDays returns the MinimumDays field value if set, zero value otherwise.
func (o *AccountPasswordExpirePasswordDays) GetMinimumDays() string {
	if o == nil || IsNil(o.MinimumDays) {
		var ret string
		return ret
	}
	return *o.MinimumDays
}

// GetMinimumDaysOk returns a tuple with the MinimumDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountPasswordExpirePasswordDays) GetMinimumDaysOk() (*string, bool) {
	if o == nil || IsNil(o.MinimumDays) {
		return nil, false
	}
	return o.MinimumDays, true
}

// HasMinimumDays returns a boolean if a field has been set.
func (o *AccountPasswordExpirePasswordDays) HasMinimumDays() bool {
	if o != nil && !IsNil(o.MinimumDays) {
		return true
	}

	return false
}

// SetMinimumDays gets a reference to the given string and assigns it to the MinimumDays field.
func (o *AccountPasswordExpirePasswordDays) SetMinimumDays(v string) {
	o.MinimumDays = &v
}

func (o AccountPasswordExpirePasswordDays) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountPasswordExpirePasswordDays) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaximumDays) {
		toSerialize["maximumDays"] = o.MaximumDays
	}
	if !IsNil(o.MinimumDays) {
		toSerialize["minimumDays"] = o.MinimumDays
	}
	return toSerialize, nil
}

type NullableAccountPasswordExpirePasswordDays struct {
	value *AccountPasswordExpirePasswordDays
	isSet bool
}

func (v NullableAccountPasswordExpirePasswordDays) Get() *AccountPasswordExpirePasswordDays {
	return v.value
}

func (v *NullableAccountPasswordExpirePasswordDays) Set(val *AccountPasswordExpirePasswordDays) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountPasswordExpirePasswordDays) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountPasswordExpirePasswordDays) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountPasswordExpirePasswordDays(val *AccountPasswordExpirePasswordDays) *NullableAccountPasswordExpirePasswordDays {
	return &NullableAccountPasswordExpirePasswordDays{value: val, isSet: true}
}

func (v NullableAccountPasswordExpirePasswordDays) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountPasswordExpirePasswordDays) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


