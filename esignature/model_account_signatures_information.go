/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AccountSignaturesInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountSignaturesInformation{}

// AccountSignaturesInformation 
type AccountSignaturesInformation struct {
	// 
	AccountSignatures []AccountSignature `json:"accountSignatures,omitempty"`
}

// NewAccountSignaturesInformation instantiates a new AccountSignaturesInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountSignaturesInformation() *AccountSignaturesInformation {
	this := AccountSignaturesInformation{}
	return &this
}

// NewAccountSignaturesInformationWithDefaults instantiates a new AccountSignaturesInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountSignaturesInformationWithDefaults() *AccountSignaturesInformation {
	this := AccountSignaturesInformation{}
	return &this
}

// GetAccountSignatures returns the AccountSignatures field value if set, zero value otherwise.
func (o *AccountSignaturesInformation) GetAccountSignatures() []AccountSignature {
	if o == nil || IsNil(o.AccountSignatures) {
		var ret []AccountSignature
		return ret
	}
	return o.AccountSignatures
}

// GetAccountSignaturesOk returns a tuple with the AccountSignatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSignaturesInformation) GetAccountSignaturesOk() ([]AccountSignature, bool) {
	if o == nil || IsNil(o.AccountSignatures) {
		return nil, false
	}
	return o.AccountSignatures, true
}

// HasAccountSignatures returns a boolean if a field has been set.
func (o *AccountSignaturesInformation) HasAccountSignatures() bool {
	if o != nil && !IsNil(o.AccountSignatures) {
		return true
	}

	return false
}

// SetAccountSignatures gets a reference to the given []AccountSignature and assigns it to the AccountSignatures field.
func (o *AccountSignaturesInformation) SetAccountSignatures(v []AccountSignature) {
	o.AccountSignatures = v
}

func (o AccountSignaturesInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountSignaturesInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountSignatures) {
		toSerialize["accountSignatures"] = o.AccountSignatures
	}
	return toSerialize, nil
}

type NullableAccountSignaturesInformation struct {
	value *AccountSignaturesInformation
	isSet bool
}

func (v NullableAccountSignaturesInformation) Get() *AccountSignaturesInformation {
	return v.value
}

func (v *NullableAccountSignaturesInformation) Set(val *AccountSignaturesInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountSignaturesInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountSignaturesInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountSignaturesInformation(val *AccountSignaturesInformation) *NullableAccountSignaturesInformation {
	return &NullableAccountSignaturesInformation{value: val, isSet: true}
}

func (v NullableAccountSignaturesInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountSignaturesInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


