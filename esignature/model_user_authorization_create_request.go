/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserAuthorizationCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserAuthorizationCreateRequest{}

// UserAuthorizationCreateRequest The request object to create a user authorization.
type UserAuthorizationCreateRequest struct {
	AgentUser *AuthorizationUser `json:"agentUser,omitempty"`
	// The UTC DateTime to end the authorization. The default value is the max UTC value (`9999-12-31T23:59:59.0000000+00:00`).
	EndDate *string `json:"endDate,omitempty"`
	// The permission level to grant the agent. Valid values: * `Send` * `Manage` * `Sign`  This property is required.
	Permission *string `json:"permission,omitempty"`
	// The UTC DateTime to initiate the authorization. The default value is the current date and time.
	StartDate *string `json:"startDate,omitempty"`
}

// NewUserAuthorizationCreateRequest instantiates a new UserAuthorizationCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAuthorizationCreateRequest() *UserAuthorizationCreateRequest {
	this := UserAuthorizationCreateRequest{}
	return &this
}

// NewUserAuthorizationCreateRequestWithDefaults instantiates a new UserAuthorizationCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAuthorizationCreateRequestWithDefaults() *UserAuthorizationCreateRequest {
	this := UserAuthorizationCreateRequest{}
	return &this
}

// GetAgentUser returns the AgentUser field value if set, zero value otherwise.
func (o *UserAuthorizationCreateRequest) GetAgentUser() AuthorizationUser {
	if o == nil || IsNil(o.AgentUser) {
		var ret AuthorizationUser
		return ret
	}
	return *o.AgentUser
}

// GetAgentUserOk returns a tuple with the AgentUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAuthorizationCreateRequest) GetAgentUserOk() (*AuthorizationUser, bool) {
	if o == nil || IsNil(o.AgentUser) {
		return nil, false
	}
	return o.AgentUser, true
}

// HasAgentUser returns a boolean if a field has been set.
func (o *UserAuthorizationCreateRequest) HasAgentUser() bool {
	if o != nil && !IsNil(o.AgentUser) {
		return true
	}

	return false
}

// SetAgentUser gets a reference to the given AuthorizationUser and assigns it to the AgentUser field.
func (o *UserAuthorizationCreateRequest) SetAgentUser(v AuthorizationUser) {
	o.AgentUser = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *UserAuthorizationCreateRequest) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAuthorizationCreateRequest) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *UserAuthorizationCreateRequest) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *UserAuthorizationCreateRequest) SetEndDate(v string) {
	o.EndDate = &v
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *UserAuthorizationCreateRequest) GetPermission() string {
	if o == nil || IsNil(o.Permission) {
		var ret string
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAuthorizationCreateRequest) GetPermissionOk() (*string, bool) {
	if o == nil || IsNil(o.Permission) {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *UserAuthorizationCreateRequest) HasPermission() bool {
	if o != nil && !IsNil(o.Permission) {
		return true
	}

	return false
}

// SetPermission gets a reference to the given string and assigns it to the Permission field.
func (o *UserAuthorizationCreateRequest) SetPermission(v string) {
	o.Permission = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *UserAuthorizationCreateRequest) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAuthorizationCreateRequest) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *UserAuthorizationCreateRequest) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *UserAuthorizationCreateRequest) SetStartDate(v string) {
	o.StartDate = &v
}

func (o UserAuthorizationCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserAuthorizationCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AgentUser) {
		toSerialize["agentUser"] = o.AgentUser
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.Permission) {
		toSerialize["permission"] = o.Permission
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	return toSerialize, nil
}

type NullableUserAuthorizationCreateRequest struct {
	value *UserAuthorizationCreateRequest
	isSet bool
}

func (v NullableUserAuthorizationCreateRequest) Get() *UserAuthorizationCreateRequest {
	return v.value
}

func (v *NullableUserAuthorizationCreateRequest) Set(val *UserAuthorizationCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAuthorizationCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAuthorizationCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAuthorizationCreateRequest(val *UserAuthorizationCreateRequest) *NullableUserAuthorizationCreateRequest {
	return &NullableUserAuthorizationCreateRequest{value: val, isSet: true}
}

func (v NullableUserAuthorizationCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAuthorizationCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


