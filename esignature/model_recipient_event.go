/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RecipientEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecipientEvent{}

// RecipientEvent 
type RecipientEvent struct {
	// When **true,** the Connect webhook messages will include the envelope's PDF documents. Including the PDF documents greatly increases the size of the notification messages. Ensure that your listener can handle incoming messages that are 25MB or larger.
	IncludeDocuments *string `json:"includeDocuments,omitempty"`
	// Send a webhook notification for the following recipient statuses: Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.
	RecipientEventStatusCode *string `json:"recipientEventStatusCode,omitempty"`
}

// NewRecipientEvent instantiates a new RecipientEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecipientEvent() *RecipientEvent {
	this := RecipientEvent{}
	return &this
}

// NewRecipientEventWithDefaults instantiates a new RecipientEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecipientEventWithDefaults() *RecipientEvent {
	this := RecipientEvent{}
	return &this
}

// GetIncludeDocuments returns the IncludeDocuments field value if set, zero value otherwise.
func (o *RecipientEvent) GetIncludeDocuments() string {
	if o == nil || IsNil(o.IncludeDocuments) {
		var ret string
		return ret
	}
	return *o.IncludeDocuments
}

// GetIncludeDocumentsOk returns a tuple with the IncludeDocuments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientEvent) GetIncludeDocumentsOk() (*string, bool) {
	if o == nil || IsNil(o.IncludeDocuments) {
		return nil, false
	}
	return o.IncludeDocuments, true
}

// HasIncludeDocuments returns a boolean if a field has been set.
func (o *RecipientEvent) HasIncludeDocuments() bool {
	if o != nil && !IsNil(o.IncludeDocuments) {
		return true
	}

	return false
}

// SetIncludeDocuments gets a reference to the given string and assigns it to the IncludeDocuments field.
func (o *RecipientEvent) SetIncludeDocuments(v string) {
	o.IncludeDocuments = &v
}

// GetRecipientEventStatusCode returns the RecipientEventStatusCode field value if set, zero value otherwise.
func (o *RecipientEvent) GetRecipientEventStatusCode() string {
	if o == nil || IsNil(o.RecipientEventStatusCode) {
		var ret string
		return ret
	}
	return *o.RecipientEventStatusCode
}

// GetRecipientEventStatusCodeOk returns a tuple with the RecipientEventStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientEvent) GetRecipientEventStatusCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientEventStatusCode) {
		return nil, false
	}
	return o.RecipientEventStatusCode, true
}

// HasRecipientEventStatusCode returns a boolean if a field has been set.
func (o *RecipientEvent) HasRecipientEventStatusCode() bool {
	if o != nil && !IsNil(o.RecipientEventStatusCode) {
		return true
	}

	return false
}

// SetRecipientEventStatusCode gets a reference to the given string and assigns it to the RecipientEventStatusCode field.
func (o *RecipientEvent) SetRecipientEventStatusCode(v string) {
	o.RecipientEventStatusCode = &v
}

func (o RecipientEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecipientEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IncludeDocuments) {
		toSerialize["includeDocuments"] = o.IncludeDocuments
	}
	if !IsNil(o.RecipientEventStatusCode) {
		toSerialize["recipientEventStatusCode"] = o.RecipientEventStatusCode
	}
	return toSerialize, nil
}

type NullableRecipientEvent struct {
	value *RecipientEvent
	isSet bool
}

func (v NullableRecipientEvent) Get() *RecipientEvent {
	return v.value
}

func (v *NullableRecipientEvent) Set(val *RecipientEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableRecipientEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableRecipientEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecipientEvent(val *RecipientEvent) *NullableRecipientEvent {
	return &NullableRecipientEvent{value: val, isSet: true}
}

func (v NullableRecipientEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecipientEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


