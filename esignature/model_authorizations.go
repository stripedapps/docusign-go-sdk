/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Authorizations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Authorizations{}

// Authorizations Authorizations allow you to share access between users on an account.
type Authorizations struct {
	AgentUser *AuthorizationUser `json:"agentUser,omitempty"`
	// 
	AuthorizationId *string `json:"authorizationId,omitempty"`
	// The UTC DateTime when the workspace user authorization was created.
	Created *string `json:"created,omitempty"`
	// 
	CreatedBy *string `json:"createdBy,omitempty"`
	// 
	EndDate *string `json:"endDate,omitempty"`
	// 
	Modified *string `json:"modified,omitempty"`
	// The user ID (GUID) of the user who last modified this user record. This property is read-only.
	ModifiedBy *string `json:"modifiedBy,omitempty"`
	// 
	Permission *string `json:"permission,omitempty"`
	PrincipalUser *AuthorizationUser `json:"principalUser,omitempty"`
	// 
	StartDate *string `json:"startDate,omitempty"`
}

// NewAuthorizations instantiates a new Authorizations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizations() *Authorizations {
	this := Authorizations{}
	return &this
}

// NewAuthorizationsWithDefaults instantiates a new Authorizations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationsWithDefaults() *Authorizations {
	this := Authorizations{}
	return &this
}

// GetAgentUser returns the AgentUser field value if set, zero value otherwise.
func (o *Authorizations) GetAgentUser() AuthorizationUser {
	if o == nil || IsNil(o.AgentUser) {
		var ret AuthorizationUser
		return ret
	}
	return *o.AgentUser
}

// GetAgentUserOk returns a tuple with the AgentUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Authorizations) GetAgentUserOk() (*AuthorizationUser, bool) {
	if o == nil || IsNil(o.AgentUser) {
		return nil, false
	}
	return o.AgentUser, true
}

// HasAgentUser returns a boolean if a field has been set.
func (o *Authorizations) HasAgentUser() bool {
	if o != nil && !IsNil(o.AgentUser) {
		return true
	}

	return false
}

// SetAgentUser gets a reference to the given AuthorizationUser and assigns it to the AgentUser field.
func (o *Authorizations) SetAgentUser(v AuthorizationUser) {
	o.AgentUser = &v
}

// GetAuthorizationId returns the AuthorizationId field value if set, zero value otherwise.
func (o *Authorizations) GetAuthorizationId() string {
	if o == nil || IsNil(o.AuthorizationId) {
		var ret string
		return ret
	}
	return *o.AuthorizationId
}

// GetAuthorizationIdOk returns a tuple with the AuthorizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Authorizations) GetAuthorizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationId) {
		return nil, false
	}
	return o.AuthorizationId, true
}

// HasAuthorizationId returns a boolean if a field has been set.
func (o *Authorizations) HasAuthorizationId() bool {
	if o != nil && !IsNil(o.AuthorizationId) {
		return true
	}

	return false
}

// SetAuthorizationId gets a reference to the given string and assigns it to the AuthorizationId field.
func (o *Authorizations) SetAuthorizationId(v string) {
	o.AuthorizationId = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *Authorizations) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Authorizations) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Authorizations) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *Authorizations) SetCreated(v string) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Authorizations) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Authorizations) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Authorizations) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *Authorizations) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *Authorizations) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Authorizations) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *Authorizations) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *Authorizations) SetEndDate(v string) {
	o.EndDate = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *Authorizations) GetModified() string {
	if o == nil || IsNil(o.Modified) {
		var ret string
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Authorizations) GetModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *Authorizations) HasModified() bool {
	if o != nil && !IsNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given string and assigns it to the Modified field.
func (o *Authorizations) SetModified(v string) {
	o.Modified = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *Authorizations) GetModifiedBy() string {
	if o == nil || IsNil(o.ModifiedBy) {
		var ret string
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Authorizations) GetModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedBy) {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *Authorizations) HasModifiedBy() bool {
	if o != nil && !IsNil(o.ModifiedBy) {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given string and assigns it to the ModifiedBy field.
func (o *Authorizations) SetModifiedBy(v string) {
	o.ModifiedBy = &v
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *Authorizations) GetPermission() string {
	if o == nil || IsNil(o.Permission) {
		var ret string
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Authorizations) GetPermissionOk() (*string, bool) {
	if o == nil || IsNil(o.Permission) {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *Authorizations) HasPermission() bool {
	if o != nil && !IsNil(o.Permission) {
		return true
	}

	return false
}

// SetPermission gets a reference to the given string and assigns it to the Permission field.
func (o *Authorizations) SetPermission(v string) {
	o.Permission = &v
}

// GetPrincipalUser returns the PrincipalUser field value if set, zero value otherwise.
func (o *Authorizations) GetPrincipalUser() AuthorizationUser {
	if o == nil || IsNil(o.PrincipalUser) {
		var ret AuthorizationUser
		return ret
	}
	return *o.PrincipalUser
}

// GetPrincipalUserOk returns a tuple with the PrincipalUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Authorizations) GetPrincipalUserOk() (*AuthorizationUser, bool) {
	if o == nil || IsNil(o.PrincipalUser) {
		return nil, false
	}
	return o.PrincipalUser, true
}

// HasPrincipalUser returns a boolean if a field has been set.
func (o *Authorizations) HasPrincipalUser() bool {
	if o != nil && !IsNil(o.PrincipalUser) {
		return true
	}

	return false
}

// SetPrincipalUser gets a reference to the given AuthorizationUser and assigns it to the PrincipalUser field.
func (o *Authorizations) SetPrincipalUser(v AuthorizationUser) {
	o.PrincipalUser = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *Authorizations) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Authorizations) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *Authorizations) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *Authorizations) SetStartDate(v string) {
	o.StartDate = &v
}

func (o Authorizations) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Authorizations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AgentUser) {
		toSerialize["agentUser"] = o.AgentUser
	}
	if !IsNil(o.AuthorizationId) {
		toSerialize["authorizationId"] = o.AuthorizationId
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}
	if !IsNil(o.ModifiedBy) {
		toSerialize["modifiedBy"] = o.ModifiedBy
	}
	if !IsNil(o.Permission) {
		toSerialize["permission"] = o.Permission
	}
	if !IsNil(o.PrincipalUser) {
		toSerialize["principalUser"] = o.PrincipalUser
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	return toSerialize, nil
}

type NullableAuthorizations struct {
	value *Authorizations
	isSet bool
}

func (v NullableAuthorizations) Get() *Authorizations {
	return v.value
}

func (v *NullableAuthorizations) Set(val *Authorizations) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizations) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizations(val *Authorizations) *NullableAuthorizations {
	return &NullableAuthorizations{value: val, isSet: true}
}

func (v NullableAuthorizations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


