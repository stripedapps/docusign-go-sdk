/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NewAccountSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewAccountSummary{}

// NewAccountSummary 
type NewAccountSummary struct {
	// The account ID associated with the envelope.
	AccountId *string `json:"accountId,omitempty"`
	// The GUID associated with the account ID.
	AccountIdGuid *string `json:"accountIdGuid,omitempty"`
	// The account name for the new account.
	AccountName *string `json:"accountName,omitempty"`
	// Contains a token that can be used for authentication in API calls instead of using the user name and password.
	ApiPassword *string `json:"apiPassword,omitempty"`
	// The URL that should be used for successive calls to this account. It includes the protocal (https), the DocuSign server where the account is located, and the account number. Use this Url to make API calls against this account. Many of the API calls provide Uri's that are relative to this baseUrl.
	BaseUrl *string `json:"baseUrl,omitempty"`
	BillingPlanPreview *BillingPlanPreview `json:"billingPlanPreview,omitempty"`
	// Specifies the user ID of the new user.
	UserId *string `json:"userId,omitempty"`
}

// NewNewAccountSummary instantiates a new NewAccountSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewAccountSummary() *NewAccountSummary {
	this := NewAccountSummary{}
	return &this
}

// NewNewAccountSummaryWithDefaults instantiates a new NewAccountSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewAccountSummaryWithDefaults() *NewAccountSummary {
	this := NewAccountSummary{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *NewAccountSummary) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountSummary) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *NewAccountSummary) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *NewAccountSummary) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAccountIdGuid returns the AccountIdGuid field value if set, zero value otherwise.
func (o *NewAccountSummary) GetAccountIdGuid() string {
	if o == nil || IsNil(o.AccountIdGuid) {
		var ret string
		return ret
	}
	return *o.AccountIdGuid
}

// GetAccountIdGuidOk returns a tuple with the AccountIdGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountSummary) GetAccountIdGuidOk() (*string, bool) {
	if o == nil || IsNil(o.AccountIdGuid) {
		return nil, false
	}
	return o.AccountIdGuid, true
}

// HasAccountIdGuid returns a boolean if a field has been set.
func (o *NewAccountSummary) HasAccountIdGuid() bool {
	if o != nil && !IsNil(o.AccountIdGuid) {
		return true
	}

	return false
}

// SetAccountIdGuid gets a reference to the given string and assigns it to the AccountIdGuid field.
func (o *NewAccountSummary) SetAccountIdGuid(v string) {
	o.AccountIdGuid = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *NewAccountSummary) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountSummary) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *NewAccountSummary) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *NewAccountSummary) SetAccountName(v string) {
	o.AccountName = &v
}

// GetApiPassword returns the ApiPassword field value if set, zero value otherwise.
func (o *NewAccountSummary) GetApiPassword() string {
	if o == nil || IsNil(o.ApiPassword) {
		var ret string
		return ret
	}
	return *o.ApiPassword
}

// GetApiPasswordOk returns a tuple with the ApiPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountSummary) GetApiPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.ApiPassword) {
		return nil, false
	}
	return o.ApiPassword, true
}

// HasApiPassword returns a boolean if a field has been set.
func (o *NewAccountSummary) HasApiPassword() bool {
	if o != nil && !IsNil(o.ApiPassword) {
		return true
	}

	return false
}

// SetApiPassword gets a reference to the given string and assigns it to the ApiPassword field.
func (o *NewAccountSummary) SetApiPassword(v string) {
	o.ApiPassword = &v
}

// GetBaseUrl returns the BaseUrl field value if set, zero value otherwise.
func (o *NewAccountSummary) GetBaseUrl() string {
	if o == nil || IsNil(o.BaseUrl) {
		var ret string
		return ret
	}
	return *o.BaseUrl
}

// GetBaseUrlOk returns a tuple with the BaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountSummary) GetBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BaseUrl) {
		return nil, false
	}
	return o.BaseUrl, true
}

// HasBaseUrl returns a boolean if a field has been set.
func (o *NewAccountSummary) HasBaseUrl() bool {
	if o != nil && !IsNil(o.BaseUrl) {
		return true
	}

	return false
}

// SetBaseUrl gets a reference to the given string and assigns it to the BaseUrl field.
func (o *NewAccountSummary) SetBaseUrl(v string) {
	o.BaseUrl = &v
}

// GetBillingPlanPreview returns the BillingPlanPreview field value if set, zero value otherwise.
func (o *NewAccountSummary) GetBillingPlanPreview() BillingPlanPreview {
	if o == nil || IsNil(o.BillingPlanPreview) {
		var ret BillingPlanPreview
		return ret
	}
	return *o.BillingPlanPreview
}

// GetBillingPlanPreviewOk returns a tuple with the BillingPlanPreview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountSummary) GetBillingPlanPreviewOk() (*BillingPlanPreview, bool) {
	if o == nil || IsNil(o.BillingPlanPreview) {
		return nil, false
	}
	return o.BillingPlanPreview, true
}

// HasBillingPlanPreview returns a boolean if a field has been set.
func (o *NewAccountSummary) HasBillingPlanPreview() bool {
	if o != nil && !IsNil(o.BillingPlanPreview) {
		return true
	}

	return false
}

// SetBillingPlanPreview gets a reference to the given BillingPlanPreview and assigns it to the BillingPlanPreview field.
func (o *NewAccountSummary) SetBillingPlanPreview(v BillingPlanPreview) {
	o.BillingPlanPreview = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *NewAccountSummary) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountSummary) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *NewAccountSummary) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *NewAccountSummary) SetUserId(v string) {
	o.UserId = &v
}

func (o NewAccountSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NewAccountSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.AccountIdGuid) {
		toSerialize["accountIdGuid"] = o.AccountIdGuid
	}
	if !IsNil(o.AccountName) {
		toSerialize["accountName"] = o.AccountName
	}
	if !IsNil(o.ApiPassword) {
		toSerialize["apiPassword"] = o.ApiPassword
	}
	if !IsNil(o.BaseUrl) {
		toSerialize["baseUrl"] = o.BaseUrl
	}
	if !IsNil(o.BillingPlanPreview) {
		toSerialize["billingPlanPreview"] = o.BillingPlanPreview
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableNewAccountSummary struct {
	value *NewAccountSummary
	isSet bool
}

func (v NullableNewAccountSummary) Get() *NewAccountSummary {
	return v.value
}

func (v *NullableNewAccountSummary) Set(val *NewAccountSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableNewAccountSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableNewAccountSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewAccountSummary(val *NewAccountSummary) *NullableNewAccountSummary {
	return &NullableNewAccountSummary{value: val, isSet: true}
}

func (v NullableNewAccountSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewAccountSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


