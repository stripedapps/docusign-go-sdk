/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BrandLink type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BrandLink{}

// BrandLink Information about a link that a brand uses.
type BrandLink struct {
	// The text used for the link.
	LinkText *string `json:"linkText,omitempty"`
	// The type of link. Valid values include:  - `aboutDocusign` - `closeButton`
	LinkType *string `json:"linkType,omitempty"`
	// When **true,** the link displays to the recipient.
	ShowLink *string `json:"showLink,omitempty"`
	// The URL or mailto address of the link.
	UrlOrMailTo *string `json:"urlOrMailTo,omitempty"`
}

// NewBrandLink instantiates a new BrandLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrandLink() *BrandLink {
	this := BrandLink{}
	return &this
}

// NewBrandLinkWithDefaults instantiates a new BrandLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrandLinkWithDefaults() *BrandLink {
	this := BrandLink{}
	return &this
}

// GetLinkText returns the LinkText field value if set, zero value otherwise.
func (o *BrandLink) GetLinkText() string {
	if o == nil || IsNil(o.LinkText) {
		var ret string
		return ret
	}
	return *o.LinkText
}

// GetLinkTextOk returns a tuple with the LinkText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandLink) GetLinkTextOk() (*string, bool) {
	if o == nil || IsNil(o.LinkText) {
		return nil, false
	}
	return o.LinkText, true
}

// HasLinkText returns a boolean if a field has been set.
func (o *BrandLink) HasLinkText() bool {
	if o != nil && !IsNil(o.LinkText) {
		return true
	}

	return false
}

// SetLinkText gets a reference to the given string and assigns it to the LinkText field.
func (o *BrandLink) SetLinkText(v string) {
	o.LinkText = &v
}

// GetLinkType returns the LinkType field value if set, zero value otherwise.
func (o *BrandLink) GetLinkType() string {
	if o == nil || IsNil(o.LinkType) {
		var ret string
		return ret
	}
	return *o.LinkType
}

// GetLinkTypeOk returns a tuple with the LinkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandLink) GetLinkTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LinkType) {
		return nil, false
	}
	return o.LinkType, true
}

// HasLinkType returns a boolean if a field has been set.
func (o *BrandLink) HasLinkType() bool {
	if o != nil && !IsNil(o.LinkType) {
		return true
	}

	return false
}

// SetLinkType gets a reference to the given string and assigns it to the LinkType field.
func (o *BrandLink) SetLinkType(v string) {
	o.LinkType = &v
}

// GetShowLink returns the ShowLink field value if set, zero value otherwise.
func (o *BrandLink) GetShowLink() string {
	if o == nil || IsNil(o.ShowLink) {
		var ret string
		return ret
	}
	return *o.ShowLink
}

// GetShowLinkOk returns a tuple with the ShowLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandLink) GetShowLinkOk() (*string, bool) {
	if o == nil || IsNil(o.ShowLink) {
		return nil, false
	}
	return o.ShowLink, true
}

// HasShowLink returns a boolean if a field has been set.
func (o *BrandLink) HasShowLink() bool {
	if o != nil && !IsNil(o.ShowLink) {
		return true
	}

	return false
}

// SetShowLink gets a reference to the given string and assigns it to the ShowLink field.
func (o *BrandLink) SetShowLink(v string) {
	o.ShowLink = &v
}

// GetUrlOrMailTo returns the UrlOrMailTo field value if set, zero value otherwise.
func (o *BrandLink) GetUrlOrMailTo() string {
	if o == nil || IsNil(o.UrlOrMailTo) {
		var ret string
		return ret
	}
	return *o.UrlOrMailTo
}

// GetUrlOrMailToOk returns a tuple with the UrlOrMailTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandLink) GetUrlOrMailToOk() (*string, bool) {
	if o == nil || IsNil(o.UrlOrMailTo) {
		return nil, false
	}
	return o.UrlOrMailTo, true
}

// HasUrlOrMailTo returns a boolean if a field has been set.
func (o *BrandLink) HasUrlOrMailTo() bool {
	if o != nil && !IsNil(o.UrlOrMailTo) {
		return true
	}

	return false
}

// SetUrlOrMailTo gets a reference to the given string and assigns it to the UrlOrMailTo field.
func (o *BrandLink) SetUrlOrMailTo(v string) {
	o.UrlOrMailTo = &v
}

func (o BrandLink) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BrandLink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LinkText) {
		toSerialize["linkText"] = o.LinkText
	}
	if !IsNil(o.LinkType) {
		toSerialize["linkType"] = o.LinkType
	}
	if !IsNil(o.ShowLink) {
		toSerialize["showLink"] = o.ShowLink
	}
	if !IsNil(o.UrlOrMailTo) {
		toSerialize["urlOrMailTo"] = o.UrlOrMailTo
	}
	return toSerialize, nil
}

type NullableBrandLink struct {
	value *BrandLink
	isSet bool
}

func (v NullableBrandLink) Get() *BrandLink {
	return v.value
}

func (v *NullableBrandLink) Set(val *BrandLink) {
	v.value = val
	v.isSet = true
}

func (v NullableBrandLink) IsSet() bool {
	return v.isSet
}

func (v *NullableBrandLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrandLink(val *BrandLink) *NullableBrandLink {
	return &NullableBrandLink{value: val, isSet: true}
}

func (v NullableBrandLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrandLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


