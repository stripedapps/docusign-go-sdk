/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BulkSendErrorStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkSendErrorStatus{}

// BulkSendErrorStatus A single bulk send error report.
type BulkSendErrorStatus struct {
	// The timestamp of when the error occurred in ISO 8601 format.
	Created *string `json:"created,omitempty"`
	// The envelope ID of the envelope status that failed to post.
	EnvelopeId *string `json:"envelopeId,omitempty"`
	// The error message generated during processing, if any. 
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// An array of email addresses for the failed bulk envelope.  Recipient email/info of the failed bulk envelope. 
	RecipientEmails []string `json:"recipientEmails,omitempty"`
}

// NewBulkSendErrorStatus instantiates a new BulkSendErrorStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkSendErrorStatus() *BulkSendErrorStatus {
	this := BulkSendErrorStatus{}
	return &this
}

// NewBulkSendErrorStatusWithDefaults instantiates a new BulkSendErrorStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkSendErrorStatusWithDefaults() *BulkSendErrorStatus {
	this := BulkSendErrorStatus{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *BulkSendErrorStatus) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendErrorStatus) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *BulkSendErrorStatus) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *BulkSendErrorStatus) SetCreated(v string) {
	o.Created = &v
}

// GetEnvelopeId returns the EnvelopeId field value if set, zero value otherwise.
func (o *BulkSendErrorStatus) GetEnvelopeId() string {
	if o == nil || IsNil(o.EnvelopeId) {
		var ret string
		return ret
	}
	return *o.EnvelopeId
}

// GetEnvelopeIdOk returns a tuple with the EnvelopeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendErrorStatus) GetEnvelopeIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvelopeId) {
		return nil, false
	}
	return o.EnvelopeId, true
}

// HasEnvelopeId returns a boolean if a field has been set.
func (o *BulkSendErrorStatus) HasEnvelopeId() bool {
	if o != nil && !IsNil(o.EnvelopeId) {
		return true
	}

	return false
}

// SetEnvelopeId gets a reference to the given string and assigns it to the EnvelopeId field.
func (o *BulkSendErrorStatus) SetEnvelopeId(v string) {
	o.EnvelopeId = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *BulkSendErrorStatus) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendErrorStatus) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *BulkSendErrorStatus) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *BulkSendErrorStatus) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetRecipientEmails returns the RecipientEmails field value if set, zero value otherwise.
func (o *BulkSendErrorStatus) GetRecipientEmails() []string {
	if o == nil || IsNil(o.RecipientEmails) {
		var ret []string
		return ret
	}
	return o.RecipientEmails
}

// GetRecipientEmailsOk returns a tuple with the RecipientEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendErrorStatus) GetRecipientEmailsOk() ([]string, bool) {
	if o == nil || IsNil(o.RecipientEmails) {
		return nil, false
	}
	return o.RecipientEmails, true
}

// HasRecipientEmails returns a boolean if a field has been set.
func (o *BulkSendErrorStatus) HasRecipientEmails() bool {
	if o != nil && !IsNil(o.RecipientEmails) {
		return true
	}

	return false
}

// SetRecipientEmails gets a reference to the given []string and assigns it to the RecipientEmails field.
func (o *BulkSendErrorStatus) SetRecipientEmails(v []string) {
	o.RecipientEmails = v
}

func (o BulkSendErrorStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkSendErrorStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.EnvelopeId) {
		toSerialize["envelopeId"] = o.EnvelopeId
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !IsNil(o.RecipientEmails) {
		toSerialize["recipientEmails"] = o.RecipientEmails
	}
	return toSerialize, nil
}

type NullableBulkSendErrorStatus struct {
	value *BulkSendErrorStatus
	isSet bool
}

func (v NullableBulkSendErrorStatus) Get() *BulkSendErrorStatus {
	return v.value
}

func (v *NullableBulkSendErrorStatus) Set(val *BulkSendErrorStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkSendErrorStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkSendErrorStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkSendErrorStatus(val *BulkSendErrorStatus) *NullableBulkSendErrorStatus {
	return &NullableBulkSendErrorStatus{value: val, isSet: true}
}

func (v NullableBulkSendErrorStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkSendErrorStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


