/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ReferralInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReferralInformation{}

// ReferralInformation A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry  **Note:** saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DocuSign use only.
type ReferralInformation struct {
	// A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry.  **Note:** saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DocuSign use only. 
	AdvertisementId *string `json:"advertisementId,omitempty"`
	// When **true,** customer support is provided as part of the account plan.
	EnableSupport *string `json:"enableSupport,omitempty"`
	// An optional external ID for the referral.
	ExternalOrgId *string `json:"externalOrgId,omitempty"`
	// 
	GroupMemberId *string `json:"groupMemberId,omitempty"`
	// 
	IdType *string `json:"idType,omitempty"`
	// The number of seats (users) included in the plan.
	IncludedSeats *string `json:"includedSeats,omitempty"`
	// The name of the industry associated with the referral.   Example: `Accounting`
	Industry *string `json:"industry,omitempty"`
	// 
	PlanStartMonth *string `json:"planStartMonth,omitempty"`
	// 
	PromoCode *string `json:"promoCode,omitempty"`
	// 
	PublisherId *string `json:"publisherId,omitempty"`
	// 
	ReferralCode *string `json:"referralCode,omitempty"`
	// The name of the referrer.
	ReferrerName *string `json:"referrerName,omitempty"`
	// Reserved for DocuSign.
	SaleDiscountAmount *string `json:"saleDiscountAmount,omitempty"`
	// Reserved for DocuSign.
	SaleDiscountFixedAmount *string `json:"saleDiscountFixedAmount,omitempty"`
	// Reserved for DocuSign.
	SaleDiscountPercent *string `json:"saleDiscountPercent,omitempty"`
	// Reserved for DocuSign.
	SaleDiscountPeriods *string `json:"saleDiscountPeriods,omitempty"`
	// Reserved for DocuSign.
	SaleDiscountSeatPriceOverride *string `json:"saleDiscountSeatPriceOverride,omitempty"`
	// 
	ShopperId *string `json:"shopperId,omitempty"`
}

// NewReferralInformation instantiates a new ReferralInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReferralInformation() *ReferralInformation {
	this := ReferralInformation{}
	return &this
}

// NewReferralInformationWithDefaults instantiates a new ReferralInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReferralInformationWithDefaults() *ReferralInformation {
	this := ReferralInformation{}
	return &this
}

// GetAdvertisementId returns the AdvertisementId field value if set, zero value otherwise.
func (o *ReferralInformation) GetAdvertisementId() string {
	if o == nil || IsNil(o.AdvertisementId) {
		var ret string
		return ret
	}
	return *o.AdvertisementId
}

// GetAdvertisementIdOk returns a tuple with the AdvertisementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetAdvertisementIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdvertisementId) {
		return nil, false
	}
	return o.AdvertisementId, true
}

// HasAdvertisementId returns a boolean if a field has been set.
func (o *ReferralInformation) HasAdvertisementId() bool {
	if o != nil && !IsNil(o.AdvertisementId) {
		return true
	}

	return false
}

// SetAdvertisementId gets a reference to the given string and assigns it to the AdvertisementId field.
func (o *ReferralInformation) SetAdvertisementId(v string) {
	o.AdvertisementId = &v
}

// GetEnableSupport returns the EnableSupport field value if set, zero value otherwise.
func (o *ReferralInformation) GetEnableSupport() string {
	if o == nil || IsNil(o.EnableSupport) {
		var ret string
		return ret
	}
	return *o.EnableSupport
}

// GetEnableSupportOk returns a tuple with the EnableSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetEnableSupportOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSupport) {
		return nil, false
	}
	return o.EnableSupport, true
}

// HasEnableSupport returns a boolean if a field has been set.
func (o *ReferralInformation) HasEnableSupport() bool {
	if o != nil && !IsNil(o.EnableSupport) {
		return true
	}

	return false
}

// SetEnableSupport gets a reference to the given string and assigns it to the EnableSupport field.
func (o *ReferralInformation) SetEnableSupport(v string) {
	o.EnableSupport = &v
}

// GetExternalOrgId returns the ExternalOrgId field value if set, zero value otherwise.
func (o *ReferralInformation) GetExternalOrgId() string {
	if o == nil || IsNil(o.ExternalOrgId) {
		var ret string
		return ret
	}
	return *o.ExternalOrgId
}

// GetExternalOrgIdOk returns a tuple with the ExternalOrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetExternalOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalOrgId) {
		return nil, false
	}
	return o.ExternalOrgId, true
}

// HasExternalOrgId returns a boolean if a field has been set.
func (o *ReferralInformation) HasExternalOrgId() bool {
	if o != nil && !IsNil(o.ExternalOrgId) {
		return true
	}

	return false
}

// SetExternalOrgId gets a reference to the given string and assigns it to the ExternalOrgId field.
func (o *ReferralInformation) SetExternalOrgId(v string) {
	o.ExternalOrgId = &v
}

// GetGroupMemberId returns the GroupMemberId field value if set, zero value otherwise.
func (o *ReferralInformation) GetGroupMemberId() string {
	if o == nil || IsNil(o.GroupMemberId) {
		var ret string
		return ret
	}
	return *o.GroupMemberId
}

// GetGroupMemberIdOk returns a tuple with the GroupMemberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetGroupMemberIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupMemberId) {
		return nil, false
	}
	return o.GroupMemberId, true
}

// HasGroupMemberId returns a boolean if a field has been set.
func (o *ReferralInformation) HasGroupMemberId() bool {
	if o != nil && !IsNil(o.GroupMemberId) {
		return true
	}

	return false
}

// SetGroupMemberId gets a reference to the given string and assigns it to the GroupMemberId field.
func (o *ReferralInformation) SetGroupMemberId(v string) {
	o.GroupMemberId = &v
}

// GetIdType returns the IdType field value if set, zero value otherwise.
func (o *ReferralInformation) GetIdType() string {
	if o == nil || IsNil(o.IdType) {
		var ret string
		return ret
	}
	return *o.IdType
}

// GetIdTypeOk returns a tuple with the IdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetIdTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IdType) {
		return nil, false
	}
	return o.IdType, true
}

// HasIdType returns a boolean if a field has been set.
func (o *ReferralInformation) HasIdType() bool {
	if o != nil && !IsNil(o.IdType) {
		return true
	}

	return false
}

// SetIdType gets a reference to the given string and assigns it to the IdType field.
func (o *ReferralInformation) SetIdType(v string) {
	o.IdType = &v
}

// GetIncludedSeats returns the IncludedSeats field value if set, zero value otherwise.
func (o *ReferralInformation) GetIncludedSeats() string {
	if o == nil || IsNil(o.IncludedSeats) {
		var ret string
		return ret
	}
	return *o.IncludedSeats
}

// GetIncludedSeatsOk returns a tuple with the IncludedSeats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetIncludedSeatsOk() (*string, bool) {
	if o == nil || IsNil(o.IncludedSeats) {
		return nil, false
	}
	return o.IncludedSeats, true
}

// HasIncludedSeats returns a boolean if a field has been set.
func (o *ReferralInformation) HasIncludedSeats() bool {
	if o != nil && !IsNil(o.IncludedSeats) {
		return true
	}

	return false
}

// SetIncludedSeats gets a reference to the given string and assigns it to the IncludedSeats field.
func (o *ReferralInformation) SetIncludedSeats(v string) {
	o.IncludedSeats = &v
}

// GetIndustry returns the Industry field value if set, zero value otherwise.
func (o *ReferralInformation) GetIndustry() string {
	if o == nil || IsNil(o.Industry) {
		var ret string
		return ret
	}
	return *o.Industry
}

// GetIndustryOk returns a tuple with the Industry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetIndustryOk() (*string, bool) {
	if o == nil || IsNil(o.Industry) {
		return nil, false
	}
	return o.Industry, true
}

// HasIndustry returns a boolean if a field has been set.
func (o *ReferralInformation) HasIndustry() bool {
	if o != nil && !IsNil(o.Industry) {
		return true
	}

	return false
}

// SetIndustry gets a reference to the given string and assigns it to the Industry field.
func (o *ReferralInformation) SetIndustry(v string) {
	o.Industry = &v
}

// GetPlanStartMonth returns the PlanStartMonth field value if set, zero value otherwise.
func (o *ReferralInformation) GetPlanStartMonth() string {
	if o == nil || IsNil(o.PlanStartMonth) {
		var ret string
		return ret
	}
	return *o.PlanStartMonth
}

// GetPlanStartMonthOk returns a tuple with the PlanStartMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetPlanStartMonthOk() (*string, bool) {
	if o == nil || IsNil(o.PlanStartMonth) {
		return nil, false
	}
	return o.PlanStartMonth, true
}

// HasPlanStartMonth returns a boolean if a field has been set.
func (o *ReferralInformation) HasPlanStartMonth() bool {
	if o != nil && !IsNil(o.PlanStartMonth) {
		return true
	}

	return false
}

// SetPlanStartMonth gets a reference to the given string and assigns it to the PlanStartMonth field.
func (o *ReferralInformation) SetPlanStartMonth(v string) {
	o.PlanStartMonth = &v
}

// GetPromoCode returns the PromoCode field value if set, zero value otherwise.
func (o *ReferralInformation) GetPromoCode() string {
	if o == nil || IsNil(o.PromoCode) {
		var ret string
		return ret
	}
	return *o.PromoCode
}

// GetPromoCodeOk returns a tuple with the PromoCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetPromoCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PromoCode) {
		return nil, false
	}
	return o.PromoCode, true
}

// HasPromoCode returns a boolean if a field has been set.
func (o *ReferralInformation) HasPromoCode() bool {
	if o != nil && !IsNil(o.PromoCode) {
		return true
	}

	return false
}

// SetPromoCode gets a reference to the given string and assigns it to the PromoCode field.
func (o *ReferralInformation) SetPromoCode(v string) {
	o.PromoCode = &v
}

// GetPublisherId returns the PublisherId field value if set, zero value otherwise.
func (o *ReferralInformation) GetPublisherId() string {
	if o == nil || IsNil(o.PublisherId) {
		var ret string
		return ret
	}
	return *o.PublisherId
}

// GetPublisherIdOk returns a tuple with the PublisherId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetPublisherIdOk() (*string, bool) {
	if o == nil || IsNil(o.PublisherId) {
		return nil, false
	}
	return o.PublisherId, true
}

// HasPublisherId returns a boolean if a field has been set.
func (o *ReferralInformation) HasPublisherId() bool {
	if o != nil && !IsNil(o.PublisherId) {
		return true
	}

	return false
}

// SetPublisherId gets a reference to the given string and assigns it to the PublisherId field.
func (o *ReferralInformation) SetPublisherId(v string) {
	o.PublisherId = &v
}

// GetReferralCode returns the ReferralCode field value if set, zero value otherwise.
func (o *ReferralInformation) GetReferralCode() string {
	if o == nil || IsNil(o.ReferralCode) {
		var ret string
		return ret
	}
	return *o.ReferralCode
}

// GetReferralCodeOk returns a tuple with the ReferralCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetReferralCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ReferralCode) {
		return nil, false
	}
	return o.ReferralCode, true
}

// HasReferralCode returns a boolean if a field has been set.
func (o *ReferralInformation) HasReferralCode() bool {
	if o != nil && !IsNil(o.ReferralCode) {
		return true
	}

	return false
}

// SetReferralCode gets a reference to the given string and assigns it to the ReferralCode field.
func (o *ReferralInformation) SetReferralCode(v string) {
	o.ReferralCode = &v
}

// GetReferrerName returns the ReferrerName field value if set, zero value otherwise.
func (o *ReferralInformation) GetReferrerName() string {
	if o == nil || IsNil(o.ReferrerName) {
		var ret string
		return ret
	}
	return *o.ReferrerName
}

// GetReferrerNameOk returns a tuple with the ReferrerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetReferrerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReferrerName) {
		return nil, false
	}
	return o.ReferrerName, true
}

// HasReferrerName returns a boolean if a field has been set.
func (o *ReferralInformation) HasReferrerName() bool {
	if o != nil && !IsNil(o.ReferrerName) {
		return true
	}

	return false
}

// SetReferrerName gets a reference to the given string and assigns it to the ReferrerName field.
func (o *ReferralInformation) SetReferrerName(v string) {
	o.ReferrerName = &v
}

// GetSaleDiscountAmount returns the SaleDiscountAmount field value if set, zero value otherwise.
func (o *ReferralInformation) GetSaleDiscountAmount() string {
	if o == nil || IsNil(o.SaleDiscountAmount) {
		var ret string
		return ret
	}
	return *o.SaleDiscountAmount
}

// GetSaleDiscountAmountOk returns a tuple with the SaleDiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetSaleDiscountAmountOk() (*string, bool) {
	if o == nil || IsNil(o.SaleDiscountAmount) {
		return nil, false
	}
	return o.SaleDiscountAmount, true
}

// HasSaleDiscountAmount returns a boolean if a field has been set.
func (o *ReferralInformation) HasSaleDiscountAmount() bool {
	if o != nil && !IsNil(o.SaleDiscountAmount) {
		return true
	}

	return false
}

// SetSaleDiscountAmount gets a reference to the given string and assigns it to the SaleDiscountAmount field.
func (o *ReferralInformation) SetSaleDiscountAmount(v string) {
	o.SaleDiscountAmount = &v
}

// GetSaleDiscountFixedAmount returns the SaleDiscountFixedAmount field value if set, zero value otherwise.
func (o *ReferralInformation) GetSaleDiscountFixedAmount() string {
	if o == nil || IsNil(o.SaleDiscountFixedAmount) {
		var ret string
		return ret
	}
	return *o.SaleDiscountFixedAmount
}

// GetSaleDiscountFixedAmountOk returns a tuple with the SaleDiscountFixedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetSaleDiscountFixedAmountOk() (*string, bool) {
	if o == nil || IsNil(o.SaleDiscountFixedAmount) {
		return nil, false
	}
	return o.SaleDiscountFixedAmount, true
}

// HasSaleDiscountFixedAmount returns a boolean if a field has been set.
func (o *ReferralInformation) HasSaleDiscountFixedAmount() bool {
	if o != nil && !IsNil(o.SaleDiscountFixedAmount) {
		return true
	}

	return false
}

// SetSaleDiscountFixedAmount gets a reference to the given string and assigns it to the SaleDiscountFixedAmount field.
func (o *ReferralInformation) SetSaleDiscountFixedAmount(v string) {
	o.SaleDiscountFixedAmount = &v
}

// GetSaleDiscountPercent returns the SaleDiscountPercent field value if set, zero value otherwise.
func (o *ReferralInformation) GetSaleDiscountPercent() string {
	if o == nil || IsNil(o.SaleDiscountPercent) {
		var ret string
		return ret
	}
	return *o.SaleDiscountPercent
}

// GetSaleDiscountPercentOk returns a tuple with the SaleDiscountPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetSaleDiscountPercentOk() (*string, bool) {
	if o == nil || IsNil(o.SaleDiscountPercent) {
		return nil, false
	}
	return o.SaleDiscountPercent, true
}

// HasSaleDiscountPercent returns a boolean if a field has been set.
func (o *ReferralInformation) HasSaleDiscountPercent() bool {
	if o != nil && !IsNil(o.SaleDiscountPercent) {
		return true
	}

	return false
}

// SetSaleDiscountPercent gets a reference to the given string and assigns it to the SaleDiscountPercent field.
func (o *ReferralInformation) SetSaleDiscountPercent(v string) {
	o.SaleDiscountPercent = &v
}

// GetSaleDiscountPeriods returns the SaleDiscountPeriods field value if set, zero value otherwise.
func (o *ReferralInformation) GetSaleDiscountPeriods() string {
	if o == nil || IsNil(o.SaleDiscountPeriods) {
		var ret string
		return ret
	}
	return *o.SaleDiscountPeriods
}

// GetSaleDiscountPeriodsOk returns a tuple with the SaleDiscountPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetSaleDiscountPeriodsOk() (*string, bool) {
	if o == nil || IsNil(o.SaleDiscountPeriods) {
		return nil, false
	}
	return o.SaleDiscountPeriods, true
}

// HasSaleDiscountPeriods returns a boolean if a field has been set.
func (o *ReferralInformation) HasSaleDiscountPeriods() bool {
	if o != nil && !IsNil(o.SaleDiscountPeriods) {
		return true
	}

	return false
}

// SetSaleDiscountPeriods gets a reference to the given string and assigns it to the SaleDiscountPeriods field.
func (o *ReferralInformation) SetSaleDiscountPeriods(v string) {
	o.SaleDiscountPeriods = &v
}

// GetSaleDiscountSeatPriceOverride returns the SaleDiscountSeatPriceOverride field value if set, zero value otherwise.
func (o *ReferralInformation) GetSaleDiscountSeatPriceOverride() string {
	if o == nil || IsNil(o.SaleDiscountSeatPriceOverride) {
		var ret string
		return ret
	}
	return *o.SaleDiscountSeatPriceOverride
}

// GetSaleDiscountSeatPriceOverrideOk returns a tuple with the SaleDiscountSeatPriceOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetSaleDiscountSeatPriceOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.SaleDiscountSeatPriceOverride) {
		return nil, false
	}
	return o.SaleDiscountSeatPriceOverride, true
}

// HasSaleDiscountSeatPriceOverride returns a boolean if a field has been set.
func (o *ReferralInformation) HasSaleDiscountSeatPriceOverride() bool {
	if o != nil && !IsNil(o.SaleDiscountSeatPriceOverride) {
		return true
	}

	return false
}

// SetSaleDiscountSeatPriceOverride gets a reference to the given string and assigns it to the SaleDiscountSeatPriceOverride field.
func (o *ReferralInformation) SetSaleDiscountSeatPriceOverride(v string) {
	o.SaleDiscountSeatPriceOverride = &v
}

// GetShopperId returns the ShopperId field value if set, zero value otherwise.
func (o *ReferralInformation) GetShopperId() string {
	if o == nil || IsNil(o.ShopperId) {
		var ret string
		return ret
	}
	return *o.ShopperId
}

// GetShopperIdOk returns a tuple with the ShopperId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferralInformation) GetShopperIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShopperId) {
		return nil, false
	}
	return o.ShopperId, true
}

// HasShopperId returns a boolean if a field has been set.
func (o *ReferralInformation) HasShopperId() bool {
	if o != nil && !IsNil(o.ShopperId) {
		return true
	}

	return false
}

// SetShopperId gets a reference to the given string and assigns it to the ShopperId field.
func (o *ReferralInformation) SetShopperId(v string) {
	o.ShopperId = &v
}

func (o ReferralInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReferralInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdvertisementId) {
		toSerialize["advertisementId"] = o.AdvertisementId
	}
	if !IsNil(o.EnableSupport) {
		toSerialize["enableSupport"] = o.EnableSupport
	}
	if !IsNil(o.ExternalOrgId) {
		toSerialize["externalOrgId"] = o.ExternalOrgId
	}
	if !IsNil(o.GroupMemberId) {
		toSerialize["groupMemberId"] = o.GroupMemberId
	}
	if !IsNil(o.IdType) {
		toSerialize["idType"] = o.IdType
	}
	if !IsNil(o.IncludedSeats) {
		toSerialize["includedSeats"] = o.IncludedSeats
	}
	if !IsNil(o.Industry) {
		toSerialize["industry"] = o.Industry
	}
	if !IsNil(o.PlanStartMonth) {
		toSerialize["planStartMonth"] = o.PlanStartMonth
	}
	if !IsNil(o.PromoCode) {
		toSerialize["promoCode"] = o.PromoCode
	}
	if !IsNil(o.PublisherId) {
		toSerialize["publisherId"] = o.PublisherId
	}
	if !IsNil(o.ReferralCode) {
		toSerialize["referralCode"] = o.ReferralCode
	}
	if !IsNil(o.ReferrerName) {
		toSerialize["referrerName"] = o.ReferrerName
	}
	if !IsNil(o.SaleDiscountAmount) {
		toSerialize["saleDiscountAmount"] = o.SaleDiscountAmount
	}
	if !IsNil(o.SaleDiscountFixedAmount) {
		toSerialize["saleDiscountFixedAmount"] = o.SaleDiscountFixedAmount
	}
	if !IsNil(o.SaleDiscountPercent) {
		toSerialize["saleDiscountPercent"] = o.SaleDiscountPercent
	}
	if !IsNil(o.SaleDiscountPeriods) {
		toSerialize["saleDiscountPeriods"] = o.SaleDiscountPeriods
	}
	if !IsNil(o.SaleDiscountSeatPriceOverride) {
		toSerialize["saleDiscountSeatPriceOverride"] = o.SaleDiscountSeatPriceOverride
	}
	if !IsNil(o.ShopperId) {
		toSerialize["shopperId"] = o.ShopperId
	}
	return toSerialize, nil
}

type NullableReferralInformation struct {
	value *ReferralInformation
	isSet bool
}

func (v NullableReferralInformation) Get() *ReferralInformation {
	return v.value
}

func (v *NullableReferralInformation) Set(val *ReferralInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableReferralInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableReferralInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReferralInformation(val *ReferralInformation) *NullableReferralInformation {
	return &NullableReferralInformation{value: val, isSet: true}
}

func (v NullableReferralInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReferralInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


