/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaymentSignerValues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentSignerValues{}

// PaymentSignerValues 
type PaymentSignerValues struct {
	// This property specifies how the signer's collected payment details will be used.  Valid values:  - `authorize`: The payment details will be used to collect payment. This is the default value. - `save`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway. - `save_and_authorize`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway and will also be used to collect payment.
	PaymentOption *string `json:"paymentOption,omitempty"`
}

// NewPaymentSignerValues instantiates a new PaymentSignerValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentSignerValues() *PaymentSignerValues {
	this := PaymentSignerValues{}
	return &this
}

// NewPaymentSignerValuesWithDefaults instantiates a new PaymentSignerValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentSignerValuesWithDefaults() *PaymentSignerValues {
	this := PaymentSignerValues{}
	return &this
}

// GetPaymentOption returns the PaymentOption field value if set, zero value otherwise.
func (o *PaymentSignerValues) GetPaymentOption() string {
	if o == nil || IsNil(o.PaymentOption) {
		var ret string
		return ret
	}
	return *o.PaymentOption
}

// GetPaymentOptionOk returns a tuple with the PaymentOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentSignerValues) GetPaymentOptionOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentOption) {
		return nil, false
	}
	return o.PaymentOption, true
}

// HasPaymentOption returns a boolean if a field has been set.
func (o *PaymentSignerValues) HasPaymentOption() bool {
	if o != nil && !IsNil(o.PaymentOption) {
		return true
	}

	return false
}

// SetPaymentOption gets a reference to the given string and assigns it to the PaymentOption field.
func (o *PaymentSignerValues) SetPaymentOption(v string) {
	o.PaymentOption = &v
}

func (o PaymentSignerValues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentSignerValues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentOption) {
		toSerialize["paymentOption"] = o.PaymentOption
	}
	return toSerialize, nil
}

type NullablePaymentSignerValues struct {
	value *PaymentSignerValues
	isSet bool
}

func (v NullablePaymentSignerValues) Get() *PaymentSignerValues {
	return v.value
}

func (v *NullablePaymentSignerValues) Set(val *PaymentSignerValues) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentSignerValues) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentSignerValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentSignerValues(val *PaymentSignerValues) *NullablePaymentSignerValues {
	return &NullablePaymentSignerValues{value: val, isSet: true}
}

func (v NullablePaymentSignerValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentSignerValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


