/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PermissionProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PermissionProfile{}

// PermissionProfile This object defines the account permissions for a profile that you can apply to a group of users.
type PermissionProfile struct {
	// The username of the user who last modified the permission profile.
	ModifiedByUsername *string `json:"modifiedByUsername,omitempty"`
	// The date and time when the permission profile was last modified.
	ModifiedDateTime *string `json:"modifiedDateTime,omitempty"`
	// The ID of the permission profile.  Use [AccountPermissionProfiles: list](/docs/esign-rest-api/reference/accounts/accountpermissionprofiles/list/) to get a list of permission profiles and their IDs.  You can also download a CSV file of all permission profiles and their IDs from the **Settings > Permission Profiles** page of your eSignature account page. 
	PermissionProfileId *string `json:"permissionProfileId,omitempty"`
	// The name of the account permission profile.   Example: `Account Administrator`
	PermissionProfileName *string `json:"permissionProfileName,omitempty"`
	Settings *AccountRoleSettings `json:"settings,omitempty"`
	// The total number of users in the group associated with the account permission profile.
	UserCount *string `json:"userCount,omitempty"`
	// A list of user objects containing information about the users who are associated with the account permission profile.
	Users []UserInformation `json:"users,omitempty"`
}

// NewPermissionProfile instantiates a new PermissionProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionProfile() *PermissionProfile {
	this := PermissionProfile{}
	return &this
}

// NewPermissionProfileWithDefaults instantiates a new PermissionProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionProfileWithDefaults() *PermissionProfile {
	this := PermissionProfile{}
	return &this
}

// GetModifiedByUsername returns the ModifiedByUsername field value if set, zero value otherwise.
func (o *PermissionProfile) GetModifiedByUsername() string {
	if o == nil || IsNil(o.ModifiedByUsername) {
		var ret string
		return ret
	}
	return *o.ModifiedByUsername
}

// GetModifiedByUsernameOk returns a tuple with the ModifiedByUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionProfile) GetModifiedByUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedByUsername) {
		return nil, false
	}
	return o.ModifiedByUsername, true
}

// HasModifiedByUsername returns a boolean if a field has been set.
func (o *PermissionProfile) HasModifiedByUsername() bool {
	if o != nil && !IsNil(o.ModifiedByUsername) {
		return true
	}

	return false
}

// SetModifiedByUsername gets a reference to the given string and assigns it to the ModifiedByUsername field.
func (o *PermissionProfile) SetModifiedByUsername(v string) {
	o.ModifiedByUsername = &v
}

// GetModifiedDateTime returns the ModifiedDateTime field value if set, zero value otherwise.
func (o *PermissionProfile) GetModifiedDateTime() string {
	if o == nil || IsNil(o.ModifiedDateTime) {
		var ret string
		return ret
	}
	return *o.ModifiedDateTime
}

// GetModifiedDateTimeOk returns a tuple with the ModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionProfile) GetModifiedDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedDateTime) {
		return nil, false
	}
	return o.ModifiedDateTime, true
}

// HasModifiedDateTime returns a boolean if a field has been set.
func (o *PermissionProfile) HasModifiedDateTime() bool {
	if o != nil && !IsNil(o.ModifiedDateTime) {
		return true
	}

	return false
}

// SetModifiedDateTime gets a reference to the given string and assigns it to the ModifiedDateTime field.
func (o *PermissionProfile) SetModifiedDateTime(v string) {
	o.ModifiedDateTime = &v
}

// GetPermissionProfileId returns the PermissionProfileId field value if set, zero value otherwise.
func (o *PermissionProfile) GetPermissionProfileId() string {
	if o == nil || IsNil(o.PermissionProfileId) {
		var ret string
		return ret
	}
	return *o.PermissionProfileId
}

// GetPermissionProfileIdOk returns a tuple with the PermissionProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionProfile) GetPermissionProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.PermissionProfileId) {
		return nil, false
	}
	return o.PermissionProfileId, true
}

// HasPermissionProfileId returns a boolean if a field has been set.
func (o *PermissionProfile) HasPermissionProfileId() bool {
	if o != nil && !IsNil(o.PermissionProfileId) {
		return true
	}

	return false
}

// SetPermissionProfileId gets a reference to the given string and assigns it to the PermissionProfileId field.
func (o *PermissionProfile) SetPermissionProfileId(v string) {
	o.PermissionProfileId = &v
}

// GetPermissionProfileName returns the PermissionProfileName field value if set, zero value otherwise.
func (o *PermissionProfile) GetPermissionProfileName() string {
	if o == nil || IsNil(o.PermissionProfileName) {
		var ret string
		return ret
	}
	return *o.PermissionProfileName
}

// GetPermissionProfileNameOk returns a tuple with the PermissionProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionProfile) GetPermissionProfileNameOk() (*string, bool) {
	if o == nil || IsNil(o.PermissionProfileName) {
		return nil, false
	}
	return o.PermissionProfileName, true
}

// HasPermissionProfileName returns a boolean if a field has been set.
func (o *PermissionProfile) HasPermissionProfileName() bool {
	if o != nil && !IsNil(o.PermissionProfileName) {
		return true
	}

	return false
}

// SetPermissionProfileName gets a reference to the given string and assigns it to the PermissionProfileName field.
func (o *PermissionProfile) SetPermissionProfileName(v string) {
	o.PermissionProfileName = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *PermissionProfile) GetSettings() AccountRoleSettings {
	if o == nil || IsNil(o.Settings) {
		var ret AccountRoleSettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionProfile) GetSettingsOk() (*AccountRoleSettings, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *PermissionProfile) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given AccountRoleSettings and assigns it to the Settings field.
func (o *PermissionProfile) SetSettings(v AccountRoleSettings) {
	o.Settings = &v
}

// GetUserCount returns the UserCount field value if set, zero value otherwise.
func (o *PermissionProfile) GetUserCount() string {
	if o == nil || IsNil(o.UserCount) {
		var ret string
		return ret
	}
	return *o.UserCount
}

// GetUserCountOk returns a tuple with the UserCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionProfile) GetUserCountOk() (*string, bool) {
	if o == nil || IsNil(o.UserCount) {
		return nil, false
	}
	return o.UserCount, true
}

// HasUserCount returns a boolean if a field has been set.
func (o *PermissionProfile) HasUserCount() bool {
	if o != nil && !IsNil(o.UserCount) {
		return true
	}

	return false
}

// SetUserCount gets a reference to the given string and assigns it to the UserCount field.
func (o *PermissionProfile) SetUserCount(v string) {
	o.UserCount = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *PermissionProfile) GetUsers() []UserInformation {
	if o == nil || IsNil(o.Users) {
		var ret []UserInformation
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionProfile) GetUsersOk() ([]UserInformation, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *PermissionProfile) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []UserInformation and assigns it to the Users field.
func (o *PermissionProfile) SetUsers(v []UserInformation) {
	o.Users = v
}

func (o PermissionProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PermissionProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ModifiedByUsername) {
		toSerialize["modifiedByUsername"] = o.ModifiedByUsername
	}
	if !IsNil(o.ModifiedDateTime) {
		toSerialize["modifiedDateTime"] = o.ModifiedDateTime
	}
	if !IsNil(o.PermissionProfileId) {
		toSerialize["permissionProfileId"] = o.PermissionProfileId
	}
	if !IsNil(o.PermissionProfileName) {
		toSerialize["permissionProfileName"] = o.PermissionProfileName
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !IsNil(o.UserCount) {
		toSerialize["userCount"] = o.UserCount
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	return toSerialize, nil
}

type NullablePermissionProfile struct {
	value *PermissionProfile
	isSet bool
}

func (v NullablePermissionProfile) Get() *PermissionProfile {
	return v.value
}

func (v *NullablePermissionProfile) Set(val *PermissionProfile) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionProfile) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionProfile(val *PermissionProfile) *NullablePermissionProfile {
	return &NullablePermissionProfile{value: val, isSet: true}
}

func (v NullablePermissionProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


