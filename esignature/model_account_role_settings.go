/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AccountRoleSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountRoleSettings{}

// AccountRoleSettings This object defines account permissions for users who are associated with the account permission profile. 
type AccountRoleSettings struct {
	// When **true,** users have full administrative access to the account.
	AllowAccountManagement *string `json:"allowAccountManagement,omitempty"`
	AllowAccountManagementMetadata *SettingsMetadata `json:"allowAccountManagementMetadata,omitempty"`
	// When **true,** users can manage documents by using the API.
	AllowApiAccess *string `json:"allowApiAccess,omitempty"`
	AllowApiAccessMetadata *SettingsMetadata `json:"allowApiAccessMetadata,omitempty"`
	// When **true,** users can access the account by using the eSignature API.
	AllowApiAccessToAccount *string `json:"allowApiAccessToAccount,omitempty"`
	AllowApiAccessToAccountMetadata *SettingsMetadata `json:"allowApiAccessToAccountMetadata,omitempty"`
	// When **true,** users can send envelopes on behalf of others.
	AllowApiSendingOnBehalfOfOthers *string `json:"allowApiSendingOnBehalfOfOthers,omitempty"`
	AllowApiSendingOnBehalfOfOthersMetadata *SettingsMetadata `json:"allowApiSendingOnBehalfOfOthersMetadata,omitempty"`
	// When **true,** users may specify sequential signing recipients when they send documents by using the API.
	AllowApiSequentialSigning *string `json:"allowApiSequentialSigning,omitempty"`
	AllowApiSequentialSigningMetadata *SettingsMetadata `json:"allowApiSequentialSigningMetadata,omitempty"`
	//  When **true,** auto-tagging is enabled for the account.
	AllowAutoTagging *string `json:"allowAutoTagging,omitempty"`
	AllowAutoTaggingMetadata *SettingsMetadata `json:"allowAutoTaggingMetadata,omitempty"`
	// When **true,** bulk sending is enabled for users.
	AllowBulkSending *string `json:"allowBulkSending,omitempty"`
	AllowBulkSendingMetadata *SettingsMetadata `json:"allowBulkSendingMetadata,omitempty"`
	// When **true,** the DocuSign Desktop Client is enabled for users. 
	AllowDocuSignDesktopClient *string `json:"allowDocuSignDesktopClient,omitempty"`
	AllowDocuSignDesktopClientMetadata *SettingsMetadata `json:"allowDocuSignDesktopClientMetadata,omitempty"`
	// Specifies the level of access that users have to the account's address book. Valid values are:  - `personal` - `useShared` - `usePersonalAndShared` - `personalAndShared` 
	AllowedAddressBookAccess *string `json:"allowedAddressBookAccess,omitempty"`
	AllowedAddressBookAccessMetadata *SettingsMetadata `json:"allowedAddressBookAccessMetadata,omitempty"`
	// 
	AllowedClickwrapsAccess *string `json:"allowedClickwrapsAccess,omitempty"`
	AllowedClickwrapsAccessMetadata *SettingsMetadata `json:"allowedClickwrapsAccessMetadata,omitempty"`
	// 
	AllowedOrchestrationAccess *string `json:"allowedOrchestrationAccess,omitempty"`
	AllowedOrchestrationAccessMetadata *SettingsMetadata `json:"allowedOrchestrationAccessMetadata,omitempty"`
	// Specifies the level of access that users have to account templates. Valid values are:   - `none`  - `use` - `create` - `share`
	AllowedTemplateAccess *string `json:"allowedTemplateAccess,omitempty"`
	AllowedTemplateAccessMetadata *SettingsMetadata `json:"allowedTemplateAccessMetadata,omitempty"`
	// When **true,** users can be recipients of envelopes transferred to them by administrators of other accounts. 
	AllowedToBeEnvelopeTransferRecipient *string `json:"allowedToBeEnvelopeTransferRecipient,omitempty"`
	AllowedToBeEnvelopeTransferRecipientMetadata *SettingsMetadata `json:"allowedToBeEnvelopeTransferRecipientMetadata,omitempty"`
	// When **true,** users can send envelopes.
	AllowEnvelopeSending *string `json:"allowEnvelopeSending,omitempty"`
	AllowEnvelopeSendingMetadata *SettingsMetadata `json:"allowEnvelopeSendingMetadata,omitempty"`
	// When **true,** users can add electronic seal ([eSeal](https://support.docusign.com/s/document-item?bundleId=xcm1643837555908&topicId=isl1578456577247.html)) recipients.
	AllowESealRecipients *string `json:"allowESealRecipients,omitempty"`
	AllowESealRecipientsMetadata *SettingsMetadata `json:"allowESealRecipientsMetadata,omitempty"`
	// When **true,** PowerForm Administrators can access all of the PowerForm envelopes associated with the account.
	AllowPowerFormsAdminToAccessAllPowerFormEnvelopes *string `json:"allowPowerFormsAdminToAccessAllPowerFormEnvelopes,omitempty"`
	AllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata *SettingsMetadata `json:"allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata,omitempty"`
	// When **true,** senders can set the language of the email that is sent to recipients.
	AllowSendersToSetRecipientEmailLanguage *string `json:"allowSendersToSetRecipientEmailLanguage,omitempty"`
	AllowSendersToSetRecipientEmailLanguageMetadata *SettingsMetadata `json:"allowSendersToSetRecipientEmailLanguageMetadata,omitempty"`
	// When **true,** users can add requests for attachments from signers.
	AllowSignerAttachments *string `json:"allowSignerAttachments,omitempty"`
	AllowSignerAttachmentsMetadata *SettingsMetadata `json:"allowSignerAttachmentsMetadata,omitempty"`
	// When **true,** senders can include supplemental documents.
	AllowSupplementalDocuments *string `json:"allowSupplementalDocuments,omitempty"`
	AllowSupplementalDocumentsMetadata *SettingsMetadata `json:"allowSupplementalDocumentsMetadata,omitempty"`
	// When **true,** the tagger palette is visible during the sending and correct flows and users can add tabs to documents.
	AllowTaggingInSendAndCorrect *string `json:"allowTaggingInSendAndCorrect,omitempty"`
	AllowTaggingInSendAndCorrectMetadata *SettingsMetadata `json:"allowTaggingInSendAndCorrectMetadata,omitempty"`
	// 
	AllowTransactions *string `json:"allowTransactions,omitempty"`
	AllowTransactionsMetadata *SettingsMetadata `json:"allowTransactionsMetadata,omitempty"`
	// Reserved for DocuSign.
	AllowVaulting *string `json:"allowVaulting,omitempty"`
	AllowVaultingMetadata *SettingsMetadata `json:"allowVaultingMetadata,omitempty"`
	// When **true,** users can override the default account setting that controls whether recipients can sign documents on paper. The option to overrride this setting occurs during the sending process on a per-envelope basis.
	AllowWetSigningOverride *string `json:"allowWetSigningOverride,omitempty"`
	AllowWetSigningOverrideMetadata *SettingsMetadata `json:"allowWetSigningOverrideMetadata,omitempty"`
	// 
	CanCreateTransaction *string `json:"canCreateTransaction,omitempty"`
	CanCreateTransactionMetadata *SettingsMetadata `json:"canCreateTransactionMetadata,omitempty"`
	// Reserved for DocuSign.
	CanCreateWorkspaces *string `json:"canCreateWorkspaces,omitempty"`
	CanCreateWorkspacesMetadata *SettingsMetadata `json:"canCreateWorkspacesMetadata,omitempty"`
	// 
	CanDeleteDocumentsInTransaction *string `json:"canDeleteDocumentsInTransaction,omitempty"`
	CanDeleteDocumentsInTransactionMetadata *SettingsMetadata `json:"canDeleteDocumentsInTransactionMetadata,omitempty"`
	// 
	CanDeleteTransaction *string `json:"canDeleteTransaction,omitempty"`
	CanDeleteTransactionMetadata *SettingsMetadata `json:"canDeleteTransactionMetadata,omitempty"`
	// 
	CanSendEnvelopesViaSMS *string `json:"canSendEnvelopesViaSMS,omitempty"`
	CanSendEnvelopesViaSMSMetadata *SettingsMetadata `json:"canSendEnvelopesViaSMSMetadata,omitempty"`
	// When **true,** users cannot upload documents.
	DisableDocumentUpload *string `json:"disableDocumentUpload,omitempty"`
	DisableDocumentUploadMetadata *SettingsMetadata `json:"disableDocumentUploadMetadata,omitempty"`
	// When **true,** users can access the **Other Actions** menu.
	DisableOtherActions *string `json:"disableOtherActions,omitempty"`
	DisableOtherActionsMetadata *SettingsMetadata `json:"disableOtherActionsMetadata,omitempty"`
	// When **true,** API request logging is enabled.  **Note:** Logging limits apply.
	EnableApiRequestLogging *string `json:"enableApiRequestLogging,omitempty"`
	EnableApiRequestLoggingMetadata *SettingsMetadata `json:"enableApiRequestLoggingMetadata,omitempty"`
	// 
	EnableKeyTermsSuggestionsByDocumentType *string `json:"enableKeyTermsSuggestionsByDocumentType,omitempty"`
	EnableKeyTermsSuggestionsByDocumentTypeMetadata *SettingsMetadata `json:"enableKeyTermsSuggestionsByDocumentTypeMetadata,omitempty"`
	// When **true,** senders are notified when recipients view the documents that they send.
	EnableRecipientViewingNotifications *string `json:"enableRecipientViewingNotifications,omitempty"`
	EnableRecipientViewingNotificationsMetadata *SettingsMetadata `json:"enableRecipientViewingNotificationsMetadata,omitempty"`
	// When **true,** the sequential signing user interface is enabled.
	EnableSequentialSigningInterface *string `json:"enableSequentialSigningInterface,omitempty"`
	EnableSequentialSigningInterfaceMetadata *SettingsMetadata `json:"enableSequentialSigningInterfaceMetadata,omitempty"`
	// Reserved for DocuSign.
	EnableTransactionPointIntegration *string `json:"enableTransactionPointIntegration,omitempty"`
	EnableTransactionPointIntegrationMetadata *SettingsMetadata `json:"enableTransactionPointIntegrationMetadata,omitempty"`
	// The PowerForms rights associated with the account permission profile. Valid values are:  - `none`  - `user`  - `admin` 
	PowerFormRole *string `json:"powerFormRole,omitempty"`
	PowerFormRoleMetadata *SettingsMetadata `json:"powerFormRoleMetadata,omitempty"`
	// When **true,** senders receive emails about completed, self-signed documents that contain links to the completed documents instead of PDF attachments.
	ReceiveCompletedSelfSignedDocumentsAsEmailLinks *string `json:"receiveCompletedSelfSignedDocumentsAsEmailLinks,omitempty"`
	ReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata *SettingsMetadata `json:"receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata,omitempty"`
	SigningUiVersionMetadata *SettingsMetadata `json:"signingUiVersionMetadata,omitempty"`
	// When **true,** senders can require recipients to accept supplemental documents.
	SupplementalDocumentsMustAccept *string `json:"supplementalDocumentsMustAccept,omitempty"`
	SupplementalDocumentsMustAcceptMetadata *SettingsMetadata `json:"supplementalDocumentsMustAcceptMetadata,omitempty"`
	// When **true,** senders can require recipients to read supplemental documents.
	SupplementalDocumentsMustRead *string `json:"supplementalDocumentsMustRead,omitempty"`
	SupplementalDocumentsMustReadMetadata *SettingsMetadata `json:"supplementalDocumentsMustReadMetadata,omitempty"`
	// When **true,** users can require recipients to view supplemental documents.
	SupplementalDocumentsMustView *string `json:"supplementalDocumentsMustView,omitempty"`
	SupplementalDocumentsMustViewMetadata *SettingsMetadata `json:"supplementalDocumentsMustViewMetadata,omitempty"`
	// Reserved for DocuSign.
	UseNewDocuSignExperienceInterface *string `json:"useNewDocuSignExperienceInterface,omitempty"`
	UseNewDocuSignExperienceInterfaceMetadata *SettingsMetadata `json:"useNewDocuSignExperienceInterfaceMetadata,omitempty"`
	// Reserved for DocuSign.
	UseNewSendingInterface *string `json:"useNewSendingInterface,omitempty"`
	UseNewSendingInterfaceMetadata *SettingsMetadata `json:"useNewSendingInterfaceMetadata,omitempty"`
	// Reserved for DocuSign.
	VaultingMode *string `json:"vaultingMode,omitempty"`
	VaultingModeMetadata *SettingsMetadata `json:"vaultingModeMetadata,omitempty"`
	// 
	WebForms *string `json:"webForms,omitempty"`
	WebFormsMetadata *SettingsMetadata `json:"webFormsMetadata,omitempty"`
}

// NewAccountRoleSettings instantiates a new AccountRoleSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountRoleSettings() *AccountRoleSettings {
	this := AccountRoleSettings{}
	return &this
}

// NewAccountRoleSettingsWithDefaults instantiates a new AccountRoleSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountRoleSettingsWithDefaults() *AccountRoleSettings {
	this := AccountRoleSettings{}
	return &this
}

// GetAllowAccountManagement returns the AllowAccountManagement field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowAccountManagement() string {
	if o == nil || IsNil(o.AllowAccountManagement) {
		var ret string
		return ret
	}
	return *o.AllowAccountManagement
}

// GetAllowAccountManagementOk returns a tuple with the AllowAccountManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowAccountManagementOk() (*string, bool) {
	if o == nil || IsNil(o.AllowAccountManagement) {
		return nil, false
	}
	return o.AllowAccountManagement, true
}

// HasAllowAccountManagement returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowAccountManagement() bool {
	if o != nil && !IsNil(o.AllowAccountManagement) {
		return true
	}

	return false
}

// SetAllowAccountManagement gets a reference to the given string and assigns it to the AllowAccountManagement field.
func (o *AccountRoleSettings) SetAllowAccountManagement(v string) {
	o.AllowAccountManagement = &v
}

// GetAllowAccountManagementMetadata returns the AllowAccountManagementMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowAccountManagementMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowAccountManagementMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowAccountManagementMetadata
}

// GetAllowAccountManagementMetadataOk returns a tuple with the AllowAccountManagementMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowAccountManagementMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowAccountManagementMetadata) {
		return nil, false
	}
	return o.AllowAccountManagementMetadata, true
}

// HasAllowAccountManagementMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowAccountManagementMetadata() bool {
	if o != nil && !IsNil(o.AllowAccountManagementMetadata) {
		return true
	}

	return false
}

// SetAllowAccountManagementMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowAccountManagementMetadata field.
func (o *AccountRoleSettings) SetAllowAccountManagementMetadata(v SettingsMetadata) {
	o.AllowAccountManagementMetadata = &v
}

// GetAllowApiAccess returns the AllowApiAccess field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowApiAccess() string {
	if o == nil || IsNil(o.AllowApiAccess) {
		var ret string
		return ret
	}
	return *o.AllowApiAccess
}

// GetAllowApiAccessOk returns a tuple with the AllowApiAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowApiAccessOk() (*string, bool) {
	if o == nil || IsNil(o.AllowApiAccess) {
		return nil, false
	}
	return o.AllowApiAccess, true
}

// HasAllowApiAccess returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowApiAccess() bool {
	if o != nil && !IsNil(o.AllowApiAccess) {
		return true
	}

	return false
}

// SetAllowApiAccess gets a reference to the given string and assigns it to the AllowApiAccess field.
func (o *AccountRoleSettings) SetAllowApiAccess(v string) {
	o.AllowApiAccess = &v
}

// GetAllowApiAccessMetadata returns the AllowApiAccessMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowApiAccessMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowApiAccessMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowApiAccessMetadata
}

// GetAllowApiAccessMetadataOk returns a tuple with the AllowApiAccessMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowApiAccessMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowApiAccessMetadata) {
		return nil, false
	}
	return o.AllowApiAccessMetadata, true
}

// HasAllowApiAccessMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowApiAccessMetadata() bool {
	if o != nil && !IsNil(o.AllowApiAccessMetadata) {
		return true
	}

	return false
}

// SetAllowApiAccessMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowApiAccessMetadata field.
func (o *AccountRoleSettings) SetAllowApiAccessMetadata(v SettingsMetadata) {
	o.AllowApiAccessMetadata = &v
}

// GetAllowApiAccessToAccount returns the AllowApiAccessToAccount field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowApiAccessToAccount() string {
	if o == nil || IsNil(o.AllowApiAccessToAccount) {
		var ret string
		return ret
	}
	return *o.AllowApiAccessToAccount
}

// GetAllowApiAccessToAccountOk returns a tuple with the AllowApiAccessToAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowApiAccessToAccountOk() (*string, bool) {
	if o == nil || IsNil(o.AllowApiAccessToAccount) {
		return nil, false
	}
	return o.AllowApiAccessToAccount, true
}

// HasAllowApiAccessToAccount returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowApiAccessToAccount() bool {
	if o != nil && !IsNil(o.AllowApiAccessToAccount) {
		return true
	}

	return false
}

// SetAllowApiAccessToAccount gets a reference to the given string and assigns it to the AllowApiAccessToAccount field.
func (o *AccountRoleSettings) SetAllowApiAccessToAccount(v string) {
	o.AllowApiAccessToAccount = &v
}

// GetAllowApiAccessToAccountMetadata returns the AllowApiAccessToAccountMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowApiAccessToAccountMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowApiAccessToAccountMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowApiAccessToAccountMetadata
}

// GetAllowApiAccessToAccountMetadataOk returns a tuple with the AllowApiAccessToAccountMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowApiAccessToAccountMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowApiAccessToAccountMetadata) {
		return nil, false
	}
	return o.AllowApiAccessToAccountMetadata, true
}

// HasAllowApiAccessToAccountMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowApiAccessToAccountMetadata() bool {
	if o != nil && !IsNil(o.AllowApiAccessToAccountMetadata) {
		return true
	}

	return false
}

// SetAllowApiAccessToAccountMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowApiAccessToAccountMetadata field.
func (o *AccountRoleSettings) SetAllowApiAccessToAccountMetadata(v SettingsMetadata) {
	o.AllowApiAccessToAccountMetadata = &v
}

// GetAllowApiSendingOnBehalfOfOthers returns the AllowApiSendingOnBehalfOfOthers field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowApiSendingOnBehalfOfOthers() string {
	if o == nil || IsNil(o.AllowApiSendingOnBehalfOfOthers) {
		var ret string
		return ret
	}
	return *o.AllowApiSendingOnBehalfOfOthers
}

// GetAllowApiSendingOnBehalfOfOthersOk returns a tuple with the AllowApiSendingOnBehalfOfOthers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowApiSendingOnBehalfOfOthersOk() (*string, bool) {
	if o == nil || IsNil(o.AllowApiSendingOnBehalfOfOthers) {
		return nil, false
	}
	return o.AllowApiSendingOnBehalfOfOthers, true
}

// HasAllowApiSendingOnBehalfOfOthers returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowApiSendingOnBehalfOfOthers() bool {
	if o != nil && !IsNil(o.AllowApiSendingOnBehalfOfOthers) {
		return true
	}

	return false
}

// SetAllowApiSendingOnBehalfOfOthers gets a reference to the given string and assigns it to the AllowApiSendingOnBehalfOfOthers field.
func (o *AccountRoleSettings) SetAllowApiSendingOnBehalfOfOthers(v string) {
	o.AllowApiSendingOnBehalfOfOthers = &v
}

// GetAllowApiSendingOnBehalfOfOthersMetadata returns the AllowApiSendingOnBehalfOfOthersMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowApiSendingOnBehalfOfOthersMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowApiSendingOnBehalfOfOthersMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowApiSendingOnBehalfOfOthersMetadata
}

// GetAllowApiSendingOnBehalfOfOthersMetadataOk returns a tuple with the AllowApiSendingOnBehalfOfOthersMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowApiSendingOnBehalfOfOthersMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowApiSendingOnBehalfOfOthersMetadata) {
		return nil, false
	}
	return o.AllowApiSendingOnBehalfOfOthersMetadata, true
}

// HasAllowApiSendingOnBehalfOfOthersMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowApiSendingOnBehalfOfOthersMetadata() bool {
	if o != nil && !IsNil(o.AllowApiSendingOnBehalfOfOthersMetadata) {
		return true
	}

	return false
}

// SetAllowApiSendingOnBehalfOfOthersMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowApiSendingOnBehalfOfOthersMetadata field.
func (o *AccountRoleSettings) SetAllowApiSendingOnBehalfOfOthersMetadata(v SettingsMetadata) {
	o.AllowApiSendingOnBehalfOfOthersMetadata = &v
}

// GetAllowApiSequentialSigning returns the AllowApiSequentialSigning field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowApiSequentialSigning() string {
	if o == nil || IsNil(o.AllowApiSequentialSigning) {
		var ret string
		return ret
	}
	return *o.AllowApiSequentialSigning
}

// GetAllowApiSequentialSigningOk returns a tuple with the AllowApiSequentialSigning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowApiSequentialSigningOk() (*string, bool) {
	if o == nil || IsNil(o.AllowApiSequentialSigning) {
		return nil, false
	}
	return o.AllowApiSequentialSigning, true
}

// HasAllowApiSequentialSigning returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowApiSequentialSigning() bool {
	if o != nil && !IsNil(o.AllowApiSequentialSigning) {
		return true
	}

	return false
}

// SetAllowApiSequentialSigning gets a reference to the given string and assigns it to the AllowApiSequentialSigning field.
func (o *AccountRoleSettings) SetAllowApiSequentialSigning(v string) {
	o.AllowApiSequentialSigning = &v
}

// GetAllowApiSequentialSigningMetadata returns the AllowApiSequentialSigningMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowApiSequentialSigningMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowApiSequentialSigningMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowApiSequentialSigningMetadata
}

// GetAllowApiSequentialSigningMetadataOk returns a tuple with the AllowApiSequentialSigningMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowApiSequentialSigningMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowApiSequentialSigningMetadata) {
		return nil, false
	}
	return o.AllowApiSequentialSigningMetadata, true
}

// HasAllowApiSequentialSigningMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowApiSequentialSigningMetadata() bool {
	if o != nil && !IsNil(o.AllowApiSequentialSigningMetadata) {
		return true
	}

	return false
}

// SetAllowApiSequentialSigningMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowApiSequentialSigningMetadata field.
func (o *AccountRoleSettings) SetAllowApiSequentialSigningMetadata(v SettingsMetadata) {
	o.AllowApiSequentialSigningMetadata = &v
}

// GetAllowAutoTagging returns the AllowAutoTagging field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowAutoTagging() string {
	if o == nil || IsNil(o.AllowAutoTagging) {
		var ret string
		return ret
	}
	return *o.AllowAutoTagging
}

// GetAllowAutoTaggingOk returns a tuple with the AllowAutoTagging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowAutoTaggingOk() (*string, bool) {
	if o == nil || IsNil(o.AllowAutoTagging) {
		return nil, false
	}
	return o.AllowAutoTagging, true
}

// HasAllowAutoTagging returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowAutoTagging() bool {
	if o != nil && !IsNil(o.AllowAutoTagging) {
		return true
	}

	return false
}

// SetAllowAutoTagging gets a reference to the given string and assigns it to the AllowAutoTagging field.
func (o *AccountRoleSettings) SetAllowAutoTagging(v string) {
	o.AllowAutoTagging = &v
}

// GetAllowAutoTaggingMetadata returns the AllowAutoTaggingMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowAutoTaggingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowAutoTaggingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowAutoTaggingMetadata
}

// GetAllowAutoTaggingMetadataOk returns a tuple with the AllowAutoTaggingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowAutoTaggingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowAutoTaggingMetadata) {
		return nil, false
	}
	return o.AllowAutoTaggingMetadata, true
}

// HasAllowAutoTaggingMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowAutoTaggingMetadata() bool {
	if o != nil && !IsNil(o.AllowAutoTaggingMetadata) {
		return true
	}

	return false
}

// SetAllowAutoTaggingMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowAutoTaggingMetadata field.
func (o *AccountRoleSettings) SetAllowAutoTaggingMetadata(v SettingsMetadata) {
	o.AllowAutoTaggingMetadata = &v
}

// GetAllowBulkSending returns the AllowBulkSending field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowBulkSending() string {
	if o == nil || IsNil(o.AllowBulkSending) {
		var ret string
		return ret
	}
	return *o.AllowBulkSending
}

// GetAllowBulkSendingOk returns a tuple with the AllowBulkSending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowBulkSendingOk() (*string, bool) {
	if o == nil || IsNil(o.AllowBulkSending) {
		return nil, false
	}
	return o.AllowBulkSending, true
}

// HasAllowBulkSending returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowBulkSending() bool {
	if o != nil && !IsNil(o.AllowBulkSending) {
		return true
	}

	return false
}

// SetAllowBulkSending gets a reference to the given string and assigns it to the AllowBulkSending field.
func (o *AccountRoleSettings) SetAllowBulkSending(v string) {
	o.AllowBulkSending = &v
}

// GetAllowBulkSendingMetadata returns the AllowBulkSendingMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowBulkSendingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowBulkSendingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowBulkSendingMetadata
}

// GetAllowBulkSendingMetadataOk returns a tuple with the AllowBulkSendingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowBulkSendingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowBulkSendingMetadata) {
		return nil, false
	}
	return o.AllowBulkSendingMetadata, true
}

// HasAllowBulkSendingMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowBulkSendingMetadata() bool {
	if o != nil && !IsNil(o.AllowBulkSendingMetadata) {
		return true
	}

	return false
}

// SetAllowBulkSendingMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowBulkSendingMetadata field.
func (o *AccountRoleSettings) SetAllowBulkSendingMetadata(v SettingsMetadata) {
	o.AllowBulkSendingMetadata = &v
}

// GetAllowDocuSignDesktopClient returns the AllowDocuSignDesktopClient field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowDocuSignDesktopClient() string {
	if o == nil || IsNil(o.AllowDocuSignDesktopClient) {
		var ret string
		return ret
	}
	return *o.AllowDocuSignDesktopClient
}

// GetAllowDocuSignDesktopClientOk returns a tuple with the AllowDocuSignDesktopClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowDocuSignDesktopClientOk() (*string, bool) {
	if o == nil || IsNil(o.AllowDocuSignDesktopClient) {
		return nil, false
	}
	return o.AllowDocuSignDesktopClient, true
}

// HasAllowDocuSignDesktopClient returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowDocuSignDesktopClient() bool {
	if o != nil && !IsNil(o.AllowDocuSignDesktopClient) {
		return true
	}

	return false
}

// SetAllowDocuSignDesktopClient gets a reference to the given string and assigns it to the AllowDocuSignDesktopClient field.
func (o *AccountRoleSettings) SetAllowDocuSignDesktopClient(v string) {
	o.AllowDocuSignDesktopClient = &v
}

// GetAllowDocuSignDesktopClientMetadata returns the AllowDocuSignDesktopClientMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowDocuSignDesktopClientMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowDocuSignDesktopClientMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowDocuSignDesktopClientMetadata
}

// GetAllowDocuSignDesktopClientMetadataOk returns a tuple with the AllowDocuSignDesktopClientMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowDocuSignDesktopClientMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowDocuSignDesktopClientMetadata) {
		return nil, false
	}
	return o.AllowDocuSignDesktopClientMetadata, true
}

// HasAllowDocuSignDesktopClientMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowDocuSignDesktopClientMetadata() bool {
	if o != nil && !IsNil(o.AllowDocuSignDesktopClientMetadata) {
		return true
	}

	return false
}

// SetAllowDocuSignDesktopClientMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowDocuSignDesktopClientMetadata field.
func (o *AccountRoleSettings) SetAllowDocuSignDesktopClientMetadata(v SettingsMetadata) {
	o.AllowDocuSignDesktopClientMetadata = &v
}

// GetAllowedAddressBookAccess returns the AllowedAddressBookAccess field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowedAddressBookAccess() string {
	if o == nil || IsNil(o.AllowedAddressBookAccess) {
		var ret string
		return ret
	}
	return *o.AllowedAddressBookAccess
}

// GetAllowedAddressBookAccessOk returns a tuple with the AllowedAddressBookAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowedAddressBookAccessOk() (*string, bool) {
	if o == nil || IsNil(o.AllowedAddressBookAccess) {
		return nil, false
	}
	return o.AllowedAddressBookAccess, true
}

// HasAllowedAddressBookAccess returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowedAddressBookAccess() bool {
	if o != nil && !IsNil(o.AllowedAddressBookAccess) {
		return true
	}

	return false
}

// SetAllowedAddressBookAccess gets a reference to the given string and assigns it to the AllowedAddressBookAccess field.
func (o *AccountRoleSettings) SetAllowedAddressBookAccess(v string) {
	o.AllowedAddressBookAccess = &v
}

// GetAllowedAddressBookAccessMetadata returns the AllowedAddressBookAccessMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowedAddressBookAccessMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowedAddressBookAccessMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowedAddressBookAccessMetadata
}

// GetAllowedAddressBookAccessMetadataOk returns a tuple with the AllowedAddressBookAccessMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowedAddressBookAccessMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowedAddressBookAccessMetadata) {
		return nil, false
	}
	return o.AllowedAddressBookAccessMetadata, true
}

// HasAllowedAddressBookAccessMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowedAddressBookAccessMetadata() bool {
	if o != nil && !IsNil(o.AllowedAddressBookAccessMetadata) {
		return true
	}

	return false
}

// SetAllowedAddressBookAccessMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowedAddressBookAccessMetadata field.
func (o *AccountRoleSettings) SetAllowedAddressBookAccessMetadata(v SettingsMetadata) {
	o.AllowedAddressBookAccessMetadata = &v
}

// GetAllowedClickwrapsAccess returns the AllowedClickwrapsAccess field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowedClickwrapsAccess() string {
	if o == nil || IsNil(o.AllowedClickwrapsAccess) {
		var ret string
		return ret
	}
	return *o.AllowedClickwrapsAccess
}

// GetAllowedClickwrapsAccessOk returns a tuple with the AllowedClickwrapsAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowedClickwrapsAccessOk() (*string, bool) {
	if o == nil || IsNil(o.AllowedClickwrapsAccess) {
		return nil, false
	}
	return o.AllowedClickwrapsAccess, true
}

// HasAllowedClickwrapsAccess returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowedClickwrapsAccess() bool {
	if o != nil && !IsNil(o.AllowedClickwrapsAccess) {
		return true
	}

	return false
}

// SetAllowedClickwrapsAccess gets a reference to the given string and assigns it to the AllowedClickwrapsAccess field.
func (o *AccountRoleSettings) SetAllowedClickwrapsAccess(v string) {
	o.AllowedClickwrapsAccess = &v
}

// GetAllowedClickwrapsAccessMetadata returns the AllowedClickwrapsAccessMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowedClickwrapsAccessMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowedClickwrapsAccessMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowedClickwrapsAccessMetadata
}

// GetAllowedClickwrapsAccessMetadataOk returns a tuple with the AllowedClickwrapsAccessMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowedClickwrapsAccessMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowedClickwrapsAccessMetadata) {
		return nil, false
	}
	return o.AllowedClickwrapsAccessMetadata, true
}

// HasAllowedClickwrapsAccessMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowedClickwrapsAccessMetadata() bool {
	if o != nil && !IsNil(o.AllowedClickwrapsAccessMetadata) {
		return true
	}

	return false
}

// SetAllowedClickwrapsAccessMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowedClickwrapsAccessMetadata field.
func (o *AccountRoleSettings) SetAllowedClickwrapsAccessMetadata(v SettingsMetadata) {
	o.AllowedClickwrapsAccessMetadata = &v
}

// GetAllowedOrchestrationAccess returns the AllowedOrchestrationAccess field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowedOrchestrationAccess() string {
	if o == nil || IsNil(o.AllowedOrchestrationAccess) {
		var ret string
		return ret
	}
	return *o.AllowedOrchestrationAccess
}

// GetAllowedOrchestrationAccessOk returns a tuple with the AllowedOrchestrationAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowedOrchestrationAccessOk() (*string, bool) {
	if o == nil || IsNil(o.AllowedOrchestrationAccess) {
		return nil, false
	}
	return o.AllowedOrchestrationAccess, true
}

// HasAllowedOrchestrationAccess returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowedOrchestrationAccess() bool {
	if o != nil && !IsNil(o.AllowedOrchestrationAccess) {
		return true
	}

	return false
}

// SetAllowedOrchestrationAccess gets a reference to the given string and assigns it to the AllowedOrchestrationAccess field.
func (o *AccountRoleSettings) SetAllowedOrchestrationAccess(v string) {
	o.AllowedOrchestrationAccess = &v
}

// GetAllowedOrchestrationAccessMetadata returns the AllowedOrchestrationAccessMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowedOrchestrationAccessMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowedOrchestrationAccessMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowedOrchestrationAccessMetadata
}

// GetAllowedOrchestrationAccessMetadataOk returns a tuple with the AllowedOrchestrationAccessMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowedOrchestrationAccessMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowedOrchestrationAccessMetadata) {
		return nil, false
	}
	return o.AllowedOrchestrationAccessMetadata, true
}

// HasAllowedOrchestrationAccessMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowedOrchestrationAccessMetadata() bool {
	if o != nil && !IsNil(o.AllowedOrchestrationAccessMetadata) {
		return true
	}

	return false
}

// SetAllowedOrchestrationAccessMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowedOrchestrationAccessMetadata field.
func (o *AccountRoleSettings) SetAllowedOrchestrationAccessMetadata(v SettingsMetadata) {
	o.AllowedOrchestrationAccessMetadata = &v
}

// GetAllowedTemplateAccess returns the AllowedTemplateAccess field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowedTemplateAccess() string {
	if o == nil || IsNil(o.AllowedTemplateAccess) {
		var ret string
		return ret
	}
	return *o.AllowedTemplateAccess
}

// GetAllowedTemplateAccessOk returns a tuple with the AllowedTemplateAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowedTemplateAccessOk() (*string, bool) {
	if o == nil || IsNil(o.AllowedTemplateAccess) {
		return nil, false
	}
	return o.AllowedTemplateAccess, true
}

// HasAllowedTemplateAccess returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowedTemplateAccess() bool {
	if o != nil && !IsNil(o.AllowedTemplateAccess) {
		return true
	}

	return false
}

// SetAllowedTemplateAccess gets a reference to the given string and assigns it to the AllowedTemplateAccess field.
func (o *AccountRoleSettings) SetAllowedTemplateAccess(v string) {
	o.AllowedTemplateAccess = &v
}

// GetAllowedTemplateAccessMetadata returns the AllowedTemplateAccessMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowedTemplateAccessMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowedTemplateAccessMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowedTemplateAccessMetadata
}

// GetAllowedTemplateAccessMetadataOk returns a tuple with the AllowedTemplateAccessMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowedTemplateAccessMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowedTemplateAccessMetadata) {
		return nil, false
	}
	return o.AllowedTemplateAccessMetadata, true
}

// HasAllowedTemplateAccessMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowedTemplateAccessMetadata() bool {
	if o != nil && !IsNil(o.AllowedTemplateAccessMetadata) {
		return true
	}

	return false
}

// SetAllowedTemplateAccessMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowedTemplateAccessMetadata field.
func (o *AccountRoleSettings) SetAllowedTemplateAccessMetadata(v SettingsMetadata) {
	o.AllowedTemplateAccessMetadata = &v
}

// GetAllowedToBeEnvelopeTransferRecipient returns the AllowedToBeEnvelopeTransferRecipient field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowedToBeEnvelopeTransferRecipient() string {
	if o == nil || IsNil(o.AllowedToBeEnvelopeTransferRecipient) {
		var ret string
		return ret
	}
	return *o.AllowedToBeEnvelopeTransferRecipient
}

// GetAllowedToBeEnvelopeTransferRecipientOk returns a tuple with the AllowedToBeEnvelopeTransferRecipient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowedToBeEnvelopeTransferRecipientOk() (*string, bool) {
	if o == nil || IsNil(o.AllowedToBeEnvelopeTransferRecipient) {
		return nil, false
	}
	return o.AllowedToBeEnvelopeTransferRecipient, true
}

// HasAllowedToBeEnvelopeTransferRecipient returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowedToBeEnvelopeTransferRecipient() bool {
	if o != nil && !IsNil(o.AllowedToBeEnvelopeTransferRecipient) {
		return true
	}

	return false
}

// SetAllowedToBeEnvelopeTransferRecipient gets a reference to the given string and assigns it to the AllowedToBeEnvelopeTransferRecipient field.
func (o *AccountRoleSettings) SetAllowedToBeEnvelopeTransferRecipient(v string) {
	o.AllowedToBeEnvelopeTransferRecipient = &v
}

// GetAllowedToBeEnvelopeTransferRecipientMetadata returns the AllowedToBeEnvelopeTransferRecipientMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowedToBeEnvelopeTransferRecipientMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowedToBeEnvelopeTransferRecipientMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowedToBeEnvelopeTransferRecipientMetadata
}

// GetAllowedToBeEnvelopeTransferRecipientMetadataOk returns a tuple with the AllowedToBeEnvelopeTransferRecipientMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowedToBeEnvelopeTransferRecipientMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowedToBeEnvelopeTransferRecipientMetadata) {
		return nil, false
	}
	return o.AllowedToBeEnvelopeTransferRecipientMetadata, true
}

// HasAllowedToBeEnvelopeTransferRecipientMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowedToBeEnvelopeTransferRecipientMetadata() bool {
	if o != nil && !IsNil(o.AllowedToBeEnvelopeTransferRecipientMetadata) {
		return true
	}

	return false
}

// SetAllowedToBeEnvelopeTransferRecipientMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowedToBeEnvelopeTransferRecipientMetadata field.
func (o *AccountRoleSettings) SetAllowedToBeEnvelopeTransferRecipientMetadata(v SettingsMetadata) {
	o.AllowedToBeEnvelopeTransferRecipientMetadata = &v
}

// GetAllowEnvelopeSending returns the AllowEnvelopeSending field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowEnvelopeSending() string {
	if o == nil || IsNil(o.AllowEnvelopeSending) {
		var ret string
		return ret
	}
	return *o.AllowEnvelopeSending
}

// GetAllowEnvelopeSendingOk returns a tuple with the AllowEnvelopeSending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowEnvelopeSendingOk() (*string, bool) {
	if o == nil || IsNil(o.AllowEnvelopeSending) {
		return nil, false
	}
	return o.AllowEnvelopeSending, true
}

// HasAllowEnvelopeSending returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowEnvelopeSending() bool {
	if o != nil && !IsNil(o.AllowEnvelopeSending) {
		return true
	}

	return false
}

// SetAllowEnvelopeSending gets a reference to the given string and assigns it to the AllowEnvelopeSending field.
func (o *AccountRoleSettings) SetAllowEnvelopeSending(v string) {
	o.AllowEnvelopeSending = &v
}

// GetAllowEnvelopeSendingMetadata returns the AllowEnvelopeSendingMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowEnvelopeSendingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowEnvelopeSendingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowEnvelopeSendingMetadata
}

// GetAllowEnvelopeSendingMetadataOk returns a tuple with the AllowEnvelopeSendingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowEnvelopeSendingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowEnvelopeSendingMetadata) {
		return nil, false
	}
	return o.AllowEnvelopeSendingMetadata, true
}

// HasAllowEnvelopeSendingMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowEnvelopeSendingMetadata() bool {
	if o != nil && !IsNil(o.AllowEnvelopeSendingMetadata) {
		return true
	}

	return false
}

// SetAllowEnvelopeSendingMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowEnvelopeSendingMetadata field.
func (o *AccountRoleSettings) SetAllowEnvelopeSendingMetadata(v SettingsMetadata) {
	o.AllowEnvelopeSendingMetadata = &v
}

// GetAllowESealRecipients returns the AllowESealRecipients field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowESealRecipients() string {
	if o == nil || IsNil(o.AllowESealRecipients) {
		var ret string
		return ret
	}
	return *o.AllowESealRecipients
}

// GetAllowESealRecipientsOk returns a tuple with the AllowESealRecipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowESealRecipientsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowESealRecipients) {
		return nil, false
	}
	return o.AllowESealRecipients, true
}

// HasAllowESealRecipients returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowESealRecipients() bool {
	if o != nil && !IsNil(o.AllowESealRecipients) {
		return true
	}

	return false
}

// SetAllowESealRecipients gets a reference to the given string and assigns it to the AllowESealRecipients field.
func (o *AccountRoleSettings) SetAllowESealRecipients(v string) {
	o.AllowESealRecipients = &v
}

// GetAllowESealRecipientsMetadata returns the AllowESealRecipientsMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowESealRecipientsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowESealRecipientsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowESealRecipientsMetadata
}

// GetAllowESealRecipientsMetadataOk returns a tuple with the AllowESealRecipientsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowESealRecipientsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowESealRecipientsMetadata) {
		return nil, false
	}
	return o.AllowESealRecipientsMetadata, true
}

// HasAllowESealRecipientsMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowESealRecipientsMetadata() bool {
	if o != nil && !IsNil(o.AllowESealRecipientsMetadata) {
		return true
	}

	return false
}

// SetAllowESealRecipientsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowESealRecipientsMetadata field.
func (o *AccountRoleSettings) SetAllowESealRecipientsMetadata(v SettingsMetadata) {
	o.AllowESealRecipientsMetadata = &v
}

// GetAllowPowerFormsAdminToAccessAllPowerFormEnvelopes returns the AllowPowerFormsAdminToAccessAllPowerFormEnvelopes field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowPowerFormsAdminToAccessAllPowerFormEnvelopes() string {
	if o == nil || IsNil(o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopes) {
		var ret string
		return ret
	}
	return *o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopes
}

// GetAllowPowerFormsAdminToAccessAllPowerFormEnvelopesOk returns a tuple with the AllowPowerFormsAdminToAccessAllPowerFormEnvelopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowPowerFormsAdminToAccessAllPowerFormEnvelopesOk() (*string, bool) {
	if o == nil || IsNil(o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopes) {
		return nil, false
	}
	return o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopes, true
}

// HasAllowPowerFormsAdminToAccessAllPowerFormEnvelopes returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowPowerFormsAdminToAccessAllPowerFormEnvelopes() bool {
	if o != nil && !IsNil(o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopes) {
		return true
	}

	return false
}

// SetAllowPowerFormsAdminToAccessAllPowerFormEnvelopes gets a reference to the given string and assigns it to the AllowPowerFormsAdminToAccessAllPowerFormEnvelopes field.
func (o *AccountRoleSettings) SetAllowPowerFormsAdminToAccessAllPowerFormEnvelopes(v string) {
	o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopes = &v
}

// GetAllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata returns the AllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata
}

// GetAllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadataOk returns a tuple with the AllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata) {
		return nil, false
	}
	return o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata, true
}

// HasAllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata() bool {
	if o != nil && !IsNil(o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata) {
		return true
	}

	return false
}

// SetAllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata field.
func (o *AccountRoleSettings) SetAllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata(v SettingsMetadata) {
	o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata = &v
}

// GetAllowSendersToSetRecipientEmailLanguage returns the AllowSendersToSetRecipientEmailLanguage field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowSendersToSetRecipientEmailLanguage() string {
	if o == nil || IsNil(o.AllowSendersToSetRecipientEmailLanguage) {
		var ret string
		return ret
	}
	return *o.AllowSendersToSetRecipientEmailLanguage
}

// GetAllowSendersToSetRecipientEmailLanguageOk returns a tuple with the AllowSendersToSetRecipientEmailLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowSendersToSetRecipientEmailLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSendersToSetRecipientEmailLanguage) {
		return nil, false
	}
	return o.AllowSendersToSetRecipientEmailLanguage, true
}

// HasAllowSendersToSetRecipientEmailLanguage returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowSendersToSetRecipientEmailLanguage() bool {
	if o != nil && !IsNil(o.AllowSendersToSetRecipientEmailLanguage) {
		return true
	}

	return false
}

// SetAllowSendersToSetRecipientEmailLanguage gets a reference to the given string and assigns it to the AllowSendersToSetRecipientEmailLanguage field.
func (o *AccountRoleSettings) SetAllowSendersToSetRecipientEmailLanguage(v string) {
	o.AllowSendersToSetRecipientEmailLanguage = &v
}

// GetAllowSendersToSetRecipientEmailLanguageMetadata returns the AllowSendersToSetRecipientEmailLanguageMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowSendersToSetRecipientEmailLanguageMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSendersToSetRecipientEmailLanguageMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSendersToSetRecipientEmailLanguageMetadata
}

// GetAllowSendersToSetRecipientEmailLanguageMetadataOk returns a tuple with the AllowSendersToSetRecipientEmailLanguageMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowSendersToSetRecipientEmailLanguageMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSendersToSetRecipientEmailLanguageMetadata) {
		return nil, false
	}
	return o.AllowSendersToSetRecipientEmailLanguageMetadata, true
}

// HasAllowSendersToSetRecipientEmailLanguageMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowSendersToSetRecipientEmailLanguageMetadata() bool {
	if o != nil && !IsNil(o.AllowSendersToSetRecipientEmailLanguageMetadata) {
		return true
	}

	return false
}

// SetAllowSendersToSetRecipientEmailLanguageMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSendersToSetRecipientEmailLanguageMetadata field.
func (o *AccountRoleSettings) SetAllowSendersToSetRecipientEmailLanguageMetadata(v SettingsMetadata) {
	o.AllowSendersToSetRecipientEmailLanguageMetadata = &v
}

// GetAllowSignerAttachments returns the AllowSignerAttachments field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowSignerAttachments() string {
	if o == nil || IsNil(o.AllowSignerAttachments) {
		var ret string
		return ret
	}
	return *o.AllowSignerAttachments
}

// GetAllowSignerAttachmentsOk returns a tuple with the AllowSignerAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowSignerAttachmentsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSignerAttachments) {
		return nil, false
	}
	return o.AllowSignerAttachments, true
}

// HasAllowSignerAttachments returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowSignerAttachments() bool {
	if o != nil && !IsNil(o.AllowSignerAttachments) {
		return true
	}

	return false
}

// SetAllowSignerAttachments gets a reference to the given string and assigns it to the AllowSignerAttachments field.
func (o *AccountRoleSettings) SetAllowSignerAttachments(v string) {
	o.AllowSignerAttachments = &v
}

// GetAllowSignerAttachmentsMetadata returns the AllowSignerAttachmentsMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowSignerAttachmentsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSignerAttachmentsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSignerAttachmentsMetadata
}

// GetAllowSignerAttachmentsMetadataOk returns a tuple with the AllowSignerAttachmentsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowSignerAttachmentsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSignerAttachmentsMetadata) {
		return nil, false
	}
	return o.AllowSignerAttachmentsMetadata, true
}

// HasAllowSignerAttachmentsMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowSignerAttachmentsMetadata() bool {
	if o != nil && !IsNil(o.AllowSignerAttachmentsMetadata) {
		return true
	}

	return false
}

// SetAllowSignerAttachmentsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSignerAttachmentsMetadata field.
func (o *AccountRoleSettings) SetAllowSignerAttachmentsMetadata(v SettingsMetadata) {
	o.AllowSignerAttachmentsMetadata = &v
}

// GetAllowSupplementalDocuments returns the AllowSupplementalDocuments field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowSupplementalDocuments() string {
	if o == nil || IsNil(o.AllowSupplementalDocuments) {
		var ret string
		return ret
	}
	return *o.AllowSupplementalDocuments
}

// GetAllowSupplementalDocumentsOk returns a tuple with the AllowSupplementalDocuments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowSupplementalDocumentsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSupplementalDocuments) {
		return nil, false
	}
	return o.AllowSupplementalDocuments, true
}

// HasAllowSupplementalDocuments returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowSupplementalDocuments() bool {
	if o != nil && !IsNil(o.AllowSupplementalDocuments) {
		return true
	}

	return false
}

// SetAllowSupplementalDocuments gets a reference to the given string and assigns it to the AllowSupplementalDocuments field.
func (o *AccountRoleSettings) SetAllowSupplementalDocuments(v string) {
	o.AllowSupplementalDocuments = &v
}

// GetAllowSupplementalDocumentsMetadata returns the AllowSupplementalDocumentsMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowSupplementalDocumentsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSupplementalDocumentsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSupplementalDocumentsMetadata
}

// GetAllowSupplementalDocumentsMetadataOk returns a tuple with the AllowSupplementalDocumentsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowSupplementalDocumentsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSupplementalDocumentsMetadata) {
		return nil, false
	}
	return o.AllowSupplementalDocumentsMetadata, true
}

// HasAllowSupplementalDocumentsMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowSupplementalDocumentsMetadata() bool {
	if o != nil && !IsNil(o.AllowSupplementalDocumentsMetadata) {
		return true
	}

	return false
}

// SetAllowSupplementalDocumentsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSupplementalDocumentsMetadata field.
func (o *AccountRoleSettings) SetAllowSupplementalDocumentsMetadata(v SettingsMetadata) {
	o.AllowSupplementalDocumentsMetadata = &v
}

// GetAllowTaggingInSendAndCorrect returns the AllowTaggingInSendAndCorrect field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowTaggingInSendAndCorrect() string {
	if o == nil || IsNil(o.AllowTaggingInSendAndCorrect) {
		var ret string
		return ret
	}
	return *o.AllowTaggingInSendAndCorrect
}

// GetAllowTaggingInSendAndCorrectOk returns a tuple with the AllowTaggingInSendAndCorrect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowTaggingInSendAndCorrectOk() (*string, bool) {
	if o == nil || IsNil(o.AllowTaggingInSendAndCorrect) {
		return nil, false
	}
	return o.AllowTaggingInSendAndCorrect, true
}

// HasAllowTaggingInSendAndCorrect returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowTaggingInSendAndCorrect() bool {
	if o != nil && !IsNil(o.AllowTaggingInSendAndCorrect) {
		return true
	}

	return false
}

// SetAllowTaggingInSendAndCorrect gets a reference to the given string and assigns it to the AllowTaggingInSendAndCorrect field.
func (o *AccountRoleSettings) SetAllowTaggingInSendAndCorrect(v string) {
	o.AllowTaggingInSendAndCorrect = &v
}

// GetAllowTaggingInSendAndCorrectMetadata returns the AllowTaggingInSendAndCorrectMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowTaggingInSendAndCorrectMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowTaggingInSendAndCorrectMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowTaggingInSendAndCorrectMetadata
}

// GetAllowTaggingInSendAndCorrectMetadataOk returns a tuple with the AllowTaggingInSendAndCorrectMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowTaggingInSendAndCorrectMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowTaggingInSendAndCorrectMetadata) {
		return nil, false
	}
	return o.AllowTaggingInSendAndCorrectMetadata, true
}

// HasAllowTaggingInSendAndCorrectMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowTaggingInSendAndCorrectMetadata() bool {
	if o != nil && !IsNil(o.AllowTaggingInSendAndCorrectMetadata) {
		return true
	}

	return false
}

// SetAllowTaggingInSendAndCorrectMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowTaggingInSendAndCorrectMetadata field.
func (o *AccountRoleSettings) SetAllowTaggingInSendAndCorrectMetadata(v SettingsMetadata) {
	o.AllowTaggingInSendAndCorrectMetadata = &v
}

// GetAllowTransactions returns the AllowTransactions field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowTransactions() string {
	if o == nil || IsNil(o.AllowTransactions) {
		var ret string
		return ret
	}
	return *o.AllowTransactions
}

// GetAllowTransactionsOk returns a tuple with the AllowTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowTransactionsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowTransactions) {
		return nil, false
	}
	return o.AllowTransactions, true
}

// HasAllowTransactions returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowTransactions() bool {
	if o != nil && !IsNil(o.AllowTransactions) {
		return true
	}

	return false
}

// SetAllowTransactions gets a reference to the given string and assigns it to the AllowTransactions field.
func (o *AccountRoleSettings) SetAllowTransactions(v string) {
	o.AllowTransactions = &v
}

// GetAllowTransactionsMetadata returns the AllowTransactionsMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowTransactionsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowTransactionsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowTransactionsMetadata
}

// GetAllowTransactionsMetadataOk returns a tuple with the AllowTransactionsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowTransactionsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowTransactionsMetadata) {
		return nil, false
	}
	return o.AllowTransactionsMetadata, true
}

// HasAllowTransactionsMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowTransactionsMetadata() bool {
	if o != nil && !IsNil(o.AllowTransactionsMetadata) {
		return true
	}

	return false
}

// SetAllowTransactionsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowTransactionsMetadata field.
func (o *AccountRoleSettings) SetAllowTransactionsMetadata(v SettingsMetadata) {
	o.AllowTransactionsMetadata = &v
}

// GetAllowVaulting returns the AllowVaulting field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowVaulting() string {
	if o == nil || IsNil(o.AllowVaulting) {
		var ret string
		return ret
	}
	return *o.AllowVaulting
}

// GetAllowVaultingOk returns a tuple with the AllowVaulting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowVaultingOk() (*string, bool) {
	if o == nil || IsNil(o.AllowVaulting) {
		return nil, false
	}
	return o.AllowVaulting, true
}

// HasAllowVaulting returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowVaulting() bool {
	if o != nil && !IsNil(o.AllowVaulting) {
		return true
	}

	return false
}

// SetAllowVaulting gets a reference to the given string and assigns it to the AllowVaulting field.
func (o *AccountRoleSettings) SetAllowVaulting(v string) {
	o.AllowVaulting = &v
}

// GetAllowVaultingMetadata returns the AllowVaultingMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowVaultingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowVaultingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowVaultingMetadata
}

// GetAllowVaultingMetadataOk returns a tuple with the AllowVaultingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowVaultingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowVaultingMetadata) {
		return nil, false
	}
	return o.AllowVaultingMetadata, true
}

// HasAllowVaultingMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowVaultingMetadata() bool {
	if o != nil && !IsNil(o.AllowVaultingMetadata) {
		return true
	}

	return false
}

// SetAllowVaultingMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowVaultingMetadata field.
func (o *AccountRoleSettings) SetAllowVaultingMetadata(v SettingsMetadata) {
	o.AllowVaultingMetadata = &v
}

// GetAllowWetSigningOverride returns the AllowWetSigningOverride field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowWetSigningOverride() string {
	if o == nil || IsNil(o.AllowWetSigningOverride) {
		var ret string
		return ret
	}
	return *o.AllowWetSigningOverride
}

// GetAllowWetSigningOverrideOk returns a tuple with the AllowWetSigningOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowWetSigningOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.AllowWetSigningOverride) {
		return nil, false
	}
	return o.AllowWetSigningOverride, true
}

// HasAllowWetSigningOverride returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowWetSigningOverride() bool {
	if o != nil && !IsNil(o.AllowWetSigningOverride) {
		return true
	}

	return false
}

// SetAllowWetSigningOverride gets a reference to the given string and assigns it to the AllowWetSigningOverride field.
func (o *AccountRoleSettings) SetAllowWetSigningOverride(v string) {
	o.AllowWetSigningOverride = &v
}

// GetAllowWetSigningOverrideMetadata returns the AllowWetSigningOverrideMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetAllowWetSigningOverrideMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowWetSigningOverrideMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowWetSigningOverrideMetadata
}

// GetAllowWetSigningOverrideMetadataOk returns a tuple with the AllowWetSigningOverrideMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetAllowWetSigningOverrideMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowWetSigningOverrideMetadata) {
		return nil, false
	}
	return o.AllowWetSigningOverrideMetadata, true
}

// HasAllowWetSigningOverrideMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasAllowWetSigningOverrideMetadata() bool {
	if o != nil && !IsNil(o.AllowWetSigningOverrideMetadata) {
		return true
	}

	return false
}

// SetAllowWetSigningOverrideMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowWetSigningOverrideMetadata field.
func (o *AccountRoleSettings) SetAllowWetSigningOverrideMetadata(v SettingsMetadata) {
	o.AllowWetSigningOverrideMetadata = &v
}

// GetCanCreateTransaction returns the CanCreateTransaction field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetCanCreateTransaction() string {
	if o == nil || IsNil(o.CanCreateTransaction) {
		var ret string
		return ret
	}
	return *o.CanCreateTransaction
}

// GetCanCreateTransactionOk returns a tuple with the CanCreateTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetCanCreateTransactionOk() (*string, bool) {
	if o == nil || IsNil(o.CanCreateTransaction) {
		return nil, false
	}
	return o.CanCreateTransaction, true
}

// HasCanCreateTransaction returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasCanCreateTransaction() bool {
	if o != nil && !IsNil(o.CanCreateTransaction) {
		return true
	}

	return false
}

// SetCanCreateTransaction gets a reference to the given string and assigns it to the CanCreateTransaction field.
func (o *AccountRoleSettings) SetCanCreateTransaction(v string) {
	o.CanCreateTransaction = &v
}

// GetCanCreateTransactionMetadata returns the CanCreateTransactionMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetCanCreateTransactionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanCreateTransactionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanCreateTransactionMetadata
}

// GetCanCreateTransactionMetadataOk returns a tuple with the CanCreateTransactionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetCanCreateTransactionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanCreateTransactionMetadata) {
		return nil, false
	}
	return o.CanCreateTransactionMetadata, true
}

// HasCanCreateTransactionMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasCanCreateTransactionMetadata() bool {
	if o != nil && !IsNil(o.CanCreateTransactionMetadata) {
		return true
	}

	return false
}

// SetCanCreateTransactionMetadata gets a reference to the given SettingsMetadata and assigns it to the CanCreateTransactionMetadata field.
func (o *AccountRoleSettings) SetCanCreateTransactionMetadata(v SettingsMetadata) {
	o.CanCreateTransactionMetadata = &v
}

// GetCanCreateWorkspaces returns the CanCreateWorkspaces field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetCanCreateWorkspaces() string {
	if o == nil || IsNil(o.CanCreateWorkspaces) {
		var ret string
		return ret
	}
	return *o.CanCreateWorkspaces
}

// GetCanCreateWorkspacesOk returns a tuple with the CanCreateWorkspaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetCanCreateWorkspacesOk() (*string, bool) {
	if o == nil || IsNil(o.CanCreateWorkspaces) {
		return nil, false
	}
	return o.CanCreateWorkspaces, true
}

// HasCanCreateWorkspaces returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasCanCreateWorkspaces() bool {
	if o != nil && !IsNil(o.CanCreateWorkspaces) {
		return true
	}

	return false
}

// SetCanCreateWorkspaces gets a reference to the given string and assigns it to the CanCreateWorkspaces field.
func (o *AccountRoleSettings) SetCanCreateWorkspaces(v string) {
	o.CanCreateWorkspaces = &v
}

// GetCanCreateWorkspacesMetadata returns the CanCreateWorkspacesMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetCanCreateWorkspacesMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanCreateWorkspacesMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanCreateWorkspacesMetadata
}

// GetCanCreateWorkspacesMetadataOk returns a tuple with the CanCreateWorkspacesMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetCanCreateWorkspacesMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanCreateWorkspacesMetadata) {
		return nil, false
	}
	return o.CanCreateWorkspacesMetadata, true
}

// HasCanCreateWorkspacesMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasCanCreateWorkspacesMetadata() bool {
	if o != nil && !IsNil(o.CanCreateWorkspacesMetadata) {
		return true
	}

	return false
}

// SetCanCreateWorkspacesMetadata gets a reference to the given SettingsMetadata and assigns it to the CanCreateWorkspacesMetadata field.
func (o *AccountRoleSettings) SetCanCreateWorkspacesMetadata(v SettingsMetadata) {
	o.CanCreateWorkspacesMetadata = &v
}

// GetCanDeleteDocumentsInTransaction returns the CanDeleteDocumentsInTransaction field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetCanDeleteDocumentsInTransaction() string {
	if o == nil || IsNil(o.CanDeleteDocumentsInTransaction) {
		var ret string
		return ret
	}
	return *o.CanDeleteDocumentsInTransaction
}

// GetCanDeleteDocumentsInTransactionOk returns a tuple with the CanDeleteDocumentsInTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetCanDeleteDocumentsInTransactionOk() (*string, bool) {
	if o == nil || IsNil(o.CanDeleteDocumentsInTransaction) {
		return nil, false
	}
	return o.CanDeleteDocumentsInTransaction, true
}

// HasCanDeleteDocumentsInTransaction returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasCanDeleteDocumentsInTransaction() bool {
	if o != nil && !IsNil(o.CanDeleteDocumentsInTransaction) {
		return true
	}

	return false
}

// SetCanDeleteDocumentsInTransaction gets a reference to the given string and assigns it to the CanDeleteDocumentsInTransaction field.
func (o *AccountRoleSettings) SetCanDeleteDocumentsInTransaction(v string) {
	o.CanDeleteDocumentsInTransaction = &v
}

// GetCanDeleteDocumentsInTransactionMetadata returns the CanDeleteDocumentsInTransactionMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetCanDeleteDocumentsInTransactionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanDeleteDocumentsInTransactionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanDeleteDocumentsInTransactionMetadata
}

// GetCanDeleteDocumentsInTransactionMetadataOk returns a tuple with the CanDeleteDocumentsInTransactionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetCanDeleteDocumentsInTransactionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanDeleteDocumentsInTransactionMetadata) {
		return nil, false
	}
	return o.CanDeleteDocumentsInTransactionMetadata, true
}

// HasCanDeleteDocumentsInTransactionMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasCanDeleteDocumentsInTransactionMetadata() bool {
	if o != nil && !IsNil(o.CanDeleteDocumentsInTransactionMetadata) {
		return true
	}

	return false
}

// SetCanDeleteDocumentsInTransactionMetadata gets a reference to the given SettingsMetadata and assigns it to the CanDeleteDocumentsInTransactionMetadata field.
func (o *AccountRoleSettings) SetCanDeleteDocumentsInTransactionMetadata(v SettingsMetadata) {
	o.CanDeleteDocumentsInTransactionMetadata = &v
}

// GetCanDeleteTransaction returns the CanDeleteTransaction field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetCanDeleteTransaction() string {
	if o == nil || IsNil(o.CanDeleteTransaction) {
		var ret string
		return ret
	}
	return *o.CanDeleteTransaction
}

// GetCanDeleteTransactionOk returns a tuple with the CanDeleteTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetCanDeleteTransactionOk() (*string, bool) {
	if o == nil || IsNil(o.CanDeleteTransaction) {
		return nil, false
	}
	return o.CanDeleteTransaction, true
}

// HasCanDeleteTransaction returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasCanDeleteTransaction() bool {
	if o != nil && !IsNil(o.CanDeleteTransaction) {
		return true
	}

	return false
}

// SetCanDeleteTransaction gets a reference to the given string and assigns it to the CanDeleteTransaction field.
func (o *AccountRoleSettings) SetCanDeleteTransaction(v string) {
	o.CanDeleteTransaction = &v
}

// GetCanDeleteTransactionMetadata returns the CanDeleteTransactionMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetCanDeleteTransactionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanDeleteTransactionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanDeleteTransactionMetadata
}

// GetCanDeleteTransactionMetadataOk returns a tuple with the CanDeleteTransactionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetCanDeleteTransactionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanDeleteTransactionMetadata) {
		return nil, false
	}
	return o.CanDeleteTransactionMetadata, true
}

// HasCanDeleteTransactionMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasCanDeleteTransactionMetadata() bool {
	if o != nil && !IsNil(o.CanDeleteTransactionMetadata) {
		return true
	}

	return false
}

// SetCanDeleteTransactionMetadata gets a reference to the given SettingsMetadata and assigns it to the CanDeleteTransactionMetadata field.
func (o *AccountRoleSettings) SetCanDeleteTransactionMetadata(v SettingsMetadata) {
	o.CanDeleteTransactionMetadata = &v
}

// GetCanSendEnvelopesViaSMS returns the CanSendEnvelopesViaSMS field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetCanSendEnvelopesViaSMS() string {
	if o == nil || IsNil(o.CanSendEnvelopesViaSMS) {
		var ret string
		return ret
	}
	return *o.CanSendEnvelopesViaSMS
}

// GetCanSendEnvelopesViaSMSOk returns a tuple with the CanSendEnvelopesViaSMS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetCanSendEnvelopesViaSMSOk() (*string, bool) {
	if o == nil || IsNil(o.CanSendEnvelopesViaSMS) {
		return nil, false
	}
	return o.CanSendEnvelopesViaSMS, true
}

// HasCanSendEnvelopesViaSMS returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasCanSendEnvelopesViaSMS() bool {
	if o != nil && !IsNil(o.CanSendEnvelopesViaSMS) {
		return true
	}

	return false
}

// SetCanSendEnvelopesViaSMS gets a reference to the given string and assigns it to the CanSendEnvelopesViaSMS field.
func (o *AccountRoleSettings) SetCanSendEnvelopesViaSMS(v string) {
	o.CanSendEnvelopesViaSMS = &v
}

// GetCanSendEnvelopesViaSMSMetadata returns the CanSendEnvelopesViaSMSMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetCanSendEnvelopesViaSMSMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanSendEnvelopesViaSMSMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanSendEnvelopesViaSMSMetadata
}

// GetCanSendEnvelopesViaSMSMetadataOk returns a tuple with the CanSendEnvelopesViaSMSMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetCanSendEnvelopesViaSMSMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanSendEnvelopesViaSMSMetadata) {
		return nil, false
	}
	return o.CanSendEnvelopesViaSMSMetadata, true
}

// HasCanSendEnvelopesViaSMSMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasCanSendEnvelopesViaSMSMetadata() bool {
	if o != nil && !IsNil(o.CanSendEnvelopesViaSMSMetadata) {
		return true
	}

	return false
}

// SetCanSendEnvelopesViaSMSMetadata gets a reference to the given SettingsMetadata and assigns it to the CanSendEnvelopesViaSMSMetadata field.
func (o *AccountRoleSettings) SetCanSendEnvelopesViaSMSMetadata(v SettingsMetadata) {
	o.CanSendEnvelopesViaSMSMetadata = &v
}

// GetDisableDocumentUpload returns the DisableDocumentUpload field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetDisableDocumentUpload() string {
	if o == nil || IsNil(o.DisableDocumentUpload) {
		var ret string
		return ret
	}
	return *o.DisableDocumentUpload
}

// GetDisableDocumentUploadOk returns a tuple with the DisableDocumentUpload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetDisableDocumentUploadOk() (*string, bool) {
	if o == nil || IsNil(o.DisableDocumentUpload) {
		return nil, false
	}
	return o.DisableDocumentUpload, true
}

// HasDisableDocumentUpload returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasDisableDocumentUpload() bool {
	if o != nil && !IsNil(o.DisableDocumentUpload) {
		return true
	}

	return false
}

// SetDisableDocumentUpload gets a reference to the given string and assigns it to the DisableDocumentUpload field.
func (o *AccountRoleSettings) SetDisableDocumentUpload(v string) {
	o.DisableDocumentUpload = &v
}

// GetDisableDocumentUploadMetadata returns the DisableDocumentUploadMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetDisableDocumentUploadMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DisableDocumentUploadMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DisableDocumentUploadMetadata
}

// GetDisableDocumentUploadMetadataOk returns a tuple with the DisableDocumentUploadMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetDisableDocumentUploadMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DisableDocumentUploadMetadata) {
		return nil, false
	}
	return o.DisableDocumentUploadMetadata, true
}

// HasDisableDocumentUploadMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasDisableDocumentUploadMetadata() bool {
	if o != nil && !IsNil(o.DisableDocumentUploadMetadata) {
		return true
	}

	return false
}

// SetDisableDocumentUploadMetadata gets a reference to the given SettingsMetadata and assigns it to the DisableDocumentUploadMetadata field.
func (o *AccountRoleSettings) SetDisableDocumentUploadMetadata(v SettingsMetadata) {
	o.DisableDocumentUploadMetadata = &v
}

// GetDisableOtherActions returns the DisableOtherActions field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetDisableOtherActions() string {
	if o == nil || IsNil(o.DisableOtherActions) {
		var ret string
		return ret
	}
	return *o.DisableOtherActions
}

// GetDisableOtherActionsOk returns a tuple with the DisableOtherActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetDisableOtherActionsOk() (*string, bool) {
	if o == nil || IsNil(o.DisableOtherActions) {
		return nil, false
	}
	return o.DisableOtherActions, true
}

// HasDisableOtherActions returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasDisableOtherActions() bool {
	if o != nil && !IsNil(o.DisableOtherActions) {
		return true
	}

	return false
}

// SetDisableOtherActions gets a reference to the given string and assigns it to the DisableOtherActions field.
func (o *AccountRoleSettings) SetDisableOtherActions(v string) {
	o.DisableOtherActions = &v
}

// GetDisableOtherActionsMetadata returns the DisableOtherActionsMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetDisableOtherActionsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DisableOtherActionsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DisableOtherActionsMetadata
}

// GetDisableOtherActionsMetadataOk returns a tuple with the DisableOtherActionsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetDisableOtherActionsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DisableOtherActionsMetadata) {
		return nil, false
	}
	return o.DisableOtherActionsMetadata, true
}

// HasDisableOtherActionsMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasDisableOtherActionsMetadata() bool {
	if o != nil && !IsNil(o.DisableOtherActionsMetadata) {
		return true
	}

	return false
}

// SetDisableOtherActionsMetadata gets a reference to the given SettingsMetadata and assigns it to the DisableOtherActionsMetadata field.
func (o *AccountRoleSettings) SetDisableOtherActionsMetadata(v SettingsMetadata) {
	o.DisableOtherActionsMetadata = &v
}

// GetEnableApiRequestLogging returns the EnableApiRequestLogging field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetEnableApiRequestLogging() string {
	if o == nil || IsNil(o.EnableApiRequestLogging) {
		var ret string
		return ret
	}
	return *o.EnableApiRequestLogging
}

// GetEnableApiRequestLoggingOk returns a tuple with the EnableApiRequestLogging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetEnableApiRequestLoggingOk() (*string, bool) {
	if o == nil || IsNil(o.EnableApiRequestLogging) {
		return nil, false
	}
	return o.EnableApiRequestLogging, true
}

// HasEnableApiRequestLogging returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasEnableApiRequestLogging() bool {
	if o != nil && !IsNil(o.EnableApiRequestLogging) {
		return true
	}

	return false
}

// SetEnableApiRequestLogging gets a reference to the given string and assigns it to the EnableApiRequestLogging field.
func (o *AccountRoleSettings) SetEnableApiRequestLogging(v string) {
	o.EnableApiRequestLogging = &v
}

// GetEnableApiRequestLoggingMetadata returns the EnableApiRequestLoggingMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetEnableApiRequestLoggingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableApiRequestLoggingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableApiRequestLoggingMetadata
}

// GetEnableApiRequestLoggingMetadataOk returns a tuple with the EnableApiRequestLoggingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetEnableApiRequestLoggingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableApiRequestLoggingMetadata) {
		return nil, false
	}
	return o.EnableApiRequestLoggingMetadata, true
}

// HasEnableApiRequestLoggingMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasEnableApiRequestLoggingMetadata() bool {
	if o != nil && !IsNil(o.EnableApiRequestLoggingMetadata) {
		return true
	}

	return false
}

// SetEnableApiRequestLoggingMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableApiRequestLoggingMetadata field.
func (o *AccountRoleSettings) SetEnableApiRequestLoggingMetadata(v SettingsMetadata) {
	o.EnableApiRequestLoggingMetadata = &v
}

// GetEnableKeyTermsSuggestionsByDocumentType returns the EnableKeyTermsSuggestionsByDocumentType field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetEnableKeyTermsSuggestionsByDocumentType() string {
	if o == nil || IsNil(o.EnableKeyTermsSuggestionsByDocumentType) {
		var ret string
		return ret
	}
	return *o.EnableKeyTermsSuggestionsByDocumentType
}

// GetEnableKeyTermsSuggestionsByDocumentTypeOk returns a tuple with the EnableKeyTermsSuggestionsByDocumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetEnableKeyTermsSuggestionsByDocumentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EnableKeyTermsSuggestionsByDocumentType) {
		return nil, false
	}
	return o.EnableKeyTermsSuggestionsByDocumentType, true
}

// HasEnableKeyTermsSuggestionsByDocumentType returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasEnableKeyTermsSuggestionsByDocumentType() bool {
	if o != nil && !IsNil(o.EnableKeyTermsSuggestionsByDocumentType) {
		return true
	}

	return false
}

// SetEnableKeyTermsSuggestionsByDocumentType gets a reference to the given string and assigns it to the EnableKeyTermsSuggestionsByDocumentType field.
func (o *AccountRoleSettings) SetEnableKeyTermsSuggestionsByDocumentType(v string) {
	o.EnableKeyTermsSuggestionsByDocumentType = &v
}

// GetEnableKeyTermsSuggestionsByDocumentTypeMetadata returns the EnableKeyTermsSuggestionsByDocumentTypeMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetEnableKeyTermsSuggestionsByDocumentTypeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableKeyTermsSuggestionsByDocumentTypeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableKeyTermsSuggestionsByDocumentTypeMetadata
}

// GetEnableKeyTermsSuggestionsByDocumentTypeMetadataOk returns a tuple with the EnableKeyTermsSuggestionsByDocumentTypeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetEnableKeyTermsSuggestionsByDocumentTypeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableKeyTermsSuggestionsByDocumentTypeMetadata) {
		return nil, false
	}
	return o.EnableKeyTermsSuggestionsByDocumentTypeMetadata, true
}

// HasEnableKeyTermsSuggestionsByDocumentTypeMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasEnableKeyTermsSuggestionsByDocumentTypeMetadata() bool {
	if o != nil && !IsNil(o.EnableKeyTermsSuggestionsByDocumentTypeMetadata) {
		return true
	}

	return false
}

// SetEnableKeyTermsSuggestionsByDocumentTypeMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableKeyTermsSuggestionsByDocumentTypeMetadata field.
func (o *AccountRoleSettings) SetEnableKeyTermsSuggestionsByDocumentTypeMetadata(v SettingsMetadata) {
	o.EnableKeyTermsSuggestionsByDocumentTypeMetadata = &v
}

// GetEnableRecipientViewingNotifications returns the EnableRecipientViewingNotifications field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetEnableRecipientViewingNotifications() string {
	if o == nil || IsNil(o.EnableRecipientViewingNotifications) {
		var ret string
		return ret
	}
	return *o.EnableRecipientViewingNotifications
}

// GetEnableRecipientViewingNotificationsOk returns a tuple with the EnableRecipientViewingNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetEnableRecipientViewingNotificationsOk() (*string, bool) {
	if o == nil || IsNil(o.EnableRecipientViewingNotifications) {
		return nil, false
	}
	return o.EnableRecipientViewingNotifications, true
}

// HasEnableRecipientViewingNotifications returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasEnableRecipientViewingNotifications() bool {
	if o != nil && !IsNil(o.EnableRecipientViewingNotifications) {
		return true
	}

	return false
}

// SetEnableRecipientViewingNotifications gets a reference to the given string and assigns it to the EnableRecipientViewingNotifications field.
func (o *AccountRoleSettings) SetEnableRecipientViewingNotifications(v string) {
	o.EnableRecipientViewingNotifications = &v
}

// GetEnableRecipientViewingNotificationsMetadata returns the EnableRecipientViewingNotificationsMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetEnableRecipientViewingNotificationsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableRecipientViewingNotificationsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableRecipientViewingNotificationsMetadata
}

// GetEnableRecipientViewingNotificationsMetadataOk returns a tuple with the EnableRecipientViewingNotificationsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetEnableRecipientViewingNotificationsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableRecipientViewingNotificationsMetadata) {
		return nil, false
	}
	return o.EnableRecipientViewingNotificationsMetadata, true
}

// HasEnableRecipientViewingNotificationsMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasEnableRecipientViewingNotificationsMetadata() bool {
	if o != nil && !IsNil(o.EnableRecipientViewingNotificationsMetadata) {
		return true
	}

	return false
}

// SetEnableRecipientViewingNotificationsMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableRecipientViewingNotificationsMetadata field.
func (o *AccountRoleSettings) SetEnableRecipientViewingNotificationsMetadata(v SettingsMetadata) {
	o.EnableRecipientViewingNotificationsMetadata = &v
}

// GetEnableSequentialSigningInterface returns the EnableSequentialSigningInterface field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetEnableSequentialSigningInterface() string {
	if o == nil || IsNil(o.EnableSequentialSigningInterface) {
		var ret string
		return ret
	}
	return *o.EnableSequentialSigningInterface
}

// GetEnableSequentialSigningInterfaceOk returns a tuple with the EnableSequentialSigningInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetEnableSequentialSigningInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSequentialSigningInterface) {
		return nil, false
	}
	return o.EnableSequentialSigningInterface, true
}

// HasEnableSequentialSigningInterface returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasEnableSequentialSigningInterface() bool {
	if o != nil && !IsNil(o.EnableSequentialSigningInterface) {
		return true
	}

	return false
}

// SetEnableSequentialSigningInterface gets a reference to the given string and assigns it to the EnableSequentialSigningInterface field.
func (o *AccountRoleSettings) SetEnableSequentialSigningInterface(v string) {
	o.EnableSequentialSigningInterface = &v
}

// GetEnableSequentialSigningInterfaceMetadata returns the EnableSequentialSigningInterfaceMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetEnableSequentialSigningInterfaceMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSequentialSigningInterfaceMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSequentialSigningInterfaceMetadata
}

// GetEnableSequentialSigningInterfaceMetadataOk returns a tuple with the EnableSequentialSigningInterfaceMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetEnableSequentialSigningInterfaceMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSequentialSigningInterfaceMetadata) {
		return nil, false
	}
	return o.EnableSequentialSigningInterfaceMetadata, true
}

// HasEnableSequentialSigningInterfaceMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasEnableSequentialSigningInterfaceMetadata() bool {
	if o != nil && !IsNil(o.EnableSequentialSigningInterfaceMetadata) {
		return true
	}

	return false
}

// SetEnableSequentialSigningInterfaceMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSequentialSigningInterfaceMetadata field.
func (o *AccountRoleSettings) SetEnableSequentialSigningInterfaceMetadata(v SettingsMetadata) {
	o.EnableSequentialSigningInterfaceMetadata = &v
}

// GetEnableTransactionPointIntegration returns the EnableTransactionPointIntegration field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetEnableTransactionPointIntegration() string {
	if o == nil || IsNil(o.EnableTransactionPointIntegration) {
		var ret string
		return ret
	}
	return *o.EnableTransactionPointIntegration
}

// GetEnableTransactionPointIntegrationOk returns a tuple with the EnableTransactionPointIntegration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetEnableTransactionPointIntegrationOk() (*string, bool) {
	if o == nil || IsNil(o.EnableTransactionPointIntegration) {
		return nil, false
	}
	return o.EnableTransactionPointIntegration, true
}

// HasEnableTransactionPointIntegration returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasEnableTransactionPointIntegration() bool {
	if o != nil && !IsNil(o.EnableTransactionPointIntegration) {
		return true
	}

	return false
}

// SetEnableTransactionPointIntegration gets a reference to the given string and assigns it to the EnableTransactionPointIntegration field.
func (o *AccountRoleSettings) SetEnableTransactionPointIntegration(v string) {
	o.EnableTransactionPointIntegration = &v
}

// GetEnableTransactionPointIntegrationMetadata returns the EnableTransactionPointIntegrationMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetEnableTransactionPointIntegrationMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableTransactionPointIntegrationMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableTransactionPointIntegrationMetadata
}

// GetEnableTransactionPointIntegrationMetadataOk returns a tuple with the EnableTransactionPointIntegrationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetEnableTransactionPointIntegrationMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableTransactionPointIntegrationMetadata) {
		return nil, false
	}
	return o.EnableTransactionPointIntegrationMetadata, true
}

// HasEnableTransactionPointIntegrationMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasEnableTransactionPointIntegrationMetadata() bool {
	if o != nil && !IsNil(o.EnableTransactionPointIntegrationMetadata) {
		return true
	}

	return false
}

// SetEnableTransactionPointIntegrationMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableTransactionPointIntegrationMetadata field.
func (o *AccountRoleSettings) SetEnableTransactionPointIntegrationMetadata(v SettingsMetadata) {
	o.EnableTransactionPointIntegrationMetadata = &v
}

// GetPowerFormRole returns the PowerFormRole field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetPowerFormRole() string {
	if o == nil || IsNil(o.PowerFormRole) {
		var ret string
		return ret
	}
	return *o.PowerFormRole
}

// GetPowerFormRoleOk returns a tuple with the PowerFormRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetPowerFormRoleOk() (*string, bool) {
	if o == nil || IsNil(o.PowerFormRole) {
		return nil, false
	}
	return o.PowerFormRole, true
}

// HasPowerFormRole returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasPowerFormRole() bool {
	if o != nil && !IsNil(o.PowerFormRole) {
		return true
	}

	return false
}

// SetPowerFormRole gets a reference to the given string and assigns it to the PowerFormRole field.
func (o *AccountRoleSettings) SetPowerFormRole(v string) {
	o.PowerFormRole = &v
}

// GetPowerFormRoleMetadata returns the PowerFormRoleMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetPowerFormRoleMetadata() SettingsMetadata {
	if o == nil || IsNil(o.PowerFormRoleMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.PowerFormRoleMetadata
}

// GetPowerFormRoleMetadataOk returns a tuple with the PowerFormRoleMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetPowerFormRoleMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.PowerFormRoleMetadata) {
		return nil, false
	}
	return o.PowerFormRoleMetadata, true
}

// HasPowerFormRoleMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasPowerFormRoleMetadata() bool {
	if o != nil && !IsNil(o.PowerFormRoleMetadata) {
		return true
	}

	return false
}

// SetPowerFormRoleMetadata gets a reference to the given SettingsMetadata and assigns it to the PowerFormRoleMetadata field.
func (o *AccountRoleSettings) SetPowerFormRoleMetadata(v SettingsMetadata) {
	o.PowerFormRoleMetadata = &v
}

// GetReceiveCompletedSelfSignedDocumentsAsEmailLinks returns the ReceiveCompletedSelfSignedDocumentsAsEmailLinks field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetReceiveCompletedSelfSignedDocumentsAsEmailLinks() string {
	if o == nil || IsNil(o.ReceiveCompletedSelfSignedDocumentsAsEmailLinks) {
		var ret string
		return ret
	}
	return *o.ReceiveCompletedSelfSignedDocumentsAsEmailLinks
}

// GetReceiveCompletedSelfSignedDocumentsAsEmailLinksOk returns a tuple with the ReceiveCompletedSelfSignedDocumentsAsEmailLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetReceiveCompletedSelfSignedDocumentsAsEmailLinksOk() (*string, bool) {
	if o == nil || IsNil(o.ReceiveCompletedSelfSignedDocumentsAsEmailLinks) {
		return nil, false
	}
	return o.ReceiveCompletedSelfSignedDocumentsAsEmailLinks, true
}

// HasReceiveCompletedSelfSignedDocumentsAsEmailLinks returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasReceiveCompletedSelfSignedDocumentsAsEmailLinks() bool {
	if o != nil && !IsNil(o.ReceiveCompletedSelfSignedDocumentsAsEmailLinks) {
		return true
	}

	return false
}

// SetReceiveCompletedSelfSignedDocumentsAsEmailLinks gets a reference to the given string and assigns it to the ReceiveCompletedSelfSignedDocumentsAsEmailLinks field.
func (o *AccountRoleSettings) SetReceiveCompletedSelfSignedDocumentsAsEmailLinks(v string) {
	o.ReceiveCompletedSelfSignedDocumentsAsEmailLinks = &v
}

// GetReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata returns the ReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata
}

// GetReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadataOk returns a tuple with the ReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata) {
		return nil, false
	}
	return o.ReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata, true
}

// HasReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata() bool {
	if o != nil && !IsNil(o.ReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata) {
		return true
	}

	return false
}

// SetReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata gets a reference to the given SettingsMetadata and assigns it to the ReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata field.
func (o *AccountRoleSettings) SetReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata(v SettingsMetadata) {
	o.ReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata = &v
}

// GetSigningUiVersionMetadata returns the SigningUiVersionMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetSigningUiVersionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SigningUiVersionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SigningUiVersionMetadata
}

// GetSigningUiVersionMetadataOk returns a tuple with the SigningUiVersionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetSigningUiVersionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SigningUiVersionMetadata) {
		return nil, false
	}
	return o.SigningUiVersionMetadata, true
}

// HasSigningUiVersionMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasSigningUiVersionMetadata() bool {
	if o != nil && !IsNil(o.SigningUiVersionMetadata) {
		return true
	}

	return false
}

// SetSigningUiVersionMetadata gets a reference to the given SettingsMetadata and assigns it to the SigningUiVersionMetadata field.
func (o *AccountRoleSettings) SetSigningUiVersionMetadata(v SettingsMetadata) {
	o.SigningUiVersionMetadata = &v
}

// GetSupplementalDocumentsMustAccept returns the SupplementalDocumentsMustAccept field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetSupplementalDocumentsMustAccept() string {
	if o == nil || IsNil(o.SupplementalDocumentsMustAccept) {
		var ret string
		return ret
	}
	return *o.SupplementalDocumentsMustAccept
}

// GetSupplementalDocumentsMustAcceptOk returns a tuple with the SupplementalDocumentsMustAccept field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetSupplementalDocumentsMustAcceptOk() (*string, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustAccept) {
		return nil, false
	}
	return o.SupplementalDocumentsMustAccept, true
}

// HasSupplementalDocumentsMustAccept returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasSupplementalDocumentsMustAccept() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustAccept) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustAccept gets a reference to the given string and assigns it to the SupplementalDocumentsMustAccept field.
func (o *AccountRoleSettings) SetSupplementalDocumentsMustAccept(v string) {
	o.SupplementalDocumentsMustAccept = &v
}

// GetSupplementalDocumentsMustAcceptMetadata returns the SupplementalDocumentsMustAcceptMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetSupplementalDocumentsMustAcceptMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SupplementalDocumentsMustAcceptMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SupplementalDocumentsMustAcceptMetadata
}

// GetSupplementalDocumentsMustAcceptMetadataOk returns a tuple with the SupplementalDocumentsMustAcceptMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetSupplementalDocumentsMustAcceptMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustAcceptMetadata) {
		return nil, false
	}
	return o.SupplementalDocumentsMustAcceptMetadata, true
}

// HasSupplementalDocumentsMustAcceptMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasSupplementalDocumentsMustAcceptMetadata() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustAcceptMetadata) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustAcceptMetadata gets a reference to the given SettingsMetadata and assigns it to the SupplementalDocumentsMustAcceptMetadata field.
func (o *AccountRoleSettings) SetSupplementalDocumentsMustAcceptMetadata(v SettingsMetadata) {
	o.SupplementalDocumentsMustAcceptMetadata = &v
}

// GetSupplementalDocumentsMustRead returns the SupplementalDocumentsMustRead field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetSupplementalDocumentsMustRead() string {
	if o == nil || IsNil(o.SupplementalDocumentsMustRead) {
		var ret string
		return ret
	}
	return *o.SupplementalDocumentsMustRead
}

// GetSupplementalDocumentsMustReadOk returns a tuple with the SupplementalDocumentsMustRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetSupplementalDocumentsMustReadOk() (*string, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustRead) {
		return nil, false
	}
	return o.SupplementalDocumentsMustRead, true
}

// HasSupplementalDocumentsMustRead returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasSupplementalDocumentsMustRead() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustRead) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustRead gets a reference to the given string and assigns it to the SupplementalDocumentsMustRead field.
func (o *AccountRoleSettings) SetSupplementalDocumentsMustRead(v string) {
	o.SupplementalDocumentsMustRead = &v
}

// GetSupplementalDocumentsMustReadMetadata returns the SupplementalDocumentsMustReadMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetSupplementalDocumentsMustReadMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SupplementalDocumentsMustReadMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SupplementalDocumentsMustReadMetadata
}

// GetSupplementalDocumentsMustReadMetadataOk returns a tuple with the SupplementalDocumentsMustReadMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetSupplementalDocumentsMustReadMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustReadMetadata) {
		return nil, false
	}
	return o.SupplementalDocumentsMustReadMetadata, true
}

// HasSupplementalDocumentsMustReadMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasSupplementalDocumentsMustReadMetadata() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustReadMetadata) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustReadMetadata gets a reference to the given SettingsMetadata and assigns it to the SupplementalDocumentsMustReadMetadata field.
func (o *AccountRoleSettings) SetSupplementalDocumentsMustReadMetadata(v SettingsMetadata) {
	o.SupplementalDocumentsMustReadMetadata = &v
}

// GetSupplementalDocumentsMustView returns the SupplementalDocumentsMustView field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetSupplementalDocumentsMustView() string {
	if o == nil || IsNil(o.SupplementalDocumentsMustView) {
		var ret string
		return ret
	}
	return *o.SupplementalDocumentsMustView
}

// GetSupplementalDocumentsMustViewOk returns a tuple with the SupplementalDocumentsMustView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetSupplementalDocumentsMustViewOk() (*string, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustView) {
		return nil, false
	}
	return o.SupplementalDocumentsMustView, true
}

// HasSupplementalDocumentsMustView returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasSupplementalDocumentsMustView() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustView) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustView gets a reference to the given string and assigns it to the SupplementalDocumentsMustView field.
func (o *AccountRoleSettings) SetSupplementalDocumentsMustView(v string) {
	o.SupplementalDocumentsMustView = &v
}

// GetSupplementalDocumentsMustViewMetadata returns the SupplementalDocumentsMustViewMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetSupplementalDocumentsMustViewMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SupplementalDocumentsMustViewMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SupplementalDocumentsMustViewMetadata
}

// GetSupplementalDocumentsMustViewMetadataOk returns a tuple with the SupplementalDocumentsMustViewMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetSupplementalDocumentsMustViewMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustViewMetadata) {
		return nil, false
	}
	return o.SupplementalDocumentsMustViewMetadata, true
}

// HasSupplementalDocumentsMustViewMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasSupplementalDocumentsMustViewMetadata() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustViewMetadata) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustViewMetadata gets a reference to the given SettingsMetadata and assigns it to the SupplementalDocumentsMustViewMetadata field.
func (o *AccountRoleSettings) SetSupplementalDocumentsMustViewMetadata(v SettingsMetadata) {
	o.SupplementalDocumentsMustViewMetadata = &v
}

// GetUseNewDocuSignExperienceInterface returns the UseNewDocuSignExperienceInterface field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetUseNewDocuSignExperienceInterface() string {
	if o == nil || IsNil(o.UseNewDocuSignExperienceInterface) {
		var ret string
		return ret
	}
	return *o.UseNewDocuSignExperienceInterface
}

// GetUseNewDocuSignExperienceInterfaceOk returns a tuple with the UseNewDocuSignExperienceInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetUseNewDocuSignExperienceInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.UseNewDocuSignExperienceInterface) {
		return nil, false
	}
	return o.UseNewDocuSignExperienceInterface, true
}

// HasUseNewDocuSignExperienceInterface returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasUseNewDocuSignExperienceInterface() bool {
	if o != nil && !IsNil(o.UseNewDocuSignExperienceInterface) {
		return true
	}

	return false
}

// SetUseNewDocuSignExperienceInterface gets a reference to the given string and assigns it to the UseNewDocuSignExperienceInterface field.
func (o *AccountRoleSettings) SetUseNewDocuSignExperienceInterface(v string) {
	o.UseNewDocuSignExperienceInterface = &v
}

// GetUseNewDocuSignExperienceInterfaceMetadata returns the UseNewDocuSignExperienceInterfaceMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetUseNewDocuSignExperienceInterfaceMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UseNewDocuSignExperienceInterfaceMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UseNewDocuSignExperienceInterfaceMetadata
}

// GetUseNewDocuSignExperienceInterfaceMetadataOk returns a tuple with the UseNewDocuSignExperienceInterfaceMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetUseNewDocuSignExperienceInterfaceMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UseNewDocuSignExperienceInterfaceMetadata) {
		return nil, false
	}
	return o.UseNewDocuSignExperienceInterfaceMetadata, true
}

// HasUseNewDocuSignExperienceInterfaceMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasUseNewDocuSignExperienceInterfaceMetadata() bool {
	if o != nil && !IsNil(o.UseNewDocuSignExperienceInterfaceMetadata) {
		return true
	}

	return false
}

// SetUseNewDocuSignExperienceInterfaceMetadata gets a reference to the given SettingsMetadata and assigns it to the UseNewDocuSignExperienceInterfaceMetadata field.
func (o *AccountRoleSettings) SetUseNewDocuSignExperienceInterfaceMetadata(v SettingsMetadata) {
	o.UseNewDocuSignExperienceInterfaceMetadata = &v
}

// GetUseNewSendingInterface returns the UseNewSendingInterface field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetUseNewSendingInterface() string {
	if o == nil || IsNil(o.UseNewSendingInterface) {
		var ret string
		return ret
	}
	return *o.UseNewSendingInterface
}

// GetUseNewSendingInterfaceOk returns a tuple with the UseNewSendingInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetUseNewSendingInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.UseNewSendingInterface) {
		return nil, false
	}
	return o.UseNewSendingInterface, true
}

// HasUseNewSendingInterface returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasUseNewSendingInterface() bool {
	if o != nil && !IsNil(o.UseNewSendingInterface) {
		return true
	}

	return false
}

// SetUseNewSendingInterface gets a reference to the given string and assigns it to the UseNewSendingInterface field.
func (o *AccountRoleSettings) SetUseNewSendingInterface(v string) {
	o.UseNewSendingInterface = &v
}

// GetUseNewSendingInterfaceMetadata returns the UseNewSendingInterfaceMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetUseNewSendingInterfaceMetadata() SettingsMetadata {
	if o == nil || IsNil(o.UseNewSendingInterfaceMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.UseNewSendingInterfaceMetadata
}

// GetUseNewSendingInterfaceMetadataOk returns a tuple with the UseNewSendingInterfaceMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetUseNewSendingInterfaceMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.UseNewSendingInterfaceMetadata) {
		return nil, false
	}
	return o.UseNewSendingInterfaceMetadata, true
}

// HasUseNewSendingInterfaceMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasUseNewSendingInterfaceMetadata() bool {
	if o != nil && !IsNil(o.UseNewSendingInterfaceMetadata) {
		return true
	}

	return false
}

// SetUseNewSendingInterfaceMetadata gets a reference to the given SettingsMetadata and assigns it to the UseNewSendingInterfaceMetadata field.
func (o *AccountRoleSettings) SetUseNewSendingInterfaceMetadata(v SettingsMetadata) {
	o.UseNewSendingInterfaceMetadata = &v
}

// GetVaultingMode returns the VaultingMode field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetVaultingMode() string {
	if o == nil || IsNil(o.VaultingMode) {
		var ret string
		return ret
	}
	return *o.VaultingMode
}

// GetVaultingModeOk returns a tuple with the VaultingMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetVaultingModeOk() (*string, bool) {
	if o == nil || IsNil(o.VaultingMode) {
		return nil, false
	}
	return o.VaultingMode, true
}

// HasVaultingMode returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasVaultingMode() bool {
	if o != nil && !IsNil(o.VaultingMode) {
		return true
	}

	return false
}

// SetVaultingMode gets a reference to the given string and assigns it to the VaultingMode field.
func (o *AccountRoleSettings) SetVaultingMode(v string) {
	o.VaultingMode = &v
}

// GetVaultingModeMetadata returns the VaultingModeMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetVaultingModeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.VaultingModeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.VaultingModeMetadata
}

// GetVaultingModeMetadataOk returns a tuple with the VaultingModeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetVaultingModeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.VaultingModeMetadata) {
		return nil, false
	}
	return o.VaultingModeMetadata, true
}

// HasVaultingModeMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasVaultingModeMetadata() bool {
	if o != nil && !IsNil(o.VaultingModeMetadata) {
		return true
	}

	return false
}

// SetVaultingModeMetadata gets a reference to the given SettingsMetadata and assigns it to the VaultingModeMetadata field.
func (o *AccountRoleSettings) SetVaultingModeMetadata(v SettingsMetadata) {
	o.VaultingModeMetadata = &v
}

// GetWebForms returns the WebForms field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetWebForms() string {
	if o == nil || IsNil(o.WebForms) {
		var ret string
		return ret
	}
	return *o.WebForms
}

// GetWebFormsOk returns a tuple with the WebForms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetWebFormsOk() (*string, bool) {
	if o == nil || IsNil(o.WebForms) {
		return nil, false
	}
	return o.WebForms, true
}

// HasWebForms returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasWebForms() bool {
	if o != nil && !IsNil(o.WebForms) {
		return true
	}

	return false
}

// SetWebForms gets a reference to the given string and assigns it to the WebForms field.
func (o *AccountRoleSettings) SetWebForms(v string) {
	o.WebForms = &v
}

// GetWebFormsMetadata returns the WebFormsMetadata field value if set, zero value otherwise.
func (o *AccountRoleSettings) GetWebFormsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.WebFormsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.WebFormsMetadata
}

// GetWebFormsMetadataOk returns a tuple with the WebFormsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRoleSettings) GetWebFormsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.WebFormsMetadata) {
		return nil, false
	}
	return o.WebFormsMetadata, true
}

// HasWebFormsMetadata returns a boolean if a field has been set.
func (o *AccountRoleSettings) HasWebFormsMetadata() bool {
	if o != nil && !IsNil(o.WebFormsMetadata) {
		return true
	}

	return false
}

// SetWebFormsMetadata gets a reference to the given SettingsMetadata and assigns it to the WebFormsMetadata field.
func (o *AccountRoleSettings) SetWebFormsMetadata(v SettingsMetadata) {
	o.WebFormsMetadata = &v
}

func (o AccountRoleSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountRoleSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowAccountManagement) {
		toSerialize["allowAccountManagement"] = o.AllowAccountManagement
	}
	if !IsNil(o.AllowAccountManagementMetadata) {
		toSerialize["allowAccountManagementMetadata"] = o.AllowAccountManagementMetadata
	}
	if !IsNil(o.AllowApiAccess) {
		toSerialize["allowApiAccess"] = o.AllowApiAccess
	}
	if !IsNil(o.AllowApiAccessMetadata) {
		toSerialize["allowApiAccessMetadata"] = o.AllowApiAccessMetadata
	}
	if !IsNil(o.AllowApiAccessToAccount) {
		toSerialize["allowApiAccessToAccount"] = o.AllowApiAccessToAccount
	}
	if !IsNil(o.AllowApiAccessToAccountMetadata) {
		toSerialize["allowApiAccessToAccountMetadata"] = o.AllowApiAccessToAccountMetadata
	}
	if !IsNil(o.AllowApiSendingOnBehalfOfOthers) {
		toSerialize["allowApiSendingOnBehalfOfOthers"] = o.AllowApiSendingOnBehalfOfOthers
	}
	if !IsNil(o.AllowApiSendingOnBehalfOfOthersMetadata) {
		toSerialize["allowApiSendingOnBehalfOfOthersMetadata"] = o.AllowApiSendingOnBehalfOfOthersMetadata
	}
	if !IsNil(o.AllowApiSequentialSigning) {
		toSerialize["allowApiSequentialSigning"] = o.AllowApiSequentialSigning
	}
	if !IsNil(o.AllowApiSequentialSigningMetadata) {
		toSerialize["allowApiSequentialSigningMetadata"] = o.AllowApiSequentialSigningMetadata
	}
	if !IsNil(o.AllowAutoTagging) {
		toSerialize["allowAutoTagging"] = o.AllowAutoTagging
	}
	if !IsNil(o.AllowAutoTaggingMetadata) {
		toSerialize["allowAutoTaggingMetadata"] = o.AllowAutoTaggingMetadata
	}
	if !IsNil(o.AllowBulkSending) {
		toSerialize["allowBulkSending"] = o.AllowBulkSending
	}
	if !IsNil(o.AllowBulkSendingMetadata) {
		toSerialize["allowBulkSendingMetadata"] = o.AllowBulkSendingMetadata
	}
	if !IsNil(o.AllowDocuSignDesktopClient) {
		toSerialize["allowDocuSignDesktopClient"] = o.AllowDocuSignDesktopClient
	}
	if !IsNil(o.AllowDocuSignDesktopClientMetadata) {
		toSerialize["allowDocuSignDesktopClientMetadata"] = o.AllowDocuSignDesktopClientMetadata
	}
	if !IsNil(o.AllowedAddressBookAccess) {
		toSerialize["allowedAddressBookAccess"] = o.AllowedAddressBookAccess
	}
	if !IsNil(o.AllowedAddressBookAccessMetadata) {
		toSerialize["allowedAddressBookAccessMetadata"] = o.AllowedAddressBookAccessMetadata
	}
	if !IsNil(o.AllowedClickwrapsAccess) {
		toSerialize["allowedClickwrapsAccess"] = o.AllowedClickwrapsAccess
	}
	if !IsNil(o.AllowedClickwrapsAccessMetadata) {
		toSerialize["allowedClickwrapsAccessMetadata"] = o.AllowedClickwrapsAccessMetadata
	}
	if !IsNil(o.AllowedOrchestrationAccess) {
		toSerialize["allowedOrchestrationAccess"] = o.AllowedOrchestrationAccess
	}
	if !IsNil(o.AllowedOrchestrationAccessMetadata) {
		toSerialize["allowedOrchestrationAccessMetadata"] = o.AllowedOrchestrationAccessMetadata
	}
	if !IsNil(o.AllowedTemplateAccess) {
		toSerialize["allowedTemplateAccess"] = o.AllowedTemplateAccess
	}
	if !IsNil(o.AllowedTemplateAccessMetadata) {
		toSerialize["allowedTemplateAccessMetadata"] = o.AllowedTemplateAccessMetadata
	}
	if !IsNil(o.AllowedToBeEnvelopeTransferRecipient) {
		toSerialize["allowedToBeEnvelopeTransferRecipient"] = o.AllowedToBeEnvelopeTransferRecipient
	}
	if !IsNil(o.AllowedToBeEnvelopeTransferRecipientMetadata) {
		toSerialize["allowedToBeEnvelopeTransferRecipientMetadata"] = o.AllowedToBeEnvelopeTransferRecipientMetadata
	}
	if !IsNil(o.AllowEnvelopeSending) {
		toSerialize["allowEnvelopeSending"] = o.AllowEnvelopeSending
	}
	if !IsNil(o.AllowEnvelopeSendingMetadata) {
		toSerialize["allowEnvelopeSendingMetadata"] = o.AllowEnvelopeSendingMetadata
	}
	if !IsNil(o.AllowESealRecipients) {
		toSerialize["allowESealRecipients"] = o.AllowESealRecipients
	}
	if !IsNil(o.AllowESealRecipientsMetadata) {
		toSerialize["allowESealRecipientsMetadata"] = o.AllowESealRecipientsMetadata
	}
	if !IsNil(o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopes) {
		toSerialize["allowPowerFormsAdminToAccessAllPowerFormEnvelopes"] = o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopes
	}
	if !IsNil(o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata) {
		toSerialize["allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata"] = o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata
	}
	if !IsNil(o.AllowSendersToSetRecipientEmailLanguage) {
		toSerialize["allowSendersToSetRecipientEmailLanguage"] = o.AllowSendersToSetRecipientEmailLanguage
	}
	if !IsNil(o.AllowSendersToSetRecipientEmailLanguageMetadata) {
		toSerialize["allowSendersToSetRecipientEmailLanguageMetadata"] = o.AllowSendersToSetRecipientEmailLanguageMetadata
	}
	if !IsNil(o.AllowSignerAttachments) {
		toSerialize["allowSignerAttachments"] = o.AllowSignerAttachments
	}
	if !IsNil(o.AllowSignerAttachmentsMetadata) {
		toSerialize["allowSignerAttachmentsMetadata"] = o.AllowSignerAttachmentsMetadata
	}
	if !IsNil(o.AllowSupplementalDocuments) {
		toSerialize["allowSupplementalDocuments"] = o.AllowSupplementalDocuments
	}
	if !IsNil(o.AllowSupplementalDocumentsMetadata) {
		toSerialize["allowSupplementalDocumentsMetadata"] = o.AllowSupplementalDocumentsMetadata
	}
	if !IsNil(o.AllowTaggingInSendAndCorrect) {
		toSerialize["allowTaggingInSendAndCorrect"] = o.AllowTaggingInSendAndCorrect
	}
	if !IsNil(o.AllowTaggingInSendAndCorrectMetadata) {
		toSerialize["allowTaggingInSendAndCorrectMetadata"] = o.AllowTaggingInSendAndCorrectMetadata
	}
	if !IsNil(o.AllowTransactions) {
		toSerialize["allowTransactions"] = o.AllowTransactions
	}
	if !IsNil(o.AllowTransactionsMetadata) {
		toSerialize["allowTransactionsMetadata"] = o.AllowTransactionsMetadata
	}
	if !IsNil(o.AllowVaulting) {
		toSerialize["allowVaulting"] = o.AllowVaulting
	}
	if !IsNil(o.AllowVaultingMetadata) {
		toSerialize["allowVaultingMetadata"] = o.AllowVaultingMetadata
	}
	if !IsNil(o.AllowWetSigningOverride) {
		toSerialize["allowWetSigningOverride"] = o.AllowWetSigningOverride
	}
	if !IsNil(o.AllowWetSigningOverrideMetadata) {
		toSerialize["allowWetSigningOverrideMetadata"] = o.AllowWetSigningOverrideMetadata
	}
	if !IsNil(o.CanCreateTransaction) {
		toSerialize["canCreateTransaction"] = o.CanCreateTransaction
	}
	if !IsNil(o.CanCreateTransactionMetadata) {
		toSerialize["canCreateTransactionMetadata"] = o.CanCreateTransactionMetadata
	}
	if !IsNil(o.CanCreateWorkspaces) {
		toSerialize["canCreateWorkspaces"] = o.CanCreateWorkspaces
	}
	if !IsNil(o.CanCreateWorkspacesMetadata) {
		toSerialize["canCreateWorkspacesMetadata"] = o.CanCreateWorkspacesMetadata
	}
	if !IsNil(o.CanDeleteDocumentsInTransaction) {
		toSerialize["canDeleteDocumentsInTransaction"] = o.CanDeleteDocumentsInTransaction
	}
	if !IsNil(o.CanDeleteDocumentsInTransactionMetadata) {
		toSerialize["canDeleteDocumentsInTransactionMetadata"] = o.CanDeleteDocumentsInTransactionMetadata
	}
	if !IsNil(o.CanDeleteTransaction) {
		toSerialize["canDeleteTransaction"] = o.CanDeleteTransaction
	}
	if !IsNil(o.CanDeleteTransactionMetadata) {
		toSerialize["canDeleteTransactionMetadata"] = o.CanDeleteTransactionMetadata
	}
	if !IsNil(o.CanSendEnvelopesViaSMS) {
		toSerialize["canSendEnvelopesViaSMS"] = o.CanSendEnvelopesViaSMS
	}
	if !IsNil(o.CanSendEnvelopesViaSMSMetadata) {
		toSerialize["canSendEnvelopesViaSMSMetadata"] = o.CanSendEnvelopesViaSMSMetadata
	}
	if !IsNil(o.DisableDocumentUpload) {
		toSerialize["disableDocumentUpload"] = o.DisableDocumentUpload
	}
	if !IsNil(o.DisableDocumentUploadMetadata) {
		toSerialize["disableDocumentUploadMetadata"] = o.DisableDocumentUploadMetadata
	}
	if !IsNil(o.DisableOtherActions) {
		toSerialize["disableOtherActions"] = o.DisableOtherActions
	}
	if !IsNil(o.DisableOtherActionsMetadata) {
		toSerialize["disableOtherActionsMetadata"] = o.DisableOtherActionsMetadata
	}
	if !IsNil(o.EnableApiRequestLogging) {
		toSerialize["enableApiRequestLogging"] = o.EnableApiRequestLogging
	}
	if !IsNil(o.EnableApiRequestLoggingMetadata) {
		toSerialize["enableApiRequestLoggingMetadata"] = o.EnableApiRequestLoggingMetadata
	}
	if !IsNil(o.EnableKeyTermsSuggestionsByDocumentType) {
		toSerialize["enableKeyTermsSuggestionsByDocumentType"] = o.EnableKeyTermsSuggestionsByDocumentType
	}
	if !IsNil(o.EnableKeyTermsSuggestionsByDocumentTypeMetadata) {
		toSerialize["enableKeyTermsSuggestionsByDocumentTypeMetadata"] = o.EnableKeyTermsSuggestionsByDocumentTypeMetadata
	}
	if !IsNil(o.EnableRecipientViewingNotifications) {
		toSerialize["enableRecipientViewingNotifications"] = o.EnableRecipientViewingNotifications
	}
	if !IsNil(o.EnableRecipientViewingNotificationsMetadata) {
		toSerialize["enableRecipientViewingNotificationsMetadata"] = o.EnableRecipientViewingNotificationsMetadata
	}
	if !IsNil(o.EnableSequentialSigningInterface) {
		toSerialize["enableSequentialSigningInterface"] = o.EnableSequentialSigningInterface
	}
	if !IsNil(o.EnableSequentialSigningInterfaceMetadata) {
		toSerialize["enableSequentialSigningInterfaceMetadata"] = o.EnableSequentialSigningInterfaceMetadata
	}
	if !IsNil(o.EnableTransactionPointIntegration) {
		toSerialize["enableTransactionPointIntegration"] = o.EnableTransactionPointIntegration
	}
	if !IsNil(o.EnableTransactionPointIntegrationMetadata) {
		toSerialize["enableTransactionPointIntegrationMetadata"] = o.EnableTransactionPointIntegrationMetadata
	}
	if !IsNil(o.PowerFormRole) {
		toSerialize["powerFormRole"] = o.PowerFormRole
	}
	if !IsNil(o.PowerFormRoleMetadata) {
		toSerialize["powerFormRoleMetadata"] = o.PowerFormRoleMetadata
	}
	if !IsNil(o.ReceiveCompletedSelfSignedDocumentsAsEmailLinks) {
		toSerialize["receiveCompletedSelfSignedDocumentsAsEmailLinks"] = o.ReceiveCompletedSelfSignedDocumentsAsEmailLinks
	}
	if !IsNil(o.ReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata) {
		toSerialize["receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata"] = o.ReceiveCompletedSelfSignedDocumentsAsEmailLinksMetadata
	}
	if !IsNil(o.SigningUiVersionMetadata) {
		toSerialize["signingUiVersionMetadata"] = o.SigningUiVersionMetadata
	}
	if !IsNil(o.SupplementalDocumentsMustAccept) {
		toSerialize["supplementalDocumentsMustAccept"] = o.SupplementalDocumentsMustAccept
	}
	if !IsNil(o.SupplementalDocumentsMustAcceptMetadata) {
		toSerialize["supplementalDocumentsMustAcceptMetadata"] = o.SupplementalDocumentsMustAcceptMetadata
	}
	if !IsNil(o.SupplementalDocumentsMustRead) {
		toSerialize["supplementalDocumentsMustRead"] = o.SupplementalDocumentsMustRead
	}
	if !IsNil(o.SupplementalDocumentsMustReadMetadata) {
		toSerialize["supplementalDocumentsMustReadMetadata"] = o.SupplementalDocumentsMustReadMetadata
	}
	if !IsNil(o.SupplementalDocumentsMustView) {
		toSerialize["supplementalDocumentsMustView"] = o.SupplementalDocumentsMustView
	}
	if !IsNil(o.SupplementalDocumentsMustViewMetadata) {
		toSerialize["supplementalDocumentsMustViewMetadata"] = o.SupplementalDocumentsMustViewMetadata
	}
	if !IsNil(o.UseNewDocuSignExperienceInterface) {
		toSerialize["useNewDocuSignExperienceInterface"] = o.UseNewDocuSignExperienceInterface
	}
	if !IsNil(o.UseNewDocuSignExperienceInterfaceMetadata) {
		toSerialize["useNewDocuSignExperienceInterfaceMetadata"] = o.UseNewDocuSignExperienceInterfaceMetadata
	}
	if !IsNil(o.UseNewSendingInterface) {
		toSerialize["useNewSendingInterface"] = o.UseNewSendingInterface
	}
	if !IsNil(o.UseNewSendingInterfaceMetadata) {
		toSerialize["useNewSendingInterfaceMetadata"] = o.UseNewSendingInterfaceMetadata
	}
	if !IsNil(o.VaultingMode) {
		toSerialize["vaultingMode"] = o.VaultingMode
	}
	if !IsNil(o.VaultingModeMetadata) {
		toSerialize["vaultingModeMetadata"] = o.VaultingModeMetadata
	}
	if !IsNil(o.WebForms) {
		toSerialize["webForms"] = o.WebForms
	}
	if !IsNil(o.WebFormsMetadata) {
		toSerialize["webFormsMetadata"] = o.WebFormsMetadata
	}
	return toSerialize, nil
}

type NullableAccountRoleSettings struct {
	value *AccountRoleSettings
	isSet bool
}

func (v NullableAccountRoleSettings) Get() *AccountRoleSettings {
	return v.value
}

func (v *NullableAccountRoleSettings) Set(val *AccountRoleSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountRoleSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountRoleSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountRoleSettings(val *AccountRoleSettings) *NullableAccountRoleSettings {
	return &NullableAccountRoleSettings{value: val, isSet: true}
}

func (v NullableAccountRoleSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountRoleSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


