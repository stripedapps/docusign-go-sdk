/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TemplateSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateSummary{}

// TemplateSummary Summary of a template request.
type TemplateSummary struct {
	// Reserved for DocuSign.
	Applied *string `json:"applied,omitempty"`
	// Specifies the document ID number that the tab is placed on. This must refer to an existing document's ID attribute.
	DocumentId *string `json:"documentId,omitempty"`
	// The name of the document.
	DocumentName *string `json:"documentName,omitempty"`
	ErrorDetails *ErrorDetails `json:"errorDetails,omitempty"`
	// The name of the template.
	Name *string `json:"name,omitempty"`
	// The unique identifier of the template. If this is not provided, DocuSign will generate a value. 
	TemplateId *string `json:"templateId,omitempty"`
	TemplateMatch *TemplateMatch `json:"templateMatch,omitempty"`
	// A URI containing the user ID.
	Uri *string `json:"uri,omitempty"`
}

// NewTemplateSummary instantiates a new TemplateSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateSummary() *TemplateSummary {
	this := TemplateSummary{}
	return &this
}

// NewTemplateSummaryWithDefaults instantiates a new TemplateSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateSummaryWithDefaults() *TemplateSummary {
	this := TemplateSummary{}
	return &this
}

// GetApplied returns the Applied field value if set, zero value otherwise.
func (o *TemplateSummary) GetApplied() string {
	if o == nil || IsNil(o.Applied) {
		var ret string
		return ret
	}
	return *o.Applied
}

// GetAppliedOk returns a tuple with the Applied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummary) GetAppliedOk() (*string, bool) {
	if o == nil || IsNil(o.Applied) {
		return nil, false
	}
	return o.Applied, true
}

// HasApplied returns a boolean if a field has been set.
func (o *TemplateSummary) HasApplied() bool {
	if o != nil && !IsNil(o.Applied) {
		return true
	}

	return false
}

// SetApplied gets a reference to the given string and assigns it to the Applied field.
func (o *TemplateSummary) SetApplied(v string) {
	o.Applied = &v
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *TemplateSummary) GetDocumentId() string {
	if o == nil || IsNil(o.DocumentId) {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummary) GetDocumentIdOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentId) {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *TemplateSummary) HasDocumentId() bool {
	if o != nil && !IsNil(o.DocumentId) {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *TemplateSummary) SetDocumentId(v string) {
	o.DocumentId = &v
}

// GetDocumentName returns the DocumentName field value if set, zero value otherwise.
func (o *TemplateSummary) GetDocumentName() string {
	if o == nil || IsNil(o.DocumentName) {
		var ret string
		return ret
	}
	return *o.DocumentName
}

// GetDocumentNameOk returns a tuple with the DocumentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummary) GetDocumentNameOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentName) {
		return nil, false
	}
	return o.DocumentName, true
}

// HasDocumentName returns a boolean if a field has been set.
func (o *TemplateSummary) HasDocumentName() bool {
	if o != nil && !IsNil(o.DocumentName) {
		return true
	}

	return false
}

// SetDocumentName gets a reference to the given string and assigns it to the DocumentName field.
func (o *TemplateSummary) SetDocumentName(v string) {
	o.DocumentName = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *TemplateSummary) GetErrorDetails() ErrorDetails {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret ErrorDetails
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummary) GetErrorDetailsOk() (*ErrorDetails, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *TemplateSummary) HasErrorDetails() bool {
	if o != nil && !IsNil(o.ErrorDetails) {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given ErrorDetails and assigns it to the ErrorDetails field.
func (o *TemplateSummary) SetErrorDetails(v ErrorDetails) {
	o.ErrorDetails = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TemplateSummary) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummary) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TemplateSummary) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TemplateSummary) SetName(v string) {
	o.Name = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *TemplateSummary) GetTemplateId() string {
	if o == nil || IsNil(o.TemplateId) {
		var ret string
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummary) GetTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *TemplateSummary) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given string and assigns it to the TemplateId field.
func (o *TemplateSummary) SetTemplateId(v string) {
	o.TemplateId = &v
}

// GetTemplateMatch returns the TemplateMatch field value if set, zero value otherwise.
func (o *TemplateSummary) GetTemplateMatch() TemplateMatch {
	if o == nil || IsNil(o.TemplateMatch) {
		var ret TemplateMatch
		return ret
	}
	return *o.TemplateMatch
}

// GetTemplateMatchOk returns a tuple with the TemplateMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummary) GetTemplateMatchOk() (*TemplateMatch, bool) {
	if o == nil || IsNil(o.TemplateMatch) {
		return nil, false
	}
	return o.TemplateMatch, true
}

// HasTemplateMatch returns a boolean if a field has been set.
func (o *TemplateSummary) HasTemplateMatch() bool {
	if o != nil && !IsNil(o.TemplateMatch) {
		return true
	}

	return false
}

// SetTemplateMatch gets a reference to the given TemplateMatch and assigns it to the TemplateMatch field.
func (o *TemplateSummary) SetTemplateMatch(v TemplateMatch) {
	o.TemplateMatch = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *TemplateSummary) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummary) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *TemplateSummary) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *TemplateSummary) SetUri(v string) {
	o.Uri = &v
}

func (o TemplateSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Applied) {
		toSerialize["applied"] = o.Applied
	}
	if !IsNil(o.DocumentId) {
		toSerialize["documentId"] = o.DocumentId
	}
	if !IsNil(o.DocumentName) {
		toSerialize["documentName"] = o.DocumentName
	}
	if !IsNil(o.ErrorDetails) {
		toSerialize["errorDetails"] = o.ErrorDetails
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TemplateId) {
		toSerialize["templateId"] = o.TemplateId
	}
	if !IsNil(o.TemplateMatch) {
		toSerialize["templateMatch"] = o.TemplateMatch
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	return toSerialize, nil
}

type NullableTemplateSummary struct {
	value *TemplateSummary
	isSet bool
}

func (v NullableTemplateSummary) Get() *TemplateSummary {
	return v.value
}

func (v *NullableTemplateSummary) Set(val *TemplateSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateSummary(val *TemplateSummary) *NullableTemplateSummary {
	return &NullableTemplateSummary{value: val, isSet: true}
}

func (v NullableTemplateSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


