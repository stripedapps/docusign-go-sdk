/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserSettingsInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSettingsInformation{}

// UserSettingsInformation Properties that configure the settings for a user. Some elements of this object have a `metadata` property, which includes the following: - `rights`: The calling users permissions to edit this setting (can be `editable` or `read_only`) - `uiHint`: Internally used to build UIs (can be `available` or `hidden`) - `options`: The values supported for this setting (not all settings have this element)
type UserSettingsInformation struct {
	AccountManagementGranular *UserAccountManagementGranularInformation `json:"accountManagementGranular,omitempty"`
	// Reserved for DocuSign.
	AdminOnly *string `json:"adminOnly,omitempty"`
	AdminOnlyMetadata *SettingsMetadata `json:"adminOnlyMetadata,omitempty"`
	// When **true,** the API returns suggested tabs for documents for this user.
	AllowAutoTagging *string `json:"allowAutoTagging,omitempty"`
	// 
	AllowedOrchestrationAccess *string `json:"allowedOrchestrationAccess,omitempty"`
	AllowedOrchestrationAccessMetadata *SettingsMetadata `json:"allowedOrchestrationAccessMetadata,omitempty"`
	// When **true,** this user can participate in envelope transfers on the account.
	AllowEnvelopeTransferTo *string `json:"allowEnvelopeTransferTo,omitempty"`
	AllowEnvelopeTransferToMetadata *SettingsMetadata `json:"allowEnvelopeTransferToMetadata,omitempty"`
	// When **true,** this user can create [electronic seal recipients][eseal].  [eseal]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#seal-recipient
	AllowEsealRecipients *string `json:"allowEsealRecipients,omitempty"`
	AllowEsealRecipientsMetadata *SettingsMetadata `json:"allowEsealRecipientsMetadata,omitempty"`
	// When **true** and this user is an administrator, they can view all of the envelopes generated from PowerForms. The default value is **false.**
	AllowPowerFormsAdminToAccessAllPowerFormEnvelope *string `json:"allowPowerFormsAdminToAccessAllPowerFormEnvelope,omitempty"`
	AllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata *SettingsMetadata `json:"allowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata,omitempty"`
	// When **true,** this user can set the language used in the standard email format for a recipient when creating an envelope.
	AllowRecipientLanguageSelection *string `json:"allowRecipientLanguageSelection,omitempty"`
	AllowRecipientLanguageSelectionMetadata *SettingsMetadata `json:"allowRecipientLanguageSelectionMetadata,omitempty"`
	// When **true,** this user can send envelopes \"on behalf of\" other users through the API.
	AllowSendOnBehalfOf *string `json:"allowSendOnBehalfOf,omitempty"`
	AllowSendOnBehalfOfMetadata *SettingsMetadata `json:"allowSendOnBehalfOfMetadata,omitempty"`
	// When **true,** this user can include supplemental documents.
	AllowSupplementalDocuments *string `json:"allowSupplementalDocuments,omitempty"`
	AllowSupplementalDocumentsMetadata *SettingsMetadata `json:"allowSupplementalDocumentsMetadata,omitempty"`
	// 
	AllowTransactions *string `json:"allowTransactions,omitempty"`
	AllowTransactionsMetadata *SettingsMetadata `json:"allowTransactionsMetadata,omitempty"`
	// Reserved for DocuSign. 
	AnchorTagVersionedPlacementEnabled *string `json:"anchorTagVersionedPlacementEnabled,omitempty"`
	// When **true,** indicates that this user can send envelope-specific API requests on the account.
	ApiAccountWideAccess *string `json:"apiAccountWideAccess,omitempty"`
	ApiAccountWideAccessMetadata *SettingsMetadata `json:"apiAccountWideAccessMetadata,omitempty"`
	// When **true,** this user can export authoritative copy for the account.
	ApiCanExportAC *string `json:"apiCanExportAC,omitempty"`
	ApiCanExportACMetadata *SettingsMetadata `json:"apiCanExportACMetadata,omitempty"`
	// When **true,** this user can use the bulk send feature for the account.
	BulkSend *string `json:"bulkSend,omitempty"`
	BulkSendMetadata *SettingsMetadata `json:"bulkSendMetadata,omitempty"`
	// Reserved for DocuSign.
	CanChargeAccount *string `json:"canChargeAccount,omitempty"`
	CanChargeAccountMetadata *SettingsMetadata `json:"canChargeAccountMetadata,omitempty"`
	// 
	CanCreateTransaction *string `json:"canCreateTransaction,omitempty"`
	CanCreateTransactionMetadata *SettingsMetadata `json:"canCreateTransactionMetadata,omitempty"`
	// 
	CanDeleteDocumentsInTransaction *string `json:"canDeleteDocumentsInTransaction,omitempty"`
	CanDeleteDocumentsInTransactionMetadata *SettingsMetadata `json:"canDeleteDocumentsInTransactionMetadata,omitempty"`
	// 
	CanDeleteTransaction *string `json:"canDeleteTransaction,omitempty"`
	CanDeleteTransactionMetadata *SettingsMetadata `json:"canDeleteTransactionMetadata,omitempty"`
	// When true, this user can edit the shared address book for the account.
	CanEditSharedAddressbook *string `json:"canEditSharedAddressbook,omitempty"`
	CanEditSharedAddressbookMetadata *SettingsMetadata `json:"canEditSharedAddressbookMetadata,omitempty"`
	// Reserved for DocuSign.
	CanLockEnvelopes *string `json:"canLockEnvelopes,omitempty"`
	CanLockEnvelopesMetadata *SettingsMetadata `json:"canLockEnvelopesMetadata,omitempty"`
	// When **true,** this user is an administrator for the account.
	CanManageAccount *string `json:"canManageAccount,omitempty"`
	CanManageAccountMetadata *SettingsMetadata `json:"canManageAccountMetadata,omitempty"`
	// Reserved for DocuSign.
	CanManageDistributor *string `json:"canManageDistributor,omitempty"`
	CanManageDistributorMetadata *SettingsMetadata `json:"canManageDistributorMetadata,omitempty"`
	// When **true,** this user can manage templates for the account.
	CanManageTemplates *string `json:"canManageTemplates,omitempty"`
	CanManageTemplatesMetadata *SettingsMetadata `json:"canManageTemplatesMetadata,omitempty"`
	// When **true,** this user can send API requests on the account.
	CanSendAPIRequests *string `json:"canSendAPIRequests,omitempty"`
	CanSendAPIRequestsMetadata *SettingsMetadata `json:"canSendAPIRequestsMetadata,omitempty"`
	// When **true,** this user can send envelopes on the account.
	CanSendEnvelope *string `json:"canSendEnvelope,omitempty"`
	CanSendEnvelopeMetadata *SettingsMetadata `json:"canSendEnvelopeMetadata,omitempty"`
	// 
	CanSendEnvelopesViaSMS *string `json:"canSendEnvelopesViaSMS,omitempty"`
	CanSendEnvelopesViaSMSMetadata *SettingsMetadata `json:"canSendEnvelopesViaSMSMetadata,omitempty"`
	// When **true,** this user can sign envelopes.
	CanSignEnvelope *string `json:"canSignEnvelope,omitempty"`
	CanSignEnvelopeMetadata *SettingsMetadata `json:"canSignEnvelopeMetadata,omitempty"`
	// When **true,** this user can use a scratchpad to edit information.
	CanUseScratchpad *string `json:"canUseScratchpad,omitempty"`
	CanUseScratchpadMetadata *SettingsMetadata `json:"canUseScratchpadMetadata,omitempty"`
	// Reserved for DocuSign.
	CanUseSmartContracts *string `json:"canUseSmartContracts,omitempty"`
	CanUseSmartContractsMetadata *SettingsMetadata `json:"canUseSmartContractsMetadata,omitempty"`
	// When **true,** this user is prohibited from uploading documents during sending.
	DisableDocumentUpload *string `json:"disableDocumentUpload,omitempty"`
	DisableDocumentUploadMetadata *SettingsMetadata `json:"disableDocumentUploadMetadata,omitempty"`
	// When **true,** this user can access the **Other Actions** menu.
	DisableOtherActions *string `json:"disableOtherActions,omitempty"`
	DisableOtherActionsMetadata *SettingsMetadata `json:"disableOtherActionsMetadata,omitempty"`
	// Reserved for DocuSign.
	EnableDSPro *string `json:"enableDSPro,omitempty"`
	EnableDSProMetadata *SettingsMetadata `json:"enableDSProMetadata,omitempty"`
	// 
	EnableKeyTermsSuggestionsByDocumentType *string `json:"enableKeyTermsSuggestionsByDocumentType,omitempty"`
	EnableKeyTermsSuggestionsByDocumentTypeMetadata *SettingsMetadata `json:"enableKeyTermsSuggestionsByDocumentTypeMetadata,omitempty"`
	// When **true,** the account can define the routing order of recipients for envelopes sent by using the eSignature API.  **Note:** Only SysAdmin users can change this setting.
	EnableSequentialSigningAPI *string `json:"enableSequentialSigningAPI,omitempty"`
	EnableSequentialSigningAPIMetadata *SettingsMetadata `json:"enableSequentialSigningAPIMetadata,omitempty"`
	// When **true,** the account can define the routing order of recipients for envelopes sent by using the DocuSign application.  **Note:** Only SysAdmin users can change this setting. 
	EnableSequentialSigningUI *string `json:"enableSequentialSigningUI,omitempty"`
	EnableSequentialSigningUIMetadata *SettingsMetadata `json:"enableSequentialSigningUIMetadata,omitempty"`
	// When **true,** this user can use the signing attachments feature.
	EnableSignerAttachments *string `json:"enableSignerAttachments,omitempty"`
	EnableSignerAttachmentsMetadata *SettingsMetadata `json:"enableSignerAttachmentsMetadata,omitempty"`
	// When **true,** a user can override the default default account setting for the Sign on Paper option, which specifies whether signers can sign documents on paper as an option to signing electronically.  **Note:** Only Admin users can change this setting.
	EnableSignOnPaperOverride *string `json:"enableSignOnPaperOverride,omitempty"`
	EnableSignOnPaperOverrideMetadata *SettingsMetadata `json:"enableSignOnPaperOverrideMetadata,omitempty"`
	// Reserved for DocuSign.
	EnableTransactionPoint *string `json:"enableTransactionPoint,omitempty"`
	EnableTransactionPointMetadata *SettingsMetadata `json:"enableTransactionPointMetadata,omitempty"`
	// When **true,** Vaulting is enabled for the account.
	EnableVaulting *string `json:"enableVaulting,omitempty"`
	EnableVaultingMetadata *SettingsMetadata `json:"enableVaultingMetadata,omitempty"`
	// When **false,** this user can apply tabs to documents during the sending experience.
	ExpressSendOnly *string `json:"expressSendOnly,omitempty"`
	// The user's locale code. Valid values are: - `zh_CN` - `zh_TW` - `nl` - `en` - `fr` - `de` - `it` - `ja` - `ko` - `pt` - `pt_BR` - `ru` - `es`
	Locale *string `json:"locale,omitempty"`
	LocaleMetadata *SettingsMetadata `json:"localeMetadata,omitempty"`
	LocalePolicy *LocalePolicy `json:"localePolicy,omitempty"`
	// When **true,** this user can create and manage [Clickwraps](/docs/click-api/).
	ManageClickwrapsMode *string `json:"manageClickwrapsMode,omitempty"`
	ManageClickwrapsModeMetadata *SettingsMetadata `json:"manageClickwrapsModeMetadata,omitempty"`
	// The user ID (GUID) of the user who last modified this user record. This property is read-only.
	ModifiedBy *string `json:"modifiedBy,omitempty"`
	ModifiedByMetadata *SettingsMetadata `json:"modifiedByMetadata,omitempty"`
	// The date on which this user record was last modified.
	ModifiedDate *string `json:"modifiedDate,omitempty"`
	ModifiedDateMetadata *SettingsMetadata `json:"modifiedDateMetadata,omitempty"`
	// Note referencing the page that modified this user record.
	ModifiedPage *string `json:"modifiedPage,omitempty"`
	ModifiedPageMetadata *SettingsMetadata `json:"modifiedPageMetadata,omitempty"`
	// Reserved for DocuSign.
	NewSendUI *string `json:"newSendUI,omitempty"`
	NewSendUIMetadata *SettingsMetadata `json:"newSendUIMetadata,omitempty"`
	// Indicates the Power Form mode setting for the user: - `none` - `admin` - `user`
	PowerFormMode *string `json:"powerFormMode,omitempty"`
	PowerFormModeMetadata *SettingsMetadata `json:"powerFormModeMetadata,omitempty"`
	// When **true,** this user receives notifications when envelopes are viewed.
	RecipientViewedNotification *string `json:"recipientViewedNotification,omitempty"`
	RecipientViewedNotificationMetadata *SettingsMetadata `json:"recipientViewedNotificationMetadata,omitempty"`
	// Information about the seals associated with this user.
	SealIdentifiers []SealIdentifier `json:"sealIdentifiers,omitempty"`
	// Sets how self-signed documents are presented to the email recipients. Valid values are:  - `include_pdf`: A PDF of the completed document is attached to the email. - `include_link`: A secure link to the self-signed documents is included    in the email.  **Note:** Only Admin users can change this setting. 
	SelfSignedRecipientEmailDocument *string `json:"selfSignedRecipientEmailDocument,omitempty"`
	SelfSignedRecipientEmailDocumentMetadata *SettingsMetadata `json:"selfSignedRecipientEmailDocumentMetadata,omitempty"`
	SenderEmailNotifications *SenderEmailNotifications `json:"senderEmailNotifications,omitempty"`
	SignerEmailNotifications *SignerEmailNotifications `json:"signerEmailNotifications,omitempty"`
	// When **true,** this user gets supplemental documents when downloading documents.
	SupplementalDocumentIncludeInDownload *string `json:"supplementalDocumentIncludeInDownload,omitempty"`
	// When **true,** this user must accept supplemental documents.
	SupplementalDocumentsMustAccept *string `json:"supplementalDocumentsMustAccept,omitempty"`
	SupplementalDocumentsMustAcceptMetadata *SettingsMetadata `json:"supplementalDocumentsMustAcceptMetadata,omitempty"`
	// When **true,** this user must both view and accept supplemental documents.
	SupplementalDocumentsMustRead *string `json:"supplementalDocumentsMustRead,omitempty"`
	SupplementalDocumentsMustReadMetadata *SettingsMetadata `json:"supplementalDocumentsMustReadMetadata,omitempty"`
	// When **true,** this user must view supplemental documents.
	SupplementalDocumentsMustView *string `json:"supplementalDocumentsMustView,omitempty"`
	SupplementalDocumentsMustViewMetadata *SettingsMetadata `json:"supplementalDocumentsMustViewMetadata,omitempty"`
	// When **true,** a new template is created each time the user sends an envelope.
	TemplateActiveCreation *string `json:"templateActiveCreation,omitempty"`
	TemplateActiveCreationMetadata *SettingsMetadata `json:"templateActiveCreationMetadata,omitempty"`
	// When **true,** the system notifies this user before applying a matching template.
	TemplateApplyNotify *string `json:"templateApplyNotify,omitempty"`
	TemplateApplyNotifyMetadata *SettingsMetadata `json:"templateApplyNotifyMetadata,omitempty"`
	// When **true,** the system automatically applies a matching template to a document if only one template matches. If there are multiple matches, it displays a list of matches to select from.
	TemplateAutoMatching *string `json:"templateAutoMatching,omitempty"`
	TemplateAutoMatchingMetadata *SettingsMetadata `json:"templateAutoMatchingMetadata,omitempty"`
	// Percentage used when matching templates.
	TemplateMatchingSensitivity *string `json:"templateMatchingSensitivity,omitempty"`
	TemplateMatchingSensitivityMetadata *SettingsMetadata `json:"templateMatchingSensitivityMetadata,omitempty"`
	// When **true,** users see template matching functionality.
	TemplatePageLevelMatching *string `json:"templatePageLevelMatching,omitempty"`
	TemplatePageLevelMatchingMetadata *SettingsMetadata `json:"templatePageLevelMatchingMetadata,omitempty"`
	// When true, daylight savings time is in effect for this user's time zone.
	TimezoneDST *string `json:"timezoneDST,omitempty"`
	TimezoneDSTMetadata *SettingsMetadata `json:"timezoneDSTMetadata,omitempty"`
	// The custom DateTime format setting for this user.
	TimezoneMask *string `json:"timezoneMask,omitempty"`
	TimezoneMaskMetadata *SettingsMetadata `json:"timezoneMaskMetadata,omitempty"`
	// The timezone offset for the user. Valid values: - `tz_01_afghanistan` - `tz_02_alaskan` - `tz_03_arab` - `tz_04_arabian` - `tz_05_arabic` - `tz_06_argentina` - `tz_07_atlantic` - `tz_08_aus_central` - `tz_09_aus_eastern` - `tz_10_azerbaijan` - `tz_11_azores` - `tz_12_bangladesh` - `tz_13_canada_central` - `tz_14_cape_verde` - `tz_15_caucasus` - `tz_16_central_australia` - `tz_17_central_america` - `tz_18_central_asia` - `tz_19_central_brazilian` - `tz_20_central_europe` - `tz_21_central_european` - `tz_22_central_pacific` - `tz_23_central` - `tz_24_central_mexico` - `tz_25_china` - `tz_26_dateline` - `tz_27_east_africa` - `tz_28_east_australia` - `tz_29_east_europe` - `tz_30_east_south_america` - `tz_31_eastern` - `tz_32_egypt` - `tz_33_ekaterinburg` - `tz_34_fiji` - `tz_35_fli` - `tz_36_georgian` - `tz_37_gmt` - `tz_38_greenland` - `tz_39_greenwich` - `tz_40_gtb` - `tz_41_hawaiian` - `tz_42_india` - `tz_43_iran` - `tz_44_israel` - `tz_45_jordan` - `tz_46_kaliningrad` - `tz_47_kamchatka` - `tz_48_korea` - `tz_49_magadan` - `tz_50_mauritius` - `tz_51_mid_atlantic` - `tz_52_middle_east` - `tz_53_montevideo` - `tz_54_morocco` - `tz_55_mountain` - `tz_56_mountain_mexico` - `tz_57_myanmar` - `tz_58_north_central_asia` - `tz_59_namibia` - `tz_60_nepal` - `tz_61_new_zealand` - `tz_62_new_foundland` - `tz_63_north_asia_east` - `tz_64_north_asia` - `tz_65_pacific_sa` - `tz_66_pacific` - `tz_67_pacific_mexico` - `tz_68_pakistan` - `tz_69_paraguay` - `tz_70_romance` - `tz_71_russian` - `tz_72_sa_eastern` - `tz_73_sa_pacific` - `tz_74_sa_western` - `tz_75_samoa` - `tz_76_se_asia` - `tz_77_singapore` - `tz_78_south_africa` - `tz_79_sriLanka` - `tz_80_syria` - `tz_81_taipei` - `tz_82_tasmania` - `tz_83_tokyo` - `tz_84_tonga` - `tz_85_turkey` - `tz_86_ulaanbaatar` - `tz_87_us_eastern` - `tz_88_us_mountain` - `tz_89_venezuela` - `tz_90_vladivostok` - `tz_91_west_australia` - `tz_92_west_central_africa` - `tz_93_west_europe` - `tz_94_west_asia` - `tz_95_west_pacific` - `tz_96_yakutsk`
	TimezoneOffset *string `json:"timezoneOffset,omitempty"`
	TimezoneOffsetMetadata *SettingsMetadata `json:"timezoneOffsetMetadata,omitempty"`
	// Reserved for DocuSign.
	TimezoneSendingPref *string `json:"timezoneSendingPref,omitempty"`
	TimezoneSendingPrefMetadata *SettingsMetadata `json:"timezoneSendingPrefMetadata,omitempty"`
	// Reserved for DocuSign.
	TimezoneSigningPref *string `json:"timezoneSigningPref,omitempty"`
	TimezoneSigningPrefMetadata *SettingsMetadata `json:"timezoneSigningPrefMetadata,omitempty"`
	// Reserved for DocuSign.
	TransactionPointSiteNameURL *string `json:"transactionPointSiteNameURL,omitempty"`
	TransactionPointSiteNameURLMetadata *SettingsMetadata `json:"transactionPointSiteNameURLMetadata,omitempty"`
	// Reserved for DocuSign.
	TransactionPointUserName *string `json:"transactionPointUserName,omitempty"`
	TransactionPointUserNameMetadata *SettingsMetadata `json:"transactionPointUserNameMetadata,omitempty"`
	// Indicates the specified Vaulting mode: - `none` - `estored` - `electronic_original`
	VaultingMode *string `json:"vaultingMode,omitempty"`
	VaultingModeMetadata *SettingsMetadata `json:"vaultingModeMetadata,omitempty"`
	// 
	WebForms *string `json:"webForms,omitempty"`
	WebFormsMetadata *SettingsMetadata `json:"webFormsMetadata,omitempty"`
}

// NewUserSettingsInformation instantiates a new UserSettingsInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSettingsInformation() *UserSettingsInformation {
	this := UserSettingsInformation{}
	return &this
}

// NewUserSettingsInformationWithDefaults instantiates a new UserSettingsInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSettingsInformationWithDefaults() *UserSettingsInformation {
	this := UserSettingsInformation{}
	return &this
}

// GetAccountManagementGranular returns the AccountManagementGranular field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAccountManagementGranular() UserAccountManagementGranularInformation {
	if o == nil || IsNil(o.AccountManagementGranular) {
		var ret UserAccountManagementGranularInformation
		return ret
	}
	return *o.AccountManagementGranular
}

// GetAccountManagementGranularOk returns a tuple with the AccountManagementGranular field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAccountManagementGranularOk() (*UserAccountManagementGranularInformation, bool) {
	if o == nil || IsNil(o.AccountManagementGranular) {
		return nil, false
	}
	return o.AccountManagementGranular, true
}

// HasAccountManagementGranular returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAccountManagementGranular() bool {
	if o != nil && !IsNil(o.AccountManagementGranular) {
		return true
	}

	return false
}

// SetAccountManagementGranular gets a reference to the given UserAccountManagementGranularInformation and assigns it to the AccountManagementGranular field.
func (o *UserSettingsInformation) SetAccountManagementGranular(v UserAccountManagementGranularInformation) {
	o.AccountManagementGranular = &v
}

// GetAdminOnly returns the AdminOnly field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAdminOnly() string {
	if o == nil || IsNil(o.AdminOnly) {
		var ret string
		return ret
	}
	return *o.AdminOnly
}

// GetAdminOnlyOk returns a tuple with the AdminOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAdminOnlyOk() (*string, bool) {
	if o == nil || IsNil(o.AdminOnly) {
		return nil, false
	}
	return o.AdminOnly, true
}

// HasAdminOnly returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAdminOnly() bool {
	if o != nil && !IsNil(o.AdminOnly) {
		return true
	}

	return false
}

// SetAdminOnly gets a reference to the given string and assigns it to the AdminOnly field.
func (o *UserSettingsInformation) SetAdminOnly(v string) {
	o.AdminOnly = &v
}

// GetAdminOnlyMetadata returns the AdminOnlyMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAdminOnlyMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AdminOnlyMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AdminOnlyMetadata
}

// GetAdminOnlyMetadataOk returns a tuple with the AdminOnlyMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAdminOnlyMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AdminOnlyMetadata) {
		return nil, false
	}
	return o.AdminOnlyMetadata, true
}

// HasAdminOnlyMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAdminOnlyMetadata() bool {
	if o != nil && !IsNil(o.AdminOnlyMetadata) {
		return true
	}

	return false
}

// SetAdminOnlyMetadata gets a reference to the given SettingsMetadata and assigns it to the AdminOnlyMetadata field.
func (o *UserSettingsInformation) SetAdminOnlyMetadata(v SettingsMetadata) {
	o.AdminOnlyMetadata = &v
}

// GetAllowAutoTagging returns the AllowAutoTagging field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowAutoTagging() string {
	if o == nil || IsNil(o.AllowAutoTagging) {
		var ret string
		return ret
	}
	return *o.AllowAutoTagging
}

// GetAllowAutoTaggingOk returns a tuple with the AllowAutoTagging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowAutoTaggingOk() (*string, bool) {
	if o == nil || IsNil(o.AllowAutoTagging) {
		return nil, false
	}
	return o.AllowAutoTagging, true
}

// HasAllowAutoTagging returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowAutoTagging() bool {
	if o != nil && !IsNil(o.AllowAutoTagging) {
		return true
	}

	return false
}

// SetAllowAutoTagging gets a reference to the given string and assigns it to the AllowAutoTagging field.
func (o *UserSettingsInformation) SetAllowAutoTagging(v string) {
	o.AllowAutoTagging = &v
}

// GetAllowedOrchestrationAccess returns the AllowedOrchestrationAccess field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowedOrchestrationAccess() string {
	if o == nil || IsNil(o.AllowedOrchestrationAccess) {
		var ret string
		return ret
	}
	return *o.AllowedOrchestrationAccess
}

// GetAllowedOrchestrationAccessOk returns a tuple with the AllowedOrchestrationAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowedOrchestrationAccessOk() (*string, bool) {
	if o == nil || IsNil(o.AllowedOrchestrationAccess) {
		return nil, false
	}
	return o.AllowedOrchestrationAccess, true
}

// HasAllowedOrchestrationAccess returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowedOrchestrationAccess() bool {
	if o != nil && !IsNil(o.AllowedOrchestrationAccess) {
		return true
	}

	return false
}

// SetAllowedOrchestrationAccess gets a reference to the given string and assigns it to the AllowedOrchestrationAccess field.
func (o *UserSettingsInformation) SetAllowedOrchestrationAccess(v string) {
	o.AllowedOrchestrationAccess = &v
}

// GetAllowedOrchestrationAccessMetadata returns the AllowedOrchestrationAccessMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowedOrchestrationAccessMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowedOrchestrationAccessMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowedOrchestrationAccessMetadata
}

// GetAllowedOrchestrationAccessMetadataOk returns a tuple with the AllowedOrchestrationAccessMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowedOrchestrationAccessMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowedOrchestrationAccessMetadata) {
		return nil, false
	}
	return o.AllowedOrchestrationAccessMetadata, true
}

// HasAllowedOrchestrationAccessMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowedOrchestrationAccessMetadata() bool {
	if o != nil && !IsNil(o.AllowedOrchestrationAccessMetadata) {
		return true
	}

	return false
}

// SetAllowedOrchestrationAccessMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowedOrchestrationAccessMetadata field.
func (o *UserSettingsInformation) SetAllowedOrchestrationAccessMetadata(v SettingsMetadata) {
	o.AllowedOrchestrationAccessMetadata = &v
}

// GetAllowEnvelopeTransferTo returns the AllowEnvelopeTransferTo field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowEnvelopeTransferTo() string {
	if o == nil || IsNil(o.AllowEnvelopeTransferTo) {
		var ret string
		return ret
	}
	return *o.AllowEnvelopeTransferTo
}

// GetAllowEnvelopeTransferToOk returns a tuple with the AllowEnvelopeTransferTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowEnvelopeTransferToOk() (*string, bool) {
	if o == nil || IsNil(o.AllowEnvelopeTransferTo) {
		return nil, false
	}
	return o.AllowEnvelopeTransferTo, true
}

// HasAllowEnvelopeTransferTo returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowEnvelopeTransferTo() bool {
	if o != nil && !IsNil(o.AllowEnvelopeTransferTo) {
		return true
	}

	return false
}

// SetAllowEnvelopeTransferTo gets a reference to the given string and assigns it to the AllowEnvelopeTransferTo field.
func (o *UserSettingsInformation) SetAllowEnvelopeTransferTo(v string) {
	o.AllowEnvelopeTransferTo = &v
}

// GetAllowEnvelopeTransferToMetadata returns the AllowEnvelopeTransferToMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowEnvelopeTransferToMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowEnvelopeTransferToMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowEnvelopeTransferToMetadata
}

// GetAllowEnvelopeTransferToMetadataOk returns a tuple with the AllowEnvelopeTransferToMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowEnvelopeTransferToMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowEnvelopeTransferToMetadata) {
		return nil, false
	}
	return o.AllowEnvelopeTransferToMetadata, true
}

// HasAllowEnvelopeTransferToMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowEnvelopeTransferToMetadata() bool {
	if o != nil && !IsNil(o.AllowEnvelopeTransferToMetadata) {
		return true
	}

	return false
}

// SetAllowEnvelopeTransferToMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowEnvelopeTransferToMetadata field.
func (o *UserSettingsInformation) SetAllowEnvelopeTransferToMetadata(v SettingsMetadata) {
	o.AllowEnvelopeTransferToMetadata = &v
}

// GetAllowEsealRecipients returns the AllowEsealRecipients field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowEsealRecipients() string {
	if o == nil || IsNil(o.AllowEsealRecipients) {
		var ret string
		return ret
	}
	return *o.AllowEsealRecipients
}

// GetAllowEsealRecipientsOk returns a tuple with the AllowEsealRecipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowEsealRecipientsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowEsealRecipients) {
		return nil, false
	}
	return o.AllowEsealRecipients, true
}

// HasAllowEsealRecipients returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowEsealRecipients() bool {
	if o != nil && !IsNil(o.AllowEsealRecipients) {
		return true
	}

	return false
}

// SetAllowEsealRecipients gets a reference to the given string and assigns it to the AllowEsealRecipients field.
func (o *UserSettingsInformation) SetAllowEsealRecipients(v string) {
	o.AllowEsealRecipients = &v
}

// GetAllowEsealRecipientsMetadata returns the AllowEsealRecipientsMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowEsealRecipientsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowEsealRecipientsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowEsealRecipientsMetadata
}

// GetAllowEsealRecipientsMetadataOk returns a tuple with the AllowEsealRecipientsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowEsealRecipientsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowEsealRecipientsMetadata) {
		return nil, false
	}
	return o.AllowEsealRecipientsMetadata, true
}

// HasAllowEsealRecipientsMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowEsealRecipientsMetadata() bool {
	if o != nil && !IsNil(o.AllowEsealRecipientsMetadata) {
		return true
	}

	return false
}

// SetAllowEsealRecipientsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowEsealRecipientsMetadata field.
func (o *UserSettingsInformation) SetAllowEsealRecipientsMetadata(v SettingsMetadata) {
	o.AllowEsealRecipientsMetadata = &v
}

// GetAllowPowerFormsAdminToAccessAllPowerFormEnvelope returns the AllowPowerFormsAdminToAccessAllPowerFormEnvelope field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowPowerFormsAdminToAccessAllPowerFormEnvelope() string {
	if o == nil || IsNil(o.AllowPowerFormsAdminToAccessAllPowerFormEnvelope) {
		var ret string
		return ret
	}
	return *o.AllowPowerFormsAdminToAccessAllPowerFormEnvelope
}

// GetAllowPowerFormsAdminToAccessAllPowerFormEnvelopeOk returns a tuple with the AllowPowerFormsAdminToAccessAllPowerFormEnvelope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowPowerFormsAdminToAccessAllPowerFormEnvelopeOk() (*string, bool) {
	if o == nil || IsNil(o.AllowPowerFormsAdminToAccessAllPowerFormEnvelope) {
		return nil, false
	}
	return o.AllowPowerFormsAdminToAccessAllPowerFormEnvelope, true
}

// HasAllowPowerFormsAdminToAccessAllPowerFormEnvelope returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowPowerFormsAdminToAccessAllPowerFormEnvelope() bool {
	if o != nil && !IsNil(o.AllowPowerFormsAdminToAccessAllPowerFormEnvelope) {
		return true
	}

	return false
}

// SetAllowPowerFormsAdminToAccessAllPowerFormEnvelope gets a reference to the given string and assigns it to the AllowPowerFormsAdminToAccessAllPowerFormEnvelope field.
func (o *UserSettingsInformation) SetAllowPowerFormsAdminToAccessAllPowerFormEnvelope(v string) {
	o.AllowPowerFormsAdminToAccessAllPowerFormEnvelope = &v
}

// GetAllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata returns the AllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata
}

// GetAllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadataOk returns a tuple with the AllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata) {
		return nil, false
	}
	return o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata, true
}

// HasAllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata() bool {
	if o != nil && !IsNil(o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata) {
		return true
	}

	return false
}

// SetAllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata field.
func (o *UserSettingsInformation) SetAllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata(v SettingsMetadata) {
	o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata = &v
}

// GetAllowRecipientLanguageSelection returns the AllowRecipientLanguageSelection field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowRecipientLanguageSelection() string {
	if o == nil || IsNil(o.AllowRecipientLanguageSelection) {
		var ret string
		return ret
	}
	return *o.AllowRecipientLanguageSelection
}

// GetAllowRecipientLanguageSelectionOk returns a tuple with the AllowRecipientLanguageSelection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowRecipientLanguageSelectionOk() (*string, bool) {
	if o == nil || IsNil(o.AllowRecipientLanguageSelection) {
		return nil, false
	}
	return o.AllowRecipientLanguageSelection, true
}

// HasAllowRecipientLanguageSelection returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowRecipientLanguageSelection() bool {
	if o != nil && !IsNil(o.AllowRecipientLanguageSelection) {
		return true
	}

	return false
}

// SetAllowRecipientLanguageSelection gets a reference to the given string and assigns it to the AllowRecipientLanguageSelection field.
func (o *UserSettingsInformation) SetAllowRecipientLanguageSelection(v string) {
	o.AllowRecipientLanguageSelection = &v
}

// GetAllowRecipientLanguageSelectionMetadata returns the AllowRecipientLanguageSelectionMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowRecipientLanguageSelectionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowRecipientLanguageSelectionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowRecipientLanguageSelectionMetadata
}

// GetAllowRecipientLanguageSelectionMetadataOk returns a tuple with the AllowRecipientLanguageSelectionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowRecipientLanguageSelectionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowRecipientLanguageSelectionMetadata) {
		return nil, false
	}
	return o.AllowRecipientLanguageSelectionMetadata, true
}

// HasAllowRecipientLanguageSelectionMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowRecipientLanguageSelectionMetadata() bool {
	if o != nil && !IsNil(o.AllowRecipientLanguageSelectionMetadata) {
		return true
	}

	return false
}

// SetAllowRecipientLanguageSelectionMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowRecipientLanguageSelectionMetadata field.
func (o *UserSettingsInformation) SetAllowRecipientLanguageSelectionMetadata(v SettingsMetadata) {
	o.AllowRecipientLanguageSelectionMetadata = &v
}

// GetAllowSendOnBehalfOf returns the AllowSendOnBehalfOf field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowSendOnBehalfOf() string {
	if o == nil || IsNil(o.AllowSendOnBehalfOf) {
		var ret string
		return ret
	}
	return *o.AllowSendOnBehalfOf
}

// GetAllowSendOnBehalfOfOk returns a tuple with the AllowSendOnBehalfOf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowSendOnBehalfOfOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSendOnBehalfOf) {
		return nil, false
	}
	return o.AllowSendOnBehalfOf, true
}

// HasAllowSendOnBehalfOf returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowSendOnBehalfOf() bool {
	if o != nil && !IsNil(o.AllowSendOnBehalfOf) {
		return true
	}

	return false
}

// SetAllowSendOnBehalfOf gets a reference to the given string and assigns it to the AllowSendOnBehalfOf field.
func (o *UserSettingsInformation) SetAllowSendOnBehalfOf(v string) {
	o.AllowSendOnBehalfOf = &v
}

// GetAllowSendOnBehalfOfMetadata returns the AllowSendOnBehalfOfMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowSendOnBehalfOfMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSendOnBehalfOfMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSendOnBehalfOfMetadata
}

// GetAllowSendOnBehalfOfMetadataOk returns a tuple with the AllowSendOnBehalfOfMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowSendOnBehalfOfMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSendOnBehalfOfMetadata) {
		return nil, false
	}
	return o.AllowSendOnBehalfOfMetadata, true
}

// HasAllowSendOnBehalfOfMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowSendOnBehalfOfMetadata() bool {
	if o != nil && !IsNil(o.AllowSendOnBehalfOfMetadata) {
		return true
	}

	return false
}

// SetAllowSendOnBehalfOfMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSendOnBehalfOfMetadata field.
func (o *UserSettingsInformation) SetAllowSendOnBehalfOfMetadata(v SettingsMetadata) {
	o.AllowSendOnBehalfOfMetadata = &v
}

// GetAllowSupplementalDocuments returns the AllowSupplementalDocuments field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowSupplementalDocuments() string {
	if o == nil || IsNil(o.AllowSupplementalDocuments) {
		var ret string
		return ret
	}
	return *o.AllowSupplementalDocuments
}

// GetAllowSupplementalDocumentsOk returns a tuple with the AllowSupplementalDocuments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowSupplementalDocumentsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowSupplementalDocuments) {
		return nil, false
	}
	return o.AllowSupplementalDocuments, true
}

// HasAllowSupplementalDocuments returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowSupplementalDocuments() bool {
	if o != nil && !IsNil(o.AllowSupplementalDocuments) {
		return true
	}

	return false
}

// SetAllowSupplementalDocuments gets a reference to the given string and assigns it to the AllowSupplementalDocuments field.
func (o *UserSettingsInformation) SetAllowSupplementalDocuments(v string) {
	o.AllowSupplementalDocuments = &v
}

// GetAllowSupplementalDocumentsMetadata returns the AllowSupplementalDocumentsMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowSupplementalDocumentsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowSupplementalDocumentsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowSupplementalDocumentsMetadata
}

// GetAllowSupplementalDocumentsMetadataOk returns a tuple with the AllowSupplementalDocumentsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowSupplementalDocumentsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowSupplementalDocumentsMetadata) {
		return nil, false
	}
	return o.AllowSupplementalDocumentsMetadata, true
}

// HasAllowSupplementalDocumentsMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowSupplementalDocumentsMetadata() bool {
	if o != nil && !IsNil(o.AllowSupplementalDocumentsMetadata) {
		return true
	}

	return false
}

// SetAllowSupplementalDocumentsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowSupplementalDocumentsMetadata field.
func (o *UserSettingsInformation) SetAllowSupplementalDocumentsMetadata(v SettingsMetadata) {
	o.AllowSupplementalDocumentsMetadata = &v
}

// GetAllowTransactions returns the AllowTransactions field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowTransactions() string {
	if o == nil || IsNil(o.AllowTransactions) {
		var ret string
		return ret
	}
	return *o.AllowTransactions
}

// GetAllowTransactionsOk returns a tuple with the AllowTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowTransactionsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowTransactions) {
		return nil, false
	}
	return o.AllowTransactions, true
}

// HasAllowTransactions returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowTransactions() bool {
	if o != nil && !IsNil(o.AllowTransactions) {
		return true
	}

	return false
}

// SetAllowTransactions gets a reference to the given string and assigns it to the AllowTransactions field.
func (o *UserSettingsInformation) SetAllowTransactions(v string) {
	o.AllowTransactions = &v
}

// GetAllowTransactionsMetadata returns the AllowTransactionsMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAllowTransactionsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.AllowTransactionsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.AllowTransactionsMetadata
}

// GetAllowTransactionsMetadataOk returns a tuple with the AllowTransactionsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAllowTransactionsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.AllowTransactionsMetadata) {
		return nil, false
	}
	return o.AllowTransactionsMetadata, true
}

// HasAllowTransactionsMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAllowTransactionsMetadata() bool {
	if o != nil && !IsNil(o.AllowTransactionsMetadata) {
		return true
	}

	return false
}

// SetAllowTransactionsMetadata gets a reference to the given SettingsMetadata and assigns it to the AllowTransactionsMetadata field.
func (o *UserSettingsInformation) SetAllowTransactionsMetadata(v SettingsMetadata) {
	o.AllowTransactionsMetadata = &v
}

// GetAnchorTagVersionedPlacementEnabled returns the AnchorTagVersionedPlacementEnabled field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetAnchorTagVersionedPlacementEnabled() string {
	if o == nil || IsNil(o.AnchorTagVersionedPlacementEnabled) {
		var ret string
		return ret
	}
	return *o.AnchorTagVersionedPlacementEnabled
}

// GetAnchorTagVersionedPlacementEnabledOk returns a tuple with the AnchorTagVersionedPlacementEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetAnchorTagVersionedPlacementEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.AnchorTagVersionedPlacementEnabled) {
		return nil, false
	}
	return o.AnchorTagVersionedPlacementEnabled, true
}

// HasAnchorTagVersionedPlacementEnabled returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasAnchorTagVersionedPlacementEnabled() bool {
	if o != nil && !IsNil(o.AnchorTagVersionedPlacementEnabled) {
		return true
	}

	return false
}

// SetAnchorTagVersionedPlacementEnabled gets a reference to the given string and assigns it to the AnchorTagVersionedPlacementEnabled field.
func (o *UserSettingsInformation) SetAnchorTagVersionedPlacementEnabled(v string) {
	o.AnchorTagVersionedPlacementEnabled = &v
}

// GetApiAccountWideAccess returns the ApiAccountWideAccess field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetApiAccountWideAccess() string {
	if o == nil || IsNil(o.ApiAccountWideAccess) {
		var ret string
		return ret
	}
	return *o.ApiAccountWideAccess
}

// GetApiAccountWideAccessOk returns a tuple with the ApiAccountWideAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetApiAccountWideAccessOk() (*string, bool) {
	if o == nil || IsNil(o.ApiAccountWideAccess) {
		return nil, false
	}
	return o.ApiAccountWideAccess, true
}

// HasApiAccountWideAccess returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasApiAccountWideAccess() bool {
	if o != nil && !IsNil(o.ApiAccountWideAccess) {
		return true
	}

	return false
}

// SetApiAccountWideAccess gets a reference to the given string and assigns it to the ApiAccountWideAccess field.
func (o *UserSettingsInformation) SetApiAccountWideAccess(v string) {
	o.ApiAccountWideAccess = &v
}

// GetApiAccountWideAccessMetadata returns the ApiAccountWideAccessMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetApiAccountWideAccessMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ApiAccountWideAccessMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ApiAccountWideAccessMetadata
}

// GetApiAccountWideAccessMetadataOk returns a tuple with the ApiAccountWideAccessMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetApiAccountWideAccessMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ApiAccountWideAccessMetadata) {
		return nil, false
	}
	return o.ApiAccountWideAccessMetadata, true
}

// HasApiAccountWideAccessMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasApiAccountWideAccessMetadata() bool {
	if o != nil && !IsNil(o.ApiAccountWideAccessMetadata) {
		return true
	}

	return false
}

// SetApiAccountWideAccessMetadata gets a reference to the given SettingsMetadata and assigns it to the ApiAccountWideAccessMetadata field.
func (o *UserSettingsInformation) SetApiAccountWideAccessMetadata(v SettingsMetadata) {
	o.ApiAccountWideAccessMetadata = &v
}

// GetApiCanExportAC returns the ApiCanExportAC field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetApiCanExportAC() string {
	if o == nil || IsNil(o.ApiCanExportAC) {
		var ret string
		return ret
	}
	return *o.ApiCanExportAC
}

// GetApiCanExportACOk returns a tuple with the ApiCanExportAC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetApiCanExportACOk() (*string, bool) {
	if o == nil || IsNil(o.ApiCanExportAC) {
		return nil, false
	}
	return o.ApiCanExportAC, true
}

// HasApiCanExportAC returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasApiCanExportAC() bool {
	if o != nil && !IsNil(o.ApiCanExportAC) {
		return true
	}

	return false
}

// SetApiCanExportAC gets a reference to the given string and assigns it to the ApiCanExportAC field.
func (o *UserSettingsInformation) SetApiCanExportAC(v string) {
	o.ApiCanExportAC = &v
}

// GetApiCanExportACMetadata returns the ApiCanExportACMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetApiCanExportACMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ApiCanExportACMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ApiCanExportACMetadata
}

// GetApiCanExportACMetadataOk returns a tuple with the ApiCanExportACMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetApiCanExportACMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ApiCanExportACMetadata) {
		return nil, false
	}
	return o.ApiCanExportACMetadata, true
}

// HasApiCanExportACMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasApiCanExportACMetadata() bool {
	if o != nil && !IsNil(o.ApiCanExportACMetadata) {
		return true
	}

	return false
}

// SetApiCanExportACMetadata gets a reference to the given SettingsMetadata and assigns it to the ApiCanExportACMetadata field.
func (o *UserSettingsInformation) SetApiCanExportACMetadata(v SettingsMetadata) {
	o.ApiCanExportACMetadata = &v
}

// GetBulkSend returns the BulkSend field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetBulkSend() string {
	if o == nil || IsNil(o.BulkSend) {
		var ret string
		return ret
	}
	return *o.BulkSend
}

// GetBulkSendOk returns a tuple with the BulkSend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetBulkSendOk() (*string, bool) {
	if o == nil || IsNil(o.BulkSend) {
		return nil, false
	}
	return o.BulkSend, true
}

// HasBulkSend returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasBulkSend() bool {
	if o != nil && !IsNil(o.BulkSend) {
		return true
	}

	return false
}

// SetBulkSend gets a reference to the given string and assigns it to the BulkSend field.
func (o *UserSettingsInformation) SetBulkSend(v string) {
	o.BulkSend = &v
}

// GetBulkSendMetadata returns the BulkSendMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetBulkSendMetadata() SettingsMetadata {
	if o == nil || IsNil(o.BulkSendMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.BulkSendMetadata
}

// GetBulkSendMetadataOk returns a tuple with the BulkSendMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetBulkSendMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.BulkSendMetadata) {
		return nil, false
	}
	return o.BulkSendMetadata, true
}

// HasBulkSendMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasBulkSendMetadata() bool {
	if o != nil && !IsNil(o.BulkSendMetadata) {
		return true
	}

	return false
}

// SetBulkSendMetadata gets a reference to the given SettingsMetadata and assigns it to the BulkSendMetadata field.
func (o *UserSettingsInformation) SetBulkSendMetadata(v SettingsMetadata) {
	o.BulkSendMetadata = &v
}

// GetCanChargeAccount returns the CanChargeAccount field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanChargeAccount() string {
	if o == nil || IsNil(o.CanChargeAccount) {
		var ret string
		return ret
	}
	return *o.CanChargeAccount
}

// GetCanChargeAccountOk returns a tuple with the CanChargeAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanChargeAccountOk() (*string, bool) {
	if o == nil || IsNil(o.CanChargeAccount) {
		return nil, false
	}
	return o.CanChargeAccount, true
}

// HasCanChargeAccount returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanChargeAccount() bool {
	if o != nil && !IsNil(o.CanChargeAccount) {
		return true
	}

	return false
}

// SetCanChargeAccount gets a reference to the given string and assigns it to the CanChargeAccount field.
func (o *UserSettingsInformation) SetCanChargeAccount(v string) {
	o.CanChargeAccount = &v
}

// GetCanChargeAccountMetadata returns the CanChargeAccountMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanChargeAccountMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanChargeAccountMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanChargeAccountMetadata
}

// GetCanChargeAccountMetadataOk returns a tuple with the CanChargeAccountMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanChargeAccountMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanChargeAccountMetadata) {
		return nil, false
	}
	return o.CanChargeAccountMetadata, true
}

// HasCanChargeAccountMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanChargeAccountMetadata() bool {
	if o != nil && !IsNil(o.CanChargeAccountMetadata) {
		return true
	}

	return false
}

// SetCanChargeAccountMetadata gets a reference to the given SettingsMetadata and assigns it to the CanChargeAccountMetadata field.
func (o *UserSettingsInformation) SetCanChargeAccountMetadata(v SettingsMetadata) {
	o.CanChargeAccountMetadata = &v
}

// GetCanCreateTransaction returns the CanCreateTransaction field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanCreateTransaction() string {
	if o == nil || IsNil(o.CanCreateTransaction) {
		var ret string
		return ret
	}
	return *o.CanCreateTransaction
}

// GetCanCreateTransactionOk returns a tuple with the CanCreateTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanCreateTransactionOk() (*string, bool) {
	if o == nil || IsNil(o.CanCreateTransaction) {
		return nil, false
	}
	return o.CanCreateTransaction, true
}

// HasCanCreateTransaction returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanCreateTransaction() bool {
	if o != nil && !IsNil(o.CanCreateTransaction) {
		return true
	}

	return false
}

// SetCanCreateTransaction gets a reference to the given string and assigns it to the CanCreateTransaction field.
func (o *UserSettingsInformation) SetCanCreateTransaction(v string) {
	o.CanCreateTransaction = &v
}

// GetCanCreateTransactionMetadata returns the CanCreateTransactionMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanCreateTransactionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanCreateTransactionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanCreateTransactionMetadata
}

// GetCanCreateTransactionMetadataOk returns a tuple with the CanCreateTransactionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanCreateTransactionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanCreateTransactionMetadata) {
		return nil, false
	}
	return o.CanCreateTransactionMetadata, true
}

// HasCanCreateTransactionMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanCreateTransactionMetadata() bool {
	if o != nil && !IsNil(o.CanCreateTransactionMetadata) {
		return true
	}

	return false
}

// SetCanCreateTransactionMetadata gets a reference to the given SettingsMetadata and assigns it to the CanCreateTransactionMetadata field.
func (o *UserSettingsInformation) SetCanCreateTransactionMetadata(v SettingsMetadata) {
	o.CanCreateTransactionMetadata = &v
}

// GetCanDeleteDocumentsInTransaction returns the CanDeleteDocumentsInTransaction field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanDeleteDocumentsInTransaction() string {
	if o == nil || IsNil(o.CanDeleteDocumentsInTransaction) {
		var ret string
		return ret
	}
	return *o.CanDeleteDocumentsInTransaction
}

// GetCanDeleteDocumentsInTransactionOk returns a tuple with the CanDeleteDocumentsInTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanDeleteDocumentsInTransactionOk() (*string, bool) {
	if o == nil || IsNil(o.CanDeleteDocumentsInTransaction) {
		return nil, false
	}
	return o.CanDeleteDocumentsInTransaction, true
}

// HasCanDeleteDocumentsInTransaction returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanDeleteDocumentsInTransaction() bool {
	if o != nil && !IsNil(o.CanDeleteDocumentsInTransaction) {
		return true
	}

	return false
}

// SetCanDeleteDocumentsInTransaction gets a reference to the given string and assigns it to the CanDeleteDocumentsInTransaction field.
func (o *UserSettingsInformation) SetCanDeleteDocumentsInTransaction(v string) {
	o.CanDeleteDocumentsInTransaction = &v
}

// GetCanDeleteDocumentsInTransactionMetadata returns the CanDeleteDocumentsInTransactionMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanDeleteDocumentsInTransactionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanDeleteDocumentsInTransactionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanDeleteDocumentsInTransactionMetadata
}

// GetCanDeleteDocumentsInTransactionMetadataOk returns a tuple with the CanDeleteDocumentsInTransactionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanDeleteDocumentsInTransactionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanDeleteDocumentsInTransactionMetadata) {
		return nil, false
	}
	return o.CanDeleteDocumentsInTransactionMetadata, true
}

// HasCanDeleteDocumentsInTransactionMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanDeleteDocumentsInTransactionMetadata() bool {
	if o != nil && !IsNil(o.CanDeleteDocumentsInTransactionMetadata) {
		return true
	}

	return false
}

// SetCanDeleteDocumentsInTransactionMetadata gets a reference to the given SettingsMetadata and assigns it to the CanDeleteDocumentsInTransactionMetadata field.
func (o *UserSettingsInformation) SetCanDeleteDocumentsInTransactionMetadata(v SettingsMetadata) {
	o.CanDeleteDocumentsInTransactionMetadata = &v
}

// GetCanDeleteTransaction returns the CanDeleteTransaction field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanDeleteTransaction() string {
	if o == nil || IsNil(o.CanDeleteTransaction) {
		var ret string
		return ret
	}
	return *o.CanDeleteTransaction
}

// GetCanDeleteTransactionOk returns a tuple with the CanDeleteTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanDeleteTransactionOk() (*string, bool) {
	if o == nil || IsNil(o.CanDeleteTransaction) {
		return nil, false
	}
	return o.CanDeleteTransaction, true
}

// HasCanDeleteTransaction returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanDeleteTransaction() bool {
	if o != nil && !IsNil(o.CanDeleteTransaction) {
		return true
	}

	return false
}

// SetCanDeleteTransaction gets a reference to the given string and assigns it to the CanDeleteTransaction field.
func (o *UserSettingsInformation) SetCanDeleteTransaction(v string) {
	o.CanDeleteTransaction = &v
}

// GetCanDeleteTransactionMetadata returns the CanDeleteTransactionMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanDeleteTransactionMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanDeleteTransactionMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanDeleteTransactionMetadata
}

// GetCanDeleteTransactionMetadataOk returns a tuple with the CanDeleteTransactionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanDeleteTransactionMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanDeleteTransactionMetadata) {
		return nil, false
	}
	return o.CanDeleteTransactionMetadata, true
}

// HasCanDeleteTransactionMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanDeleteTransactionMetadata() bool {
	if o != nil && !IsNil(o.CanDeleteTransactionMetadata) {
		return true
	}

	return false
}

// SetCanDeleteTransactionMetadata gets a reference to the given SettingsMetadata and assigns it to the CanDeleteTransactionMetadata field.
func (o *UserSettingsInformation) SetCanDeleteTransactionMetadata(v SettingsMetadata) {
	o.CanDeleteTransactionMetadata = &v
}

// GetCanEditSharedAddressbook returns the CanEditSharedAddressbook field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanEditSharedAddressbook() string {
	if o == nil || IsNil(o.CanEditSharedAddressbook) {
		var ret string
		return ret
	}
	return *o.CanEditSharedAddressbook
}

// GetCanEditSharedAddressbookOk returns a tuple with the CanEditSharedAddressbook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanEditSharedAddressbookOk() (*string, bool) {
	if o == nil || IsNil(o.CanEditSharedAddressbook) {
		return nil, false
	}
	return o.CanEditSharedAddressbook, true
}

// HasCanEditSharedAddressbook returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanEditSharedAddressbook() bool {
	if o != nil && !IsNil(o.CanEditSharedAddressbook) {
		return true
	}

	return false
}

// SetCanEditSharedAddressbook gets a reference to the given string and assigns it to the CanEditSharedAddressbook field.
func (o *UserSettingsInformation) SetCanEditSharedAddressbook(v string) {
	o.CanEditSharedAddressbook = &v
}

// GetCanEditSharedAddressbookMetadata returns the CanEditSharedAddressbookMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanEditSharedAddressbookMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanEditSharedAddressbookMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanEditSharedAddressbookMetadata
}

// GetCanEditSharedAddressbookMetadataOk returns a tuple with the CanEditSharedAddressbookMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanEditSharedAddressbookMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanEditSharedAddressbookMetadata) {
		return nil, false
	}
	return o.CanEditSharedAddressbookMetadata, true
}

// HasCanEditSharedAddressbookMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanEditSharedAddressbookMetadata() bool {
	if o != nil && !IsNil(o.CanEditSharedAddressbookMetadata) {
		return true
	}

	return false
}

// SetCanEditSharedAddressbookMetadata gets a reference to the given SettingsMetadata and assigns it to the CanEditSharedAddressbookMetadata field.
func (o *UserSettingsInformation) SetCanEditSharedAddressbookMetadata(v SettingsMetadata) {
	o.CanEditSharedAddressbookMetadata = &v
}

// GetCanLockEnvelopes returns the CanLockEnvelopes field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanLockEnvelopes() string {
	if o == nil || IsNil(o.CanLockEnvelopes) {
		var ret string
		return ret
	}
	return *o.CanLockEnvelopes
}

// GetCanLockEnvelopesOk returns a tuple with the CanLockEnvelopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanLockEnvelopesOk() (*string, bool) {
	if o == nil || IsNil(o.CanLockEnvelopes) {
		return nil, false
	}
	return o.CanLockEnvelopes, true
}

// HasCanLockEnvelopes returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanLockEnvelopes() bool {
	if o != nil && !IsNil(o.CanLockEnvelopes) {
		return true
	}

	return false
}

// SetCanLockEnvelopes gets a reference to the given string and assigns it to the CanLockEnvelopes field.
func (o *UserSettingsInformation) SetCanLockEnvelopes(v string) {
	o.CanLockEnvelopes = &v
}

// GetCanLockEnvelopesMetadata returns the CanLockEnvelopesMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanLockEnvelopesMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanLockEnvelopesMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanLockEnvelopesMetadata
}

// GetCanLockEnvelopesMetadataOk returns a tuple with the CanLockEnvelopesMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanLockEnvelopesMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanLockEnvelopesMetadata) {
		return nil, false
	}
	return o.CanLockEnvelopesMetadata, true
}

// HasCanLockEnvelopesMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanLockEnvelopesMetadata() bool {
	if o != nil && !IsNil(o.CanLockEnvelopesMetadata) {
		return true
	}

	return false
}

// SetCanLockEnvelopesMetadata gets a reference to the given SettingsMetadata and assigns it to the CanLockEnvelopesMetadata field.
func (o *UserSettingsInformation) SetCanLockEnvelopesMetadata(v SettingsMetadata) {
	o.CanLockEnvelopesMetadata = &v
}

// GetCanManageAccount returns the CanManageAccount field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanManageAccount() string {
	if o == nil || IsNil(o.CanManageAccount) {
		var ret string
		return ret
	}
	return *o.CanManageAccount
}

// GetCanManageAccountOk returns a tuple with the CanManageAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanManageAccountOk() (*string, bool) {
	if o == nil || IsNil(o.CanManageAccount) {
		return nil, false
	}
	return o.CanManageAccount, true
}

// HasCanManageAccount returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanManageAccount() bool {
	if o != nil && !IsNil(o.CanManageAccount) {
		return true
	}

	return false
}

// SetCanManageAccount gets a reference to the given string and assigns it to the CanManageAccount field.
func (o *UserSettingsInformation) SetCanManageAccount(v string) {
	o.CanManageAccount = &v
}

// GetCanManageAccountMetadata returns the CanManageAccountMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanManageAccountMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanManageAccountMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanManageAccountMetadata
}

// GetCanManageAccountMetadataOk returns a tuple with the CanManageAccountMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanManageAccountMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanManageAccountMetadata) {
		return nil, false
	}
	return o.CanManageAccountMetadata, true
}

// HasCanManageAccountMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanManageAccountMetadata() bool {
	if o != nil && !IsNil(o.CanManageAccountMetadata) {
		return true
	}

	return false
}

// SetCanManageAccountMetadata gets a reference to the given SettingsMetadata and assigns it to the CanManageAccountMetadata field.
func (o *UserSettingsInformation) SetCanManageAccountMetadata(v SettingsMetadata) {
	o.CanManageAccountMetadata = &v
}

// GetCanManageDistributor returns the CanManageDistributor field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanManageDistributor() string {
	if o == nil || IsNil(o.CanManageDistributor) {
		var ret string
		return ret
	}
	return *o.CanManageDistributor
}

// GetCanManageDistributorOk returns a tuple with the CanManageDistributor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanManageDistributorOk() (*string, bool) {
	if o == nil || IsNil(o.CanManageDistributor) {
		return nil, false
	}
	return o.CanManageDistributor, true
}

// HasCanManageDistributor returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanManageDistributor() bool {
	if o != nil && !IsNil(o.CanManageDistributor) {
		return true
	}

	return false
}

// SetCanManageDistributor gets a reference to the given string and assigns it to the CanManageDistributor field.
func (o *UserSettingsInformation) SetCanManageDistributor(v string) {
	o.CanManageDistributor = &v
}

// GetCanManageDistributorMetadata returns the CanManageDistributorMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanManageDistributorMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanManageDistributorMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanManageDistributorMetadata
}

// GetCanManageDistributorMetadataOk returns a tuple with the CanManageDistributorMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanManageDistributorMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanManageDistributorMetadata) {
		return nil, false
	}
	return o.CanManageDistributorMetadata, true
}

// HasCanManageDistributorMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanManageDistributorMetadata() bool {
	if o != nil && !IsNil(o.CanManageDistributorMetadata) {
		return true
	}

	return false
}

// SetCanManageDistributorMetadata gets a reference to the given SettingsMetadata and assigns it to the CanManageDistributorMetadata field.
func (o *UserSettingsInformation) SetCanManageDistributorMetadata(v SettingsMetadata) {
	o.CanManageDistributorMetadata = &v
}

// GetCanManageTemplates returns the CanManageTemplates field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanManageTemplates() string {
	if o == nil || IsNil(o.CanManageTemplates) {
		var ret string
		return ret
	}
	return *o.CanManageTemplates
}

// GetCanManageTemplatesOk returns a tuple with the CanManageTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanManageTemplatesOk() (*string, bool) {
	if o == nil || IsNil(o.CanManageTemplates) {
		return nil, false
	}
	return o.CanManageTemplates, true
}

// HasCanManageTemplates returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanManageTemplates() bool {
	if o != nil && !IsNil(o.CanManageTemplates) {
		return true
	}

	return false
}

// SetCanManageTemplates gets a reference to the given string and assigns it to the CanManageTemplates field.
func (o *UserSettingsInformation) SetCanManageTemplates(v string) {
	o.CanManageTemplates = &v
}

// GetCanManageTemplatesMetadata returns the CanManageTemplatesMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanManageTemplatesMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanManageTemplatesMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanManageTemplatesMetadata
}

// GetCanManageTemplatesMetadataOk returns a tuple with the CanManageTemplatesMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanManageTemplatesMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanManageTemplatesMetadata) {
		return nil, false
	}
	return o.CanManageTemplatesMetadata, true
}

// HasCanManageTemplatesMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanManageTemplatesMetadata() bool {
	if o != nil && !IsNil(o.CanManageTemplatesMetadata) {
		return true
	}

	return false
}

// SetCanManageTemplatesMetadata gets a reference to the given SettingsMetadata and assigns it to the CanManageTemplatesMetadata field.
func (o *UserSettingsInformation) SetCanManageTemplatesMetadata(v SettingsMetadata) {
	o.CanManageTemplatesMetadata = &v
}

// GetCanSendAPIRequests returns the CanSendAPIRequests field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanSendAPIRequests() string {
	if o == nil || IsNil(o.CanSendAPIRequests) {
		var ret string
		return ret
	}
	return *o.CanSendAPIRequests
}

// GetCanSendAPIRequestsOk returns a tuple with the CanSendAPIRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanSendAPIRequestsOk() (*string, bool) {
	if o == nil || IsNil(o.CanSendAPIRequests) {
		return nil, false
	}
	return o.CanSendAPIRequests, true
}

// HasCanSendAPIRequests returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanSendAPIRequests() bool {
	if o != nil && !IsNil(o.CanSendAPIRequests) {
		return true
	}

	return false
}

// SetCanSendAPIRequests gets a reference to the given string and assigns it to the CanSendAPIRequests field.
func (o *UserSettingsInformation) SetCanSendAPIRequests(v string) {
	o.CanSendAPIRequests = &v
}

// GetCanSendAPIRequestsMetadata returns the CanSendAPIRequestsMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanSendAPIRequestsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanSendAPIRequestsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanSendAPIRequestsMetadata
}

// GetCanSendAPIRequestsMetadataOk returns a tuple with the CanSendAPIRequestsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanSendAPIRequestsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanSendAPIRequestsMetadata) {
		return nil, false
	}
	return o.CanSendAPIRequestsMetadata, true
}

// HasCanSendAPIRequestsMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanSendAPIRequestsMetadata() bool {
	if o != nil && !IsNil(o.CanSendAPIRequestsMetadata) {
		return true
	}

	return false
}

// SetCanSendAPIRequestsMetadata gets a reference to the given SettingsMetadata and assigns it to the CanSendAPIRequestsMetadata field.
func (o *UserSettingsInformation) SetCanSendAPIRequestsMetadata(v SettingsMetadata) {
	o.CanSendAPIRequestsMetadata = &v
}

// GetCanSendEnvelope returns the CanSendEnvelope field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanSendEnvelope() string {
	if o == nil || IsNil(o.CanSendEnvelope) {
		var ret string
		return ret
	}
	return *o.CanSendEnvelope
}

// GetCanSendEnvelopeOk returns a tuple with the CanSendEnvelope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanSendEnvelopeOk() (*string, bool) {
	if o == nil || IsNil(o.CanSendEnvelope) {
		return nil, false
	}
	return o.CanSendEnvelope, true
}

// HasCanSendEnvelope returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanSendEnvelope() bool {
	if o != nil && !IsNil(o.CanSendEnvelope) {
		return true
	}

	return false
}

// SetCanSendEnvelope gets a reference to the given string and assigns it to the CanSendEnvelope field.
func (o *UserSettingsInformation) SetCanSendEnvelope(v string) {
	o.CanSendEnvelope = &v
}

// GetCanSendEnvelopeMetadata returns the CanSendEnvelopeMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanSendEnvelopeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanSendEnvelopeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanSendEnvelopeMetadata
}

// GetCanSendEnvelopeMetadataOk returns a tuple with the CanSendEnvelopeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanSendEnvelopeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanSendEnvelopeMetadata) {
		return nil, false
	}
	return o.CanSendEnvelopeMetadata, true
}

// HasCanSendEnvelopeMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanSendEnvelopeMetadata() bool {
	if o != nil && !IsNil(o.CanSendEnvelopeMetadata) {
		return true
	}

	return false
}

// SetCanSendEnvelopeMetadata gets a reference to the given SettingsMetadata and assigns it to the CanSendEnvelopeMetadata field.
func (o *UserSettingsInformation) SetCanSendEnvelopeMetadata(v SettingsMetadata) {
	o.CanSendEnvelopeMetadata = &v
}

// GetCanSendEnvelopesViaSMS returns the CanSendEnvelopesViaSMS field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanSendEnvelopesViaSMS() string {
	if o == nil || IsNil(o.CanSendEnvelopesViaSMS) {
		var ret string
		return ret
	}
	return *o.CanSendEnvelopesViaSMS
}

// GetCanSendEnvelopesViaSMSOk returns a tuple with the CanSendEnvelopesViaSMS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanSendEnvelopesViaSMSOk() (*string, bool) {
	if o == nil || IsNil(o.CanSendEnvelopesViaSMS) {
		return nil, false
	}
	return o.CanSendEnvelopesViaSMS, true
}

// HasCanSendEnvelopesViaSMS returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanSendEnvelopesViaSMS() bool {
	if o != nil && !IsNil(o.CanSendEnvelopesViaSMS) {
		return true
	}

	return false
}

// SetCanSendEnvelopesViaSMS gets a reference to the given string and assigns it to the CanSendEnvelopesViaSMS field.
func (o *UserSettingsInformation) SetCanSendEnvelopesViaSMS(v string) {
	o.CanSendEnvelopesViaSMS = &v
}

// GetCanSendEnvelopesViaSMSMetadata returns the CanSendEnvelopesViaSMSMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanSendEnvelopesViaSMSMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanSendEnvelopesViaSMSMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanSendEnvelopesViaSMSMetadata
}

// GetCanSendEnvelopesViaSMSMetadataOk returns a tuple with the CanSendEnvelopesViaSMSMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanSendEnvelopesViaSMSMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanSendEnvelopesViaSMSMetadata) {
		return nil, false
	}
	return o.CanSendEnvelopesViaSMSMetadata, true
}

// HasCanSendEnvelopesViaSMSMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanSendEnvelopesViaSMSMetadata() bool {
	if o != nil && !IsNil(o.CanSendEnvelopesViaSMSMetadata) {
		return true
	}

	return false
}

// SetCanSendEnvelopesViaSMSMetadata gets a reference to the given SettingsMetadata and assigns it to the CanSendEnvelopesViaSMSMetadata field.
func (o *UserSettingsInformation) SetCanSendEnvelopesViaSMSMetadata(v SettingsMetadata) {
	o.CanSendEnvelopesViaSMSMetadata = &v
}

// GetCanSignEnvelope returns the CanSignEnvelope field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanSignEnvelope() string {
	if o == nil || IsNil(o.CanSignEnvelope) {
		var ret string
		return ret
	}
	return *o.CanSignEnvelope
}

// GetCanSignEnvelopeOk returns a tuple with the CanSignEnvelope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanSignEnvelopeOk() (*string, bool) {
	if o == nil || IsNil(o.CanSignEnvelope) {
		return nil, false
	}
	return o.CanSignEnvelope, true
}

// HasCanSignEnvelope returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanSignEnvelope() bool {
	if o != nil && !IsNil(o.CanSignEnvelope) {
		return true
	}

	return false
}

// SetCanSignEnvelope gets a reference to the given string and assigns it to the CanSignEnvelope field.
func (o *UserSettingsInformation) SetCanSignEnvelope(v string) {
	o.CanSignEnvelope = &v
}

// GetCanSignEnvelopeMetadata returns the CanSignEnvelopeMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanSignEnvelopeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanSignEnvelopeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanSignEnvelopeMetadata
}

// GetCanSignEnvelopeMetadataOk returns a tuple with the CanSignEnvelopeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanSignEnvelopeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanSignEnvelopeMetadata) {
		return nil, false
	}
	return o.CanSignEnvelopeMetadata, true
}

// HasCanSignEnvelopeMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanSignEnvelopeMetadata() bool {
	if o != nil && !IsNil(o.CanSignEnvelopeMetadata) {
		return true
	}

	return false
}

// SetCanSignEnvelopeMetadata gets a reference to the given SettingsMetadata and assigns it to the CanSignEnvelopeMetadata field.
func (o *UserSettingsInformation) SetCanSignEnvelopeMetadata(v SettingsMetadata) {
	o.CanSignEnvelopeMetadata = &v
}

// GetCanUseScratchpad returns the CanUseScratchpad field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanUseScratchpad() string {
	if o == nil || IsNil(o.CanUseScratchpad) {
		var ret string
		return ret
	}
	return *o.CanUseScratchpad
}

// GetCanUseScratchpadOk returns a tuple with the CanUseScratchpad field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanUseScratchpadOk() (*string, bool) {
	if o == nil || IsNil(o.CanUseScratchpad) {
		return nil, false
	}
	return o.CanUseScratchpad, true
}

// HasCanUseScratchpad returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanUseScratchpad() bool {
	if o != nil && !IsNil(o.CanUseScratchpad) {
		return true
	}

	return false
}

// SetCanUseScratchpad gets a reference to the given string and assigns it to the CanUseScratchpad field.
func (o *UserSettingsInformation) SetCanUseScratchpad(v string) {
	o.CanUseScratchpad = &v
}

// GetCanUseScratchpadMetadata returns the CanUseScratchpadMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanUseScratchpadMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanUseScratchpadMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanUseScratchpadMetadata
}

// GetCanUseScratchpadMetadataOk returns a tuple with the CanUseScratchpadMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanUseScratchpadMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanUseScratchpadMetadata) {
		return nil, false
	}
	return o.CanUseScratchpadMetadata, true
}

// HasCanUseScratchpadMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanUseScratchpadMetadata() bool {
	if o != nil && !IsNil(o.CanUseScratchpadMetadata) {
		return true
	}

	return false
}

// SetCanUseScratchpadMetadata gets a reference to the given SettingsMetadata and assigns it to the CanUseScratchpadMetadata field.
func (o *UserSettingsInformation) SetCanUseScratchpadMetadata(v SettingsMetadata) {
	o.CanUseScratchpadMetadata = &v
}

// GetCanUseSmartContracts returns the CanUseSmartContracts field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanUseSmartContracts() string {
	if o == nil || IsNil(o.CanUseSmartContracts) {
		var ret string
		return ret
	}
	return *o.CanUseSmartContracts
}

// GetCanUseSmartContractsOk returns a tuple with the CanUseSmartContracts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanUseSmartContractsOk() (*string, bool) {
	if o == nil || IsNil(o.CanUseSmartContracts) {
		return nil, false
	}
	return o.CanUseSmartContracts, true
}

// HasCanUseSmartContracts returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanUseSmartContracts() bool {
	if o != nil && !IsNil(o.CanUseSmartContracts) {
		return true
	}

	return false
}

// SetCanUseSmartContracts gets a reference to the given string and assigns it to the CanUseSmartContracts field.
func (o *UserSettingsInformation) SetCanUseSmartContracts(v string) {
	o.CanUseSmartContracts = &v
}

// GetCanUseSmartContractsMetadata returns the CanUseSmartContractsMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetCanUseSmartContractsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.CanUseSmartContractsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.CanUseSmartContractsMetadata
}

// GetCanUseSmartContractsMetadataOk returns a tuple with the CanUseSmartContractsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetCanUseSmartContractsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.CanUseSmartContractsMetadata) {
		return nil, false
	}
	return o.CanUseSmartContractsMetadata, true
}

// HasCanUseSmartContractsMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasCanUseSmartContractsMetadata() bool {
	if o != nil && !IsNil(o.CanUseSmartContractsMetadata) {
		return true
	}

	return false
}

// SetCanUseSmartContractsMetadata gets a reference to the given SettingsMetadata and assigns it to the CanUseSmartContractsMetadata field.
func (o *UserSettingsInformation) SetCanUseSmartContractsMetadata(v SettingsMetadata) {
	o.CanUseSmartContractsMetadata = &v
}

// GetDisableDocumentUpload returns the DisableDocumentUpload field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetDisableDocumentUpload() string {
	if o == nil || IsNil(o.DisableDocumentUpload) {
		var ret string
		return ret
	}
	return *o.DisableDocumentUpload
}

// GetDisableDocumentUploadOk returns a tuple with the DisableDocumentUpload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetDisableDocumentUploadOk() (*string, bool) {
	if o == nil || IsNil(o.DisableDocumentUpload) {
		return nil, false
	}
	return o.DisableDocumentUpload, true
}

// HasDisableDocumentUpload returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasDisableDocumentUpload() bool {
	if o != nil && !IsNil(o.DisableDocumentUpload) {
		return true
	}

	return false
}

// SetDisableDocumentUpload gets a reference to the given string and assigns it to the DisableDocumentUpload field.
func (o *UserSettingsInformation) SetDisableDocumentUpload(v string) {
	o.DisableDocumentUpload = &v
}

// GetDisableDocumentUploadMetadata returns the DisableDocumentUploadMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetDisableDocumentUploadMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DisableDocumentUploadMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DisableDocumentUploadMetadata
}

// GetDisableDocumentUploadMetadataOk returns a tuple with the DisableDocumentUploadMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetDisableDocumentUploadMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DisableDocumentUploadMetadata) {
		return nil, false
	}
	return o.DisableDocumentUploadMetadata, true
}

// HasDisableDocumentUploadMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasDisableDocumentUploadMetadata() bool {
	if o != nil && !IsNil(o.DisableDocumentUploadMetadata) {
		return true
	}

	return false
}

// SetDisableDocumentUploadMetadata gets a reference to the given SettingsMetadata and assigns it to the DisableDocumentUploadMetadata field.
func (o *UserSettingsInformation) SetDisableDocumentUploadMetadata(v SettingsMetadata) {
	o.DisableDocumentUploadMetadata = &v
}

// GetDisableOtherActions returns the DisableOtherActions field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetDisableOtherActions() string {
	if o == nil || IsNil(o.DisableOtherActions) {
		var ret string
		return ret
	}
	return *o.DisableOtherActions
}

// GetDisableOtherActionsOk returns a tuple with the DisableOtherActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetDisableOtherActionsOk() (*string, bool) {
	if o == nil || IsNil(o.DisableOtherActions) {
		return nil, false
	}
	return o.DisableOtherActions, true
}

// HasDisableOtherActions returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasDisableOtherActions() bool {
	if o != nil && !IsNil(o.DisableOtherActions) {
		return true
	}

	return false
}

// SetDisableOtherActions gets a reference to the given string and assigns it to the DisableOtherActions field.
func (o *UserSettingsInformation) SetDisableOtherActions(v string) {
	o.DisableOtherActions = &v
}

// GetDisableOtherActionsMetadata returns the DisableOtherActionsMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetDisableOtherActionsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.DisableOtherActionsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.DisableOtherActionsMetadata
}

// GetDisableOtherActionsMetadataOk returns a tuple with the DisableOtherActionsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetDisableOtherActionsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.DisableOtherActionsMetadata) {
		return nil, false
	}
	return o.DisableOtherActionsMetadata, true
}

// HasDisableOtherActionsMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasDisableOtherActionsMetadata() bool {
	if o != nil && !IsNil(o.DisableOtherActionsMetadata) {
		return true
	}

	return false
}

// SetDisableOtherActionsMetadata gets a reference to the given SettingsMetadata and assigns it to the DisableOtherActionsMetadata field.
func (o *UserSettingsInformation) SetDisableOtherActionsMetadata(v SettingsMetadata) {
	o.DisableOtherActionsMetadata = &v
}

// GetEnableDSPro returns the EnableDSPro field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetEnableDSPro() string {
	if o == nil || IsNil(o.EnableDSPro) {
		var ret string
		return ret
	}
	return *o.EnableDSPro
}

// GetEnableDSProOk returns a tuple with the EnableDSPro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetEnableDSProOk() (*string, bool) {
	if o == nil || IsNil(o.EnableDSPro) {
		return nil, false
	}
	return o.EnableDSPro, true
}

// HasEnableDSPro returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasEnableDSPro() bool {
	if o != nil && !IsNil(o.EnableDSPro) {
		return true
	}

	return false
}

// SetEnableDSPro gets a reference to the given string and assigns it to the EnableDSPro field.
func (o *UserSettingsInformation) SetEnableDSPro(v string) {
	o.EnableDSPro = &v
}

// GetEnableDSProMetadata returns the EnableDSProMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetEnableDSProMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableDSProMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableDSProMetadata
}

// GetEnableDSProMetadataOk returns a tuple with the EnableDSProMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetEnableDSProMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableDSProMetadata) {
		return nil, false
	}
	return o.EnableDSProMetadata, true
}

// HasEnableDSProMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasEnableDSProMetadata() bool {
	if o != nil && !IsNil(o.EnableDSProMetadata) {
		return true
	}

	return false
}

// SetEnableDSProMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableDSProMetadata field.
func (o *UserSettingsInformation) SetEnableDSProMetadata(v SettingsMetadata) {
	o.EnableDSProMetadata = &v
}

// GetEnableKeyTermsSuggestionsByDocumentType returns the EnableKeyTermsSuggestionsByDocumentType field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetEnableKeyTermsSuggestionsByDocumentType() string {
	if o == nil || IsNil(o.EnableKeyTermsSuggestionsByDocumentType) {
		var ret string
		return ret
	}
	return *o.EnableKeyTermsSuggestionsByDocumentType
}

// GetEnableKeyTermsSuggestionsByDocumentTypeOk returns a tuple with the EnableKeyTermsSuggestionsByDocumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetEnableKeyTermsSuggestionsByDocumentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EnableKeyTermsSuggestionsByDocumentType) {
		return nil, false
	}
	return o.EnableKeyTermsSuggestionsByDocumentType, true
}

// HasEnableKeyTermsSuggestionsByDocumentType returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasEnableKeyTermsSuggestionsByDocumentType() bool {
	if o != nil && !IsNil(o.EnableKeyTermsSuggestionsByDocumentType) {
		return true
	}

	return false
}

// SetEnableKeyTermsSuggestionsByDocumentType gets a reference to the given string and assigns it to the EnableKeyTermsSuggestionsByDocumentType field.
func (o *UserSettingsInformation) SetEnableKeyTermsSuggestionsByDocumentType(v string) {
	o.EnableKeyTermsSuggestionsByDocumentType = &v
}

// GetEnableKeyTermsSuggestionsByDocumentTypeMetadata returns the EnableKeyTermsSuggestionsByDocumentTypeMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetEnableKeyTermsSuggestionsByDocumentTypeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableKeyTermsSuggestionsByDocumentTypeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableKeyTermsSuggestionsByDocumentTypeMetadata
}

// GetEnableKeyTermsSuggestionsByDocumentTypeMetadataOk returns a tuple with the EnableKeyTermsSuggestionsByDocumentTypeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetEnableKeyTermsSuggestionsByDocumentTypeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableKeyTermsSuggestionsByDocumentTypeMetadata) {
		return nil, false
	}
	return o.EnableKeyTermsSuggestionsByDocumentTypeMetadata, true
}

// HasEnableKeyTermsSuggestionsByDocumentTypeMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasEnableKeyTermsSuggestionsByDocumentTypeMetadata() bool {
	if o != nil && !IsNil(o.EnableKeyTermsSuggestionsByDocumentTypeMetadata) {
		return true
	}

	return false
}

// SetEnableKeyTermsSuggestionsByDocumentTypeMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableKeyTermsSuggestionsByDocumentTypeMetadata field.
func (o *UserSettingsInformation) SetEnableKeyTermsSuggestionsByDocumentTypeMetadata(v SettingsMetadata) {
	o.EnableKeyTermsSuggestionsByDocumentTypeMetadata = &v
}

// GetEnableSequentialSigningAPI returns the EnableSequentialSigningAPI field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetEnableSequentialSigningAPI() string {
	if o == nil || IsNil(o.EnableSequentialSigningAPI) {
		var ret string
		return ret
	}
	return *o.EnableSequentialSigningAPI
}

// GetEnableSequentialSigningAPIOk returns a tuple with the EnableSequentialSigningAPI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetEnableSequentialSigningAPIOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSequentialSigningAPI) {
		return nil, false
	}
	return o.EnableSequentialSigningAPI, true
}

// HasEnableSequentialSigningAPI returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasEnableSequentialSigningAPI() bool {
	if o != nil && !IsNil(o.EnableSequentialSigningAPI) {
		return true
	}

	return false
}

// SetEnableSequentialSigningAPI gets a reference to the given string and assigns it to the EnableSequentialSigningAPI field.
func (o *UserSettingsInformation) SetEnableSequentialSigningAPI(v string) {
	o.EnableSequentialSigningAPI = &v
}

// GetEnableSequentialSigningAPIMetadata returns the EnableSequentialSigningAPIMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetEnableSequentialSigningAPIMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSequentialSigningAPIMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSequentialSigningAPIMetadata
}

// GetEnableSequentialSigningAPIMetadataOk returns a tuple with the EnableSequentialSigningAPIMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetEnableSequentialSigningAPIMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSequentialSigningAPIMetadata) {
		return nil, false
	}
	return o.EnableSequentialSigningAPIMetadata, true
}

// HasEnableSequentialSigningAPIMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasEnableSequentialSigningAPIMetadata() bool {
	if o != nil && !IsNil(o.EnableSequentialSigningAPIMetadata) {
		return true
	}

	return false
}

// SetEnableSequentialSigningAPIMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSequentialSigningAPIMetadata field.
func (o *UserSettingsInformation) SetEnableSequentialSigningAPIMetadata(v SettingsMetadata) {
	o.EnableSequentialSigningAPIMetadata = &v
}

// GetEnableSequentialSigningUI returns the EnableSequentialSigningUI field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetEnableSequentialSigningUI() string {
	if o == nil || IsNil(o.EnableSequentialSigningUI) {
		var ret string
		return ret
	}
	return *o.EnableSequentialSigningUI
}

// GetEnableSequentialSigningUIOk returns a tuple with the EnableSequentialSigningUI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetEnableSequentialSigningUIOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSequentialSigningUI) {
		return nil, false
	}
	return o.EnableSequentialSigningUI, true
}

// HasEnableSequentialSigningUI returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasEnableSequentialSigningUI() bool {
	if o != nil && !IsNil(o.EnableSequentialSigningUI) {
		return true
	}

	return false
}

// SetEnableSequentialSigningUI gets a reference to the given string and assigns it to the EnableSequentialSigningUI field.
func (o *UserSettingsInformation) SetEnableSequentialSigningUI(v string) {
	o.EnableSequentialSigningUI = &v
}

// GetEnableSequentialSigningUIMetadata returns the EnableSequentialSigningUIMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetEnableSequentialSigningUIMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSequentialSigningUIMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSequentialSigningUIMetadata
}

// GetEnableSequentialSigningUIMetadataOk returns a tuple with the EnableSequentialSigningUIMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetEnableSequentialSigningUIMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSequentialSigningUIMetadata) {
		return nil, false
	}
	return o.EnableSequentialSigningUIMetadata, true
}

// HasEnableSequentialSigningUIMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasEnableSequentialSigningUIMetadata() bool {
	if o != nil && !IsNil(o.EnableSequentialSigningUIMetadata) {
		return true
	}

	return false
}

// SetEnableSequentialSigningUIMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSequentialSigningUIMetadata field.
func (o *UserSettingsInformation) SetEnableSequentialSigningUIMetadata(v SettingsMetadata) {
	o.EnableSequentialSigningUIMetadata = &v
}

// GetEnableSignerAttachments returns the EnableSignerAttachments field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetEnableSignerAttachments() string {
	if o == nil || IsNil(o.EnableSignerAttachments) {
		var ret string
		return ret
	}
	return *o.EnableSignerAttachments
}

// GetEnableSignerAttachmentsOk returns a tuple with the EnableSignerAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetEnableSignerAttachmentsOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSignerAttachments) {
		return nil, false
	}
	return o.EnableSignerAttachments, true
}

// HasEnableSignerAttachments returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasEnableSignerAttachments() bool {
	if o != nil && !IsNil(o.EnableSignerAttachments) {
		return true
	}

	return false
}

// SetEnableSignerAttachments gets a reference to the given string and assigns it to the EnableSignerAttachments field.
func (o *UserSettingsInformation) SetEnableSignerAttachments(v string) {
	o.EnableSignerAttachments = &v
}

// GetEnableSignerAttachmentsMetadata returns the EnableSignerAttachmentsMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetEnableSignerAttachmentsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSignerAttachmentsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSignerAttachmentsMetadata
}

// GetEnableSignerAttachmentsMetadataOk returns a tuple with the EnableSignerAttachmentsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetEnableSignerAttachmentsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSignerAttachmentsMetadata) {
		return nil, false
	}
	return o.EnableSignerAttachmentsMetadata, true
}

// HasEnableSignerAttachmentsMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasEnableSignerAttachmentsMetadata() bool {
	if o != nil && !IsNil(o.EnableSignerAttachmentsMetadata) {
		return true
	}

	return false
}

// SetEnableSignerAttachmentsMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSignerAttachmentsMetadata field.
func (o *UserSettingsInformation) SetEnableSignerAttachmentsMetadata(v SettingsMetadata) {
	o.EnableSignerAttachmentsMetadata = &v
}

// GetEnableSignOnPaperOverride returns the EnableSignOnPaperOverride field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetEnableSignOnPaperOverride() string {
	if o == nil || IsNil(o.EnableSignOnPaperOverride) {
		var ret string
		return ret
	}
	return *o.EnableSignOnPaperOverride
}

// GetEnableSignOnPaperOverrideOk returns a tuple with the EnableSignOnPaperOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetEnableSignOnPaperOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSignOnPaperOverride) {
		return nil, false
	}
	return o.EnableSignOnPaperOverride, true
}

// HasEnableSignOnPaperOverride returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasEnableSignOnPaperOverride() bool {
	if o != nil && !IsNil(o.EnableSignOnPaperOverride) {
		return true
	}

	return false
}

// SetEnableSignOnPaperOverride gets a reference to the given string and assigns it to the EnableSignOnPaperOverride field.
func (o *UserSettingsInformation) SetEnableSignOnPaperOverride(v string) {
	o.EnableSignOnPaperOverride = &v
}

// GetEnableSignOnPaperOverrideMetadata returns the EnableSignOnPaperOverrideMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetEnableSignOnPaperOverrideMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableSignOnPaperOverrideMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableSignOnPaperOverrideMetadata
}

// GetEnableSignOnPaperOverrideMetadataOk returns a tuple with the EnableSignOnPaperOverrideMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetEnableSignOnPaperOverrideMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableSignOnPaperOverrideMetadata) {
		return nil, false
	}
	return o.EnableSignOnPaperOverrideMetadata, true
}

// HasEnableSignOnPaperOverrideMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasEnableSignOnPaperOverrideMetadata() bool {
	if o != nil && !IsNil(o.EnableSignOnPaperOverrideMetadata) {
		return true
	}

	return false
}

// SetEnableSignOnPaperOverrideMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableSignOnPaperOverrideMetadata field.
func (o *UserSettingsInformation) SetEnableSignOnPaperOverrideMetadata(v SettingsMetadata) {
	o.EnableSignOnPaperOverrideMetadata = &v
}

// GetEnableTransactionPoint returns the EnableTransactionPoint field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetEnableTransactionPoint() string {
	if o == nil || IsNil(o.EnableTransactionPoint) {
		var ret string
		return ret
	}
	return *o.EnableTransactionPoint
}

// GetEnableTransactionPointOk returns a tuple with the EnableTransactionPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetEnableTransactionPointOk() (*string, bool) {
	if o == nil || IsNil(o.EnableTransactionPoint) {
		return nil, false
	}
	return o.EnableTransactionPoint, true
}

// HasEnableTransactionPoint returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasEnableTransactionPoint() bool {
	if o != nil && !IsNil(o.EnableTransactionPoint) {
		return true
	}

	return false
}

// SetEnableTransactionPoint gets a reference to the given string and assigns it to the EnableTransactionPoint field.
func (o *UserSettingsInformation) SetEnableTransactionPoint(v string) {
	o.EnableTransactionPoint = &v
}

// GetEnableTransactionPointMetadata returns the EnableTransactionPointMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetEnableTransactionPointMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableTransactionPointMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableTransactionPointMetadata
}

// GetEnableTransactionPointMetadataOk returns a tuple with the EnableTransactionPointMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetEnableTransactionPointMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableTransactionPointMetadata) {
		return nil, false
	}
	return o.EnableTransactionPointMetadata, true
}

// HasEnableTransactionPointMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasEnableTransactionPointMetadata() bool {
	if o != nil && !IsNil(o.EnableTransactionPointMetadata) {
		return true
	}

	return false
}

// SetEnableTransactionPointMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableTransactionPointMetadata field.
func (o *UserSettingsInformation) SetEnableTransactionPointMetadata(v SettingsMetadata) {
	o.EnableTransactionPointMetadata = &v
}

// GetEnableVaulting returns the EnableVaulting field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetEnableVaulting() string {
	if o == nil || IsNil(o.EnableVaulting) {
		var ret string
		return ret
	}
	return *o.EnableVaulting
}

// GetEnableVaultingOk returns a tuple with the EnableVaulting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetEnableVaultingOk() (*string, bool) {
	if o == nil || IsNil(o.EnableVaulting) {
		return nil, false
	}
	return o.EnableVaulting, true
}

// HasEnableVaulting returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasEnableVaulting() bool {
	if o != nil && !IsNil(o.EnableVaulting) {
		return true
	}

	return false
}

// SetEnableVaulting gets a reference to the given string and assigns it to the EnableVaulting field.
func (o *UserSettingsInformation) SetEnableVaulting(v string) {
	o.EnableVaulting = &v
}

// GetEnableVaultingMetadata returns the EnableVaultingMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetEnableVaultingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.EnableVaultingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.EnableVaultingMetadata
}

// GetEnableVaultingMetadataOk returns a tuple with the EnableVaultingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetEnableVaultingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.EnableVaultingMetadata) {
		return nil, false
	}
	return o.EnableVaultingMetadata, true
}

// HasEnableVaultingMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasEnableVaultingMetadata() bool {
	if o != nil && !IsNil(o.EnableVaultingMetadata) {
		return true
	}

	return false
}

// SetEnableVaultingMetadata gets a reference to the given SettingsMetadata and assigns it to the EnableVaultingMetadata field.
func (o *UserSettingsInformation) SetEnableVaultingMetadata(v SettingsMetadata) {
	o.EnableVaultingMetadata = &v
}

// GetExpressSendOnly returns the ExpressSendOnly field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetExpressSendOnly() string {
	if o == nil || IsNil(o.ExpressSendOnly) {
		var ret string
		return ret
	}
	return *o.ExpressSendOnly
}

// GetExpressSendOnlyOk returns a tuple with the ExpressSendOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetExpressSendOnlyOk() (*string, bool) {
	if o == nil || IsNil(o.ExpressSendOnly) {
		return nil, false
	}
	return o.ExpressSendOnly, true
}

// HasExpressSendOnly returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasExpressSendOnly() bool {
	if o != nil && !IsNil(o.ExpressSendOnly) {
		return true
	}

	return false
}

// SetExpressSendOnly gets a reference to the given string and assigns it to the ExpressSendOnly field.
func (o *UserSettingsInformation) SetExpressSendOnly(v string) {
	o.ExpressSendOnly = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetLocale() string {
	if o == nil || IsNil(o.Locale) {
		var ret string
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.Locale) {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasLocale() bool {
	if o != nil && !IsNil(o.Locale) {
		return true
	}

	return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *UserSettingsInformation) SetLocale(v string) {
	o.Locale = &v
}

// GetLocaleMetadata returns the LocaleMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetLocaleMetadata() SettingsMetadata {
	if o == nil || IsNil(o.LocaleMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.LocaleMetadata
}

// GetLocaleMetadataOk returns a tuple with the LocaleMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetLocaleMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.LocaleMetadata) {
		return nil, false
	}
	return o.LocaleMetadata, true
}

// HasLocaleMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasLocaleMetadata() bool {
	if o != nil && !IsNil(o.LocaleMetadata) {
		return true
	}

	return false
}

// SetLocaleMetadata gets a reference to the given SettingsMetadata and assigns it to the LocaleMetadata field.
func (o *UserSettingsInformation) SetLocaleMetadata(v SettingsMetadata) {
	o.LocaleMetadata = &v
}

// GetLocalePolicy returns the LocalePolicy field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetLocalePolicy() LocalePolicy {
	if o == nil || IsNil(o.LocalePolicy) {
		var ret LocalePolicy
		return ret
	}
	return *o.LocalePolicy
}

// GetLocalePolicyOk returns a tuple with the LocalePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetLocalePolicyOk() (*LocalePolicy, bool) {
	if o == nil || IsNil(o.LocalePolicy) {
		return nil, false
	}
	return o.LocalePolicy, true
}

// HasLocalePolicy returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasLocalePolicy() bool {
	if o != nil && !IsNil(o.LocalePolicy) {
		return true
	}

	return false
}

// SetLocalePolicy gets a reference to the given LocalePolicy and assigns it to the LocalePolicy field.
func (o *UserSettingsInformation) SetLocalePolicy(v LocalePolicy) {
	o.LocalePolicy = &v
}

// GetManageClickwrapsMode returns the ManageClickwrapsMode field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetManageClickwrapsMode() string {
	if o == nil || IsNil(o.ManageClickwrapsMode) {
		var ret string
		return ret
	}
	return *o.ManageClickwrapsMode
}

// GetManageClickwrapsModeOk returns a tuple with the ManageClickwrapsMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetManageClickwrapsModeOk() (*string, bool) {
	if o == nil || IsNil(o.ManageClickwrapsMode) {
		return nil, false
	}
	return o.ManageClickwrapsMode, true
}

// HasManageClickwrapsMode returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasManageClickwrapsMode() bool {
	if o != nil && !IsNil(o.ManageClickwrapsMode) {
		return true
	}

	return false
}

// SetManageClickwrapsMode gets a reference to the given string and assigns it to the ManageClickwrapsMode field.
func (o *UserSettingsInformation) SetManageClickwrapsMode(v string) {
	o.ManageClickwrapsMode = &v
}

// GetManageClickwrapsModeMetadata returns the ManageClickwrapsModeMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetManageClickwrapsModeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ManageClickwrapsModeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ManageClickwrapsModeMetadata
}

// GetManageClickwrapsModeMetadataOk returns a tuple with the ManageClickwrapsModeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetManageClickwrapsModeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ManageClickwrapsModeMetadata) {
		return nil, false
	}
	return o.ManageClickwrapsModeMetadata, true
}

// HasManageClickwrapsModeMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasManageClickwrapsModeMetadata() bool {
	if o != nil && !IsNil(o.ManageClickwrapsModeMetadata) {
		return true
	}

	return false
}

// SetManageClickwrapsModeMetadata gets a reference to the given SettingsMetadata and assigns it to the ManageClickwrapsModeMetadata field.
func (o *UserSettingsInformation) SetManageClickwrapsModeMetadata(v SettingsMetadata) {
	o.ManageClickwrapsModeMetadata = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetModifiedBy() string {
	if o == nil || IsNil(o.ModifiedBy) {
		var ret string
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedBy) {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasModifiedBy() bool {
	if o != nil && !IsNil(o.ModifiedBy) {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given string and assigns it to the ModifiedBy field.
func (o *UserSettingsInformation) SetModifiedBy(v string) {
	o.ModifiedBy = &v
}

// GetModifiedByMetadata returns the ModifiedByMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetModifiedByMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ModifiedByMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ModifiedByMetadata
}

// GetModifiedByMetadataOk returns a tuple with the ModifiedByMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetModifiedByMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ModifiedByMetadata) {
		return nil, false
	}
	return o.ModifiedByMetadata, true
}

// HasModifiedByMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasModifiedByMetadata() bool {
	if o != nil && !IsNil(o.ModifiedByMetadata) {
		return true
	}

	return false
}

// SetModifiedByMetadata gets a reference to the given SettingsMetadata and assigns it to the ModifiedByMetadata field.
func (o *UserSettingsInformation) SetModifiedByMetadata(v SettingsMetadata) {
	o.ModifiedByMetadata = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetModifiedDate() string {
	if o == nil || IsNil(o.ModifiedDate) {
		var ret string
		return ret
	}
	return *o.ModifiedDate
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetModifiedDateOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedDate) {
		return nil, false
	}
	return o.ModifiedDate, true
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasModifiedDate() bool {
	if o != nil && !IsNil(o.ModifiedDate) {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given string and assigns it to the ModifiedDate field.
func (o *UserSettingsInformation) SetModifiedDate(v string) {
	o.ModifiedDate = &v
}

// GetModifiedDateMetadata returns the ModifiedDateMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetModifiedDateMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ModifiedDateMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ModifiedDateMetadata
}

// GetModifiedDateMetadataOk returns a tuple with the ModifiedDateMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetModifiedDateMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ModifiedDateMetadata) {
		return nil, false
	}
	return o.ModifiedDateMetadata, true
}

// HasModifiedDateMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasModifiedDateMetadata() bool {
	if o != nil && !IsNil(o.ModifiedDateMetadata) {
		return true
	}

	return false
}

// SetModifiedDateMetadata gets a reference to the given SettingsMetadata and assigns it to the ModifiedDateMetadata field.
func (o *UserSettingsInformation) SetModifiedDateMetadata(v SettingsMetadata) {
	o.ModifiedDateMetadata = &v
}

// GetModifiedPage returns the ModifiedPage field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetModifiedPage() string {
	if o == nil || IsNil(o.ModifiedPage) {
		var ret string
		return ret
	}
	return *o.ModifiedPage
}

// GetModifiedPageOk returns a tuple with the ModifiedPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetModifiedPageOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedPage) {
		return nil, false
	}
	return o.ModifiedPage, true
}

// HasModifiedPage returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasModifiedPage() bool {
	if o != nil && !IsNil(o.ModifiedPage) {
		return true
	}

	return false
}

// SetModifiedPage gets a reference to the given string and assigns it to the ModifiedPage field.
func (o *UserSettingsInformation) SetModifiedPage(v string) {
	o.ModifiedPage = &v
}

// GetModifiedPageMetadata returns the ModifiedPageMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetModifiedPageMetadata() SettingsMetadata {
	if o == nil || IsNil(o.ModifiedPageMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.ModifiedPageMetadata
}

// GetModifiedPageMetadataOk returns a tuple with the ModifiedPageMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetModifiedPageMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.ModifiedPageMetadata) {
		return nil, false
	}
	return o.ModifiedPageMetadata, true
}

// HasModifiedPageMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasModifiedPageMetadata() bool {
	if o != nil && !IsNil(o.ModifiedPageMetadata) {
		return true
	}

	return false
}

// SetModifiedPageMetadata gets a reference to the given SettingsMetadata and assigns it to the ModifiedPageMetadata field.
func (o *UserSettingsInformation) SetModifiedPageMetadata(v SettingsMetadata) {
	o.ModifiedPageMetadata = &v
}

// GetNewSendUI returns the NewSendUI field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetNewSendUI() string {
	if o == nil || IsNil(o.NewSendUI) {
		var ret string
		return ret
	}
	return *o.NewSendUI
}

// GetNewSendUIOk returns a tuple with the NewSendUI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetNewSendUIOk() (*string, bool) {
	if o == nil || IsNil(o.NewSendUI) {
		return nil, false
	}
	return o.NewSendUI, true
}

// HasNewSendUI returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasNewSendUI() bool {
	if o != nil && !IsNil(o.NewSendUI) {
		return true
	}

	return false
}

// SetNewSendUI gets a reference to the given string and assigns it to the NewSendUI field.
func (o *UserSettingsInformation) SetNewSendUI(v string) {
	o.NewSendUI = &v
}

// GetNewSendUIMetadata returns the NewSendUIMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetNewSendUIMetadata() SettingsMetadata {
	if o == nil || IsNil(o.NewSendUIMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.NewSendUIMetadata
}

// GetNewSendUIMetadataOk returns a tuple with the NewSendUIMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetNewSendUIMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.NewSendUIMetadata) {
		return nil, false
	}
	return o.NewSendUIMetadata, true
}

// HasNewSendUIMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasNewSendUIMetadata() bool {
	if o != nil && !IsNil(o.NewSendUIMetadata) {
		return true
	}

	return false
}

// SetNewSendUIMetadata gets a reference to the given SettingsMetadata and assigns it to the NewSendUIMetadata field.
func (o *UserSettingsInformation) SetNewSendUIMetadata(v SettingsMetadata) {
	o.NewSendUIMetadata = &v
}

// GetPowerFormMode returns the PowerFormMode field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetPowerFormMode() string {
	if o == nil || IsNil(o.PowerFormMode) {
		var ret string
		return ret
	}
	return *o.PowerFormMode
}

// GetPowerFormModeOk returns a tuple with the PowerFormMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetPowerFormModeOk() (*string, bool) {
	if o == nil || IsNil(o.PowerFormMode) {
		return nil, false
	}
	return o.PowerFormMode, true
}

// HasPowerFormMode returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasPowerFormMode() bool {
	if o != nil && !IsNil(o.PowerFormMode) {
		return true
	}

	return false
}

// SetPowerFormMode gets a reference to the given string and assigns it to the PowerFormMode field.
func (o *UserSettingsInformation) SetPowerFormMode(v string) {
	o.PowerFormMode = &v
}

// GetPowerFormModeMetadata returns the PowerFormModeMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetPowerFormModeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.PowerFormModeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.PowerFormModeMetadata
}

// GetPowerFormModeMetadataOk returns a tuple with the PowerFormModeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetPowerFormModeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.PowerFormModeMetadata) {
		return nil, false
	}
	return o.PowerFormModeMetadata, true
}

// HasPowerFormModeMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasPowerFormModeMetadata() bool {
	if o != nil && !IsNil(o.PowerFormModeMetadata) {
		return true
	}

	return false
}

// SetPowerFormModeMetadata gets a reference to the given SettingsMetadata and assigns it to the PowerFormModeMetadata field.
func (o *UserSettingsInformation) SetPowerFormModeMetadata(v SettingsMetadata) {
	o.PowerFormModeMetadata = &v
}

// GetRecipientViewedNotification returns the RecipientViewedNotification field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetRecipientViewedNotification() string {
	if o == nil || IsNil(o.RecipientViewedNotification) {
		var ret string
		return ret
	}
	return *o.RecipientViewedNotification
}

// GetRecipientViewedNotificationOk returns a tuple with the RecipientViewedNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetRecipientViewedNotificationOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientViewedNotification) {
		return nil, false
	}
	return o.RecipientViewedNotification, true
}

// HasRecipientViewedNotification returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasRecipientViewedNotification() bool {
	if o != nil && !IsNil(o.RecipientViewedNotification) {
		return true
	}

	return false
}

// SetRecipientViewedNotification gets a reference to the given string and assigns it to the RecipientViewedNotification field.
func (o *UserSettingsInformation) SetRecipientViewedNotification(v string) {
	o.RecipientViewedNotification = &v
}

// GetRecipientViewedNotificationMetadata returns the RecipientViewedNotificationMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetRecipientViewedNotificationMetadata() SettingsMetadata {
	if o == nil || IsNil(o.RecipientViewedNotificationMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.RecipientViewedNotificationMetadata
}

// GetRecipientViewedNotificationMetadataOk returns a tuple with the RecipientViewedNotificationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetRecipientViewedNotificationMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.RecipientViewedNotificationMetadata) {
		return nil, false
	}
	return o.RecipientViewedNotificationMetadata, true
}

// HasRecipientViewedNotificationMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasRecipientViewedNotificationMetadata() bool {
	if o != nil && !IsNil(o.RecipientViewedNotificationMetadata) {
		return true
	}

	return false
}

// SetRecipientViewedNotificationMetadata gets a reference to the given SettingsMetadata and assigns it to the RecipientViewedNotificationMetadata field.
func (o *UserSettingsInformation) SetRecipientViewedNotificationMetadata(v SettingsMetadata) {
	o.RecipientViewedNotificationMetadata = &v
}

// GetSealIdentifiers returns the SealIdentifiers field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetSealIdentifiers() []SealIdentifier {
	if o == nil || IsNil(o.SealIdentifiers) {
		var ret []SealIdentifier
		return ret
	}
	return o.SealIdentifiers
}

// GetSealIdentifiersOk returns a tuple with the SealIdentifiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetSealIdentifiersOk() ([]SealIdentifier, bool) {
	if o == nil || IsNil(o.SealIdentifiers) {
		return nil, false
	}
	return o.SealIdentifiers, true
}

// HasSealIdentifiers returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasSealIdentifiers() bool {
	if o != nil && !IsNil(o.SealIdentifiers) {
		return true
	}

	return false
}

// SetSealIdentifiers gets a reference to the given []SealIdentifier and assigns it to the SealIdentifiers field.
func (o *UserSettingsInformation) SetSealIdentifiers(v []SealIdentifier) {
	o.SealIdentifiers = v
}

// GetSelfSignedRecipientEmailDocument returns the SelfSignedRecipientEmailDocument field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetSelfSignedRecipientEmailDocument() string {
	if o == nil || IsNil(o.SelfSignedRecipientEmailDocument) {
		var ret string
		return ret
	}
	return *o.SelfSignedRecipientEmailDocument
}

// GetSelfSignedRecipientEmailDocumentOk returns a tuple with the SelfSignedRecipientEmailDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetSelfSignedRecipientEmailDocumentOk() (*string, bool) {
	if o == nil || IsNil(o.SelfSignedRecipientEmailDocument) {
		return nil, false
	}
	return o.SelfSignedRecipientEmailDocument, true
}

// HasSelfSignedRecipientEmailDocument returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasSelfSignedRecipientEmailDocument() bool {
	if o != nil && !IsNil(o.SelfSignedRecipientEmailDocument) {
		return true
	}

	return false
}

// SetSelfSignedRecipientEmailDocument gets a reference to the given string and assigns it to the SelfSignedRecipientEmailDocument field.
func (o *UserSettingsInformation) SetSelfSignedRecipientEmailDocument(v string) {
	o.SelfSignedRecipientEmailDocument = &v
}

// GetSelfSignedRecipientEmailDocumentMetadata returns the SelfSignedRecipientEmailDocumentMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetSelfSignedRecipientEmailDocumentMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SelfSignedRecipientEmailDocumentMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SelfSignedRecipientEmailDocumentMetadata
}

// GetSelfSignedRecipientEmailDocumentMetadataOk returns a tuple with the SelfSignedRecipientEmailDocumentMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetSelfSignedRecipientEmailDocumentMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SelfSignedRecipientEmailDocumentMetadata) {
		return nil, false
	}
	return o.SelfSignedRecipientEmailDocumentMetadata, true
}

// HasSelfSignedRecipientEmailDocumentMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasSelfSignedRecipientEmailDocumentMetadata() bool {
	if o != nil && !IsNil(o.SelfSignedRecipientEmailDocumentMetadata) {
		return true
	}

	return false
}

// SetSelfSignedRecipientEmailDocumentMetadata gets a reference to the given SettingsMetadata and assigns it to the SelfSignedRecipientEmailDocumentMetadata field.
func (o *UserSettingsInformation) SetSelfSignedRecipientEmailDocumentMetadata(v SettingsMetadata) {
	o.SelfSignedRecipientEmailDocumentMetadata = &v
}

// GetSenderEmailNotifications returns the SenderEmailNotifications field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetSenderEmailNotifications() SenderEmailNotifications {
	if o == nil || IsNil(o.SenderEmailNotifications) {
		var ret SenderEmailNotifications
		return ret
	}
	return *o.SenderEmailNotifications
}

// GetSenderEmailNotificationsOk returns a tuple with the SenderEmailNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetSenderEmailNotificationsOk() (*SenderEmailNotifications, bool) {
	if o == nil || IsNil(o.SenderEmailNotifications) {
		return nil, false
	}
	return o.SenderEmailNotifications, true
}

// HasSenderEmailNotifications returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasSenderEmailNotifications() bool {
	if o != nil && !IsNil(o.SenderEmailNotifications) {
		return true
	}

	return false
}

// SetSenderEmailNotifications gets a reference to the given SenderEmailNotifications and assigns it to the SenderEmailNotifications field.
func (o *UserSettingsInformation) SetSenderEmailNotifications(v SenderEmailNotifications) {
	o.SenderEmailNotifications = &v
}

// GetSignerEmailNotifications returns the SignerEmailNotifications field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetSignerEmailNotifications() SignerEmailNotifications {
	if o == nil || IsNil(o.SignerEmailNotifications) {
		var ret SignerEmailNotifications
		return ret
	}
	return *o.SignerEmailNotifications
}

// GetSignerEmailNotificationsOk returns a tuple with the SignerEmailNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetSignerEmailNotificationsOk() (*SignerEmailNotifications, bool) {
	if o == nil || IsNil(o.SignerEmailNotifications) {
		return nil, false
	}
	return o.SignerEmailNotifications, true
}

// HasSignerEmailNotifications returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasSignerEmailNotifications() bool {
	if o != nil && !IsNil(o.SignerEmailNotifications) {
		return true
	}

	return false
}

// SetSignerEmailNotifications gets a reference to the given SignerEmailNotifications and assigns it to the SignerEmailNotifications field.
func (o *UserSettingsInformation) SetSignerEmailNotifications(v SignerEmailNotifications) {
	o.SignerEmailNotifications = &v
}

// GetSupplementalDocumentIncludeInDownload returns the SupplementalDocumentIncludeInDownload field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetSupplementalDocumentIncludeInDownload() string {
	if o == nil || IsNil(o.SupplementalDocumentIncludeInDownload) {
		var ret string
		return ret
	}
	return *o.SupplementalDocumentIncludeInDownload
}

// GetSupplementalDocumentIncludeInDownloadOk returns a tuple with the SupplementalDocumentIncludeInDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetSupplementalDocumentIncludeInDownloadOk() (*string, bool) {
	if o == nil || IsNil(o.SupplementalDocumentIncludeInDownload) {
		return nil, false
	}
	return o.SupplementalDocumentIncludeInDownload, true
}

// HasSupplementalDocumentIncludeInDownload returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasSupplementalDocumentIncludeInDownload() bool {
	if o != nil && !IsNil(o.SupplementalDocumentIncludeInDownload) {
		return true
	}

	return false
}

// SetSupplementalDocumentIncludeInDownload gets a reference to the given string and assigns it to the SupplementalDocumentIncludeInDownload field.
func (o *UserSettingsInformation) SetSupplementalDocumentIncludeInDownload(v string) {
	o.SupplementalDocumentIncludeInDownload = &v
}

// GetSupplementalDocumentsMustAccept returns the SupplementalDocumentsMustAccept field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetSupplementalDocumentsMustAccept() string {
	if o == nil || IsNil(o.SupplementalDocumentsMustAccept) {
		var ret string
		return ret
	}
	return *o.SupplementalDocumentsMustAccept
}

// GetSupplementalDocumentsMustAcceptOk returns a tuple with the SupplementalDocumentsMustAccept field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetSupplementalDocumentsMustAcceptOk() (*string, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustAccept) {
		return nil, false
	}
	return o.SupplementalDocumentsMustAccept, true
}

// HasSupplementalDocumentsMustAccept returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasSupplementalDocumentsMustAccept() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustAccept) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustAccept gets a reference to the given string and assigns it to the SupplementalDocumentsMustAccept field.
func (o *UserSettingsInformation) SetSupplementalDocumentsMustAccept(v string) {
	o.SupplementalDocumentsMustAccept = &v
}

// GetSupplementalDocumentsMustAcceptMetadata returns the SupplementalDocumentsMustAcceptMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetSupplementalDocumentsMustAcceptMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SupplementalDocumentsMustAcceptMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SupplementalDocumentsMustAcceptMetadata
}

// GetSupplementalDocumentsMustAcceptMetadataOk returns a tuple with the SupplementalDocumentsMustAcceptMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetSupplementalDocumentsMustAcceptMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustAcceptMetadata) {
		return nil, false
	}
	return o.SupplementalDocumentsMustAcceptMetadata, true
}

// HasSupplementalDocumentsMustAcceptMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasSupplementalDocumentsMustAcceptMetadata() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustAcceptMetadata) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustAcceptMetadata gets a reference to the given SettingsMetadata and assigns it to the SupplementalDocumentsMustAcceptMetadata field.
func (o *UserSettingsInformation) SetSupplementalDocumentsMustAcceptMetadata(v SettingsMetadata) {
	o.SupplementalDocumentsMustAcceptMetadata = &v
}

// GetSupplementalDocumentsMustRead returns the SupplementalDocumentsMustRead field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetSupplementalDocumentsMustRead() string {
	if o == nil || IsNil(o.SupplementalDocumentsMustRead) {
		var ret string
		return ret
	}
	return *o.SupplementalDocumentsMustRead
}

// GetSupplementalDocumentsMustReadOk returns a tuple with the SupplementalDocumentsMustRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetSupplementalDocumentsMustReadOk() (*string, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustRead) {
		return nil, false
	}
	return o.SupplementalDocumentsMustRead, true
}

// HasSupplementalDocumentsMustRead returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasSupplementalDocumentsMustRead() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustRead) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustRead gets a reference to the given string and assigns it to the SupplementalDocumentsMustRead field.
func (o *UserSettingsInformation) SetSupplementalDocumentsMustRead(v string) {
	o.SupplementalDocumentsMustRead = &v
}

// GetSupplementalDocumentsMustReadMetadata returns the SupplementalDocumentsMustReadMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetSupplementalDocumentsMustReadMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SupplementalDocumentsMustReadMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SupplementalDocumentsMustReadMetadata
}

// GetSupplementalDocumentsMustReadMetadataOk returns a tuple with the SupplementalDocumentsMustReadMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetSupplementalDocumentsMustReadMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustReadMetadata) {
		return nil, false
	}
	return o.SupplementalDocumentsMustReadMetadata, true
}

// HasSupplementalDocumentsMustReadMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasSupplementalDocumentsMustReadMetadata() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustReadMetadata) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustReadMetadata gets a reference to the given SettingsMetadata and assigns it to the SupplementalDocumentsMustReadMetadata field.
func (o *UserSettingsInformation) SetSupplementalDocumentsMustReadMetadata(v SettingsMetadata) {
	o.SupplementalDocumentsMustReadMetadata = &v
}

// GetSupplementalDocumentsMustView returns the SupplementalDocumentsMustView field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetSupplementalDocumentsMustView() string {
	if o == nil || IsNil(o.SupplementalDocumentsMustView) {
		var ret string
		return ret
	}
	return *o.SupplementalDocumentsMustView
}

// GetSupplementalDocumentsMustViewOk returns a tuple with the SupplementalDocumentsMustView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetSupplementalDocumentsMustViewOk() (*string, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustView) {
		return nil, false
	}
	return o.SupplementalDocumentsMustView, true
}

// HasSupplementalDocumentsMustView returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasSupplementalDocumentsMustView() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustView) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustView gets a reference to the given string and assigns it to the SupplementalDocumentsMustView field.
func (o *UserSettingsInformation) SetSupplementalDocumentsMustView(v string) {
	o.SupplementalDocumentsMustView = &v
}

// GetSupplementalDocumentsMustViewMetadata returns the SupplementalDocumentsMustViewMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetSupplementalDocumentsMustViewMetadata() SettingsMetadata {
	if o == nil || IsNil(o.SupplementalDocumentsMustViewMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.SupplementalDocumentsMustViewMetadata
}

// GetSupplementalDocumentsMustViewMetadataOk returns a tuple with the SupplementalDocumentsMustViewMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetSupplementalDocumentsMustViewMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.SupplementalDocumentsMustViewMetadata) {
		return nil, false
	}
	return o.SupplementalDocumentsMustViewMetadata, true
}

// HasSupplementalDocumentsMustViewMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasSupplementalDocumentsMustViewMetadata() bool {
	if o != nil && !IsNil(o.SupplementalDocumentsMustViewMetadata) {
		return true
	}

	return false
}

// SetSupplementalDocumentsMustViewMetadata gets a reference to the given SettingsMetadata and assigns it to the SupplementalDocumentsMustViewMetadata field.
func (o *UserSettingsInformation) SetSupplementalDocumentsMustViewMetadata(v SettingsMetadata) {
	o.SupplementalDocumentsMustViewMetadata = &v
}

// GetTemplateActiveCreation returns the TemplateActiveCreation field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTemplateActiveCreation() string {
	if o == nil || IsNil(o.TemplateActiveCreation) {
		var ret string
		return ret
	}
	return *o.TemplateActiveCreation
}

// GetTemplateActiveCreationOk returns a tuple with the TemplateActiveCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTemplateActiveCreationOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateActiveCreation) {
		return nil, false
	}
	return o.TemplateActiveCreation, true
}

// HasTemplateActiveCreation returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTemplateActiveCreation() bool {
	if o != nil && !IsNil(o.TemplateActiveCreation) {
		return true
	}

	return false
}

// SetTemplateActiveCreation gets a reference to the given string and assigns it to the TemplateActiveCreation field.
func (o *UserSettingsInformation) SetTemplateActiveCreation(v string) {
	o.TemplateActiveCreation = &v
}

// GetTemplateActiveCreationMetadata returns the TemplateActiveCreationMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTemplateActiveCreationMetadata() SettingsMetadata {
	if o == nil || IsNil(o.TemplateActiveCreationMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.TemplateActiveCreationMetadata
}

// GetTemplateActiveCreationMetadataOk returns a tuple with the TemplateActiveCreationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTemplateActiveCreationMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.TemplateActiveCreationMetadata) {
		return nil, false
	}
	return o.TemplateActiveCreationMetadata, true
}

// HasTemplateActiveCreationMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTemplateActiveCreationMetadata() bool {
	if o != nil && !IsNil(o.TemplateActiveCreationMetadata) {
		return true
	}

	return false
}

// SetTemplateActiveCreationMetadata gets a reference to the given SettingsMetadata and assigns it to the TemplateActiveCreationMetadata field.
func (o *UserSettingsInformation) SetTemplateActiveCreationMetadata(v SettingsMetadata) {
	o.TemplateActiveCreationMetadata = &v
}

// GetTemplateApplyNotify returns the TemplateApplyNotify field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTemplateApplyNotify() string {
	if o == nil || IsNil(o.TemplateApplyNotify) {
		var ret string
		return ret
	}
	return *o.TemplateApplyNotify
}

// GetTemplateApplyNotifyOk returns a tuple with the TemplateApplyNotify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTemplateApplyNotifyOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateApplyNotify) {
		return nil, false
	}
	return o.TemplateApplyNotify, true
}

// HasTemplateApplyNotify returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTemplateApplyNotify() bool {
	if o != nil && !IsNil(o.TemplateApplyNotify) {
		return true
	}

	return false
}

// SetTemplateApplyNotify gets a reference to the given string and assigns it to the TemplateApplyNotify field.
func (o *UserSettingsInformation) SetTemplateApplyNotify(v string) {
	o.TemplateApplyNotify = &v
}

// GetTemplateApplyNotifyMetadata returns the TemplateApplyNotifyMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTemplateApplyNotifyMetadata() SettingsMetadata {
	if o == nil || IsNil(o.TemplateApplyNotifyMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.TemplateApplyNotifyMetadata
}

// GetTemplateApplyNotifyMetadataOk returns a tuple with the TemplateApplyNotifyMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTemplateApplyNotifyMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.TemplateApplyNotifyMetadata) {
		return nil, false
	}
	return o.TemplateApplyNotifyMetadata, true
}

// HasTemplateApplyNotifyMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTemplateApplyNotifyMetadata() bool {
	if o != nil && !IsNil(o.TemplateApplyNotifyMetadata) {
		return true
	}

	return false
}

// SetTemplateApplyNotifyMetadata gets a reference to the given SettingsMetadata and assigns it to the TemplateApplyNotifyMetadata field.
func (o *UserSettingsInformation) SetTemplateApplyNotifyMetadata(v SettingsMetadata) {
	o.TemplateApplyNotifyMetadata = &v
}

// GetTemplateAutoMatching returns the TemplateAutoMatching field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTemplateAutoMatching() string {
	if o == nil || IsNil(o.TemplateAutoMatching) {
		var ret string
		return ret
	}
	return *o.TemplateAutoMatching
}

// GetTemplateAutoMatchingOk returns a tuple with the TemplateAutoMatching field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTemplateAutoMatchingOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateAutoMatching) {
		return nil, false
	}
	return o.TemplateAutoMatching, true
}

// HasTemplateAutoMatching returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTemplateAutoMatching() bool {
	if o != nil && !IsNil(o.TemplateAutoMatching) {
		return true
	}

	return false
}

// SetTemplateAutoMatching gets a reference to the given string and assigns it to the TemplateAutoMatching field.
func (o *UserSettingsInformation) SetTemplateAutoMatching(v string) {
	o.TemplateAutoMatching = &v
}

// GetTemplateAutoMatchingMetadata returns the TemplateAutoMatchingMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTemplateAutoMatchingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.TemplateAutoMatchingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.TemplateAutoMatchingMetadata
}

// GetTemplateAutoMatchingMetadataOk returns a tuple with the TemplateAutoMatchingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTemplateAutoMatchingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.TemplateAutoMatchingMetadata) {
		return nil, false
	}
	return o.TemplateAutoMatchingMetadata, true
}

// HasTemplateAutoMatchingMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTemplateAutoMatchingMetadata() bool {
	if o != nil && !IsNil(o.TemplateAutoMatchingMetadata) {
		return true
	}

	return false
}

// SetTemplateAutoMatchingMetadata gets a reference to the given SettingsMetadata and assigns it to the TemplateAutoMatchingMetadata field.
func (o *UserSettingsInformation) SetTemplateAutoMatchingMetadata(v SettingsMetadata) {
	o.TemplateAutoMatchingMetadata = &v
}

// GetTemplateMatchingSensitivity returns the TemplateMatchingSensitivity field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTemplateMatchingSensitivity() string {
	if o == nil || IsNil(o.TemplateMatchingSensitivity) {
		var ret string
		return ret
	}
	return *o.TemplateMatchingSensitivity
}

// GetTemplateMatchingSensitivityOk returns a tuple with the TemplateMatchingSensitivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTemplateMatchingSensitivityOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateMatchingSensitivity) {
		return nil, false
	}
	return o.TemplateMatchingSensitivity, true
}

// HasTemplateMatchingSensitivity returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTemplateMatchingSensitivity() bool {
	if o != nil && !IsNil(o.TemplateMatchingSensitivity) {
		return true
	}

	return false
}

// SetTemplateMatchingSensitivity gets a reference to the given string and assigns it to the TemplateMatchingSensitivity field.
func (o *UserSettingsInformation) SetTemplateMatchingSensitivity(v string) {
	o.TemplateMatchingSensitivity = &v
}

// GetTemplateMatchingSensitivityMetadata returns the TemplateMatchingSensitivityMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTemplateMatchingSensitivityMetadata() SettingsMetadata {
	if o == nil || IsNil(o.TemplateMatchingSensitivityMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.TemplateMatchingSensitivityMetadata
}

// GetTemplateMatchingSensitivityMetadataOk returns a tuple with the TemplateMatchingSensitivityMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTemplateMatchingSensitivityMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.TemplateMatchingSensitivityMetadata) {
		return nil, false
	}
	return o.TemplateMatchingSensitivityMetadata, true
}

// HasTemplateMatchingSensitivityMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTemplateMatchingSensitivityMetadata() bool {
	if o != nil && !IsNil(o.TemplateMatchingSensitivityMetadata) {
		return true
	}

	return false
}

// SetTemplateMatchingSensitivityMetadata gets a reference to the given SettingsMetadata and assigns it to the TemplateMatchingSensitivityMetadata field.
func (o *UserSettingsInformation) SetTemplateMatchingSensitivityMetadata(v SettingsMetadata) {
	o.TemplateMatchingSensitivityMetadata = &v
}

// GetTemplatePageLevelMatching returns the TemplatePageLevelMatching field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTemplatePageLevelMatching() string {
	if o == nil || IsNil(o.TemplatePageLevelMatching) {
		var ret string
		return ret
	}
	return *o.TemplatePageLevelMatching
}

// GetTemplatePageLevelMatchingOk returns a tuple with the TemplatePageLevelMatching field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTemplatePageLevelMatchingOk() (*string, bool) {
	if o == nil || IsNil(o.TemplatePageLevelMatching) {
		return nil, false
	}
	return o.TemplatePageLevelMatching, true
}

// HasTemplatePageLevelMatching returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTemplatePageLevelMatching() bool {
	if o != nil && !IsNil(o.TemplatePageLevelMatching) {
		return true
	}

	return false
}

// SetTemplatePageLevelMatching gets a reference to the given string and assigns it to the TemplatePageLevelMatching field.
func (o *UserSettingsInformation) SetTemplatePageLevelMatching(v string) {
	o.TemplatePageLevelMatching = &v
}

// GetTemplatePageLevelMatchingMetadata returns the TemplatePageLevelMatchingMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTemplatePageLevelMatchingMetadata() SettingsMetadata {
	if o == nil || IsNil(o.TemplatePageLevelMatchingMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.TemplatePageLevelMatchingMetadata
}

// GetTemplatePageLevelMatchingMetadataOk returns a tuple with the TemplatePageLevelMatchingMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTemplatePageLevelMatchingMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.TemplatePageLevelMatchingMetadata) {
		return nil, false
	}
	return o.TemplatePageLevelMatchingMetadata, true
}

// HasTemplatePageLevelMatchingMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTemplatePageLevelMatchingMetadata() bool {
	if o != nil && !IsNil(o.TemplatePageLevelMatchingMetadata) {
		return true
	}

	return false
}

// SetTemplatePageLevelMatchingMetadata gets a reference to the given SettingsMetadata and assigns it to the TemplatePageLevelMatchingMetadata field.
func (o *UserSettingsInformation) SetTemplatePageLevelMatchingMetadata(v SettingsMetadata) {
	o.TemplatePageLevelMatchingMetadata = &v
}

// GetTimezoneDST returns the TimezoneDST field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTimezoneDST() string {
	if o == nil || IsNil(o.TimezoneDST) {
		var ret string
		return ret
	}
	return *o.TimezoneDST
}

// GetTimezoneDSTOk returns a tuple with the TimezoneDST field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTimezoneDSTOk() (*string, bool) {
	if o == nil || IsNil(o.TimezoneDST) {
		return nil, false
	}
	return o.TimezoneDST, true
}

// HasTimezoneDST returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTimezoneDST() bool {
	if o != nil && !IsNil(o.TimezoneDST) {
		return true
	}

	return false
}

// SetTimezoneDST gets a reference to the given string and assigns it to the TimezoneDST field.
func (o *UserSettingsInformation) SetTimezoneDST(v string) {
	o.TimezoneDST = &v
}

// GetTimezoneDSTMetadata returns the TimezoneDSTMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTimezoneDSTMetadata() SettingsMetadata {
	if o == nil || IsNil(o.TimezoneDSTMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.TimezoneDSTMetadata
}

// GetTimezoneDSTMetadataOk returns a tuple with the TimezoneDSTMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTimezoneDSTMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.TimezoneDSTMetadata) {
		return nil, false
	}
	return o.TimezoneDSTMetadata, true
}

// HasTimezoneDSTMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTimezoneDSTMetadata() bool {
	if o != nil && !IsNil(o.TimezoneDSTMetadata) {
		return true
	}

	return false
}

// SetTimezoneDSTMetadata gets a reference to the given SettingsMetadata and assigns it to the TimezoneDSTMetadata field.
func (o *UserSettingsInformation) SetTimezoneDSTMetadata(v SettingsMetadata) {
	o.TimezoneDSTMetadata = &v
}

// GetTimezoneMask returns the TimezoneMask field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTimezoneMask() string {
	if o == nil || IsNil(o.TimezoneMask) {
		var ret string
		return ret
	}
	return *o.TimezoneMask
}

// GetTimezoneMaskOk returns a tuple with the TimezoneMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTimezoneMaskOk() (*string, bool) {
	if o == nil || IsNil(o.TimezoneMask) {
		return nil, false
	}
	return o.TimezoneMask, true
}

// HasTimezoneMask returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTimezoneMask() bool {
	if o != nil && !IsNil(o.TimezoneMask) {
		return true
	}

	return false
}

// SetTimezoneMask gets a reference to the given string and assigns it to the TimezoneMask field.
func (o *UserSettingsInformation) SetTimezoneMask(v string) {
	o.TimezoneMask = &v
}

// GetTimezoneMaskMetadata returns the TimezoneMaskMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTimezoneMaskMetadata() SettingsMetadata {
	if o == nil || IsNil(o.TimezoneMaskMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.TimezoneMaskMetadata
}

// GetTimezoneMaskMetadataOk returns a tuple with the TimezoneMaskMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTimezoneMaskMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.TimezoneMaskMetadata) {
		return nil, false
	}
	return o.TimezoneMaskMetadata, true
}

// HasTimezoneMaskMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTimezoneMaskMetadata() bool {
	if o != nil && !IsNil(o.TimezoneMaskMetadata) {
		return true
	}

	return false
}

// SetTimezoneMaskMetadata gets a reference to the given SettingsMetadata and assigns it to the TimezoneMaskMetadata field.
func (o *UserSettingsInformation) SetTimezoneMaskMetadata(v SettingsMetadata) {
	o.TimezoneMaskMetadata = &v
}

// GetTimezoneOffset returns the TimezoneOffset field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTimezoneOffset() string {
	if o == nil || IsNil(o.TimezoneOffset) {
		var ret string
		return ret
	}
	return *o.TimezoneOffset
}

// GetTimezoneOffsetOk returns a tuple with the TimezoneOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTimezoneOffsetOk() (*string, bool) {
	if o == nil || IsNil(o.TimezoneOffset) {
		return nil, false
	}
	return o.TimezoneOffset, true
}

// HasTimezoneOffset returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTimezoneOffset() bool {
	if o != nil && !IsNil(o.TimezoneOffset) {
		return true
	}

	return false
}

// SetTimezoneOffset gets a reference to the given string and assigns it to the TimezoneOffset field.
func (o *UserSettingsInformation) SetTimezoneOffset(v string) {
	o.TimezoneOffset = &v
}

// GetTimezoneOffsetMetadata returns the TimezoneOffsetMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTimezoneOffsetMetadata() SettingsMetadata {
	if o == nil || IsNil(o.TimezoneOffsetMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.TimezoneOffsetMetadata
}

// GetTimezoneOffsetMetadataOk returns a tuple with the TimezoneOffsetMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTimezoneOffsetMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.TimezoneOffsetMetadata) {
		return nil, false
	}
	return o.TimezoneOffsetMetadata, true
}

// HasTimezoneOffsetMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTimezoneOffsetMetadata() bool {
	if o != nil && !IsNil(o.TimezoneOffsetMetadata) {
		return true
	}

	return false
}

// SetTimezoneOffsetMetadata gets a reference to the given SettingsMetadata and assigns it to the TimezoneOffsetMetadata field.
func (o *UserSettingsInformation) SetTimezoneOffsetMetadata(v SettingsMetadata) {
	o.TimezoneOffsetMetadata = &v
}

// GetTimezoneSendingPref returns the TimezoneSendingPref field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTimezoneSendingPref() string {
	if o == nil || IsNil(o.TimezoneSendingPref) {
		var ret string
		return ret
	}
	return *o.TimezoneSendingPref
}

// GetTimezoneSendingPrefOk returns a tuple with the TimezoneSendingPref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTimezoneSendingPrefOk() (*string, bool) {
	if o == nil || IsNil(o.TimezoneSendingPref) {
		return nil, false
	}
	return o.TimezoneSendingPref, true
}

// HasTimezoneSendingPref returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTimezoneSendingPref() bool {
	if o != nil && !IsNil(o.TimezoneSendingPref) {
		return true
	}

	return false
}

// SetTimezoneSendingPref gets a reference to the given string and assigns it to the TimezoneSendingPref field.
func (o *UserSettingsInformation) SetTimezoneSendingPref(v string) {
	o.TimezoneSendingPref = &v
}

// GetTimezoneSendingPrefMetadata returns the TimezoneSendingPrefMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTimezoneSendingPrefMetadata() SettingsMetadata {
	if o == nil || IsNil(o.TimezoneSendingPrefMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.TimezoneSendingPrefMetadata
}

// GetTimezoneSendingPrefMetadataOk returns a tuple with the TimezoneSendingPrefMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTimezoneSendingPrefMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.TimezoneSendingPrefMetadata) {
		return nil, false
	}
	return o.TimezoneSendingPrefMetadata, true
}

// HasTimezoneSendingPrefMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTimezoneSendingPrefMetadata() bool {
	if o != nil && !IsNil(o.TimezoneSendingPrefMetadata) {
		return true
	}

	return false
}

// SetTimezoneSendingPrefMetadata gets a reference to the given SettingsMetadata and assigns it to the TimezoneSendingPrefMetadata field.
func (o *UserSettingsInformation) SetTimezoneSendingPrefMetadata(v SettingsMetadata) {
	o.TimezoneSendingPrefMetadata = &v
}

// GetTimezoneSigningPref returns the TimezoneSigningPref field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTimezoneSigningPref() string {
	if o == nil || IsNil(o.TimezoneSigningPref) {
		var ret string
		return ret
	}
	return *o.TimezoneSigningPref
}

// GetTimezoneSigningPrefOk returns a tuple with the TimezoneSigningPref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTimezoneSigningPrefOk() (*string, bool) {
	if o == nil || IsNil(o.TimezoneSigningPref) {
		return nil, false
	}
	return o.TimezoneSigningPref, true
}

// HasTimezoneSigningPref returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTimezoneSigningPref() bool {
	if o != nil && !IsNil(o.TimezoneSigningPref) {
		return true
	}

	return false
}

// SetTimezoneSigningPref gets a reference to the given string and assigns it to the TimezoneSigningPref field.
func (o *UserSettingsInformation) SetTimezoneSigningPref(v string) {
	o.TimezoneSigningPref = &v
}

// GetTimezoneSigningPrefMetadata returns the TimezoneSigningPrefMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTimezoneSigningPrefMetadata() SettingsMetadata {
	if o == nil || IsNil(o.TimezoneSigningPrefMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.TimezoneSigningPrefMetadata
}

// GetTimezoneSigningPrefMetadataOk returns a tuple with the TimezoneSigningPrefMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTimezoneSigningPrefMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.TimezoneSigningPrefMetadata) {
		return nil, false
	}
	return o.TimezoneSigningPrefMetadata, true
}

// HasTimezoneSigningPrefMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTimezoneSigningPrefMetadata() bool {
	if o != nil && !IsNil(o.TimezoneSigningPrefMetadata) {
		return true
	}

	return false
}

// SetTimezoneSigningPrefMetadata gets a reference to the given SettingsMetadata and assigns it to the TimezoneSigningPrefMetadata field.
func (o *UserSettingsInformation) SetTimezoneSigningPrefMetadata(v SettingsMetadata) {
	o.TimezoneSigningPrefMetadata = &v
}

// GetTransactionPointSiteNameURL returns the TransactionPointSiteNameURL field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTransactionPointSiteNameURL() string {
	if o == nil || IsNil(o.TransactionPointSiteNameURL) {
		var ret string
		return ret
	}
	return *o.TransactionPointSiteNameURL
}

// GetTransactionPointSiteNameURLOk returns a tuple with the TransactionPointSiteNameURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTransactionPointSiteNameURLOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionPointSiteNameURL) {
		return nil, false
	}
	return o.TransactionPointSiteNameURL, true
}

// HasTransactionPointSiteNameURL returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTransactionPointSiteNameURL() bool {
	if o != nil && !IsNil(o.TransactionPointSiteNameURL) {
		return true
	}

	return false
}

// SetTransactionPointSiteNameURL gets a reference to the given string and assigns it to the TransactionPointSiteNameURL field.
func (o *UserSettingsInformation) SetTransactionPointSiteNameURL(v string) {
	o.TransactionPointSiteNameURL = &v
}

// GetTransactionPointSiteNameURLMetadata returns the TransactionPointSiteNameURLMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTransactionPointSiteNameURLMetadata() SettingsMetadata {
	if o == nil || IsNil(o.TransactionPointSiteNameURLMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.TransactionPointSiteNameURLMetadata
}

// GetTransactionPointSiteNameURLMetadataOk returns a tuple with the TransactionPointSiteNameURLMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTransactionPointSiteNameURLMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.TransactionPointSiteNameURLMetadata) {
		return nil, false
	}
	return o.TransactionPointSiteNameURLMetadata, true
}

// HasTransactionPointSiteNameURLMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTransactionPointSiteNameURLMetadata() bool {
	if o != nil && !IsNil(o.TransactionPointSiteNameURLMetadata) {
		return true
	}

	return false
}

// SetTransactionPointSiteNameURLMetadata gets a reference to the given SettingsMetadata and assigns it to the TransactionPointSiteNameURLMetadata field.
func (o *UserSettingsInformation) SetTransactionPointSiteNameURLMetadata(v SettingsMetadata) {
	o.TransactionPointSiteNameURLMetadata = &v
}

// GetTransactionPointUserName returns the TransactionPointUserName field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTransactionPointUserName() string {
	if o == nil || IsNil(o.TransactionPointUserName) {
		var ret string
		return ret
	}
	return *o.TransactionPointUserName
}

// GetTransactionPointUserNameOk returns a tuple with the TransactionPointUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTransactionPointUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionPointUserName) {
		return nil, false
	}
	return o.TransactionPointUserName, true
}

// HasTransactionPointUserName returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTransactionPointUserName() bool {
	if o != nil && !IsNil(o.TransactionPointUserName) {
		return true
	}

	return false
}

// SetTransactionPointUserName gets a reference to the given string and assigns it to the TransactionPointUserName field.
func (o *UserSettingsInformation) SetTransactionPointUserName(v string) {
	o.TransactionPointUserName = &v
}

// GetTransactionPointUserNameMetadata returns the TransactionPointUserNameMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetTransactionPointUserNameMetadata() SettingsMetadata {
	if o == nil || IsNil(o.TransactionPointUserNameMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.TransactionPointUserNameMetadata
}

// GetTransactionPointUserNameMetadataOk returns a tuple with the TransactionPointUserNameMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetTransactionPointUserNameMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.TransactionPointUserNameMetadata) {
		return nil, false
	}
	return o.TransactionPointUserNameMetadata, true
}

// HasTransactionPointUserNameMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasTransactionPointUserNameMetadata() bool {
	if o != nil && !IsNil(o.TransactionPointUserNameMetadata) {
		return true
	}

	return false
}

// SetTransactionPointUserNameMetadata gets a reference to the given SettingsMetadata and assigns it to the TransactionPointUserNameMetadata field.
func (o *UserSettingsInformation) SetTransactionPointUserNameMetadata(v SettingsMetadata) {
	o.TransactionPointUserNameMetadata = &v
}

// GetVaultingMode returns the VaultingMode field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetVaultingMode() string {
	if o == nil || IsNil(o.VaultingMode) {
		var ret string
		return ret
	}
	return *o.VaultingMode
}

// GetVaultingModeOk returns a tuple with the VaultingMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetVaultingModeOk() (*string, bool) {
	if o == nil || IsNil(o.VaultingMode) {
		return nil, false
	}
	return o.VaultingMode, true
}

// HasVaultingMode returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasVaultingMode() bool {
	if o != nil && !IsNil(o.VaultingMode) {
		return true
	}

	return false
}

// SetVaultingMode gets a reference to the given string and assigns it to the VaultingMode field.
func (o *UserSettingsInformation) SetVaultingMode(v string) {
	o.VaultingMode = &v
}

// GetVaultingModeMetadata returns the VaultingModeMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetVaultingModeMetadata() SettingsMetadata {
	if o == nil || IsNil(o.VaultingModeMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.VaultingModeMetadata
}

// GetVaultingModeMetadataOk returns a tuple with the VaultingModeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetVaultingModeMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.VaultingModeMetadata) {
		return nil, false
	}
	return o.VaultingModeMetadata, true
}

// HasVaultingModeMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasVaultingModeMetadata() bool {
	if o != nil && !IsNil(o.VaultingModeMetadata) {
		return true
	}

	return false
}

// SetVaultingModeMetadata gets a reference to the given SettingsMetadata and assigns it to the VaultingModeMetadata field.
func (o *UserSettingsInformation) SetVaultingModeMetadata(v SettingsMetadata) {
	o.VaultingModeMetadata = &v
}

// GetWebForms returns the WebForms field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetWebForms() string {
	if o == nil || IsNil(o.WebForms) {
		var ret string
		return ret
	}
	return *o.WebForms
}

// GetWebFormsOk returns a tuple with the WebForms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetWebFormsOk() (*string, bool) {
	if o == nil || IsNil(o.WebForms) {
		return nil, false
	}
	return o.WebForms, true
}

// HasWebForms returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasWebForms() bool {
	if o != nil && !IsNil(o.WebForms) {
		return true
	}

	return false
}

// SetWebForms gets a reference to the given string and assigns it to the WebForms field.
func (o *UserSettingsInformation) SetWebForms(v string) {
	o.WebForms = &v
}

// GetWebFormsMetadata returns the WebFormsMetadata field value if set, zero value otherwise.
func (o *UserSettingsInformation) GetWebFormsMetadata() SettingsMetadata {
	if o == nil || IsNil(o.WebFormsMetadata) {
		var ret SettingsMetadata
		return ret
	}
	return *o.WebFormsMetadata
}

// GetWebFormsMetadataOk returns a tuple with the WebFormsMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsInformation) GetWebFormsMetadataOk() (*SettingsMetadata, bool) {
	if o == nil || IsNil(o.WebFormsMetadata) {
		return nil, false
	}
	return o.WebFormsMetadata, true
}

// HasWebFormsMetadata returns a boolean if a field has been set.
func (o *UserSettingsInformation) HasWebFormsMetadata() bool {
	if o != nil && !IsNil(o.WebFormsMetadata) {
		return true
	}

	return false
}

// SetWebFormsMetadata gets a reference to the given SettingsMetadata and assigns it to the WebFormsMetadata field.
func (o *UserSettingsInformation) SetWebFormsMetadata(v SettingsMetadata) {
	o.WebFormsMetadata = &v
}

func (o UserSettingsInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSettingsInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountManagementGranular) {
		toSerialize["accountManagementGranular"] = o.AccountManagementGranular
	}
	if !IsNil(o.AdminOnly) {
		toSerialize["adminOnly"] = o.AdminOnly
	}
	if !IsNil(o.AdminOnlyMetadata) {
		toSerialize["adminOnlyMetadata"] = o.AdminOnlyMetadata
	}
	if !IsNil(o.AllowAutoTagging) {
		toSerialize["allowAutoTagging"] = o.AllowAutoTagging
	}
	if !IsNil(o.AllowedOrchestrationAccess) {
		toSerialize["allowedOrchestrationAccess"] = o.AllowedOrchestrationAccess
	}
	if !IsNil(o.AllowedOrchestrationAccessMetadata) {
		toSerialize["allowedOrchestrationAccessMetadata"] = o.AllowedOrchestrationAccessMetadata
	}
	if !IsNil(o.AllowEnvelopeTransferTo) {
		toSerialize["allowEnvelopeTransferTo"] = o.AllowEnvelopeTransferTo
	}
	if !IsNil(o.AllowEnvelopeTransferToMetadata) {
		toSerialize["allowEnvelopeTransferToMetadata"] = o.AllowEnvelopeTransferToMetadata
	}
	if !IsNil(o.AllowEsealRecipients) {
		toSerialize["allowEsealRecipients"] = o.AllowEsealRecipients
	}
	if !IsNil(o.AllowEsealRecipientsMetadata) {
		toSerialize["allowEsealRecipientsMetadata"] = o.AllowEsealRecipientsMetadata
	}
	if !IsNil(o.AllowPowerFormsAdminToAccessAllPowerFormEnvelope) {
		toSerialize["allowPowerFormsAdminToAccessAllPowerFormEnvelope"] = o.AllowPowerFormsAdminToAccessAllPowerFormEnvelope
	}
	if !IsNil(o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata) {
		toSerialize["allowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata"] = o.AllowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata
	}
	if !IsNil(o.AllowRecipientLanguageSelection) {
		toSerialize["allowRecipientLanguageSelection"] = o.AllowRecipientLanguageSelection
	}
	if !IsNil(o.AllowRecipientLanguageSelectionMetadata) {
		toSerialize["allowRecipientLanguageSelectionMetadata"] = o.AllowRecipientLanguageSelectionMetadata
	}
	if !IsNil(o.AllowSendOnBehalfOf) {
		toSerialize["allowSendOnBehalfOf"] = o.AllowSendOnBehalfOf
	}
	if !IsNil(o.AllowSendOnBehalfOfMetadata) {
		toSerialize["allowSendOnBehalfOfMetadata"] = o.AllowSendOnBehalfOfMetadata
	}
	if !IsNil(o.AllowSupplementalDocuments) {
		toSerialize["allowSupplementalDocuments"] = o.AllowSupplementalDocuments
	}
	if !IsNil(o.AllowSupplementalDocumentsMetadata) {
		toSerialize["allowSupplementalDocumentsMetadata"] = o.AllowSupplementalDocumentsMetadata
	}
	if !IsNil(o.AllowTransactions) {
		toSerialize["allowTransactions"] = o.AllowTransactions
	}
	if !IsNil(o.AllowTransactionsMetadata) {
		toSerialize["allowTransactionsMetadata"] = o.AllowTransactionsMetadata
	}
	if !IsNil(o.AnchorTagVersionedPlacementEnabled) {
		toSerialize["anchorTagVersionedPlacementEnabled"] = o.AnchorTagVersionedPlacementEnabled
	}
	if !IsNil(o.ApiAccountWideAccess) {
		toSerialize["apiAccountWideAccess"] = o.ApiAccountWideAccess
	}
	if !IsNil(o.ApiAccountWideAccessMetadata) {
		toSerialize["apiAccountWideAccessMetadata"] = o.ApiAccountWideAccessMetadata
	}
	if !IsNil(o.ApiCanExportAC) {
		toSerialize["apiCanExportAC"] = o.ApiCanExportAC
	}
	if !IsNil(o.ApiCanExportACMetadata) {
		toSerialize["apiCanExportACMetadata"] = o.ApiCanExportACMetadata
	}
	if !IsNil(o.BulkSend) {
		toSerialize["bulkSend"] = o.BulkSend
	}
	if !IsNil(o.BulkSendMetadata) {
		toSerialize["bulkSendMetadata"] = o.BulkSendMetadata
	}
	if !IsNil(o.CanChargeAccount) {
		toSerialize["canChargeAccount"] = o.CanChargeAccount
	}
	if !IsNil(o.CanChargeAccountMetadata) {
		toSerialize["canChargeAccountMetadata"] = o.CanChargeAccountMetadata
	}
	if !IsNil(o.CanCreateTransaction) {
		toSerialize["canCreateTransaction"] = o.CanCreateTransaction
	}
	if !IsNil(o.CanCreateTransactionMetadata) {
		toSerialize["canCreateTransactionMetadata"] = o.CanCreateTransactionMetadata
	}
	if !IsNil(o.CanDeleteDocumentsInTransaction) {
		toSerialize["canDeleteDocumentsInTransaction"] = o.CanDeleteDocumentsInTransaction
	}
	if !IsNil(o.CanDeleteDocumentsInTransactionMetadata) {
		toSerialize["canDeleteDocumentsInTransactionMetadata"] = o.CanDeleteDocumentsInTransactionMetadata
	}
	if !IsNil(o.CanDeleteTransaction) {
		toSerialize["canDeleteTransaction"] = o.CanDeleteTransaction
	}
	if !IsNil(o.CanDeleteTransactionMetadata) {
		toSerialize["canDeleteTransactionMetadata"] = o.CanDeleteTransactionMetadata
	}
	if !IsNil(o.CanEditSharedAddressbook) {
		toSerialize["canEditSharedAddressbook"] = o.CanEditSharedAddressbook
	}
	if !IsNil(o.CanEditSharedAddressbookMetadata) {
		toSerialize["canEditSharedAddressbookMetadata"] = o.CanEditSharedAddressbookMetadata
	}
	if !IsNil(o.CanLockEnvelopes) {
		toSerialize["canLockEnvelopes"] = o.CanLockEnvelopes
	}
	if !IsNil(o.CanLockEnvelopesMetadata) {
		toSerialize["canLockEnvelopesMetadata"] = o.CanLockEnvelopesMetadata
	}
	if !IsNil(o.CanManageAccount) {
		toSerialize["canManageAccount"] = o.CanManageAccount
	}
	if !IsNil(o.CanManageAccountMetadata) {
		toSerialize["canManageAccountMetadata"] = o.CanManageAccountMetadata
	}
	if !IsNil(o.CanManageDistributor) {
		toSerialize["canManageDistributor"] = o.CanManageDistributor
	}
	if !IsNil(o.CanManageDistributorMetadata) {
		toSerialize["canManageDistributorMetadata"] = o.CanManageDistributorMetadata
	}
	if !IsNil(o.CanManageTemplates) {
		toSerialize["canManageTemplates"] = o.CanManageTemplates
	}
	if !IsNil(o.CanManageTemplatesMetadata) {
		toSerialize["canManageTemplatesMetadata"] = o.CanManageTemplatesMetadata
	}
	if !IsNil(o.CanSendAPIRequests) {
		toSerialize["canSendAPIRequests"] = o.CanSendAPIRequests
	}
	if !IsNil(o.CanSendAPIRequestsMetadata) {
		toSerialize["canSendAPIRequestsMetadata"] = o.CanSendAPIRequestsMetadata
	}
	if !IsNil(o.CanSendEnvelope) {
		toSerialize["canSendEnvelope"] = o.CanSendEnvelope
	}
	if !IsNil(o.CanSendEnvelopeMetadata) {
		toSerialize["canSendEnvelopeMetadata"] = o.CanSendEnvelopeMetadata
	}
	if !IsNil(o.CanSendEnvelopesViaSMS) {
		toSerialize["canSendEnvelopesViaSMS"] = o.CanSendEnvelopesViaSMS
	}
	if !IsNil(o.CanSendEnvelopesViaSMSMetadata) {
		toSerialize["canSendEnvelopesViaSMSMetadata"] = o.CanSendEnvelopesViaSMSMetadata
	}
	if !IsNil(o.CanSignEnvelope) {
		toSerialize["canSignEnvelope"] = o.CanSignEnvelope
	}
	if !IsNil(o.CanSignEnvelopeMetadata) {
		toSerialize["canSignEnvelopeMetadata"] = o.CanSignEnvelopeMetadata
	}
	if !IsNil(o.CanUseScratchpad) {
		toSerialize["canUseScratchpad"] = o.CanUseScratchpad
	}
	if !IsNil(o.CanUseScratchpadMetadata) {
		toSerialize["canUseScratchpadMetadata"] = o.CanUseScratchpadMetadata
	}
	if !IsNil(o.CanUseSmartContracts) {
		toSerialize["canUseSmartContracts"] = o.CanUseSmartContracts
	}
	if !IsNil(o.CanUseSmartContractsMetadata) {
		toSerialize["canUseSmartContractsMetadata"] = o.CanUseSmartContractsMetadata
	}
	if !IsNil(o.DisableDocumentUpload) {
		toSerialize["disableDocumentUpload"] = o.DisableDocumentUpload
	}
	if !IsNil(o.DisableDocumentUploadMetadata) {
		toSerialize["disableDocumentUploadMetadata"] = o.DisableDocumentUploadMetadata
	}
	if !IsNil(o.DisableOtherActions) {
		toSerialize["disableOtherActions"] = o.DisableOtherActions
	}
	if !IsNil(o.DisableOtherActionsMetadata) {
		toSerialize["disableOtherActionsMetadata"] = o.DisableOtherActionsMetadata
	}
	if !IsNil(o.EnableDSPro) {
		toSerialize["enableDSPro"] = o.EnableDSPro
	}
	if !IsNil(o.EnableDSProMetadata) {
		toSerialize["enableDSProMetadata"] = o.EnableDSProMetadata
	}
	if !IsNil(o.EnableKeyTermsSuggestionsByDocumentType) {
		toSerialize["enableKeyTermsSuggestionsByDocumentType"] = o.EnableKeyTermsSuggestionsByDocumentType
	}
	if !IsNil(o.EnableKeyTermsSuggestionsByDocumentTypeMetadata) {
		toSerialize["enableKeyTermsSuggestionsByDocumentTypeMetadata"] = o.EnableKeyTermsSuggestionsByDocumentTypeMetadata
	}
	if !IsNil(o.EnableSequentialSigningAPI) {
		toSerialize["enableSequentialSigningAPI"] = o.EnableSequentialSigningAPI
	}
	if !IsNil(o.EnableSequentialSigningAPIMetadata) {
		toSerialize["enableSequentialSigningAPIMetadata"] = o.EnableSequentialSigningAPIMetadata
	}
	if !IsNil(o.EnableSequentialSigningUI) {
		toSerialize["enableSequentialSigningUI"] = o.EnableSequentialSigningUI
	}
	if !IsNil(o.EnableSequentialSigningUIMetadata) {
		toSerialize["enableSequentialSigningUIMetadata"] = o.EnableSequentialSigningUIMetadata
	}
	if !IsNil(o.EnableSignerAttachments) {
		toSerialize["enableSignerAttachments"] = o.EnableSignerAttachments
	}
	if !IsNil(o.EnableSignerAttachmentsMetadata) {
		toSerialize["enableSignerAttachmentsMetadata"] = o.EnableSignerAttachmentsMetadata
	}
	if !IsNil(o.EnableSignOnPaperOverride) {
		toSerialize["enableSignOnPaperOverride"] = o.EnableSignOnPaperOverride
	}
	if !IsNil(o.EnableSignOnPaperOverrideMetadata) {
		toSerialize["enableSignOnPaperOverrideMetadata"] = o.EnableSignOnPaperOverrideMetadata
	}
	if !IsNil(o.EnableTransactionPoint) {
		toSerialize["enableTransactionPoint"] = o.EnableTransactionPoint
	}
	if !IsNil(o.EnableTransactionPointMetadata) {
		toSerialize["enableTransactionPointMetadata"] = o.EnableTransactionPointMetadata
	}
	if !IsNil(o.EnableVaulting) {
		toSerialize["enableVaulting"] = o.EnableVaulting
	}
	if !IsNil(o.EnableVaultingMetadata) {
		toSerialize["enableVaultingMetadata"] = o.EnableVaultingMetadata
	}
	if !IsNil(o.ExpressSendOnly) {
		toSerialize["expressSendOnly"] = o.ExpressSendOnly
	}
	if !IsNil(o.Locale) {
		toSerialize["locale"] = o.Locale
	}
	if !IsNil(o.LocaleMetadata) {
		toSerialize["localeMetadata"] = o.LocaleMetadata
	}
	if !IsNil(o.LocalePolicy) {
		toSerialize["localePolicy"] = o.LocalePolicy
	}
	if !IsNil(o.ManageClickwrapsMode) {
		toSerialize["manageClickwrapsMode"] = o.ManageClickwrapsMode
	}
	if !IsNil(o.ManageClickwrapsModeMetadata) {
		toSerialize["manageClickwrapsModeMetadata"] = o.ManageClickwrapsModeMetadata
	}
	if !IsNil(o.ModifiedBy) {
		toSerialize["modifiedBy"] = o.ModifiedBy
	}
	if !IsNil(o.ModifiedByMetadata) {
		toSerialize["modifiedByMetadata"] = o.ModifiedByMetadata
	}
	if !IsNil(o.ModifiedDate) {
		toSerialize["modifiedDate"] = o.ModifiedDate
	}
	if !IsNil(o.ModifiedDateMetadata) {
		toSerialize["modifiedDateMetadata"] = o.ModifiedDateMetadata
	}
	if !IsNil(o.ModifiedPage) {
		toSerialize["modifiedPage"] = o.ModifiedPage
	}
	if !IsNil(o.ModifiedPageMetadata) {
		toSerialize["modifiedPageMetadata"] = o.ModifiedPageMetadata
	}
	if !IsNil(o.NewSendUI) {
		toSerialize["newSendUI"] = o.NewSendUI
	}
	if !IsNil(o.NewSendUIMetadata) {
		toSerialize["newSendUIMetadata"] = o.NewSendUIMetadata
	}
	if !IsNil(o.PowerFormMode) {
		toSerialize["powerFormMode"] = o.PowerFormMode
	}
	if !IsNil(o.PowerFormModeMetadata) {
		toSerialize["powerFormModeMetadata"] = o.PowerFormModeMetadata
	}
	if !IsNil(o.RecipientViewedNotification) {
		toSerialize["recipientViewedNotification"] = o.RecipientViewedNotification
	}
	if !IsNil(o.RecipientViewedNotificationMetadata) {
		toSerialize["recipientViewedNotificationMetadata"] = o.RecipientViewedNotificationMetadata
	}
	if !IsNil(o.SealIdentifiers) {
		toSerialize["sealIdentifiers"] = o.SealIdentifiers
	}
	if !IsNil(o.SelfSignedRecipientEmailDocument) {
		toSerialize["selfSignedRecipientEmailDocument"] = o.SelfSignedRecipientEmailDocument
	}
	if !IsNil(o.SelfSignedRecipientEmailDocumentMetadata) {
		toSerialize["selfSignedRecipientEmailDocumentMetadata"] = o.SelfSignedRecipientEmailDocumentMetadata
	}
	if !IsNil(o.SenderEmailNotifications) {
		toSerialize["senderEmailNotifications"] = o.SenderEmailNotifications
	}
	if !IsNil(o.SignerEmailNotifications) {
		toSerialize["signerEmailNotifications"] = o.SignerEmailNotifications
	}
	if !IsNil(o.SupplementalDocumentIncludeInDownload) {
		toSerialize["supplementalDocumentIncludeInDownload"] = o.SupplementalDocumentIncludeInDownload
	}
	if !IsNil(o.SupplementalDocumentsMustAccept) {
		toSerialize["supplementalDocumentsMustAccept"] = o.SupplementalDocumentsMustAccept
	}
	if !IsNil(o.SupplementalDocumentsMustAcceptMetadata) {
		toSerialize["supplementalDocumentsMustAcceptMetadata"] = o.SupplementalDocumentsMustAcceptMetadata
	}
	if !IsNil(o.SupplementalDocumentsMustRead) {
		toSerialize["supplementalDocumentsMustRead"] = o.SupplementalDocumentsMustRead
	}
	if !IsNil(o.SupplementalDocumentsMustReadMetadata) {
		toSerialize["supplementalDocumentsMustReadMetadata"] = o.SupplementalDocumentsMustReadMetadata
	}
	if !IsNil(o.SupplementalDocumentsMustView) {
		toSerialize["supplementalDocumentsMustView"] = o.SupplementalDocumentsMustView
	}
	if !IsNil(o.SupplementalDocumentsMustViewMetadata) {
		toSerialize["supplementalDocumentsMustViewMetadata"] = o.SupplementalDocumentsMustViewMetadata
	}
	if !IsNil(o.TemplateActiveCreation) {
		toSerialize["templateActiveCreation"] = o.TemplateActiveCreation
	}
	if !IsNil(o.TemplateActiveCreationMetadata) {
		toSerialize["templateActiveCreationMetadata"] = o.TemplateActiveCreationMetadata
	}
	if !IsNil(o.TemplateApplyNotify) {
		toSerialize["templateApplyNotify"] = o.TemplateApplyNotify
	}
	if !IsNil(o.TemplateApplyNotifyMetadata) {
		toSerialize["templateApplyNotifyMetadata"] = o.TemplateApplyNotifyMetadata
	}
	if !IsNil(o.TemplateAutoMatching) {
		toSerialize["templateAutoMatching"] = o.TemplateAutoMatching
	}
	if !IsNil(o.TemplateAutoMatchingMetadata) {
		toSerialize["templateAutoMatchingMetadata"] = o.TemplateAutoMatchingMetadata
	}
	if !IsNil(o.TemplateMatchingSensitivity) {
		toSerialize["templateMatchingSensitivity"] = o.TemplateMatchingSensitivity
	}
	if !IsNil(o.TemplateMatchingSensitivityMetadata) {
		toSerialize["templateMatchingSensitivityMetadata"] = o.TemplateMatchingSensitivityMetadata
	}
	if !IsNil(o.TemplatePageLevelMatching) {
		toSerialize["templatePageLevelMatching"] = o.TemplatePageLevelMatching
	}
	if !IsNil(o.TemplatePageLevelMatchingMetadata) {
		toSerialize["templatePageLevelMatchingMetadata"] = o.TemplatePageLevelMatchingMetadata
	}
	if !IsNil(o.TimezoneDST) {
		toSerialize["timezoneDST"] = o.TimezoneDST
	}
	if !IsNil(o.TimezoneDSTMetadata) {
		toSerialize["timezoneDSTMetadata"] = o.TimezoneDSTMetadata
	}
	if !IsNil(o.TimezoneMask) {
		toSerialize["timezoneMask"] = o.TimezoneMask
	}
	if !IsNil(o.TimezoneMaskMetadata) {
		toSerialize["timezoneMaskMetadata"] = o.TimezoneMaskMetadata
	}
	if !IsNil(o.TimezoneOffset) {
		toSerialize["timezoneOffset"] = o.TimezoneOffset
	}
	if !IsNil(o.TimezoneOffsetMetadata) {
		toSerialize["timezoneOffsetMetadata"] = o.TimezoneOffsetMetadata
	}
	if !IsNil(o.TimezoneSendingPref) {
		toSerialize["timezoneSendingPref"] = o.TimezoneSendingPref
	}
	if !IsNil(o.TimezoneSendingPrefMetadata) {
		toSerialize["timezoneSendingPrefMetadata"] = o.TimezoneSendingPrefMetadata
	}
	if !IsNil(o.TimezoneSigningPref) {
		toSerialize["timezoneSigningPref"] = o.TimezoneSigningPref
	}
	if !IsNil(o.TimezoneSigningPrefMetadata) {
		toSerialize["timezoneSigningPrefMetadata"] = o.TimezoneSigningPrefMetadata
	}
	if !IsNil(o.TransactionPointSiteNameURL) {
		toSerialize["transactionPointSiteNameURL"] = o.TransactionPointSiteNameURL
	}
	if !IsNil(o.TransactionPointSiteNameURLMetadata) {
		toSerialize["transactionPointSiteNameURLMetadata"] = o.TransactionPointSiteNameURLMetadata
	}
	if !IsNil(o.TransactionPointUserName) {
		toSerialize["transactionPointUserName"] = o.TransactionPointUserName
	}
	if !IsNil(o.TransactionPointUserNameMetadata) {
		toSerialize["transactionPointUserNameMetadata"] = o.TransactionPointUserNameMetadata
	}
	if !IsNil(o.VaultingMode) {
		toSerialize["vaultingMode"] = o.VaultingMode
	}
	if !IsNil(o.VaultingModeMetadata) {
		toSerialize["vaultingModeMetadata"] = o.VaultingModeMetadata
	}
	if !IsNil(o.WebForms) {
		toSerialize["webForms"] = o.WebForms
	}
	if !IsNil(o.WebFormsMetadata) {
		toSerialize["webFormsMetadata"] = o.WebFormsMetadata
	}
	return toSerialize, nil
}

type NullableUserSettingsInformation struct {
	value *UserSettingsInformation
	isSet bool
}

func (v NullableUserSettingsInformation) Get() *UserSettingsInformation {
	return v.value
}

func (v *NullableUserSettingsInformation) Set(val *UserSettingsInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSettingsInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSettingsInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSettingsInformation(val *UserSettingsInformation) *NullableUserSettingsInformation {
	return &NullableUserSettingsInformation{value: val, isSet: true}
}

func (v NullableUserSettingsInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSettingsInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


