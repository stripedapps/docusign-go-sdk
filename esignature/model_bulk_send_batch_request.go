/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BulkSendBatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkSendBatchRequest{}

// BulkSendBatchRequest 
type BulkSendBatchRequest struct {
	// The new name of the bulk send batch.  This property is required. The maximum length of the string is 500 characters.
	BatchName *string `json:"batchName,omitempty"`
}

// NewBulkSendBatchRequest instantiates a new BulkSendBatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkSendBatchRequest() *BulkSendBatchRequest {
	this := BulkSendBatchRequest{}
	return &this
}

// NewBulkSendBatchRequestWithDefaults instantiates a new BulkSendBatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkSendBatchRequestWithDefaults() *BulkSendBatchRequest {
	this := BulkSendBatchRequest{}
	return &this
}

// GetBatchName returns the BatchName field value if set, zero value otherwise.
func (o *BulkSendBatchRequest) GetBatchName() string {
	if o == nil || IsNil(o.BatchName) {
		var ret string
		return ret
	}
	return *o.BatchName
}

// GetBatchNameOk returns a tuple with the BatchName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchRequest) GetBatchNameOk() (*string, bool) {
	if o == nil || IsNil(o.BatchName) {
		return nil, false
	}
	return o.BatchName, true
}

// HasBatchName returns a boolean if a field has been set.
func (o *BulkSendBatchRequest) HasBatchName() bool {
	if o != nil && !IsNil(o.BatchName) {
		return true
	}

	return false
}

// SetBatchName gets a reference to the given string and assigns it to the BatchName field.
func (o *BulkSendBatchRequest) SetBatchName(v string) {
	o.BatchName = &v
}

func (o BulkSendBatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkSendBatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BatchName) {
		toSerialize["batchName"] = o.BatchName
	}
	return toSerialize, nil
}

type NullableBulkSendBatchRequest struct {
	value *BulkSendBatchRequest
	isSet bool
}

func (v NullableBulkSendBatchRequest) Get() *BulkSendBatchRequest {
	return v.value
}

func (v *NullableBulkSendBatchRequest) Set(val *BulkSendBatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkSendBatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkSendBatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkSendBatchRequest(val *BulkSendBatchRequest) *NullableBulkSendBatchRequest {
	return &NullableBulkSendBatchRequest{value: val, isSet: true}
}

func (v NullableBulkSendBatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkSendBatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


