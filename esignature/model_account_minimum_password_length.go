/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AccountMinimumPasswordLength type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountMinimumPasswordLength{}

// AccountMinimumPasswordLength 
type AccountMinimumPasswordLength struct {
	// The maximum number of entry characters supported by the custom tab.
	MaximumLength *string `json:"maximumLength,omitempty"`
	// Minimum length of the access code string.
	MinimumLength *string `json:"minimumLength,omitempty"`
}

// NewAccountMinimumPasswordLength instantiates a new AccountMinimumPasswordLength object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountMinimumPasswordLength() *AccountMinimumPasswordLength {
	this := AccountMinimumPasswordLength{}
	return &this
}

// NewAccountMinimumPasswordLengthWithDefaults instantiates a new AccountMinimumPasswordLength object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountMinimumPasswordLengthWithDefaults() *AccountMinimumPasswordLength {
	this := AccountMinimumPasswordLength{}
	return &this
}

// GetMaximumLength returns the MaximumLength field value if set, zero value otherwise.
func (o *AccountMinimumPasswordLength) GetMaximumLength() string {
	if o == nil || IsNil(o.MaximumLength) {
		var ret string
		return ret
	}
	return *o.MaximumLength
}

// GetMaximumLengthOk returns a tuple with the MaximumLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountMinimumPasswordLength) GetMaximumLengthOk() (*string, bool) {
	if o == nil || IsNil(o.MaximumLength) {
		return nil, false
	}
	return o.MaximumLength, true
}

// HasMaximumLength returns a boolean if a field has been set.
func (o *AccountMinimumPasswordLength) HasMaximumLength() bool {
	if o != nil && !IsNil(o.MaximumLength) {
		return true
	}

	return false
}

// SetMaximumLength gets a reference to the given string and assigns it to the MaximumLength field.
func (o *AccountMinimumPasswordLength) SetMaximumLength(v string) {
	o.MaximumLength = &v
}

// GetMinimumLength returns the MinimumLength field value if set, zero value otherwise.
func (o *AccountMinimumPasswordLength) GetMinimumLength() string {
	if o == nil || IsNil(o.MinimumLength) {
		var ret string
		return ret
	}
	return *o.MinimumLength
}

// GetMinimumLengthOk returns a tuple with the MinimumLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountMinimumPasswordLength) GetMinimumLengthOk() (*string, bool) {
	if o == nil || IsNil(o.MinimumLength) {
		return nil, false
	}
	return o.MinimumLength, true
}

// HasMinimumLength returns a boolean if a field has been set.
func (o *AccountMinimumPasswordLength) HasMinimumLength() bool {
	if o != nil && !IsNil(o.MinimumLength) {
		return true
	}

	return false
}

// SetMinimumLength gets a reference to the given string and assigns it to the MinimumLength field.
func (o *AccountMinimumPasswordLength) SetMinimumLength(v string) {
	o.MinimumLength = &v
}

func (o AccountMinimumPasswordLength) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountMinimumPasswordLength) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaximumLength) {
		toSerialize["maximumLength"] = o.MaximumLength
	}
	if !IsNil(o.MinimumLength) {
		toSerialize["minimumLength"] = o.MinimumLength
	}
	return toSerialize, nil
}

type NullableAccountMinimumPasswordLength struct {
	value *AccountMinimumPasswordLength
	isSet bool
}

func (v NullableAccountMinimumPasswordLength) Get() *AccountMinimumPasswordLength {
	return v.value
}

func (v *NullableAccountMinimumPasswordLength) Set(val *AccountMinimumPasswordLength) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountMinimumPasswordLength) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountMinimumPasswordLength) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountMinimumPasswordLength(val *AccountMinimumPasswordLength) *NullableAccountMinimumPasswordLength {
	return &NullableAccountMinimumPasswordLength{value: val, isSet: true}
}

func (v NullableAccountMinimumPasswordLength) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountMinimumPasswordLength) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


