/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BulkSendBatchSummaries type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkSendBatchSummaries{}

// BulkSendBatchSummaries A list of bulk send batch summaries. 
type BulkSendBatchSummaries struct {
	// The maximum number of envelopes the account is permitted to submit in a given batch.
	BatchSizeLimit *string `json:"batchSizeLimit,omitempty"`
	// An array of batch summaries.
	BulkBatchSummaries []BulkSendBatchSummary `json:"bulkBatchSummaries,omitempty"`
	// 
	BulkProcessQueueLimit *string `json:"bulkProcessQueueLimit,omitempty"`
	// 
	BulkProcessTotalQueued *string `json:"bulkProcessTotalQueued,omitempty"`
	// The last index position in the result set. 
	EndPosition *string `json:"endPosition,omitempty"`
	// The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. 
	NextUri *string `json:"nextUri,omitempty"`
	// The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. 
	PreviousUri *string `json:"previousUri,omitempty"`
	// Maximum number of envelopes an account is permitted to have in the queue at any one time.
	QueueLimit *string `json:"queueLimit,omitempty"`
	// The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.
	ResultSetSize *string `json:"resultSetSize,omitempty"`
	// The starting index position of the current result set.
	StartPosition *string `json:"startPosition,omitempty"`
	// The number of envelopes currently pending processing for the entire account.
	TotalQueued *string `json:"totalQueued,omitempty"`
	// The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.
	TotalSetSize *string `json:"totalSetSize,omitempty"`
}

// NewBulkSendBatchSummaries instantiates a new BulkSendBatchSummaries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkSendBatchSummaries() *BulkSendBatchSummaries {
	this := BulkSendBatchSummaries{}
	return &this
}

// NewBulkSendBatchSummariesWithDefaults instantiates a new BulkSendBatchSummaries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkSendBatchSummariesWithDefaults() *BulkSendBatchSummaries {
	this := BulkSendBatchSummaries{}
	return &this
}

// GetBatchSizeLimit returns the BatchSizeLimit field value if set, zero value otherwise.
func (o *BulkSendBatchSummaries) GetBatchSizeLimit() string {
	if o == nil || IsNil(o.BatchSizeLimit) {
		var ret string
		return ret
	}
	return *o.BatchSizeLimit
}

// GetBatchSizeLimitOk returns a tuple with the BatchSizeLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchSummaries) GetBatchSizeLimitOk() (*string, bool) {
	if o == nil || IsNil(o.BatchSizeLimit) {
		return nil, false
	}
	return o.BatchSizeLimit, true
}

// HasBatchSizeLimit returns a boolean if a field has been set.
func (o *BulkSendBatchSummaries) HasBatchSizeLimit() bool {
	if o != nil && !IsNil(o.BatchSizeLimit) {
		return true
	}

	return false
}

// SetBatchSizeLimit gets a reference to the given string and assigns it to the BatchSizeLimit field.
func (o *BulkSendBatchSummaries) SetBatchSizeLimit(v string) {
	o.BatchSizeLimit = &v
}

// GetBulkBatchSummaries returns the BulkBatchSummaries field value if set, zero value otherwise.
func (o *BulkSendBatchSummaries) GetBulkBatchSummaries() []BulkSendBatchSummary {
	if o == nil || IsNil(o.BulkBatchSummaries) {
		var ret []BulkSendBatchSummary
		return ret
	}
	return o.BulkBatchSummaries
}

// GetBulkBatchSummariesOk returns a tuple with the BulkBatchSummaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchSummaries) GetBulkBatchSummariesOk() ([]BulkSendBatchSummary, bool) {
	if o == nil || IsNil(o.BulkBatchSummaries) {
		return nil, false
	}
	return o.BulkBatchSummaries, true
}

// HasBulkBatchSummaries returns a boolean if a field has been set.
func (o *BulkSendBatchSummaries) HasBulkBatchSummaries() bool {
	if o != nil && !IsNil(o.BulkBatchSummaries) {
		return true
	}

	return false
}

// SetBulkBatchSummaries gets a reference to the given []BulkSendBatchSummary and assigns it to the BulkBatchSummaries field.
func (o *BulkSendBatchSummaries) SetBulkBatchSummaries(v []BulkSendBatchSummary) {
	o.BulkBatchSummaries = v
}

// GetBulkProcessQueueLimit returns the BulkProcessQueueLimit field value if set, zero value otherwise.
func (o *BulkSendBatchSummaries) GetBulkProcessQueueLimit() string {
	if o == nil || IsNil(o.BulkProcessQueueLimit) {
		var ret string
		return ret
	}
	return *o.BulkProcessQueueLimit
}

// GetBulkProcessQueueLimitOk returns a tuple with the BulkProcessQueueLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchSummaries) GetBulkProcessQueueLimitOk() (*string, bool) {
	if o == nil || IsNil(o.BulkProcessQueueLimit) {
		return nil, false
	}
	return o.BulkProcessQueueLimit, true
}

// HasBulkProcessQueueLimit returns a boolean if a field has been set.
func (o *BulkSendBatchSummaries) HasBulkProcessQueueLimit() bool {
	if o != nil && !IsNil(o.BulkProcessQueueLimit) {
		return true
	}

	return false
}

// SetBulkProcessQueueLimit gets a reference to the given string and assigns it to the BulkProcessQueueLimit field.
func (o *BulkSendBatchSummaries) SetBulkProcessQueueLimit(v string) {
	o.BulkProcessQueueLimit = &v
}

// GetBulkProcessTotalQueued returns the BulkProcessTotalQueued field value if set, zero value otherwise.
func (o *BulkSendBatchSummaries) GetBulkProcessTotalQueued() string {
	if o == nil || IsNil(o.BulkProcessTotalQueued) {
		var ret string
		return ret
	}
	return *o.BulkProcessTotalQueued
}

// GetBulkProcessTotalQueuedOk returns a tuple with the BulkProcessTotalQueued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchSummaries) GetBulkProcessTotalQueuedOk() (*string, bool) {
	if o == nil || IsNil(o.BulkProcessTotalQueued) {
		return nil, false
	}
	return o.BulkProcessTotalQueued, true
}

// HasBulkProcessTotalQueued returns a boolean if a field has been set.
func (o *BulkSendBatchSummaries) HasBulkProcessTotalQueued() bool {
	if o != nil && !IsNil(o.BulkProcessTotalQueued) {
		return true
	}

	return false
}

// SetBulkProcessTotalQueued gets a reference to the given string and assigns it to the BulkProcessTotalQueued field.
func (o *BulkSendBatchSummaries) SetBulkProcessTotalQueued(v string) {
	o.BulkProcessTotalQueued = &v
}

// GetEndPosition returns the EndPosition field value if set, zero value otherwise.
func (o *BulkSendBatchSummaries) GetEndPosition() string {
	if o == nil || IsNil(o.EndPosition) {
		var ret string
		return ret
	}
	return *o.EndPosition
}

// GetEndPositionOk returns a tuple with the EndPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchSummaries) GetEndPositionOk() (*string, bool) {
	if o == nil || IsNil(o.EndPosition) {
		return nil, false
	}
	return o.EndPosition, true
}

// HasEndPosition returns a boolean if a field has been set.
func (o *BulkSendBatchSummaries) HasEndPosition() bool {
	if o != nil && !IsNil(o.EndPosition) {
		return true
	}

	return false
}

// SetEndPosition gets a reference to the given string and assigns it to the EndPosition field.
func (o *BulkSendBatchSummaries) SetEndPosition(v string) {
	o.EndPosition = &v
}

// GetNextUri returns the NextUri field value if set, zero value otherwise.
func (o *BulkSendBatchSummaries) GetNextUri() string {
	if o == nil || IsNil(o.NextUri) {
		var ret string
		return ret
	}
	return *o.NextUri
}

// GetNextUriOk returns a tuple with the NextUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchSummaries) GetNextUriOk() (*string, bool) {
	if o == nil || IsNil(o.NextUri) {
		return nil, false
	}
	return o.NextUri, true
}

// HasNextUri returns a boolean if a field has been set.
func (o *BulkSendBatchSummaries) HasNextUri() bool {
	if o != nil && !IsNil(o.NextUri) {
		return true
	}

	return false
}

// SetNextUri gets a reference to the given string and assigns it to the NextUri field.
func (o *BulkSendBatchSummaries) SetNextUri(v string) {
	o.NextUri = &v
}

// GetPreviousUri returns the PreviousUri field value if set, zero value otherwise.
func (o *BulkSendBatchSummaries) GetPreviousUri() string {
	if o == nil || IsNil(o.PreviousUri) {
		var ret string
		return ret
	}
	return *o.PreviousUri
}

// GetPreviousUriOk returns a tuple with the PreviousUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchSummaries) GetPreviousUriOk() (*string, bool) {
	if o == nil || IsNil(o.PreviousUri) {
		return nil, false
	}
	return o.PreviousUri, true
}

// HasPreviousUri returns a boolean if a field has been set.
func (o *BulkSendBatchSummaries) HasPreviousUri() bool {
	if o != nil && !IsNil(o.PreviousUri) {
		return true
	}

	return false
}

// SetPreviousUri gets a reference to the given string and assigns it to the PreviousUri field.
func (o *BulkSendBatchSummaries) SetPreviousUri(v string) {
	o.PreviousUri = &v
}

// GetQueueLimit returns the QueueLimit field value if set, zero value otherwise.
func (o *BulkSendBatchSummaries) GetQueueLimit() string {
	if o == nil || IsNil(o.QueueLimit) {
		var ret string
		return ret
	}
	return *o.QueueLimit
}

// GetQueueLimitOk returns a tuple with the QueueLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchSummaries) GetQueueLimitOk() (*string, bool) {
	if o == nil || IsNil(o.QueueLimit) {
		return nil, false
	}
	return o.QueueLimit, true
}

// HasQueueLimit returns a boolean if a field has been set.
func (o *BulkSendBatchSummaries) HasQueueLimit() bool {
	if o != nil && !IsNil(o.QueueLimit) {
		return true
	}

	return false
}

// SetQueueLimit gets a reference to the given string and assigns it to the QueueLimit field.
func (o *BulkSendBatchSummaries) SetQueueLimit(v string) {
	o.QueueLimit = &v
}

// GetResultSetSize returns the ResultSetSize field value if set, zero value otherwise.
func (o *BulkSendBatchSummaries) GetResultSetSize() string {
	if o == nil || IsNil(o.ResultSetSize) {
		var ret string
		return ret
	}
	return *o.ResultSetSize
}

// GetResultSetSizeOk returns a tuple with the ResultSetSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchSummaries) GetResultSetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.ResultSetSize) {
		return nil, false
	}
	return o.ResultSetSize, true
}

// HasResultSetSize returns a boolean if a field has been set.
func (o *BulkSendBatchSummaries) HasResultSetSize() bool {
	if o != nil && !IsNil(o.ResultSetSize) {
		return true
	}

	return false
}

// SetResultSetSize gets a reference to the given string and assigns it to the ResultSetSize field.
func (o *BulkSendBatchSummaries) SetResultSetSize(v string) {
	o.ResultSetSize = &v
}

// GetStartPosition returns the StartPosition field value if set, zero value otherwise.
func (o *BulkSendBatchSummaries) GetStartPosition() string {
	if o == nil || IsNil(o.StartPosition) {
		var ret string
		return ret
	}
	return *o.StartPosition
}

// GetStartPositionOk returns a tuple with the StartPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchSummaries) GetStartPositionOk() (*string, bool) {
	if o == nil || IsNil(o.StartPosition) {
		return nil, false
	}
	return o.StartPosition, true
}

// HasStartPosition returns a boolean if a field has been set.
func (o *BulkSendBatchSummaries) HasStartPosition() bool {
	if o != nil && !IsNil(o.StartPosition) {
		return true
	}

	return false
}

// SetStartPosition gets a reference to the given string and assigns it to the StartPosition field.
func (o *BulkSendBatchSummaries) SetStartPosition(v string) {
	o.StartPosition = &v
}

// GetTotalQueued returns the TotalQueued field value if set, zero value otherwise.
func (o *BulkSendBatchSummaries) GetTotalQueued() string {
	if o == nil || IsNil(o.TotalQueued) {
		var ret string
		return ret
	}
	return *o.TotalQueued
}

// GetTotalQueuedOk returns a tuple with the TotalQueued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchSummaries) GetTotalQueuedOk() (*string, bool) {
	if o == nil || IsNil(o.TotalQueued) {
		return nil, false
	}
	return o.TotalQueued, true
}

// HasTotalQueued returns a boolean if a field has been set.
func (o *BulkSendBatchSummaries) HasTotalQueued() bool {
	if o != nil && !IsNil(o.TotalQueued) {
		return true
	}

	return false
}

// SetTotalQueued gets a reference to the given string and assigns it to the TotalQueued field.
func (o *BulkSendBatchSummaries) SetTotalQueued(v string) {
	o.TotalQueued = &v
}

// GetTotalSetSize returns the TotalSetSize field value if set, zero value otherwise.
func (o *BulkSendBatchSummaries) GetTotalSetSize() string {
	if o == nil || IsNil(o.TotalSetSize) {
		var ret string
		return ret
	}
	return *o.TotalSetSize
}

// GetTotalSetSizeOk returns a tuple with the TotalSetSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkSendBatchSummaries) GetTotalSetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.TotalSetSize) {
		return nil, false
	}
	return o.TotalSetSize, true
}

// HasTotalSetSize returns a boolean if a field has been set.
func (o *BulkSendBatchSummaries) HasTotalSetSize() bool {
	if o != nil && !IsNil(o.TotalSetSize) {
		return true
	}

	return false
}

// SetTotalSetSize gets a reference to the given string and assigns it to the TotalSetSize field.
func (o *BulkSendBatchSummaries) SetTotalSetSize(v string) {
	o.TotalSetSize = &v
}

func (o BulkSendBatchSummaries) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkSendBatchSummaries) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BatchSizeLimit) {
		toSerialize["batchSizeLimit"] = o.BatchSizeLimit
	}
	if !IsNil(o.BulkBatchSummaries) {
		toSerialize["bulkBatchSummaries"] = o.BulkBatchSummaries
	}
	if !IsNil(o.BulkProcessQueueLimit) {
		toSerialize["bulkProcessQueueLimit"] = o.BulkProcessQueueLimit
	}
	if !IsNil(o.BulkProcessTotalQueued) {
		toSerialize["bulkProcessTotalQueued"] = o.BulkProcessTotalQueued
	}
	if !IsNil(o.EndPosition) {
		toSerialize["endPosition"] = o.EndPosition
	}
	if !IsNil(o.NextUri) {
		toSerialize["nextUri"] = o.NextUri
	}
	if !IsNil(o.PreviousUri) {
		toSerialize["previousUri"] = o.PreviousUri
	}
	if !IsNil(o.QueueLimit) {
		toSerialize["queueLimit"] = o.QueueLimit
	}
	if !IsNil(o.ResultSetSize) {
		toSerialize["resultSetSize"] = o.ResultSetSize
	}
	if !IsNil(o.StartPosition) {
		toSerialize["startPosition"] = o.StartPosition
	}
	if !IsNil(o.TotalQueued) {
		toSerialize["totalQueued"] = o.TotalQueued
	}
	if !IsNil(o.TotalSetSize) {
		toSerialize["totalSetSize"] = o.TotalSetSize
	}
	return toSerialize, nil
}

type NullableBulkSendBatchSummaries struct {
	value *BulkSendBatchSummaries
	isSet bool
}

func (v NullableBulkSendBatchSummaries) Get() *BulkSendBatchSummaries {
	return v.value
}

func (v *NullableBulkSendBatchSummaries) Set(val *BulkSendBatchSummaries) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkSendBatchSummaries) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkSendBatchSummaries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkSendBatchSummaries(val *BulkSendBatchSummaries) *NullableBulkSendBatchSummaries {
	return &NullableBulkSendBatchSummaries{value: val, isSet: true}
}

func (v NullableBulkSendBatchSummaries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkSendBatchSummaries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


