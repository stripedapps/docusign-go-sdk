/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RecipientOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecipientOption{}

// RecipientOption Describes a recipient who is a member of a conditional group.
type RecipientOption struct {
	// The email ID of the agent. This property is required. Maximum length: 100 characters.
	Email *string `json:"email,omitempty"`
	// The full legal name of the recipient. Maximum length: 100 characters.
	Name *string `json:"name,omitempty"`
	// An identifier for the recipient. After assigning this value in a `recipient` object, you can reference it in the `conditions` object to set the recipient as a conditional recipient. For an example, see [How to use conditional recipients](/docs/esign-rest-api/how-to/use-conditional-recipients/). 
	RecipientLabel *string `json:"recipientLabel,omitempty"`
	// Specifies the signing group role of the recipient. This property is required.
	RoleName *string `json:"roleName,omitempty"`
	// The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html). 
	SigningGroupId *string `json:"signingGroupId,omitempty"`
}

// NewRecipientOption instantiates a new RecipientOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecipientOption() *RecipientOption {
	this := RecipientOption{}
	return &this
}

// NewRecipientOptionWithDefaults instantiates a new RecipientOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecipientOptionWithDefaults() *RecipientOption {
	this := RecipientOption{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *RecipientOption) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientOption) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *RecipientOption) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *RecipientOption) SetEmail(v string) {
	o.Email = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RecipientOption) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientOption) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RecipientOption) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RecipientOption) SetName(v string) {
	o.Name = &v
}

// GetRecipientLabel returns the RecipientLabel field value if set, zero value otherwise.
func (o *RecipientOption) GetRecipientLabel() string {
	if o == nil || IsNil(o.RecipientLabel) {
		var ret string
		return ret
	}
	return *o.RecipientLabel
}

// GetRecipientLabelOk returns a tuple with the RecipientLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientOption) GetRecipientLabelOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientLabel) {
		return nil, false
	}
	return o.RecipientLabel, true
}

// HasRecipientLabel returns a boolean if a field has been set.
func (o *RecipientOption) HasRecipientLabel() bool {
	if o != nil && !IsNil(o.RecipientLabel) {
		return true
	}

	return false
}

// SetRecipientLabel gets a reference to the given string and assigns it to the RecipientLabel field.
func (o *RecipientOption) SetRecipientLabel(v string) {
	o.RecipientLabel = &v
}

// GetRoleName returns the RoleName field value if set, zero value otherwise.
func (o *RecipientOption) GetRoleName() string {
	if o == nil || IsNil(o.RoleName) {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientOption) GetRoleNameOk() (*string, bool) {
	if o == nil || IsNil(o.RoleName) {
		return nil, false
	}
	return o.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (o *RecipientOption) HasRoleName() bool {
	if o != nil && !IsNil(o.RoleName) {
		return true
	}

	return false
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *RecipientOption) SetRoleName(v string) {
	o.RoleName = &v
}

// GetSigningGroupId returns the SigningGroupId field value if set, zero value otherwise.
func (o *RecipientOption) GetSigningGroupId() string {
	if o == nil || IsNil(o.SigningGroupId) {
		var ret string
		return ret
	}
	return *o.SigningGroupId
}

// GetSigningGroupIdOk returns a tuple with the SigningGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientOption) GetSigningGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.SigningGroupId) {
		return nil, false
	}
	return o.SigningGroupId, true
}

// HasSigningGroupId returns a boolean if a field has been set.
func (o *RecipientOption) HasSigningGroupId() bool {
	if o != nil && !IsNil(o.SigningGroupId) {
		return true
	}

	return false
}

// SetSigningGroupId gets a reference to the given string and assigns it to the SigningGroupId field.
func (o *RecipientOption) SetSigningGroupId(v string) {
	o.SigningGroupId = &v
}

func (o RecipientOption) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecipientOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RecipientLabel) {
		toSerialize["recipientLabel"] = o.RecipientLabel
	}
	if !IsNil(o.RoleName) {
		toSerialize["roleName"] = o.RoleName
	}
	if !IsNil(o.SigningGroupId) {
		toSerialize["signingGroupId"] = o.SigningGroupId
	}
	return toSerialize, nil
}

type NullableRecipientOption struct {
	value *RecipientOption
	isSet bool
}

func (v NullableRecipientOption) Get() *RecipientOption {
	return v.value
}

func (v *NullableRecipientOption) Set(val *RecipientOption) {
	v.value = val
	v.isSet = true
}

func (v NullableRecipientOption) IsSet() bool {
	return v.isSet
}

func (v *NullableRecipientOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecipientOption(val *RecipientOption) *NullableRecipientOption {
	return &NullableRecipientOption{value: val, isSet: true}
}

func (v NullableRecipientOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecipientOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


