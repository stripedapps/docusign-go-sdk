/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreditCardInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditCardInformation{}

// CreditCardInformation This object contains information about a credit card that is associated with an account.
type CreditCardInformation struct {
	Address *AddressInformation `json:"address,omitempty"`
	// 
	CardLastDigits *string `json:"cardLastDigits,omitempty"`
	// The credit card number.
	CardNumber *string `json:"cardNumber,omitempty"`
	// The type of credit card. Valid values are:   - `visa`  - `mastercard`  - `amex`
	CardType *string `json:"cardType,omitempty"`
	// The 3 or 4-digit card verification value (CVV) number associated with the credit card. CVV numbers are also referred to as card security codes (CSCs).
	CvNumber *string `json:"cvNumber,omitempty"`
	// The month that the credit card expires, expressed as a number from 1 to 12.
	ExpirationMonth *string `json:"expirationMonth,omitempty"`
	// The year in which the credit card expires, in 4-digit format.
	ExpirationYear *string `json:"expirationYear,omitempty"`
	// The exact name as it appears on the credit card.
	NameOnCard *string `json:"nameOnCard,omitempty"`
	// 
	TokenizedCard *string `json:"tokenizedCard,omitempty"`
}

// NewCreditCardInformation instantiates a new CreditCardInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditCardInformation() *CreditCardInformation {
	this := CreditCardInformation{}
	return &this
}

// NewCreditCardInformationWithDefaults instantiates a new CreditCardInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditCardInformationWithDefaults() *CreditCardInformation {
	this := CreditCardInformation{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CreditCardInformation) GetAddress() AddressInformation {
	if o == nil || IsNil(o.Address) {
		var ret AddressInformation
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardInformation) GetAddressOk() (*AddressInformation, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CreditCardInformation) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given AddressInformation and assigns it to the Address field.
func (o *CreditCardInformation) SetAddress(v AddressInformation) {
	o.Address = &v
}

// GetCardLastDigits returns the CardLastDigits field value if set, zero value otherwise.
func (o *CreditCardInformation) GetCardLastDigits() string {
	if o == nil || IsNil(o.CardLastDigits) {
		var ret string
		return ret
	}
	return *o.CardLastDigits
}

// GetCardLastDigitsOk returns a tuple with the CardLastDigits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardInformation) GetCardLastDigitsOk() (*string, bool) {
	if o == nil || IsNil(o.CardLastDigits) {
		return nil, false
	}
	return o.CardLastDigits, true
}

// HasCardLastDigits returns a boolean if a field has been set.
func (o *CreditCardInformation) HasCardLastDigits() bool {
	if o != nil && !IsNil(o.CardLastDigits) {
		return true
	}

	return false
}

// SetCardLastDigits gets a reference to the given string and assigns it to the CardLastDigits field.
func (o *CreditCardInformation) SetCardLastDigits(v string) {
	o.CardLastDigits = &v
}

// GetCardNumber returns the CardNumber field value if set, zero value otherwise.
func (o *CreditCardInformation) GetCardNumber() string {
	if o == nil || IsNil(o.CardNumber) {
		var ret string
		return ret
	}
	return *o.CardNumber
}

// GetCardNumberOk returns a tuple with the CardNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardInformation) GetCardNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CardNumber) {
		return nil, false
	}
	return o.CardNumber, true
}

// HasCardNumber returns a boolean if a field has been set.
func (o *CreditCardInformation) HasCardNumber() bool {
	if o != nil && !IsNil(o.CardNumber) {
		return true
	}

	return false
}

// SetCardNumber gets a reference to the given string and assigns it to the CardNumber field.
func (o *CreditCardInformation) SetCardNumber(v string) {
	o.CardNumber = &v
}

// GetCardType returns the CardType field value if set, zero value otherwise.
func (o *CreditCardInformation) GetCardType() string {
	if o == nil || IsNil(o.CardType) {
		var ret string
		return ret
	}
	return *o.CardType
}

// GetCardTypeOk returns a tuple with the CardType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardInformation) GetCardTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CardType) {
		return nil, false
	}
	return o.CardType, true
}

// HasCardType returns a boolean if a field has been set.
func (o *CreditCardInformation) HasCardType() bool {
	if o != nil && !IsNil(o.CardType) {
		return true
	}

	return false
}

// SetCardType gets a reference to the given string and assigns it to the CardType field.
func (o *CreditCardInformation) SetCardType(v string) {
	o.CardType = &v
}

// GetCvNumber returns the CvNumber field value if set, zero value otherwise.
func (o *CreditCardInformation) GetCvNumber() string {
	if o == nil || IsNil(o.CvNumber) {
		var ret string
		return ret
	}
	return *o.CvNumber
}

// GetCvNumberOk returns a tuple with the CvNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardInformation) GetCvNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CvNumber) {
		return nil, false
	}
	return o.CvNumber, true
}

// HasCvNumber returns a boolean if a field has been set.
func (o *CreditCardInformation) HasCvNumber() bool {
	if o != nil && !IsNil(o.CvNumber) {
		return true
	}

	return false
}

// SetCvNumber gets a reference to the given string and assigns it to the CvNumber field.
func (o *CreditCardInformation) SetCvNumber(v string) {
	o.CvNumber = &v
}

// GetExpirationMonth returns the ExpirationMonth field value if set, zero value otherwise.
func (o *CreditCardInformation) GetExpirationMonth() string {
	if o == nil || IsNil(o.ExpirationMonth) {
		var ret string
		return ret
	}
	return *o.ExpirationMonth
}

// GetExpirationMonthOk returns a tuple with the ExpirationMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardInformation) GetExpirationMonthOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationMonth) {
		return nil, false
	}
	return o.ExpirationMonth, true
}

// HasExpirationMonth returns a boolean if a field has been set.
func (o *CreditCardInformation) HasExpirationMonth() bool {
	if o != nil && !IsNil(o.ExpirationMonth) {
		return true
	}

	return false
}

// SetExpirationMonth gets a reference to the given string and assigns it to the ExpirationMonth field.
func (o *CreditCardInformation) SetExpirationMonth(v string) {
	o.ExpirationMonth = &v
}

// GetExpirationYear returns the ExpirationYear field value if set, zero value otherwise.
func (o *CreditCardInformation) GetExpirationYear() string {
	if o == nil || IsNil(o.ExpirationYear) {
		var ret string
		return ret
	}
	return *o.ExpirationYear
}

// GetExpirationYearOk returns a tuple with the ExpirationYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardInformation) GetExpirationYearOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationYear) {
		return nil, false
	}
	return o.ExpirationYear, true
}

// HasExpirationYear returns a boolean if a field has been set.
func (o *CreditCardInformation) HasExpirationYear() bool {
	if o != nil && !IsNil(o.ExpirationYear) {
		return true
	}

	return false
}

// SetExpirationYear gets a reference to the given string and assigns it to the ExpirationYear field.
func (o *CreditCardInformation) SetExpirationYear(v string) {
	o.ExpirationYear = &v
}

// GetNameOnCard returns the NameOnCard field value if set, zero value otherwise.
func (o *CreditCardInformation) GetNameOnCard() string {
	if o == nil || IsNil(o.NameOnCard) {
		var ret string
		return ret
	}
	return *o.NameOnCard
}

// GetNameOnCardOk returns a tuple with the NameOnCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardInformation) GetNameOnCardOk() (*string, bool) {
	if o == nil || IsNil(o.NameOnCard) {
		return nil, false
	}
	return o.NameOnCard, true
}

// HasNameOnCard returns a boolean if a field has been set.
func (o *CreditCardInformation) HasNameOnCard() bool {
	if o != nil && !IsNil(o.NameOnCard) {
		return true
	}

	return false
}

// SetNameOnCard gets a reference to the given string and assigns it to the NameOnCard field.
func (o *CreditCardInformation) SetNameOnCard(v string) {
	o.NameOnCard = &v
}

// GetTokenizedCard returns the TokenizedCard field value if set, zero value otherwise.
func (o *CreditCardInformation) GetTokenizedCard() string {
	if o == nil || IsNil(o.TokenizedCard) {
		var ret string
		return ret
	}
	return *o.TokenizedCard
}

// GetTokenizedCardOk returns a tuple with the TokenizedCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardInformation) GetTokenizedCardOk() (*string, bool) {
	if o == nil || IsNil(o.TokenizedCard) {
		return nil, false
	}
	return o.TokenizedCard, true
}

// HasTokenizedCard returns a boolean if a field has been set.
func (o *CreditCardInformation) HasTokenizedCard() bool {
	if o != nil && !IsNil(o.TokenizedCard) {
		return true
	}

	return false
}

// SetTokenizedCard gets a reference to the given string and assigns it to the TokenizedCard field.
func (o *CreditCardInformation) SetTokenizedCard(v string) {
	o.TokenizedCard = &v
}

func (o CreditCardInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditCardInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.CardLastDigits) {
		toSerialize["cardLastDigits"] = o.CardLastDigits
	}
	if !IsNil(o.CardNumber) {
		toSerialize["cardNumber"] = o.CardNumber
	}
	if !IsNil(o.CardType) {
		toSerialize["cardType"] = o.CardType
	}
	if !IsNil(o.CvNumber) {
		toSerialize["cvNumber"] = o.CvNumber
	}
	if !IsNil(o.ExpirationMonth) {
		toSerialize["expirationMonth"] = o.ExpirationMonth
	}
	if !IsNil(o.ExpirationYear) {
		toSerialize["expirationYear"] = o.ExpirationYear
	}
	if !IsNil(o.NameOnCard) {
		toSerialize["nameOnCard"] = o.NameOnCard
	}
	if !IsNil(o.TokenizedCard) {
		toSerialize["tokenizedCard"] = o.TokenizedCard
	}
	return toSerialize, nil
}

type NullableCreditCardInformation struct {
	value *CreditCardInformation
	isSet bool
}

func (v NullableCreditCardInformation) Get() *CreditCardInformation {
	return v.value
}

func (v *NullableCreditCardInformation) Set(val *CreditCardInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditCardInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditCardInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditCardInformation(val *CreditCardInformation) *NullableCreditCardInformation {
	return &NullableCreditCardInformation{value: val, isSet: true}
}

func (v NullableCreditCardInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditCardInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


