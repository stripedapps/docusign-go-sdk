/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EnvelopeAttachmentsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvelopeAttachmentsRequest{}

// EnvelopeAttachmentsRequest 
type EnvelopeAttachmentsRequest struct {
	// An object that contains information about the attachment.
	Attachments []Attachment `json:"attachments,omitempty"`
}

// NewEnvelopeAttachmentsRequest instantiates a new EnvelopeAttachmentsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvelopeAttachmentsRequest() *EnvelopeAttachmentsRequest {
	this := EnvelopeAttachmentsRequest{}
	return &this
}

// NewEnvelopeAttachmentsRequestWithDefaults instantiates a new EnvelopeAttachmentsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvelopeAttachmentsRequestWithDefaults() *EnvelopeAttachmentsRequest {
	this := EnvelopeAttachmentsRequest{}
	return &this
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *EnvelopeAttachmentsRequest) GetAttachments() []Attachment {
	if o == nil || IsNil(o.Attachments) {
		var ret []Attachment
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvelopeAttachmentsRequest) GetAttachmentsOk() ([]Attachment, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *EnvelopeAttachmentsRequest) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []Attachment and assigns it to the Attachments field.
func (o *EnvelopeAttachmentsRequest) SetAttachments(v []Attachment) {
	o.Attachments = v
}

func (o EnvelopeAttachmentsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvelopeAttachmentsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	return toSerialize, nil
}

type NullableEnvelopeAttachmentsRequest struct {
	value *EnvelopeAttachmentsRequest
	isSet bool
}

func (v NullableEnvelopeAttachmentsRequest) Get() *EnvelopeAttachmentsRequest {
	return v.value
}

func (v *NullableEnvelopeAttachmentsRequest) Set(val *EnvelopeAttachmentsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvelopeAttachmentsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvelopeAttachmentsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvelopeAttachmentsRequest(val *EnvelopeAttachmentsRequest) *NullableEnvelopeAttachmentsRequest {
	return &NullableEnvelopeAttachmentsRequest{value: val, isSet: true}
}

func (v NullableEnvelopeAttachmentsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvelopeAttachmentsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


