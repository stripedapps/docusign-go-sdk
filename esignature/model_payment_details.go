/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaymentDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentDetails{}

// PaymentDetails When a formula tab has a `paymentDetails` property, the formula tab is a payment item. See [Requesting Payments Along with Signatures][paymentguide] in the DocuSign Support Center to learn more about payments.  [paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html 
type PaymentDetails struct {
	// An array of accepted payment methods:  * `CreditCard` * `ApplePay` * `AndroidPay` * `BankAccount`  For example, if you only accept credit cards and ACH transfers, you would set this property to:  `'[\"BankAccount\", \"CreditCard\"]'`  Do not specify `BankAccount` (ACH) if you are also using in-person signing. 
	AllowedPaymentMethods []string `json:"allowedPaymentMethods,omitempty"`
	// The GUID set by the payment gateway (such as Stripe) that identifies a transaction. The `chargeId` is created when authorizing a payment and must be referenced when completing a payment.
	ChargeId *string `json:"chargeId,omitempty"`
	// Specifies the three-letter [ISO 4217][ISO 4217] currency code for the payment.  Supported currencies are:  * AUD: Australian dollar * CAD: Canadian dollar * EUR: Euro * GBP: Great Britain pound * USD: United States dollar  Specifying any other ISO 4217 code for payments is an error.  [ISO 4217]:          https://en.wikipedia.org/wiki/ISO_4217 
	CurrencyCode *string `json:"currencyCode,omitempty"`
	CurrencyCodeMetadata *PropertyMetadata `json:"currencyCodeMetadata,omitempty"`
	// The customer ID.
	CustomerId *string `json:"customerId,omitempty"`
	// This is a sender-defined field that passes any extra metadata about the payment that will show up in the Authorize.net transaction under **Description** in the merchant gateway portal. The custom metadata will be recorded in downloaded Authorize.net reports.   The following example shows what the **Description** field of the transaction will look like:   `<envelopeID>, <customMetadata>`
	CustomMetadata *string `json:"customMetadata,omitempty"`
	// A sender-defined field that specifies whether custom metadata is required for the transaction. When **true,** custom metadata is required. This property only applies if you are using an Authorize.net payment gateway account.
	CustomMetadataRequired *bool `json:"customMetadataRequired,omitempty"`
	// A GUID that identifies the payment gateway connected to the sender's DocuSign account.  There is no public API for connecting payment gateway accounts You must connect and manage payment gateway accounts through the DocuSign Admin console and through your chosen payment gateway.  You can get the gateway account ID in the Payments section of the DocuSign Admin console.   [paymentgateways]:  https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=knc1573854895499.html 
	GatewayAccountId *string `json:"gatewayAccountId,omitempty"`
	GatewayAccountIdMetadata *PropertyMetadata `json:"gatewayAccountIdMetadata,omitempty"`
	// Display name of the gateway connected to sender's DocuSign account.  Possible values are: Stripe, Braintree, Authorize.Net, CyberSource, Zuora, Elavon.
	GatewayDisplayName *string `json:"gatewayDisplayName,omitempty"`
	// Name of the gateway connected to sender's DocuSign account.  Possible values are:  * `Stripe` * `Braintree` * `AuthorizeDotNet` * `CyberSource` * `Zuora` * `Elavon`
	GatewayName *string `json:"gatewayName,omitempty"`
	// A payment formula can have one or more line items that provide detail about individual items in a payment request.  The list of line items are returned as metadata to the payment gateway. 
	LineItems []PaymentLineItem `json:"lineItems,omitempty"`
	// This property specifies how the signer's collected payment details will be used.  Valid values:  - `authorize`: The payment details will be used to collect payment. This is the default value. - `save`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway. - `save_and_authorize`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway and will also be used to collect payment.
	PaymentOption *string `json:"paymentOption,omitempty"`
	// The payment source ID.
	PaymentSourceId *string `json:"paymentSourceId,omitempty"`
	SignerValues *PaymentSignerValues `json:"signerValues,omitempty"`
	// This read-only property describes the status of a payment.  * `new`<br>   This is a new payment request.   The envelope has been created,   but no payment authorizations have been made.  * `auth_complete`<br>   A recipient has entered their credit card information,   but the envelope has not been completed.   The card has not been charged.  * `payment_complete`<br>   The recipient's card has been charged.  * `payment_capture_failed`<br>   Final charge failed.   This can happen when too much time   passes between authorizing the payment   and completing the document.  * `future_payment_saved` <br> The recipient's payment method has been saved to the sender's payment gateway. 
	Status *string `json:"status,omitempty"`
	// 
	SubGatewayName *string `json:"subGatewayName,omitempty"`
	Total *Money `json:"total,omitempty"`
}

// NewPaymentDetails instantiates a new PaymentDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentDetails() *PaymentDetails {
	this := PaymentDetails{}
	return &this
}

// NewPaymentDetailsWithDefaults instantiates a new PaymentDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentDetailsWithDefaults() *PaymentDetails {
	this := PaymentDetails{}
	return &this
}

// GetAllowedPaymentMethods returns the AllowedPaymentMethods field value if set, zero value otherwise.
func (o *PaymentDetails) GetAllowedPaymentMethods() []string {
	if o == nil || IsNil(o.AllowedPaymentMethods) {
		var ret []string
		return ret
	}
	return o.AllowedPaymentMethods
}

// GetAllowedPaymentMethodsOk returns a tuple with the AllowedPaymentMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetAllowedPaymentMethodsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedPaymentMethods) {
		return nil, false
	}
	return o.AllowedPaymentMethods, true
}

// HasAllowedPaymentMethods returns a boolean if a field has been set.
func (o *PaymentDetails) HasAllowedPaymentMethods() bool {
	if o != nil && !IsNil(o.AllowedPaymentMethods) {
		return true
	}

	return false
}

// SetAllowedPaymentMethods gets a reference to the given []string and assigns it to the AllowedPaymentMethods field.
func (o *PaymentDetails) SetAllowedPaymentMethods(v []string) {
	o.AllowedPaymentMethods = v
}

// GetChargeId returns the ChargeId field value if set, zero value otherwise.
func (o *PaymentDetails) GetChargeId() string {
	if o == nil || IsNil(o.ChargeId) {
		var ret string
		return ret
	}
	return *o.ChargeId
}

// GetChargeIdOk returns a tuple with the ChargeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetChargeIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChargeId) {
		return nil, false
	}
	return o.ChargeId, true
}

// HasChargeId returns a boolean if a field has been set.
func (o *PaymentDetails) HasChargeId() bool {
	if o != nil && !IsNil(o.ChargeId) {
		return true
	}

	return false
}

// SetChargeId gets a reference to the given string and assigns it to the ChargeId field.
func (o *PaymentDetails) SetChargeId(v string) {
	o.ChargeId = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *PaymentDetails) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *PaymentDetails) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *PaymentDetails) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetCurrencyCodeMetadata returns the CurrencyCodeMetadata field value if set, zero value otherwise.
func (o *PaymentDetails) GetCurrencyCodeMetadata() PropertyMetadata {
	if o == nil || IsNil(o.CurrencyCodeMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.CurrencyCodeMetadata
}

// GetCurrencyCodeMetadataOk returns a tuple with the CurrencyCodeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetCurrencyCodeMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.CurrencyCodeMetadata) {
		return nil, false
	}
	return o.CurrencyCodeMetadata, true
}

// HasCurrencyCodeMetadata returns a boolean if a field has been set.
func (o *PaymentDetails) HasCurrencyCodeMetadata() bool {
	if o != nil && !IsNil(o.CurrencyCodeMetadata) {
		return true
	}

	return false
}

// SetCurrencyCodeMetadata gets a reference to the given PropertyMetadata and assigns it to the CurrencyCodeMetadata field.
func (o *PaymentDetails) SetCurrencyCodeMetadata(v PropertyMetadata) {
	o.CurrencyCodeMetadata = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *PaymentDetails) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *PaymentDetails) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *PaymentDetails) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetCustomMetadata returns the CustomMetadata field value if set, zero value otherwise.
func (o *PaymentDetails) GetCustomMetadata() string {
	if o == nil || IsNil(o.CustomMetadata) {
		var ret string
		return ret
	}
	return *o.CustomMetadata
}

// GetCustomMetadataOk returns a tuple with the CustomMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetCustomMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.CustomMetadata) {
		return nil, false
	}
	return o.CustomMetadata, true
}

// HasCustomMetadata returns a boolean if a field has been set.
func (o *PaymentDetails) HasCustomMetadata() bool {
	if o != nil && !IsNil(o.CustomMetadata) {
		return true
	}

	return false
}

// SetCustomMetadata gets a reference to the given string and assigns it to the CustomMetadata field.
func (o *PaymentDetails) SetCustomMetadata(v string) {
	o.CustomMetadata = &v
}

// GetCustomMetadataRequired returns the CustomMetadataRequired field value if set, zero value otherwise.
func (o *PaymentDetails) GetCustomMetadataRequired() bool {
	if o == nil || IsNil(o.CustomMetadataRequired) {
		var ret bool
		return ret
	}
	return *o.CustomMetadataRequired
}

// GetCustomMetadataRequiredOk returns a tuple with the CustomMetadataRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetCustomMetadataRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomMetadataRequired) {
		return nil, false
	}
	return o.CustomMetadataRequired, true
}

// HasCustomMetadataRequired returns a boolean if a field has been set.
func (o *PaymentDetails) HasCustomMetadataRequired() bool {
	if o != nil && !IsNil(o.CustomMetadataRequired) {
		return true
	}

	return false
}

// SetCustomMetadataRequired gets a reference to the given bool and assigns it to the CustomMetadataRequired field.
func (o *PaymentDetails) SetCustomMetadataRequired(v bool) {
	o.CustomMetadataRequired = &v
}

// GetGatewayAccountId returns the GatewayAccountId field value if set, zero value otherwise.
func (o *PaymentDetails) GetGatewayAccountId() string {
	if o == nil || IsNil(o.GatewayAccountId) {
		var ret string
		return ret
	}
	return *o.GatewayAccountId
}

// GetGatewayAccountIdOk returns a tuple with the GatewayAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetGatewayAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayAccountId) {
		return nil, false
	}
	return o.GatewayAccountId, true
}

// HasGatewayAccountId returns a boolean if a field has been set.
func (o *PaymentDetails) HasGatewayAccountId() bool {
	if o != nil && !IsNil(o.GatewayAccountId) {
		return true
	}

	return false
}

// SetGatewayAccountId gets a reference to the given string and assigns it to the GatewayAccountId field.
func (o *PaymentDetails) SetGatewayAccountId(v string) {
	o.GatewayAccountId = &v
}

// GetGatewayAccountIdMetadata returns the GatewayAccountIdMetadata field value if set, zero value otherwise.
func (o *PaymentDetails) GetGatewayAccountIdMetadata() PropertyMetadata {
	if o == nil || IsNil(o.GatewayAccountIdMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.GatewayAccountIdMetadata
}

// GetGatewayAccountIdMetadataOk returns a tuple with the GatewayAccountIdMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetGatewayAccountIdMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.GatewayAccountIdMetadata) {
		return nil, false
	}
	return o.GatewayAccountIdMetadata, true
}

// HasGatewayAccountIdMetadata returns a boolean if a field has been set.
func (o *PaymentDetails) HasGatewayAccountIdMetadata() bool {
	if o != nil && !IsNil(o.GatewayAccountIdMetadata) {
		return true
	}

	return false
}

// SetGatewayAccountIdMetadata gets a reference to the given PropertyMetadata and assigns it to the GatewayAccountIdMetadata field.
func (o *PaymentDetails) SetGatewayAccountIdMetadata(v PropertyMetadata) {
	o.GatewayAccountIdMetadata = &v
}

// GetGatewayDisplayName returns the GatewayDisplayName field value if set, zero value otherwise.
func (o *PaymentDetails) GetGatewayDisplayName() string {
	if o == nil || IsNil(o.GatewayDisplayName) {
		var ret string
		return ret
	}
	return *o.GatewayDisplayName
}

// GetGatewayDisplayNameOk returns a tuple with the GatewayDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetGatewayDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayDisplayName) {
		return nil, false
	}
	return o.GatewayDisplayName, true
}

// HasGatewayDisplayName returns a boolean if a field has been set.
func (o *PaymentDetails) HasGatewayDisplayName() bool {
	if o != nil && !IsNil(o.GatewayDisplayName) {
		return true
	}

	return false
}

// SetGatewayDisplayName gets a reference to the given string and assigns it to the GatewayDisplayName field.
func (o *PaymentDetails) SetGatewayDisplayName(v string) {
	o.GatewayDisplayName = &v
}

// GetGatewayName returns the GatewayName field value if set, zero value otherwise.
func (o *PaymentDetails) GetGatewayName() string {
	if o == nil || IsNil(o.GatewayName) {
		var ret string
		return ret
	}
	return *o.GatewayName
}

// GetGatewayNameOk returns a tuple with the GatewayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetGatewayNameOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayName) {
		return nil, false
	}
	return o.GatewayName, true
}

// HasGatewayName returns a boolean if a field has been set.
func (o *PaymentDetails) HasGatewayName() bool {
	if o != nil && !IsNil(o.GatewayName) {
		return true
	}

	return false
}

// SetGatewayName gets a reference to the given string and assigns it to the GatewayName field.
func (o *PaymentDetails) SetGatewayName(v string) {
	o.GatewayName = &v
}

// GetLineItems returns the LineItems field value if set, zero value otherwise.
func (o *PaymentDetails) GetLineItems() []PaymentLineItem {
	if o == nil || IsNil(o.LineItems) {
		var ret []PaymentLineItem
		return ret
	}
	return o.LineItems
}

// GetLineItemsOk returns a tuple with the LineItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetLineItemsOk() ([]PaymentLineItem, bool) {
	if o == nil || IsNil(o.LineItems) {
		return nil, false
	}
	return o.LineItems, true
}

// HasLineItems returns a boolean if a field has been set.
func (o *PaymentDetails) HasLineItems() bool {
	if o != nil && !IsNil(o.LineItems) {
		return true
	}

	return false
}

// SetLineItems gets a reference to the given []PaymentLineItem and assigns it to the LineItems field.
func (o *PaymentDetails) SetLineItems(v []PaymentLineItem) {
	o.LineItems = v
}

// GetPaymentOption returns the PaymentOption field value if set, zero value otherwise.
func (o *PaymentDetails) GetPaymentOption() string {
	if o == nil || IsNil(o.PaymentOption) {
		var ret string
		return ret
	}
	return *o.PaymentOption
}

// GetPaymentOptionOk returns a tuple with the PaymentOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetPaymentOptionOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentOption) {
		return nil, false
	}
	return o.PaymentOption, true
}

// HasPaymentOption returns a boolean if a field has been set.
func (o *PaymentDetails) HasPaymentOption() bool {
	if o != nil && !IsNil(o.PaymentOption) {
		return true
	}

	return false
}

// SetPaymentOption gets a reference to the given string and assigns it to the PaymentOption field.
func (o *PaymentDetails) SetPaymentOption(v string) {
	o.PaymentOption = &v
}

// GetPaymentSourceId returns the PaymentSourceId field value if set, zero value otherwise.
func (o *PaymentDetails) GetPaymentSourceId() string {
	if o == nil || IsNil(o.PaymentSourceId) {
		var ret string
		return ret
	}
	return *o.PaymentSourceId
}

// GetPaymentSourceIdOk returns a tuple with the PaymentSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetPaymentSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentSourceId) {
		return nil, false
	}
	return o.PaymentSourceId, true
}

// HasPaymentSourceId returns a boolean if a field has been set.
func (o *PaymentDetails) HasPaymentSourceId() bool {
	if o != nil && !IsNil(o.PaymentSourceId) {
		return true
	}

	return false
}

// SetPaymentSourceId gets a reference to the given string and assigns it to the PaymentSourceId field.
func (o *PaymentDetails) SetPaymentSourceId(v string) {
	o.PaymentSourceId = &v
}

// GetSignerValues returns the SignerValues field value if set, zero value otherwise.
func (o *PaymentDetails) GetSignerValues() PaymentSignerValues {
	if o == nil || IsNil(o.SignerValues) {
		var ret PaymentSignerValues
		return ret
	}
	return *o.SignerValues
}

// GetSignerValuesOk returns a tuple with the SignerValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetSignerValuesOk() (*PaymentSignerValues, bool) {
	if o == nil || IsNil(o.SignerValues) {
		return nil, false
	}
	return o.SignerValues, true
}

// HasSignerValues returns a boolean if a field has been set.
func (o *PaymentDetails) HasSignerValues() bool {
	if o != nil && !IsNil(o.SignerValues) {
		return true
	}

	return false
}

// SetSignerValues gets a reference to the given PaymentSignerValues and assigns it to the SignerValues field.
func (o *PaymentDetails) SetSignerValues(v PaymentSignerValues) {
	o.SignerValues = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaymentDetails) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaymentDetails) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PaymentDetails) SetStatus(v string) {
	o.Status = &v
}

// GetSubGatewayName returns the SubGatewayName field value if set, zero value otherwise.
func (o *PaymentDetails) GetSubGatewayName() string {
	if o == nil || IsNil(o.SubGatewayName) {
		var ret string
		return ret
	}
	return *o.SubGatewayName
}

// GetSubGatewayNameOk returns a tuple with the SubGatewayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetSubGatewayNameOk() (*string, bool) {
	if o == nil || IsNil(o.SubGatewayName) {
		return nil, false
	}
	return o.SubGatewayName, true
}

// HasSubGatewayName returns a boolean if a field has been set.
func (o *PaymentDetails) HasSubGatewayName() bool {
	if o != nil && !IsNil(o.SubGatewayName) {
		return true
	}

	return false
}

// SetSubGatewayName gets a reference to the given string and assigns it to the SubGatewayName field.
func (o *PaymentDetails) SetSubGatewayName(v string) {
	o.SubGatewayName = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *PaymentDetails) GetTotal() Money {
	if o == nil || IsNil(o.Total) {
		var ret Money
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetTotalOk() (*Money, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *PaymentDetails) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given Money and assigns it to the Total field.
func (o *PaymentDetails) SetTotal(v Money) {
	o.Total = &v
}

func (o PaymentDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedPaymentMethods) {
		toSerialize["allowedPaymentMethods"] = o.AllowedPaymentMethods
	}
	if !IsNil(o.ChargeId) {
		toSerialize["chargeId"] = o.ChargeId
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.CurrencyCodeMetadata) {
		toSerialize["currencyCodeMetadata"] = o.CurrencyCodeMetadata
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customerId"] = o.CustomerId
	}
	if !IsNil(o.CustomMetadata) {
		toSerialize["customMetadata"] = o.CustomMetadata
	}
	if !IsNil(o.CustomMetadataRequired) {
		toSerialize["customMetadataRequired"] = o.CustomMetadataRequired
	}
	if !IsNil(o.GatewayAccountId) {
		toSerialize["gatewayAccountId"] = o.GatewayAccountId
	}
	if !IsNil(o.GatewayAccountIdMetadata) {
		toSerialize["gatewayAccountIdMetadata"] = o.GatewayAccountIdMetadata
	}
	if !IsNil(o.GatewayDisplayName) {
		toSerialize["gatewayDisplayName"] = o.GatewayDisplayName
	}
	if !IsNil(o.GatewayName) {
		toSerialize["gatewayName"] = o.GatewayName
	}
	if !IsNil(o.LineItems) {
		toSerialize["lineItems"] = o.LineItems
	}
	if !IsNil(o.PaymentOption) {
		toSerialize["paymentOption"] = o.PaymentOption
	}
	if !IsNil(o.PaymentSourceId) {
		toSerialize["paymentSourceId"] = o.PaymentSourceId
	}
	if !IsNil(o.SignerValues) {
		toSerialize["signerValues"] = o.SignerValues
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SubGatewayName) {
		toSerialize["subGatewayName"] = o.SubGatewayName
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullablePaymentDetails struct {
	value *PaymentDetails
	isSet bool
}

func (v NullablePaymentDetails) Get() *PaymentDetails {
	return v.value
}

func (v *NullablePaymentDetails) Set(val *PaymentDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentDetails(val *PaymentDetails) *NullablePaymentDetails {
	return &NullablePaymentDetails{value: val, isSet: true}
}

func (v NullablePaymentDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


