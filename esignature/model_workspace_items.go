/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WorkspaceItems type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkspaceItems{}

// WorkspaceItems This object contains information about a file or folder in a workspace.
type WorkspaceItems struct {
	CallerAuthorization *WorkspaceUserAuthorization `json:"callerAuthorization,omitempty"`
	// If the item is a file, this property specifies the content type of the file.
	ContentType *string `json:"contentType,omitempty"`
	// The UTC DateTime when the workspace item was created.
	Created *string `json:"created,omitempty"`
	// The ID of the user who created the workspace item.
	CreatedById *string `json:"createdById,omitempty"`
	CreatedByInformation *WorkspaceUser `json:"createdByInformation,omitempty"`
	// The file extension of a file item.
	Extension *string `json:"extension,omitempty"`
	// The size of the file in bytes.
	FileSize *string `json:"fileSize,omitempty"`
	// The URI for retrieving the file.
	FileUri *string `json:"fileUri,omitempty"`
	// The ID of the workspace item.
	Id *string `json:"id,omitempty"`
	//  When **true,** the item is public.
	IsPublic *string `json:"isPublic,omitempty"`
	// The UTC DateTime that the item was last modified.
	LastModified *string `json:"lastModified,omitempty"`
	// The ID of the user who last modified the item.
	LastModifiedById *string `json:"lastModifiedById,omitempty"`
	LastModifiedByInformation *WorkspaceUser `json:"lastModifiedByInformation,omitempty"`
	// The name of the file or folder.
	Name *string `json:"name,omitempty"`
	// The number of pages in a file.
	PageCount *string `json:"pageCount,omitempty"`
	// The ID of the parent folder, or the special value `root` for the root folder.
	ParentFolderId *string `json:"parentFolderId,omitempty"`
	// The URI of the parent folder.
	ParentFolderUri *string `json:"parentFolderUri,omitempty"`
	// A 64-byte, Secure Hash Algorithm 256 (SHA256) checksum that the caller computes across the entirety of the original content of a file. DocuSign compares this value to its own computation. If the two values are not equal, the original content and received content are not the same and the upload is refused.
	Sha256 *string `json:"sha256,omitempty"`
	// The height of the thumbnail image.
	ThumbHeight *string `json:"thumbHeight,omitempty"`
	Thumbnail *Page `json:"thumbnail,omitempty"`
	// The width of the thumbnail image.
	ThumbWidth *string `json:"thumbWidth,omitempty"`
	// The type of workspace item. Valid values are:  - `file` - `folder`
	Type *string `json:"type,omitempty"`
	// A URI containing the user ID.
	Uri *string `json:"uri,omitempty"`
	UserAuthorization *WorkspaceUserAuthorization `json:"userAuthorization,omitempty"`
}

// NewWorkspaceItems instantiates a new WorkspaceItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaceItems() *WorkspaceItems {
	this := WorkspaceItems{}
	return &this
}

// NewWorkspaceItemsWithDefaults instantiates a new WorkspaceItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspaceItemsWithDefaults() *WorkspaceItems {
	this := WorkspaceItems{}
	return &this
}

// GetCallerAuthorization returns the CallerAuthorization field value if set, zero value otherwise.
func (o *WorkspaceItems) GetCallerAuthorization() WorkspaceUserAuthorization {
	if o == nil || IsNil(o.CallerAuthorization) {
		var ret WorkspaceUserAuthorization
		return ret
	}
	return *o.CallerAuthorization
}

// GetCallerAuthorizationOk returns a tuple with the CallerAuthorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetCallerAuthorizationOk() (*WorkspaceUserAuthorization, bool) {
	if o == nil || IsNil(o.CallerAuthorization) {
		return nil, false
	}
	return o.CallerAuthorization, true
}

// HasCallerAuthorization returns a boolean if a field has been set.
func (o *WorkspaceItems) HasCallerAuthorization() bool {
	if o != nil && !IsNil(o.CallerAuthorization) {
		return true
	}

	return false
}

// SetCallerAuthorization gets a reference to the given WorkspaceUserAuthorization and assigns it to the CallerAuthorization field.
func (o *WorkspaceItems) SetCallerAuthorization(v WorkspaceUserAuthorization) {
	o.CallerAuthorization = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *WorkspaceItems) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *WorkspaceItems) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *WorkspaceItems) SetContentType(v string) {
	o.ContentType = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *WorkspaceItems) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *WorkspaceItems) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *WorkspaceItems) SetCreated(v string) {
	o.Created = &v
}

// GetCreatedById returns the CreatedById field value if set, zero value otherwise.
func (o *WorkspaceItems) GetCreatedById() string {
	if o == nil || IsNil(o.CreatedById) {
		var ret string
		return ret
	}
	return *o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetCreatedByIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedById) {
		return nil, false
	}
	return o.CreatedById, true
}

// HasCreatedById returns a boolean if a field has been set.
func (o *WorkspaceItems) HasCreatedById() bool {
	if o != nil && !IsNil(o.CreatedById) {
		return true
	}

	return false
}

// SetCreatedById gets a reference to the given string and assigns it to the CreatedById field.
func (o *WorkspaceItems) SetCreatedById(v string) {
	o.CreatedById = &v
}

// GetCreatedByInformation returns the CreatedByInformation field value if set, zero value otherwise.
func (o *WorkspaceItems) GetCreatedByInformation() WorkspaceUser {
	if o == nil || IsNil(o.CreatedByInformation) {
		var ret WorkspaceUser
		return ret
	}
	return *o.CreatedByInformation
}

// GetCreatedByInformationOk returns a tuple with the CreatedByInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetCreatedByInformationOk() (*WorkspaceUser, bool) {
	if o == nil || IsNil(o.CreatedByInformation) {
		return nil, false
	}
	return o.CreatedByInformation, true
}

// HasCreatedByInformation returns a boolean if a field has been set.
func (o *WorkspaceItems) HasCreatedByInformation() bool {
	if o != nil && !IsNil(o.CreatedByInformation) {
		return true
	}

	return false
}

// SetCreatedByInformation gets a reference to the given WorkspaceUser and assigns it to the CreatedByInformation field.
func (o *WorkspaceItems) SetCreatedByInformation(v WorkspaceUser) {
	o.CreatedByInformation = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *WorkspaceItems) GetExtension() string {
	if o == nil || IsNil(o.Extension) {
		var ret string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.Extension) {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *WorkspaceItems) HasExtension() bool {
	if o != nil && !IsNil(o.Extension) {
		return true
	}

	return false
}

// SetExtension gets a reference to the given string and assigns it to the Extension field.
func (o *WorkspaceItems) SetExtension(v string) {
	o.Extension = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *WorkspaceItems) GetFileSize() string {
	if o == nil || IsNil(o.FileSize) {
		var ret string
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetFileSizeOk() (*string, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *WorkspaceItems) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given string and assigns it to the FileSize field.
func (o *WorkspaceItems) SetFileSize(v string) {
	o.FileSize = &v
}

// GetFileUri returns the FileUri field value if set, zero value otherwise.
func (o *WorkspaceItems) GetFileUri() string {
	if o == nil || IsNil(o.FileUri) {
		var ret string
		return ret
	}
	return *o.FileUri
}

// GetFileUriOk returns a tuple with the FileUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetFileUriOk() (*string, bool) {
	if o == nil || IsNil(o.FileUri) {
		return nil, false
	}
	return o.FileUri, true
}

// HasFileUri returns a boolean if a field has been set.
func (o *WorkspaceItems) HasFileUri() bool {
	if o != nil && !IsNil(o.FileUri) {
		return true
	}

	return false
}

// SetFileUri gets a reference to the given string and assigns it to the FileUri field.
func (o *WorkspaceItems) SetFileUri(v string) {
	o.FileUri = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkspaceItems) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkspaceItems) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WorkspaceItems) SetId(v string) {
	o.Id = &v
}

// GetIsPublic returns the IsPublic field value if set, zero value otherwise.
func (o *WorkspaceItems) GetIsPublic() string {
	if o == nil || IsNil(o.IsPublic) {
		var ret string
		return ret
	}
	return *o.IsPublic
}

// GetIsPublicOk returns a tuple with the IsPublic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetIsPublicOk() (*string, bool) {
	if o == nil || IsNil(o.IsPublic) {
		return nil, false
	}
	return o.IsPublic, true
}

// HasIsPublic returns a boolean if a field has been set.
func (o *WorkspaceItems) HasIsPublic() bool {
	if o != nil && !IsNil(o.IsPublic) {
		return true
	}

	return false
}

// SetIsPublic gets a reference to the given string and assigns it to the IsPublic field.
func (o *WorkspaceItems) SetIsPublic(v string) {
	o.IsPublic = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *WorkspaceItems) GetLastModified() string {
	if o == nil || IsNil(o.LastModified) {
		var ret string
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetLastModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *WorkspaceItems) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given string and assigns it to the LastModified field.
func (o *WorkspaceItems) SetLastModified(v string) {
	o.LastModified = &v
}

// GetLastModifiedById returns the LastModifiedById field value if set, zero value otherwise.
func (o *WorkspaceItems) GetLastModifiedById() string {
	if o == nil || IsNil(o.LastModifiedById) {
		var ret string
		return ret
	}
	return *o.LastModifiedById
}

// GetLastModifiedByIdOk returns a tuple with the LastModifiedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetLastModifiedByIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedById) {
		return nil, false
	}
	return o.LastModifiedById, true
}

// HasLastModifiedById returns a boolean if a field has been set.
func (o *WorkspaceItems) HasLastModifiedById() bool {
	if o != nil && !IsNil(o.LastModifiedById) {
		return true
	}

	return false
}

// SetLastModifiedById gets a reference to the given string and assigns it to the LastModifiedById field.
func (o *WorkspaceItems) SetLastModifiedById(v string) {
	o.LastModifiedById = &v
}

// GetLastModifiedByInformation returns the LastModifiedByInformation field value if set, zero value otherwise.
func (o *WorkspaceItems) GetLastModifiedByInformation() WorkspaceUser {
	if o == nil || IsNil(o.LastModifiedByInformation) {
		var ret WorkspaceUser
		return ret
	}
	return *o.LastModifiedByInformation
}

// GetLastModifiedByInformationOk returns a tuple with the LastModifiedByInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetLastModifiedByInformationOk() (*WorkspaceUser, bool) {
	if o == nil || IsNil(o.LastModifiedByInformation) {
		return nil, false
	}
	return o.LastModifiedByInformation, true
}

// HasLastModifiedByInformation returns a boolean if a field has been set.
func (o *WorkspaceItems) HasLastModifiedByInformation() bool {
	if o != nil && !IsNil(o.LastModifiedByInformation) {
		return true
	}

	return false
}

// SetLastModifiedByInformation gets a reference to the given WorkspaceUser and assigns it to the LastModifiedByInformation field.
func (o *WorkspaceItems) SetLastModifiedByInformation(v WorkspaceUser) {
	o.LastModifiedByInformation = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WorkspaceItems) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WorkspaceItems) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WorkspaceItems) SetName(v string) {
	o.Name = &v
}

// GetPageCount returns the PageCount field value if set, zero value otherwise.
func (o *WorkspaceItems) GetPageCount() string {
	if o == nil || IsNil(o.PageCount) {
		var ret string
		return ret
	}
	return *o.PageCount
}

// GetPageCountOk returns a tuple with the PageCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetPageCountOk() (*string, bool) {
	if o == nil || IsNil(o.PageCount) {
		return nil, false
	}
	return o.PageCount, true
}

// HasPageCount returns a boolean if a field has been set.
func (o *WorkspaceItems) HasPageCount() bool {
	if o != nil && !IsNil(o.PageCount) {
		return true
	}

	return false
}

// SetPageCount gets a reference to the given string and assigns it to the PageCount field.
func (o *WorkspaceItems) SetPageCount(v string) {
	o.PageCount = &v
}

// GetParentFolderId returns the ParentFolderId field value if set, zero value otherwise.
func (o *WorkspaceItems) GetParentFolderId() string {
	if o == nil || IsNil(o.ParentFolderId) {
		var ret string
		return ret
	}
	return *o.ParentFolderId
}

// GetParentFolderIdOk returns a tuple with the ParentFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetParentFolderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentFolderId) {
		return nil, false
	}
	return o.ParentFolderId, true
}

// HasParentFolderId returns a boolean if a field has been set.
func (o *WorkspaceItems) HasParentFolderId() bool {
	if o != nil && !IsNil(o.ParentFolderId) {
		return true
	}

	return false
}

// SetParentFolderId gets a reference to the given string and assigns it to the ParentFolderId field.
func (o *WorkspaceItems) SetParentFolderId(v string) {
	o.ParentFolderId = &v
}

// GetParentFolderUri returns the ParentFolderUri field value if set, zero value otherwise.
func (o *WorkspaceItems) GetParentFolderUri() string {
	if o == nil || IsNil(o.ParentFolderUri) {
		var ret string
		return ret
	}
	return *o.ParentFolderUri
}

// GetParentFolderUriOk returns a tuple with the ParentFolderUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetParentFolderUriOk() (*string, bool) {
	if o == nil || IsNil(o.ParentFolderUri) {
		return nil, false
	}
	return o.ParentFolderUri, true
}

// HasParentFolderUri returns a boolean if a field has been set.
func (o *WorkspaceItems) HasParentFolderUri() bool {
	if o != nil && !IsNil(o.ParentFolderUri) {
		return true
	}

	return false
}

// SetParentFolderUri gets a reference to the given string and assigns it to the ParentFolderUri field.
func (o *WorkspaceItems) SetParentFolderUri(v string) {
	o.ParentFolderUri = &v
}

// GetSha256 returns the Sha256 field value if set, zero value otherwise.
func (o *WorkspaceItems) GetSha256() string {
	if o == nil || IsNil(o.Sha256) {
		var ret string
		return ret
	}
	return *o.Sha256
}

// GetSha256Ok returns a tuple with the Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetSha256Ok() (*string, bool) {
	if o == nil || IsNil(o.Sha256) {
		return nil, false
	}
	return o.Sha256, true
}

// HasSha256 returns a boolean if a field has been set.
func (o *WorkspaceItems) HasSha256() bool {
	if o != nil && !IsNil(o.Sha256) {
		return true
	}

	return false
}

// SetSha256 gets a reference to the given string and assigns it to the Sha256 field.
func (o *WorkspaceItems) SetSha256(v string) {
	o.Sha256 = &v
}

// GetThumbHeight returns the ThumbHeight field value if set, zero value otherwise.
func (o *WorkspaceItems) GetThumbHeight() string {
	if o == nil || IsNil(o.ThumbHeight) {
		var ret string
		return ret
	}
	return *o.ThumbHeight
}

// GetThumbHeightOk returns a tuple with the ThumbHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetThumbHeightOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbHeight) {
		return nil, false
	}
	return o.ThumbHeight, true
}

// HasThumbHeight returns a boolean if a field has been set.
func (o *WorkspaceItems) HasThumbHeight() bool {
	if o != nil && !IsNil(o.ThumbHeight) {
		return true
	}

	return false
}

// SetThumbHeight gets a reference to the given string and assigns it to the ThumbHeight field.
func (o *WorkspaceItems) SetThumbHeight(v string) {
	o.ThumbHeight = &v
}

// GetThumbnail returns the Thumbnail field value if set, zero value otherwise.
func (o *WorkspaceItems) GetThumbnail() Page {
	if o == nil || IsNil(o.Thumbnail) {
		var ret Page
		return ret
	}
	return *o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetThumbnailOk() (*Page, bool) {
	if o == nil || IsNil(o.Thumbnail) {
		return nil, false
	}
	return o.Thumbnail, true
}

// HasThumbnail returns a boolean if a field has been set.
func (o *WorkspaceItems) HasThumbnail() bool {
	if o != nil && !IsNil(o.Thumbnail) {
		return true
	}

	return false
}

// SetThumbnail gets a reference to the given Page and assigns it to the Thumbnail field.
func (o *WorkspaceItems) SetThumbnail(v Page) {
	o.Thumbnail = &v
}

// GetThumbWidth returns the ThumbWidth field value if set, zero value otherwise.
func (o *WorkspaceItems) GetThumbWidth() string {
	if o == nil || IsNil(o.ThumbWidth) {
		var ret string
		return ret
	}
	return *o.ThumbWidth
}

// GetThumbWidthOk returns a tuple with the ThumbWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetThumbWidthOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbWidth) {
		return nil, false
	}
	return o.ThumbWidth, true
}

// HasThumbWidth returns a boolean if a field has been set.
func (o *WorkspaceItems) HasThumbWidth() bool {
	if o != nil && !IsNil(o.ThumbWidth) {
		return true
	}

	return false
}

// SetThumbWidth gets a reference to the given string and assigns it to the ThumbWidth field.
func (o *WorkspaceItems) SetThumbWidth(v string) {
	o.ThumbWidth = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WorkspaceItems) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WorkspaceItems) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WorkspaceItems) SetType(v string) {
	o.Type = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *WorkspaceItems) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *WorkspaceItems) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *WorkspaceItems) SetUri(v string) {
	o.Uri = &v
}

// GetUserAuthorization returns the UserAuthorization field value if set, zero value otherwise.
func (o *WorkspaceItems) GetUserAuthorization() WorkspaceUserAuthorization {
	if o == nil || IsNil(o.UserAuthorization) {
		var ret WorkspaceUserAuthorization
		return ret
	}
	return *o.UserAuthorization
}

// GetUserAuthorizationOk returns a tuple with the UserAuthorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceItems) GetUserAuthorizationOk() (*WorkspaceUserAuthorization, bool) {
	if o == nil || IsNil(o.UserAuthorization) {
		return nil, false
	}
	return o.UserAuthorization, true
}

// HasUserAuthorization returns a boolean if a field has been set.
func (o *WorkspaceItems) HasUserAuthorization() bool {
	if o != nil && !IsNil(o.UserAuthorization) {
		return true
	}

	return false
}

// SetUserAuthorization gets a reference to the given WorkspaceUserAuthorization and assigns it to the UserAuthorization field.
func (o *WorkspaceItems) SetUserAuthorization(v WorkspaceUserAuthorization) {
	o.UserAuthorization = &v
}

func (o WorkspaceItems) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkspaceItems) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallerAuthorization) {
		toSerialize["callerAuthorization"] = o.CallerAuthorization
	}
	if !IsNil(o.ContentType) {
		toSerialize["contentType"] = o.ContentType
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedById) {
		toSerialize["createdById"] = o.CreatedById
	}
	if !IsNil(o.CreatedByInformation) {
		toSerialize["createdByInformation"] = o.CreatedByInformation
	}
	if !IsNil(o.Extension) {
		toSerialize["extension"] = o.Extension
	}
	if !IsNil(o.FileSize) {
		toSerialize["fileSize"] = o.FileSize
	}
	if !IsNil(o.FileUri) {
		toSerialize["fileUri"] = o.FileUri
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsPublic) {
		toSerialize["isPublic"] = o.IsPublic
	}
	if !IsNil(o.LastModified) {
		toSerialize["lastModified"] = o.LastModified
	}
	if !IsNil(o.LastModifiedById) {
		toSerialize["lastModifiedById"] = o.LastModifiedById
	}
	if !IsNil(o.LastModifiedByInformation) {
		toSerialize["lastModifiedByInformation"] = o.LastModifiedByInformation
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PageCount) {
		toSerialize["pageCount"] = o.PageCount
	}
	if !IsNil(o.ParentFolderId) {
		toSerialize["parentFolderId"] = o.ParentFolderId
	}
	if !IsNil(o.ParentFolderUri) {
		toSerialize["parentFolderUri"] = o.ParentFolderUri
	}
	if !IsNil(o.Sha256) {
		toSerialize["sha256"] = o.Sha256
	}
	if !IsNil(o.ThumbHeight) {
		toSerialize["thumbHeight"] = o.ThumbHeight
	}
	if !IsNil(o.Thumbnail) {
		toSerialize["thumbnail"] = o.Thumbnail
	}
	if !IsNil(o.ThumbWidth) {
		toSerialize["thumbWidth"] = o.ThumbWidth
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	if !IsNil(o.UserAuthorization) {
		toSerialize["userAuthorization"] = o.UserAuthorization
	}
	return toSerialize, nil
}

type NullableWorkspaceItems struct {
	value *WorkspaceItems
	isSet bool
}

func (v NullableWorkspaceItems) Get() *WorkspaceItems {
	return v.value
}

func (v *NullableWorkspaceItems) Set(val *WorkspaceItems) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaceItems) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaceItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaceItems(val *WorkspaceItems) *NullableWorkspaceItems {
	return &NullableWorkspaceItems{value: val, isSet: true}
}

func (v NullableWorkspaceItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaceItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


