/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WorkspaceUserAuthorization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkspaceUserAuthorization{}

// WorkspaceUserAuthorization Provides properties that describe user authorization to a workspace.
type WorkspaceUserAuthorization struct {
	// When **true,** the workspace user can delete items from the workspace.
	CanDelete *string `json:"canDelete,omitempty"`
	// When **true,** the workspace user can move the items in the workspace.
	CanMove *string `json:"canMove,omitempty"`
	// When **true,** the workspace user can create transactions from the workspace.
	CanTransact *string `json:"canTransact,omitempty"`
	// When **true,** the workspace user can view the items in the workspace.
	CanView *string `json:"canView,omitempty"`
	// The UTC DateTime when the workspace user authorization was created.
	Created *string `json:"created,omitempty"`
	// The ID of the user who created the workspace user authorization. 
	CreatedById *string `json:"createdById,omitempty"`
	ErrorDetails *ErrorDetails `json:"errorDetails,omitempty"`
	// The UTC DateTime when the workspace user authorization was last modified.
	Modified *string `json:"modified,omitempty"`
	// The ID of the user who last modified the workspace user authorization.
	ModifiedById *string `json:"modifiedById,omitempty"`
	// The ID of the workspace user.
	WorkspaceUserId *string `json:"workspaceUserId,omitempty"`
	WorkspaceUserInformation *WorkspaceUser `json:"workspaceUserInformation,omitempty"`
}

// NewWorkspaceUserAuthorization instantiates a new WorkspaceUserAuthorization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaceUserAuthorization() *WorkspaceUserAuthorization {
	this := WorkspaceUserAuthorization{}
	return &this
}

// NewWorkspaceUserAuthorizationWithDefaults instantiates a new WorkspaceUserAuthorization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspaceUserAuthorizationWithDefaults() *WorkspaceUserAuthorization {
	this := WorkspaceUserAuthorization{}
	return &this
}

// GetCanDelete returns the CanDelete field value if set, zero value otherwise.
func (o *WorkspaceUserAuthorization) GetCanDelete() string {
	if o == nil || IsNil(o.CanDelete) {
		var ret string
		return ret
	}
	return *o.CanDelete
}

// GetCanDeleteOk returns a tuple with the CanDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUserAuthorization) GetCanDeleteOk() (*string, bool) {
	if o == nil || IsNil(o.CanDelete) {
		return nil, false
	}
	return o.CanDelete, true
}

// HasCanDelete returns a boolean if a field has been set.
func (o *WorkspaceUserAuthorization) HasCanDelete() bool {
	if o != nil && !IsNil(o.CanDelete) {
		return true
	}

	return false
}

// SetCanDelete gets a reference to the given string and assigns it to the CanDelete field.
func (o *WorkspaceUserAuthorization) SetCanDelete(v string) {
	o.CanDelete = &v
}

// GetCanMove returns the CanMove field value if set, zero value otherwise.
func (o *WorkspaceUserAuthorization) GetCanMove() string {
	if o == nil || IsNil(o.CanMove) {
		var ret string
		return ret
	}
	return *o.CanMove
}

// GetCanMoveOk returns a tuple with the CanMove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUserAuthorization) GetCanMoveOk() (*string, bool) {
	if o == nil || IsNil(o.CanMove) {
		return nil, false
	}
	return o.CanMove, true
}

// HasCanMove returns a boolean if a field has been set.
func (o *WorkspaceUserAuthorization) HasCanMove() bool {
	if o != nil && !IsNil(o.CanMove) {
		return true
	}

	return false
}

// SetCanMove gets a reference to the given string and assigns it to the CanMove field.
func (o *WorkspaceUserAuthorization) SetCanMove(v string) {
	o.CanMove = &v
}

// GetCanTransact returns the CanTransact field value if set, zero value otherwise.
func (o *WorkspaceUserAuthorization) GetCanTransact() string {
	if o == nil || IsNil(o.CanTransact) {
		var ret string
		return ret
	}
	return *o.CanTransact
}

// GetCanTransactOk returns a tuple with the CanTransact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUserAuthorization) GetCanTransactOk() (*string, bool) {
	if o == nil || IsNil(o.CanTransact) {
		return nil, false
	}
	return o.CanTransact, true
}

// HasCanTransact returns a boolean if a field has been set.
func (o *WorkspaceUserAuthorization) HasCanTransact() bool {
	if o != nil && !IsNil(o.CanTransact) {
		return true
	}

	return false
}

// SetCanTransact gets a reference to the given string and assigns it to the CanTransact field.
func (o *WorkspaceUserAuthorization) SetCanTransact(v string) {
	o.CanTransact = &v
}

// GetCanView returns the CanView field value if set, zero value otherwise.
func (o *WorkspaceUserAuthorization) GetCanView() string {
	if o == nil || IsNil(o.CanView) {
		var ret string
		return ret
	}
	return *o.CanView
}

// GetCanViewOk returns a tuple with the CanView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUserAuthorization) GetCanViewOk() (*string, bool) {
	if o == nil || IsNil(o.CanView) {
		return nil, false
	}
	return o.CanView, true
}

// HasCanView returns a boolean if a field has been set.
func (o *WorkspaceUserAuthorization) HasCanView() bool {
	if o != nil && !IsNil(o.CanView) {
		return true
	}

	return false
}

// SetCanView gets a reference to the given string and assigns it to the CanView field.
func (o *WorkspaceUserAuthorization) SetCanView(v string) {
	o.CanView = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *WorkspaceUserAuthorization) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUserAuthorization) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *WorkspaceUserAuthorization) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *WorkspaceUserAuthorization) SetCreated(v string) {
	o.Created = &v
}

// GetCreatedById returns the CreatedById field value if set, zero value otherwise.
func (o *WorkspaceUserAuthorization) GetCreatedById() string {
	if o == nil || IsNil(o.CreatedById) {
		var ret string
		return ret
	}
	return *o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUserAuthorization) GetCreatedByIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedById) {
		return nil, false
	}
	return o.CreatedById, true
}

// HasCreatedById returns a boolean if a field has been set.
func (o *WorkspaceUserAuthorization) HasCreatedById() bool {
	if o != nil && !IsNil(o.CreatedById) {
		return true
	}

	return false
}

// SetCreatedById gets a reference to the given string and assigns it to the CreatedById field.
func (o *WorkspaceUserAuthorization) SetCreatedById(v string) {
	o.CreatedById = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *WorkspaceUserAuthorization) GetErrorDetails() ErrorDetails {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret ErrorDetails
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUserAuthorization) GetErrorDetailsOk() (*ErrorDetails, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *WorkspaceUserAuthorization) HasErrorDetails() bool {
	if o != nil && !IsNil(o.ErrorDetails) {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given ErrorDetails and assigns it to the ErrorDetails field.
func (o *WorkspaceUserAuthorization) SetErrorDetails(v ErrorDetails) {
	o.ErrorDetails = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *WorkspaceUserAuthorization) GetModified() string {
	if o == nil || IsNil(o.Modified) {
		var ret string
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUserAuthorization) GetModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *WorkspaceUserAuthorization) HasModified() bool {
	if o != nil && !IsNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given string and assigns it to the Modified field.
func (o *WorkspaceUserAuthorization) SetModified(v string) {
	o.Modified = &v
}

// GetModifiedById returns the ModifiedById field value if set, zero value otherwise.
func (o *WorkspaceUserAuthorization) GetModifiedById() string {
	if o == nil || IsNil(o.ModifiedById) {
		var ret string
		return ret
	}
	return *o.ModifiedById
}

// GetModifiedByIdOk returns a tuple with the ModifiedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUserAuthorization) GetModifiedByIdOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedById) {
		return nil, false
	}
	return o.ModifiedById, true
}

// HasModifiedById returns a boolean if a field has been set.
func (o *WorkspaceUserAuthorization) HasModifiedById() bool {
	if o != nil && !IsNil(o.ModifiedById) {
		return true
	}

	return false
}

// SetModifiedById gets a reference to the given string and assigns it to the ModifiedById field.
func (o *WorkspaceUserAuthorization) SetModifiedById(v string) {
	o.ModifiedById = &v
}

// GetWorkspaceUserId returns the WorkspaceUserId field value if set, zero value otherwise.
func (o *WorkspaceUserAuthorization) GetWorkspaceUserId() string {
	if o == nil || IsNil(o.WorkspaceUserId) {
		var ret string
		return ret
	}
	return *o.WorkspaceUserId
}

// GetWorkspaceUserIdOk returns a tuple with the WorkspaceUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUserAuthorization) GetWorkspaceUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceUserId) {
		return nil, false
	}
	return o.WorkspaceUserId, true
}

// HasWorkspaceUserId returns a boolean if a field has been set.
func (o *WorkspaceUserAuthorization) HasWorkspaceUserId() bool {
	if o != nil && !IsNil(o.WorkspaceUserId) {
		return true
	}

	return false
}

// SetWorkspaceUserId gets a reference to the given string and assigns it to the WorkspaceUserId field.
func (o *WorkspaceUserAuthorization) SetWorkspaceUserId(v string) {
	o.WorkspaceUserId = &v
}

// GetWorkspaceUserInformation returns the WorkspaceUserInformation field value if set, zero value otherwise.
func (o *WorkspaceUserAuthorization) GetWorkspaceUserInformation() WorkspaceUser {
	if o == nil || IsNil(o.WorkspaceUserInformation) {
		var ret WorkspaceUser
		return ret
	}
	return *o.WorkspaceUserInformation
}

// GetWorkspaceUserInformationOk returns a tuple with the WorkspaceUserInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceUserAuthorization) GetWorkspaceUserInformationOk() (*WorkspaceUser, bool) {
	if o == nil || IsNil(o.WorkspaceUserInformation) {
		return nil, false
	}
	return o.WorkspaceUserInformation, true
}

// HasWorkspaceUserInformation returns a boolean if a field has been set.
func (o *WorkspaceUserAuthorization) HasWorkspaceUserInformation() bool {
	if o != nil && !IsNil(o.WorkspaceUserInformation) {
		return true
	}

	return false
}

// SetWorkspaceUserInformation gets a reference to the given WorkspaceUser and assigns it to the WorkspaceUserInformation field.
func (o *WorkspaceUserAuthorization) SetWorkspaceUserInformation(v WorkspaceUser) {
	o.WorkspaceUserInformation = &v
}

func (o WorkspaceUserAuthorization) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkspaceUserAuthorization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CanDelete) {
		toSerialize["canDelete"] = o.CanDelete
	}
	if !IsNil(o.CanMove) {
		toSerialize["canMove"] = o.CanMove
	}
	if !IsNil(o.CanTransact) {
		toSerialize["canTransact"] = o.CanTransact
	}
	if !IsNil(o.CanView) {
		toSerialize["canView"] = o.CanView
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedById) {
		toSerialize["createdById"] = o.CreatedById
	}
	if !IsNil(o.ErrorDetails) {
		toSerialize["errorDetails"] = o.ErrorDetails
	}
	if !IsNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}
	if !IsNil(o.ModifiedById) {
		toSerialize["modifiedById"] = o.ModifiedById
	}
	if !IsNil(o.WorkspaceUserId) {
		toSerialize["workspaceUserId"] = o.WorkspaceUserId
	}
	if !IsNil(o.WorkspaceUserInformation) {
		toSerialize["workspaceUserInformation"] = o.WorkspaceUserInformation
	}
	return toSerialize, nil
}

type NullableWorkspaceUserAuthorization struct {
	value *WorkspaceUserAuthorization
	isSet bool
}

func (v NullableWorkspaceUserAuthorization) Get() *WorkspaceUserAuthorization {
	return v.value
}

func (v *NullableWorkspaceUserAuthorization) Set(val *WorkspaceUserAuthorization) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaceUserAuthorization) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaceUserAuthorization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaceUserAuthorization(val *WorkspaceUserAuthorization) *NullableWorkspaceUserAuthorization {
	return &NullableWorkspaceUserAuthorization{value: val, isSet: true}
}

func (v NullableWorkspaceUserAuthorization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaceUserAuthorization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


