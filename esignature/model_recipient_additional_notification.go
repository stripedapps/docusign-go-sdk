/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RecipientAdditionalNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecipientAdditionalNotification{}

// RecipientAdditionalNotification Describes an additional notification method.
type RecipientAdditionalNotification struct {
	PhoneNumber *RecipientPhoneNumber `json:"phoneNumber,omitempty"`
	// The secondary delivery method. One of:  - `email` - `fax` - `SMS` - `WhatsApp` - `offline`  The `SMS` and `WhatsApp` delivery methods are limited to `signer`, `carbonCopy`, and `certifiedDelivery` recipients.  **Related topics**  - [Using SMS delivery with the eSignature API][smsconcept] - [How to request a signature by SMS delivery][howto]  [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/ [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
	SecondaryDeliveryMethod *string `json:"secondaryDeliveryMethod,omitempty"`
	SecondaryDeliveryMethodMetadata *PropertyMetadata `json:"secondaryDeliveryMethodMetadata,omitempty"`
	// The status of the delivery. This property is read-only.  One of:  - `autoresponded` - `optedout` - `limitreached` 
	SecondaryDeliveryStatus *string `json:"secondaryDeliveryStatus,omitempty"`
}

// NewRecipientAdditionalNotification instantiates a new RecipientAdditionalNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecipientAdditionalNotification() *RecipientAdditionalNotification {
	this := RecipientAdditionalNotification{}
	return &this
}

// NewRecipientAdditionalNotificationWithDefaults instantiates a new RecipientAdditionalNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecipientAdditionalNotificationWithDefaults() *RecipientAdditionalNotification {
	this := RecipientAdditionalNotification{}
	return &this
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *RecipientAdditionalNotification) GetPhoneNumber() RecipientPhoneNumber {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret RecipientPhoneNumber
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientAdditionalNotification) GetPhoneNumberOk() (*RecipientPhoneNumber, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *RecipientAdditionalNotification) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given RecipientPhoneNumber and assigns it to the PhoneNumber field.
func (o *RecipientAdditionalNotification) SetPhoneNumber(v RecipientPhoneNumber) {
	o.PhoneNumber = &v
}

// GetSecondaryDeliveryMethod returns the SecondaryDeliveryMethod field value if set, zero value otherwise.
func (o *RecipientAdditionalNotification) GetSecondaryDeliveryMethod() string {
	if o == nil || IsNil(o.SecondaryDeliveryMethod) {
		var ret string
		return ret
	}
	return *o.SecondaryDeliveryMethod
}

// GetSecondaryDeliveryMethodOk returns a tuple with the SecondaryDeliveryMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientAdditionalNotification) GetSecondaryDeliveryMethodOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryDeliveryMethod) {
		return nil, false
	}
	return o.SecondaryDeliveryMethod, true
}

// HasSecondaryDeliveryMethod returns a boolean if a field has been set.
func (o *RecipientAdditionalNotification) HasSecondaryDeliveryMethod() bool {
	if o != nil && !IsNil(o.SecondaryDeliveryMethod) {
		return true
	}

	return false
}

// SetSecondaryDeliveryMethod gets a reference to the given string and assigns it to the SecondaryDeliveryMethod field.
func (o *RecipientAdditionalNotification) SetSecondaryDeliveryMethod(v string) {
	o.SecondaryDeliveryMethod = &v
}

// GetSecondaryDeliveryMethodMetadata returns the SecondaryDeliveryMethodMetadata field value if set, zero value otherwise.
func (o *RecipientAdditionalNotification) GetSecondaryDeliveryMethodMetadata() PropertyMetadata {
	if o == nil || IsNil(o.SecondaryDeliveryMethodMetadata) {
		var ret PropertyMetadata
		return ret
	}
	return *o.SecondaryDeliveryMethodMetadata
}

// GetSecondaryDeliveryMethodMetadataOk returns a tuple with the SecondaryDeliveryMethodMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientAdditionalNotification) GetSecondaryDeliveryMethodMetadataOk() (*PropertyMetadata, bool) {
	if o == nil || IsNil(o.SecondaryDeliveryMethodMetadata) {
		return nil, false
	}
	return o.SecondaryDeliveryMethodMetadata, true
}

// HasSecondaryDeliveryMethodMetadata returns a boolean if a field has been set.
func (o *RecipientAdditionalNotification) HasSecondaryDeliveryMethodMetadata() bool {
	if o != nil && !IsNil(o.SecondaryDeliveryMethodMetadata) {
		return true
	}

	return false
}

// SetSecondaryDeliveryMethodMetadata gets a reference to the given PropertyMetadata and assigns it to the SecondaryDeliveryMethodMetadata field.
func (o *RecipientAdditionalNotification) SetSecondaryDeliveryMethodMetadata(v PropertyMetadata) {
	o.SecondaryDeliveryMethodMetadata = &v
}

// GetSecondaryDeliveryStatus returns the SecondaryDeliveryStatus field value if set, zero value otherwise.
func (o *RecipientAdditionalNotification) GetSecondaryDeliveryStatus() string {
	if o == nil || IsNil(o.SecondaryDeliveryStatus) {
		var ret string
		return ret
	}
	return *o.SecondaryDeliveryStatus
}

// GetSecondaryDeliveryStatusOk returns a tuple with the SecondaryDeliveryStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientAdditionalNotification) GetSecondaryDeliveryStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryDeliveryStatus) {
		return nil, false
	}
	return o.SecondaryDeliveryStatus, true
}

// HasSecondaryDeliveryStatus returns a boolean if a field has been set.
func (o *RecipientAdditionalNotification) HasSecondaryDeliveryStatus() bool {
	if o != nil && !IsNil(o.SecondaryDeliveryStatus) {
		return true
	}

	return false
}

// SetSecondaryDeliveryStatus gets a reference to the given string and assigns it to the SecondaryDeliveryStatus field.
func (o *RecipientAdditionalNotification) SetSecondaryDeliveryStatus(v string) {
	o.SecondaryDeliveryStatus = &v
}

func (o RecipientAdditionalNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecipientAdditionalNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !IsNil(o.SecondaryDeliveryMethod) {
		toSerialize["secondaryDeliveryMethod"] = o.SecondaryDeliveryMethod
	}
	if !IsNil(o.SecondaryDeliveryMethodMetadata) {
		toSerialize["secondaryDeliveryMethodMetadata"] = o.SecondaryDeliveryMethodMetadata
	}
	if !IsNil(o.SecondaryDeliveryStatus) {
		toSerialize["secondaryDeliveryStatus"] = o.SecondaryDeliveryStatus
	}
	return toSerialize, nil
}

type NullableRecipientAdditionalNotification struct {
	value *RecipientAdditionalNotification
	isSet bool
}

func (v NullableRecipientAdditionalNotification) Get() *RecipientAdditionalNotification {
	return v.value
}

func (v *NullableRecipientAdditionalNotification) Set(val *RecipientAdditionalNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableRecipientAdditionalNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableRecipientAdditionalNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecipientAdditionalNotification(val *RecipientAdditionalNotification) *NullableRecipientAdditionalNotification {
	return &NullableRecipientAdditionalNotification{value: val, isSet: true}
}

func (v NullableRecipientAdditionalNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecipientAdditionalNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


