/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConnectFailureResults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectFailureResults{}

// ConnectFailureResults 
type ConnectFailureResults struct {
	// Details about a Connect failure result.
	RetryQueue []ConnectFailureResult `json:"retryQueue,omitempty"`
}

// NewConnectFailureResults instantiates a new ConnectFailureResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectFailureResults() *ConnectFailureResults {
	this := ConnectFailureResults{}
	return &this
}

// NewConnectFailureResultsWithDefaults instantiates a new ConnectFailureResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectFailureResultsWithDefaults() *ConnectFailureResults {
	this := ConnectFailureResults{}
	return &this
}

// GetRetryQueue returns the RetryQueue field value if set, zero value otherwise.
func (o *ConnectFailureResults) GetRetryQueue() []ConnectFailureResult {
	if o == nil || IsNil(o.RetryQueue) {
		var ret []ConnectFailureResult
		return ret
	}
	return o.RetryQueue
}

// GetRetryQueueOk returns a tuple with the RetryQueue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectFailureResults) GetRetryQueueOk() ([]ConnectFailureResult, bool) {
	if o == nil || IsNil(o.RetryQueue) {
		return nil, false
	}
	return o.RetryQueue, true
}

// HasRetryQueue returns a boolean if a field has been set.
func (o *ConnectFailureResults) HasRetryQueue() bool {
	if o != nil && !IsNil(o.RetryQueue) {
		return true
	}

	return false
}

// SetRetryQueue gets a reference to the given []ConnectFailureResult and assigns it to the RetryQueue field.
func (o *ConnectFailureResults) SetRetryQueue(v []ConnectFailureResult) {
	o.RetryQueue = v
}

func (o ConnectFailureResults) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectFailureResults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RetryQueue) {
		toSerialize["retryQueue"] = o.RetryQueue
	}
	return toSerialize, nil
}

type NullableConnectFailureResults struct {
	value *ConnectFailureResults
	isSet bool
}

func (v NullableConnectFailureResults) Get() *ConnectFailureResults {
	return v.value
}

func (v *NullableConnectFailureResults) Set(val *ConnectFailureResults) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectFailureResults) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectFailureResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectFailureResults(val *ConnectFailureResults) *NullableConnectFailureResults {
	return &NullableConnectFailureResults{value: val, isSet: true}
}

func (v NullableConnectFailureResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectFailureResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


