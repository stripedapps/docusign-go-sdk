/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NotaryJournalCredibleWitness type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotaryJournalCredibleWitness{}

// NotaryJournalCredibleWitness 
type NotaryJournalCredibleWitness struct {
	// The address of the witness.
	Address *string `json:"address,omitempty"`
	// The name of the witness.
	Name *string `json:"name,omitempty"`
	// A base64-encoded image of the signature.
	SignatureImage *string `json:"signatureImage,omitempty"`
}

// NewNotaryJournalCredibleWitness instantiates a new NotaryJournalCredibleWitness object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotaryJournalCredibleWitness() *NotaryJournalCredibleWitness {
	this := NotaryJournalCredibleWitness{}
	return &this
}

// NewNotaryJournalCredibleWitnessWithDefaults instantiates a new NotaryJournalCredibleWitness object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotaryJournalCredibleWitnessWithDefaults() *NotaryJournalCredibleWitness {
	this := NotaryJournalCredibleWitness{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *NotaryJournalCredibleWitness) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotaryJournalCredibleWitness) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *NotaryJournalCredibleWitness) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *NotaryJournalCredibleWitness) SetAddress(v string) {
	o.Address = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NotaryJournalCredibleWitness) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotaryJournalCredibleWitness) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NotaryJournalCredibleWitness) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NotaryJournalCredibleWitness) SetName(v string) {
	o.Name = &v
}

// GetSignatureImage returns the SignatureImage field value if set, zero value otherwise.
func (o *NotaryJournalCredibleWitness) GetSignatureImage() string {
	if o == nil || IsNil(o.SignatureImage) {
		var ret string
		return ret
	}
	return *o.SignatureImage
}

// GetSignatureImageOk returns a tuple with the SignatureImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotaryJournalCredibleWitness) GetSignatureImageOk() (*string, bool) {
	if o == nil || IsNil(o.SignatureImage) {
		return nil, false
	}
	return o.SignatureImage, true
}

// HasSignatureImage returns a boolean if a field has been set.
func (o *NotaryJournalCredibleWitness) HasSignatureImage() bool {
	if o != nil && !IsNil(o.SignatureImage) {
		return true
	}

	return false
}

// SetSignatureImage gets a reference to the given string and assigns it to the SignatureImage field.
func (o *NotaryJournalCredibleWitness) SetSignatureImage(v string) {
	o.SignatureImage = &v
}

func (o NotaryJournalCredibleWitness) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotaryJournalCredibleWitness) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SignatureImage) {
		toSerialize["signatureImage"] = o.SignatureImage
	}
	return toSerialize, nil
}

type NullableNotaryJournalCredibleWitness struct {
	value *NotaryJournalCredibleWitness
	isSet bool
}

func (v NullableNotaryJournalCredibleWitness) Get() *NotaryJournalCredibleWitness {
	return v.value
}

func (v *NullableNotaryJournalCredibleWitness) Set(val *NotaryJournalCredibleWitness) {
	v.value = val
	v.isSet = true
}

func (v NullableNotaryJournalCredibleWitness) IsSet() bool {
	return v.isSet
}

func (v *NullableNotaryJournalCredibleWitness) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotaryJournalCredibleWitness(val *NotaryJournalCredibleWitness) *NullableNotaryJournalCredibleWitness {
	return &NullableNotaryJournalCredibleWitness{value: val, isSet: true}
}

func (v NullableNotaryJournalCredibleWitness) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotaryJournalCredibleWitness) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


