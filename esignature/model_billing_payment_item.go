/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BillingPaymentItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingPaymentItem{}

// BillingPaymentItem Defines a billing payment request object.
type BillingPaymentItem struct {
	// The total amount of the purchase.
	Amount *string `json:"amount,omitempty"`
	// A sender-defined description of the line item. 
	Description *string `json:"description,omitempty"`
	// 
	PaymentDate *string `json:"paymentDate,omitempty"`
	// The ID of the payment.
	PaymentId *string `json:"paymentId,omitempty"`
	// When **true,** a PDF version of the invoice is available.   To get the PDF, make the call again and change \"Accept:\" in the header to \"Accept: application/pdf\".
	PaymentNumber *string `json:"paymentNumber,omitempty"`
}

// NewBillingPaymentItem instantiates a new BillingPaymentItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingPaymentItem() *BillingPaymentItem {
	this := BillingPaymentItem{}
	return &this
}

// NewBillingPaymentItemWithDefaults instantiates a new BillingPaymentItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingPaymentItemWithDefaults() *BillingPaymentItem {
	this := BillingPaymentItem{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *BillingPaymentItem) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPaymentItem) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *BillingPaymentItem) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *BillingPaymentItem) SetAmount(v string) {
	o.Amount = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BillingPaymentItem) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPaymentItem) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BillingPaymentItem) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BillingPaymentItem) SetDescription(v string) {
	o.Description = &v
}

// GetPaymentDate returns the PaymentDate field value if set, zero value otherwise.
func (o *BillingPaymentItem) GetPaymentDate() string {
	if o == nil || IsNil(o.PaymentDate) {
		var ret string
		return ret
	}
	return *o.PaymentDate
}

// GetPaymentDateOk returns a tuple with the PaymentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPaymentItem) GetPaymentDateOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentDate) {
		return nil, false
	}
	return o.PaymentDate, true
}

// HasPaymentDate returns a boolean if a field has been set.
func (o *BillingPaymentItem) HasPaymentDate() bool {
	if o != nil && !IsNil(o.PaymentDate) {
		return true
	}

	return false
}

// SetPaymentDate gets a reference to the given string and assigns it to the PaymentDate field.
func (o *BillingPaymentItem) SetPaymentDate(v string) {
	o.PaymentDate = &v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *BillingPaymentItem) GetPaymentId() string {
	if o == nil || IsNil(o.PaymentId) {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPaymentItem) GetPaymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *BillingPaymentItem) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *BillingPaymentItem) SetPaymentId(v string) {
	o.PaymentId = &v
}

// GetPaymentNumber returns the PaymentNumber field value if set, zero value otherwise.
func (o *BillingPaymentItem) GetPaymentNumber() string {
	if o == nil || IsNil(o.PaymentNumber) {
		var ret string
		return ret
	}
	return *o.PaymentNumber
}

// GetPaymentNumberOk returns a tuple with the PaymentNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPaymentItem) GetPaymentNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentNumber) {
		return nil, false
	}
	return o.PaymentNumber, true
}

// HasPaymentNumber returns a boolean if a field has been set.
func (o *BillingPaymentItem) HasPaymentNumber() bool {
	if o != nil && !IsNil(o.PaymentNumber) {
		return true
	}

	return false
}

// SetPaymentNumber gets a reference to the given string and assigns it to the PaymentNumber field.
func (o *BillingPaymentItem) SetPaymentNumber(v string) {
	o.PaymentNumber = &v
}

func (o BillingPaymentItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingPaymentItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.PaymentDate) {
		toSerialize["paymentDate"] = o.PaymentDate
	}
	if !IsNil(o.PaymentId) {
		toSerialize["paymentId"] = o.PaymentId
	}
	if !IsNil(o.PaymentNumber) {
		toSerialize["paymentNumber"] = o.PaymentNumber
	}
	return toSerialize, nil
}

type NullableBillingPaymentItem struct {
	value *BillingPaymentItem
	isSet bool
}

func (v NullableBillingPaymentItem) Get() *BillingPaymentItem {
	return v.value
}

func (v *NullableBillingPaymentItem) Set(val *BillingPaymentItem) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingPaymentItem) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingPaymentItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingPaymentItem(val *BillingPaymentItem) *NullableBillingPaymentItem {
	return &NullableBillingPaymentItem{value: val, isSet: true}
}

func (v NullableBillingPaymentItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingPaymentItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


