/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AskAnAdmin type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AskAnAdmin{}

// AskAnAdmin 
type AskAnAdmin struct {
	// 
	Email *string `json:"email,omitempty"`
	// 
	Message *string `json:"message,omitempty"`
	// 
	Name *string `json:"name,omitempty"`
	// 
	Phone *string `json:"phone,omitempty"`
}

// NewAskAnAdmin instantiates a new AskAnAdmin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAskAnAdmin() *AskAnAdmin {
	this := AskAnAdmin{}
	return &this
}

// NewAskAnAdminWithDefaults instantiates a new AskAnAdmin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAskAnAdminWithDefaults() *AskAnAdmin {
	this := AskAnAdmin{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AskAnAdmin) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AskAnAdmin) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *AskAnAdmin) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AskAnAdmin) SetEmail(v string) {
	o.Email = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *AskAnAdmin) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AskAnAdmin) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *AskAnAdmin) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *AskAnAdmin) SetMessage(v string) {
	o.Message = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AskAnAdmin) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AskAnAdmin) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AskAnAdmin) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AskAnAdmin) SetName(v string) {
	o.Name = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *AskAnAdmin) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AskAnAdmin) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *AskAnAdmin) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *AskAnAdmin) SetPhone(v string) {
	o.Phone = &v
}

func (o AskAnAdmin) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AskAnAdmin) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	return toSerialize, nil
}

type NullableAskAnAdmin struct {
	value *AskAnAdmin
	isSet bool
}

func (v NullableAskAnAdmin) Get() *AskAnAdmin {
	return v.value
}

func (v *NullableAskAnAdmin) Set(val *AskAnAdmin) {
	v.value = val
	v.isSet = true
}

func (v NullableAskAnAdmin) IsSet() bool {
	return v.isSet
}

func (v *NullableAskAnAdmin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAskAnAdmin(val *AskAnAdmin) *NullableAskAnAdmin {
	return &NullableAskAnAdmin{value: val, isSet: true}
}

func (v NullableAskAnAdmin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAskAnAdmin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


