/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserAuthorizationsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserAuthorizationsRequest{}

// UserAuthorizationsRequest An object that describes the user authorizations to create or update. 
type UserAuthorizationsRequest struct {
	// The list of user authorizations to create and/or update.
	Authorizations []UserAuthorizationCreateRequestWithId `json:"authorizations,omitempty"`
}

// NewUserAuthorizationsRequest instantiates a new UserAuthorizationsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAuthorizationsRequest() *UserAuthorizationsRequest {
	this := UserAuthorizationsRequest{}
	return &this
}

// NewUserAuthorizationsRequestWithDefaults instantiates a new UserAuthorizationsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAuthorizationsRequestWithDefaults() *UserAuthorizationsRequest {
	this := UserAuthorizationsRequest{}
	return &this
}

// GetAuthorizations returns the Authorizations field value if set, zero value otherwise.
func (o *UserAuthorizationsRequest) GetAuthorizations() []UserAuthorizationCreateRequestWithId {
	if o == nil || IsNil(o.Authorizations) {
		var ret []UserAuthorizationCreateRequestWithId
		return ret
	}
	return o.Authorizations
}

// GetAuthorizationsOk returns a tuple with the Authorizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAuthorizationsRequest) GetAuthorizationsOk() ([]UserAuthorizationCreateRequestWithId, bool) {
	if o == nil || IsNil(o.Authorizations) {
		return nil, false
	}
	return o.Authorizations, true
}

// HasAuthorizations returns a boolean if a field has been set.
func (o *UserAuthorizationsRequest) HasAuthorizations() bool {
	if o != nil && !IsNil(o.Authorizations) {
		return true
	}

	return false
}

// SetAuthorizations gets a reference to the given []UserAuthorizationCreateRequestWithId and assigns it to the Authorizations field.
func (o *UserAuthorizationsRequest) SetAuthorizations(v []UserAuthorizationCreateRequestWithId) {
	o.Authorizations = v
}

func (o UserAuthorizationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserAuthorizationsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Authorizations) {
		toSerialize["authorizations"] = o.Authorizations
	}
	return toSerialize, nil
}

type NullableUserAuthorizationsRequest struct {
	value *UserAuthorizationsRequest
	isSet bool
}

func (v NullableUserAuthorizationsRequest) Get() *UserAuthorizationsRequest {
	return v.value
}

func (v *NullableUserAuthorizationsRequest) Set(val *UserAuthorizationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAuthorizationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAuthorizationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAuthorizationsRequest(val *UserAuthorizationsRequest) *NullableUserAuthorizationsRequest {
	return &NullableUserAuthorizationsRequest{value: val, isSet: true}
}

func (v NullableUserAuthorizationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAuthorizationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


