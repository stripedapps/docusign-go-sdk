/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SettingsMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SettingsMetadata{}

// SettingsMetadata Metadata that indicates whether a property is editable and describes setting-specific options.
type SettingsMetadata struct {
	// When **true,** indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).
	Is21CFRPart11 *string `json:"is21CFRPart11,omitempty"`
	// An array of option strings supported by this setting.
	Options []string `json:"options,omitempty"`
	// Indicates whether the property is editable. Valid values are:  - `editable` - `read_only`
	Rights *string `json:"rights,omitempty"`
	// Reserved for DocuSign.
	UiHint *string `json:"uiHint,omitempty"`
	// Reserved for DocuSign.
	UiOrder *string `json:"uiOrder,omitempty"`
	// Reserved for DocuSign.
	UiType *string `json:"uiType,omitempty"`
}

// NewSettingsMetadata instantiates a new SettingsMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSettingsMetadata() *SettingsMetadata {
	this := SettingsMetadata{}
	return &this
}

// NewSettingsMetadataWithDefaults instantiates a new SettingsMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSettingsMetadataWithDefaults() *SettingsMetadata {
	this := SettingsMetadata{}
	return &this
}

// GetIs21CFRPart11 returns the Is21CFRPart11 field value if set, zero value otherwise.
func (o *SettingsMetadata) GetIs21CFRPart11() string {
	if o == nil || IsNil(o.Is21CFRPart11) {
		var ret string
		return ret
	}
	return *o.Is21CFRPart11
}

// GetIs21CFRPart11Ok returns a tuple with the Is21CFRPart11 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsMetadata) GetIs21CFRPart11Ok() (*string, bool) {
	if o == nil || IsNil(o.Is21CFRPart11) {
		return nil, false
	}
	return o.Is21CFRPart11, true
}

// HasIs21CFRPart11 returns a boolean if a field has been set.
func (o *SettingsMetadata) HasIs21CFRPart11() bool {
	if o != nil && !IsNil(o.Is21CFRPart11) {
		return true
	}

	return false
}

// SetIs21CFRPart11 gets a reference to the given string and assigns it to the Is21CFRPart11 field.
func (o *SettingsMetadata) SetIs21CFRPart11(v string) {
	o.Is21CFRPart11 = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *SettingsMetadata) GetOptions() []string {
	if o == nil || IsNil(o.Options) {
		var ret []string
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsMetadata) GetOptionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *SettingsMetadata) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []string and assigns it to the Options field.
func (o *SettingsMetadata) SetOptions(v []string) {
	o.Options = v
}

// GetRights returns the Rights field value if set, zero value otherwise.
func (o *SettingsMetadata) GetRights() string {
	if o == nil || IsNil(o.Rights) {
		var ret string
		return ret
	}
	return *o.Rights
}

// GetRightsOk returns a tuple with the Rights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsMetadata) GetRightsOk() (*string, bool) {
	if o == nil || IsNil(o.Rights) {
		return nil, false
	}
	return o.Rights, true
}

// HasRights returns a boolean if a field has been set.
func (o *SettingsMetadata) HasRights() bool {
	if o != nil && !IsNil(o.Rights) {
		return true
	}

	return false
}

// SetRights gets a reference to the given string and assigns it to the Rights field.
func (o *SettingsMetadata) SetRights(v string) {
	o.Rights = &v
}

// GetUiHint returns the UiHint field value if set, zero value otherwise.
func (o *SettingsMetadata) GetUiHint() string {
	if o == nil || IsNil(o.UiHint) {
		var ret string
		return ret
	}
	return *o.UiHint
}

// GetUiHintOk returns a tuple with the UiHint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsMetadata) GetUiHintOk() (*string, bool) {
	if o == nil || IsNil(o.UiHint) {
		return nil, false
	}
	return o.UiHint, true
}

// HasUiHint returns a boolean if a field has been set.
func (o *SettingsMetadata) HasUiHint() bool {
	if o != nil && !IsNil(o.UiHint) {
		return true
	}

	return false
}

// SetUiHint gets a reference to the given string and assigns it to the UiHint field.
func (o *SettingsMetadata) SetUiHint(v string) {
	o.UiHint = &v
}

// GetUiOrder returns the UiOrder field value if set, zero value otherwise.
func (o *SettingsMetadata) GetUiOrder() string {
	if o == nil || IsNil(o.UiOrder) {
		var ret string
		return ret
	}
	return *o.UiOrder
}

// GetUiOrderOk returns a tuple with the UiOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsMetadata) GetUiOrderOk() (*string, bool) {
	if o == nil || IsNil(o.UiOrder) {
		return nil, false
	}
	return o.UiOrder, true
}

// HasUiOrder returns a boolean if a field has been set.
func (o *SettingsMetadata) HasUiOrder() bool {
	if o != nil && !IsNil(o.UiOrder) {
		return true
	}

	return false
}

// SetUiOrder gets a reference to the given string and assigns it to the UiOrder field.
func (o *SettingsMetadata) SetUiOrder(v string) {
	o.UiOrder = &v
}

// GetUiType returns the UiType field value if set, zero value otherwise.
func (o *SettingsMetadata) GetUiType() string {
	if o == nil || IsNil(o.UiType) {
		var ret string
		return ret
	}
	return *o.UiType
}

// GetUiTypeOk returns a tuple with the UiType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsMetadata) GetUiTypeOk() (*string, bool) {
	if o == nil || IsNil(o.UiType) {
		return nil, false
	}
	return o.UiType, true
}

// HasUiType returns a boolean if a field has been set.
func (o *SettingsMetadata) HasUiType() bool {
	if o != nil && !IsNil(o.UiType) {
		return true
	}

	return false
}

// SetUiType gets a reference to the given string and assigns it to the UiType field.
func (o *SettingsMetadata) SetUiType(v string) {
	o.UiType = &v
}

func (o SettingsMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SettingsMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Is21CFRPart11) {
		toSerialize["is21CFRPart11"] = o.Is21CFRPart11
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !IsNil(o.Rights) {
		toSerialize["rights"] = o.Rights
	}
	if !IsNil(o.UiHint) {
		toSerialize["uiHint"] = o.UiHint
	}
	if !IsNil(o.UiOrder) {
		toSerialize["uiOrder"] = o.UiOrder
	}
	if !IsNil(o.UiType) {
		toSerialize["uiType"] = o.UiType
	}
	return toSerialize, nil
}

type NullableSettingsMetadata struct {
	value *SettingsMetadata
	isSet bool
}

func (v NullableSettingsMetadata) Get() *SettingsMetadata {
	return v.value
}

func (v *NullableSettingsMetadata) Set(val *SettingsMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableSettingsMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableSettingsMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSettingsMetadata(val *SettingsMetadata) *NullableSettingsMetadata {
	return &NullableSettingsMetadata{value: val, isSet: true}
}

func (v NullableSettingsMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSettingsMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


