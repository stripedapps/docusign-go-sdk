/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaymentGatewayAccountsInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentGatewayAccountsInfo{}

// PaymentGatewayAccountsInfo Holds information about connected payment accounts.
type PaymentGatewayAccountsInfo struct {
	// A list of payment gateway accounts.
	PaymentGatewayAccounts []PaymentGatewayAccount `json:"paymentGatewayAccounts,omitempty"`
}

// NewPaymentGatewayAccountsInfo instantiates a new PaymentGatewayAccountsInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentGatewayAccountsInfo() *PaymentGatewayAccountsInfo {
	this := PaymentGatewayAccountsInfo{}
	return &this
}

// NewPaymentGatewayAccountsInfoWithDefaults instantiates a new PaymentGatewayAccountsInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentGatewayAccountsInfoWithDefaults() *PaymentGatewayAccountsInfo {
	this := PaymentGatewayAccountsInfo{}
	return &this
}

// GetPaymentGatewayAccounts returns the PaymentGatewayAccounts field value if set, zero value otherwise.
func (o *PaymentGatewayAccountsInfo) GetPaymentGatewayAccounts() []PaymentGatewayAccount {
	if o == nil || IsNil(o.PaymentGatewayAccounts) {
		var ret []PaymentGatewayAccount
		return ret
	}
	return o.PaymentGatewayAccounts
}

// GetPaymentGatewayAccountsOk returns a tuple with the PaymentGatewayAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentGatewayAccountsInfo) GetPaymentGatewayAccountsOk() ([]PaymentGatewayAccount, bool) {
	if o == nil || IsNil(o.PaymentGatewayAccounts) {
		return nil, false
	}
	return o.PaymentGatewayAccounts, true
}

// HasPaymentGatewayAccounts returns a boolean if a field has been set.
func (o *PaymentGatewayAccountsInfo) HasPaymentGatewayAccounts() bool {
	if o != nil && !IsNil(o.PaymentGatewayAccounts) {
		return true
	}

	return false
}

// SetPaymentGatewayAccounts gets a reference to the given []PaymentGatewayAccount and assigns it to the PaymentGatewayAccounts field.
func (o *PaymentGatewayAccountsInfo) SetPaymentGatewayAccounts(v []PaymentGatewayAccount) {
	o.PaymentGatewayAccounts = v
}

func (o PaymentGatewayAccountsInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentGatewayAccountsInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentGatewayAccounts) {
		toSerialize["paymentGatewayAccounts"] = o.PaymentGatewayAccounts
	}
	return toSerialize, nil
}

type NullablePaymentGatewayAccountsInfo struct {
	value *PaymentGatewayAccountsInfo
	isSet bool
}

func (v NullablePaymentGatewayAccountsInfo) Get() *PaymentGatewayAccountsInfo {
	return v.value
}

func (v *NullablePaymentGatewayAccountsInfo) Set(val *PaymentGatewayAccountsInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentGatewayAccountsInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentGatewayAccountsInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentGatewayAccountsInfo(val *PaymentGatewayAccountsInfo) *NullablePaymentGatewayAccountsInfo {
	return &NullablePaymentGatewayAccountsInfo{value: val, isSet: true}
}

func (v NullablePaymentGatewayAccountsInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentGatewayAccountsInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


