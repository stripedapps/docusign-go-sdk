/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConnectSalesforceField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectSalesforceField{}

// ConnectSalesforceField This object is used to match a DocuSign field to a Salesforce field so that DocuSign can send information to your Salesforce account.
type ConnectSalesforceField struct {
	// 
	DsAttribute *string `json:"dsAttribute,omitempty"`
	// A URL that links to the information in the DocuSign field.
	DsLink *string `json:"dsLink,omitempty"`
	// 
	DsNode *string `json:"dsNode,omitempty"`
	// A unique ID for the Salesforce object.
	Id *string `json:"id,omitempty"`
	// 
	SfField *string `json:"sfField,omitempty"`
	// The name of the Salesforce field.
	SfFieldName *string `json:"sfFieldName,omitempty"`
	// The name of the Salesforce folder.
	SfFolder *string `json:"sfFolder,omitempty"`
	// 
	SfLockedValue *string `json:"sfLockedValue,omitempty"`
}

// NewConnectSalesforceField instantiates a new ConnectSalesforceField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectSalesforceField() *ConnectSalesforceField {
	this := ConnectSalesforceField{}
	return &this
}

// NewConnectSalesforceFieldWithDefaults instantiates a new ConnectSalesforceField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectSalesforceFieldWithDefaults() *ConnectSalesforceField {
	this := ConnectSalesforceField{}
	return &this
}

// GetDsAttribute returns the DsAttribute field value if set, zero value otherwise.
func (o *ConnectSalesforceField) GetDsAttribute() string {
	if o == nil || IsNil(o.DsAttribute) {
		var ret string
		return ret
	}
	return *o.DsAttribute
}

// GetDsAttributeOk returns a tuple with the DsAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectSalesforceField) GetDsAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.DsAttribute) {
		return nil, false
	}
	return o.DsAttribute, true
}

// HasDsAttribute returns a boolean if a field has been set.
func (o *ConnectSalesforceField) HasDsAttribute() bool {
	if o != nil && !IsNil(o.DsAttribute) {
		return true
	}

	return false
}

// SetDsAttribute gets a reference to the given string and assigns it to the DsAttribute field.
func (o *ConnectSalesforceField) SetDsAttribute(v string) {
	o.DsAttribute = &v
}

// GetDsLink returns the DsLink field value if set, zero value otherwise.
func (o *ConnectSalesforceField) GetDsLink() string {
	if o == nil || IsNil(o.DsLink) {
		var ret string
		return ret
	}
	return *o.DsLink
}

// GetDsLinkOk returns a tuple with the DsLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectSalesforceField) GetDsLinkOk() (*string, bool) {
	if o == nil || IsNil(o.DsLink) {
		return nil, false
	}
	return o.DsLink, true
}

// HasDsLink returns a boolean if a field has been set.
func (o *ConnectSalesforceField) HasDsLink() bool {
	if o != nil && !IsNil(o.DsLink) {
		return true
	}

	return false
}

// SetDsLink gets a reference to the given string and assigns it to the DsLink field.
func (o *ConnectSalesforceField) SetDsLink(v string) {
	o.DsLink = &v
}

// GetDsNode returns the DsNode field value if set, zero value otherwise.
func (o *ConnectSalesforceField) GetDsNode() string {
	if o == nil || IsNil(o.DsNode) {
		var ret string
		return ret
	}
	return *o.DsNode
}

// GetDsNodeOk returns a tuple with the DsNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectSalesforceField) GetDsNodeOk() (*string, bool) {
	if o == nil || IsNil(o.DsNode) {
		return nil, false
	}
	return o.DsNode, true
}

// HasDsNode returns a boolean if a field has been set.
func (o *ConnectSalesforceField) HasDsNode() bool {
	if o != nil && !IsNil(o.DsNode) {
		return true
	}

	return false
}

// SetDsNode gets a reference to the given string and assigns it to the DsNode field.
func (o *ConnectSalesforceField) SetDsNode(v string) {
	o.DsNode = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ConnectSalesforceField) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectSalesforceField) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ConnectSalesforceField) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ConnectSalesforceField) SetId(v string) {
	o.Id = &v
}

// GetSfField returns the SfField field value if set, zero value otherwise.
func (o *ConnectSalesforceField) GetSfField() string {
	if o == nil || IsNil(o.SfField) {
		var ret string
		return ret
	}
	return *o.SfField
}

// GetSfFieldOk returns a tuple with the SfField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectSalesforceField) GetSfFieldOk() (*string, bool) {
	if o == nil || IsNil(o.SfField) {
		return nil, false
	}
	return o.SfField, true
}

// HasSfField returns a boolean if a field has been set.
func (o *ConnectSalesforceField) HasSfField() bool {
	if o != nil && !IsNil(o.SfField) {
		return true
	}

	return false
}

// SetSfField gets a reference to the given string and assigns it to the SfField field.
func (o *ConnectSalesforceField) SetSfField(v string) {
	o.SfField = &v
}

// GetSfFieldName returns the SfFieldName field value if set, zero value otherwise.
func (o *ConnectSalesforceField) GetSfFieldName() string {
	if o == nil || IsNil(o.SfFieldName) {
		var ret string
		return ret
	}
	return *o.SfFieldName
}

// GetSfFieldNameOk returns a tuple with the SfFieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectSalesforceField) GetSfFieldNameOk() (*string, bool) {
	if o == nil || IsNil(o.SfFieldName) {
		return nil, false
	}
	return o.SfFieldName, true
}

// HasSfFieldName returns a boolean if a field has been set.
func (o *ConnectSalesforceField) HasSfFieldName() bool {
	if o != nil && !IsNil(o.SfFieldName) {
		return true
	}

	return false
}

// SetSfFieldName gets a reference to the given string and assigns it to the SfFieldName field.
func (o *ConnectSalesforceField) SetSfFieldName(v string) {
	o.SfFieldName = &v
}

// GetSfFolder returns the SfFolder field value if set, zero value otherwise.
func (o *ConnectSalesforceField) GetSfFolder() string {
	if o == nil || IsNil(o.SfFolder) {
		var ret string
		return ret
	}
	return *o.SfFolder
}

// GetSfFolderOk returns a tuple with the SfFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectSalesforceField) GetSfFolderOk() (*string, bool) {
	if o == nil || IsNil(o.SfFolder) {
		return nil, false
	}
	return o.SfFolder, true
}

// HasSfFolder returns a boolean if a field has been set.
func (o *ConnectSalesforceField) HasSfFolder() bool {
	if o != nil && !IsNil(o.SfFolder) {
		return true
	}

	return false
}

// SetSfFolder gets a reference to the given string and assigns it to the SfFolder field.
func (o *ConnectSalesforceField) SetSfFolder(v string) {
	o.SfFolder = &v
}

// GetSfLockedValue returns the SfLockedValue field value if set, zero value otherwise.
func (o *ConnectSalesforceField) GetSfLockedValue() string {
	if o == nil || IsNil(o.SfLockedValue) {
		var ret string
		return ret
	}
	return *o.SfLockedValue
}

// GetSfLockedValueOk returns a tuple with the SfLockedValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectSalesforceField) GetSfLockedValueOk() (*string, bool) {
	if o == nil || IsNil(o.SfLockedValue) {
		return nil, false
	}
	return o.SfLockedValue, true
}

// HasSfLockedValue returns a boolean if a field has been set.
func (o *ConnectSalesforceField) HasSfLockedValue() bool {
	if o != nil && !IsNil(o.SfLockedValue) {
		return true
	}

	return false
}

// SetSfLockedValue gets a reference to the given string and assigns it to the SfLockedValue field.
func (o *ConnectSalesforceField) SetSfLockedValue(v string) {
	o.SfLockedValue = &v
}

func (o ConnectSalesforceField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectSalesforceField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DsAttribute) {
		toSerialize["dsAttribute"] = o.DsAttribute
	}
	if !IsNil(o.DsLink) {
		toSerialize["dsLink"] = o.DsLink
	}
	if !IsNil(o.DsNode) {
		toSerialize["dsNode"] = o.DsNode
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SfField) {
		toSerialize["sfField"] = o.SfField
	}
	if !IsNil(o.SfFieldName) {
		toSerialize["sfFieldName"] = o.SfFieldName
	}
	if !IsNil(o.SfFolder) {
		toSerialize["sfFolder"] = o.SfFolder
	}
	if !IsNil(o.SfLockedValue) {
		toSerialize["sfLockedValue"] = o.SfLockedValue
	}
	return toSerialize, nil
}

type NullableConnectSalesforceField struct {
	value *ConnectSalesforceField
	isSet bool
}

func (v NullableConnectSalesforceField) Get() *ConnectSalesforceField {
	return v.value
}

func (v *NullableConnectSalesforceField) Set(val *ConnectSalesforceField) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectSalesforceField) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectSalesforceField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectSalesforceField(val *ConnectSalesforceField) *NullableConnectSalesforceField {
	return &NullableConnectSalesforceField{value: val, isSet: true}
}

func (v NullableConnectSalesforceField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectSalesforceField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


