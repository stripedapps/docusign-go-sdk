/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BillingPlanUpdateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingPlanUpdateResponse{}

// BillingPlanUpdateResponse Defines a billing plan update response object.
type BillingPlanUpdateResponse struct {
	// The type of payment method used for the account. Valid values are:  - `credit_card` - 
	AccountPaymentMethod *string `json:"accountPaymentMethod,omitempty"`
	BillingPlanPreview *BillingPlanPreview `json:"billingPlanPreview,omitempty"`
	// Specifies the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the account.
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// The number of seats (users) included in the plan.
	IncludedSeats *string `json:"includedSeats,omitempty"`
	// The payment cycle associated with the plan. Valid values:   - `Monthly` - `Annually` 
	PaymentCycle *string `json:"paymentCycle,omitempty"`
	// The payment method used for the billing plan. Valid values are:  - `NotSupported` - `CreditCard` - `PurchaseOrder` - `Premium` - `Freemium` - `FreeTrial` - `AppStore` - `DigitalExternal` - `DirectDebit`
	PaymentMethod *string `json:"paymentMethod,omitempty"`
	// DocuSign's ID for the account plan.
	PlanId *string `json:"planId,omitempty"`
	// The name of the billing plan used for the account.  Examples:   - `Personal - Annual` - `Unlimited Envelope Subscription - Annual Billing`
	PlanName *string `json:"planName,omitempty"`
}

// NewBillingPlanUpdateResponse instantiates a new BillingPlanUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingPlanUpdateResponse() *BillingPlanUpdateResponse {
	this := BillingPlanUpdateResponse{}
	return &this
}

// NewBillingPlanUpdateResponseWithDefaults instantiates a new BillingPlanUpdateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingPlanUpdateResponseWithDefaults() *BillingPlanUpdateResponse {
	this := BillingPlanUpdateResponse{}
	return &this
}

// GetAccountPaymentMethod returns the AccountPaymentMethod field value if set, zero value otherwise.
func (o *BillingPlanUpdateResponse) GetAccountPaymentMethod() string {
	if o == nil || IsNil(o.AccountPaymentMethod) {
		var ret string
		return ret
	}
	return *o.AccountPaymentMethod
}

// GetAccountPaymentMethodOk returns a tuple with the AccountPaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanUpdateResponse) GetAccountPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.AccountPaymentMethod) {
		return nil, false
	}
	return o.AccountPaymentMethod, true
}

// HasAccountPaymentMethod returns a boolean if a field has been set.
func (o *BillingPlanUpdateResponse) HasAccountPaymentMethod() bool {
	if o != nil && !IsNil(o.AccountPaymentMethod) {
		return true
	}

	return false
}

// SetAccountPaymentMethod gets a reference to the given string and assigns it to the AccountPaymentMethod field.
func (o *BillingPlanUpdateResponse) SetAccountPaymentMethod(v string) {
	o.AccountPaymentMethod = &v
}

// GetBillingPlanPreview returns the BillingPlanPreview field value if set, zero value otherwise.
func (o *BillingPlanUpdateResponse) GetBillingPlanPreview() BillingPlanPreview {
	if o == nil || IsNil(o.BillingPlanPreview) {
		var ret BillingPlanPreview
		return ret
	}
	return *o.BillingPlanPreview
}

// GetBillingPlanPreviewOk returns a tuple with the BillingPlanPreview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanUpdateResponse) GetBillingPlanPreviewOk() (*BillingPlanPreview, bool) {
	if o == nil || IsNil(o.BillingPlanPreview) {
		return nil, false
	}
	return o.BillingPlanPreview, true
}

// HasBillingPlanPreview returns a boolean if a field has been set.
func (o *BillingPlanUpdateResponse) HasBillingPlanPreview() bool {
	if o != nil && !IsNil(o.BillingPlanPreview) {
		return true
	}

	return false
}

// SetBillingPlanPreview gets a reference to the given BillingPlanPreview and assigns it to the BillingPlanPreview field.
func (o *BillingPlanUpdateResponse) SetBillingPlanPreview(v BillingPlanPreview) {
	o.BillingPlanPreview = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *BillingPlanUpdateResponse) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanUpdateResponse) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *BillingPlanUpdateResponse) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *BillingPlanUpdateResponse) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetIncludedSeats returns the IncludedSeats field value if set, zero value otherwise.
func (o *BillingPlanUpdateResponse) GetIncludedSeats() string {
	if o == nil || IsNil(o.IncludedSeats) {
		var ret string
		return ret
	}
	return *o.IncludedSeats
}

// GetIncludedSeatsOk returns a tuple with the IncludedSeats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanUpdateResponse) GetIncludedSeatsOk() (*string, bool) {
	if o == nil || IsNil(o.IncludedSeats) {
		return nil, false
	}
	return o.IncludedSeats, true
}

// HasIncludedSeats returns a boolean if a field has been set.
func (o *BillingPlanUpdateResponse) HasIncludedSeats() bool {
	if o != nil && !IsNil(o.IncludedSeats) {
		return true
	}

	return false
}

// SetIncludedSeats gets a reference to the given string and assigns it to the IncludedSeats field.
func (o *BillingPlanUpdateResponse) SetIncludedSeats(v string) {
	o.IncludedSeats = &v
}

// GetPaymentCycle returns the PaymentCycle field value if set, zero value otherwise.
func (o *BillingPlanUpdateResponse) GetPaymentCycle() string {
	if o == nil || IsNil(o.PaymentCycle) {
		var ret string
		return ret
	}
	return *o.PaymentCycle
}

// GetPaymentCycleOk returns a tuple with the PaymentCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanUpdateResponse) GetPaymentCycleOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentCycle) {
		return nil, false
	}
	return o.PaymentCycle, true
}

// HasPaymentCycle returns a boolean if a field has been set.
func (o *BillingPlanUpdateResponse) HasPaymentCycle() bool {
	if o != nil && !IsNil(o.PaymentCycle) {
		return true
	}

	return false
}

// SetPaymentCycle gets a reference to the given string and assigns it to the PaymentCycle field.
func (o *BillingPlanUpdateResponse) SetPaymentCycle(v string) {
	o.PaymentCycle = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *BillingPlanUpdateResponse) GetPaymentMethod() string {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanUpdateResponse) GetPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *BillingPlanUpdateResponse) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *BillingPlanUpdateResponse) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *BillingPlanUpdateResponse) GetPlanId() string {
	if o == nil || IsNil(o.PlanId) {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanUpdateResponse) GetPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *BillingPlanUpdateResponse) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *BillingPlanUpdateResponse) SetPlanId(v string) {
	o.PlanId = &v
}

// GetPlanName returns the PlanName field value if set, zero value otherwise.
func (o *BillingPlanUpdateResponse) GetPlanName() string {
	if o == nil || IsNil(o.PlanName) {
		var ret string
		return ret
	}
	return *o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPlanUpdateResponse) GetPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.PlanName) {
		return nil, false
	}
	return o.PlanName, true
}

// HasPlanName returns a boolean if a field has been set.
func (o *BillingPlanUpdateResponse) HasPlanName() bool {
	if o != nil && !IsNil(o.PlanName) {
		return true
	}

	return false
}

// SetPlanName gets a reference to the given string and assigns it to the PlanName field.
func (o *BillingPlanUpdateResponse) SetPlanName(v string) {
	o.PlanName = &v
}

func (o BillingPlanUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingPlanUpdateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountPaymentMethod) {
		toSerialize["accountPaymentMethod"] = o.AccountPaymentMethod
	}
	if !IsNil(o.BillingPlanPreview) {
		toSerialize["billingPlanPreview"] = o.BillingPlanPreview
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.IncludedSeats) {
		toSerialize["includedSeats"] = o.IncludedSeats
	}
	if !IsNil(o.PaymentCycle) {
		toSerialize["paymentCycle"] = o.PaymentCycle
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}
	if !IsNil(o.PlanId) {
		toSerialize["planId"] = o.PlanId
	}
	if !IsNil(o.PlanName) {
		toSerialize["planName"] = o.PlanName
	}
	return toSerialize, nil
}

type NullableBillingPlanUpdateResponse struct {
	value *BillingPlanUpdateResponse
	isSet bool
}

func (v NullableBillingPlanUpdateResponse) Get() *BillingPlanUpdateResponse {
	return v.value
}

func (v *NullableBillingPlanUpdateResponse) Set(val *BillingPlanUpdateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingPlanUpdateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingPlanUpdateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingPlanUpdateResponse(val *BillingPlanUpdateResponse) *NullableBillingPlanUpdateResponse {
	return &NullableBillingPlanUpdateResponse{value: val, isSet: true}
}

func (v NullableBillingPlanUpdateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingPlanUpdateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


