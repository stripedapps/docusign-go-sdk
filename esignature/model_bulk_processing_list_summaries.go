/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BulkProcessingListSummaries type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkProcessingListSummaries{}

// BulkProcessingListSummaries 
type BulkProcessingListSummaries struct {
	// An array of `bulkSendingListSummary` objects where each summary provides basic information about a bulk send list that belongs to the current user.
	BulkListSummaries []BulkProcessingListSummary `json:"bulkListSummaries,omitempty"`
}

// NewBulkProcessingListSummaries instantiates a new BulkProcessingListSummaries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkProcessingListSummaries() *BulkProcessingListSummaries {
	this := BulkProcessingListSummaries{}
	return &this
}

// NewBulkProcessingListSummariesWithDefaults instantiates a new BulkProcessingListSummaries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkProcessingListSummariesWithDefaults() *BulkProcessingListSummaries {
	this := BulkProcessingListSummaries{}
	return &this
}

// GetBulkListSummaries returns the BulkListSummaries field value if set, zero value otherwise.
func (o *BulkProcessingListSummaries) GetBulkListSummaries() []BulkProcessingListSummary {
	if o == nil || IsNil(o.BulkListSummaries) {
		var ret []BulkProcessingListSummary
		return ret
	}
	return o.BulkListSummaries
}

// GetBulkListSummariesOk returns a tuple with the BulkListSummaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkProcessingListSummaries) GetBulkListSummariesOk() ([]BulkProcessingListSummary, bool) {
	if o == nil || IsNil(o.BulkListSummaries) {
		return nil, false
	}
	return o.BulkListSummaries, true
}

// HasBulkListSummaries returns a boolean if a field has been set.
func (o *BulkProcessingListSummaries) HasBulkListSummaries() bool {
	if o != nil && !IsNil(o.BulkListSummaries) {
		return true
	}

	return false
}

// SetBulkListSummaries gets a reference to the given []BulkProcessingListSummary and assigns it to the BulkListSummaries field.
func (o *BulkProcessingListSummaries) SetBulkListSummaries(v []BulkProcessingListSummary) {
	o.BulkListSummaries = v
}

func (o BulkProcessingListSummaries) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkProcessingListSummaries) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BulkListSummaries) {
		toSerialize["bulkListSummaries"] = o.BulkListSummaries
	}
	return toSerialize, nil
}

type NullableBulkProcessingListSummaries struct {
	value *BulkProcessingListSummaries
	isSet bool
}

func (v NullableBulkProcessingListSummaries) Get() *BulkProcessingListSummaries {
	return v.value
}

func (v *NullableBulkProcessingListSummaries) Set(val *BulkProcessingListSummaries) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkProcessingListSummaries) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkProcessingListSummaries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkProcessingListSummaries(val *BulkProcessingListSummaries) *NullableBulkProcessingListSummaries {
	return &NullableBulkProcessingListSummaries{value: val, isSet: true}
}

func (v NullableBulkProcessingListSummaries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkProcessingListSummaries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


