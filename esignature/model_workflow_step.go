/*
DocuSign REST API

The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WorkflowStep type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowStep{}

// WorkflowStep Describes a single step in a workflow.
type WorkflowStep struct {
	// Indicates the action to perform. Valid values:  - `pause_before`: The workflow should pause before the trigger described by `triggerOnItem` is reached. 
	Action *string `json:"action,omitempty"`
	// The timestamp of when the workflow step transitioned to `completed` status.  This property is read-only.
	CompletedDate *string `json:"completedDate,omitempty"`
	DelayedRouting *DelayedRouting `json:"delayedRouting,omitempty"`
	// The unique ID of the item being triggered.
	ItemId *string `json:"itemId,omitempty"`
	RecipientRouting *RecipientRouting `json:"recipientRouting,omitempty"`
	// The status of the step. Valid values:  - `inactive` - `in_progress` - `paused` - `pending` - `completed`  This property is read-only.
	Status *string `json:"status,omitempty"`
	// The timestamp of when the workflow step transitioned to `in_progress` status.  This property is read-only.
	TriggeredDate *string `json:"triggeredDate,omitempty"`
	// The type of item that triggers this workflow step. Valid values:  * `routing_order`
	TriggerOnItem *string `json:"triggerOnItem,omitempty"`
	// A unique identifier for this workflow step.  This property is read-only.
	WorkflowStepId *string `json:"workflowStepId,omitempty"`
}

// NewWorkflowStep instantiates a new WorkflowStep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowStep() *WorkflowStep {
	this := WorkflowStep{}
	return &this
}

// NewWorkflowStepWithDefaults instantiates a new WorkflowStep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowStepWithDefaults() *WorkflowStep {
	this := WorkflowStep{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *WorkflowStep) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStep) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *WorkflowStep) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *WorkflowStep) SetAction(v string) {
	o.Action = &v
}

// GetCompletedDate returns the CompletedDate field value if set, zero value otherwise.
func (o *WorkflowStep) GetCompletedDate() string {
	if o == nil || IsNil(o.CompletedDate) {
		var ret string
		return ret
	}
	return *o.CompletedDate
}

// GetCompletedDateOk returns a tuple with the CompletedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStep) GetCompletedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CompletedDate) {
		return nil, false
	}
	return o.CompletedDate, true
}

// HasCompletedDate returns a boolean if a field has been set.
func (o *WorkflowStep) HasCompletedDate() bool {
	if o != nil && !IsNil(o.CompletedDate) {
		return true
	}

	return false
}

// SetCompletedDate gets a reference to the given string and assigns it to the CompletedDate field.
func (o *WorkflowStep) SetCompletedDate(v string) {
	o.CompletedDate = &v
}

// GetDelayedRouting returns the DelayedRouting field value if set, zero value otherwise.
func (o *WorkflowStep) GetDelayedRouting() DelayedRouting {
	if o == nil || IsNil(o.DelayedRouting) {
		var ret DelayedRouting
		return ret
	}
	return *o.DelayedRouting
}

// GetDelayedRoutingOk returns a tuple with the DelayedRouting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStep) GetDelayedRoutingOk() (*DelayedRouting, bool) {
	if o == nil || IsNil(o.DelayedRouting) {
		return nil, false
	}
	return o.DelayedRouting, true
}

// HasDelayedRouting returns a boolean if a field has been set.
func (o *WorkflowStep) HasDelayedRouting() bool {
	if o != nil && !IsNil(o.DelayedRouting) {
		return true
	}

	return false
}

// SetDelayedRouting gets a reference to the given DelayedRouting and assigns it to the DelayedRouting field.
func (o *WorkflowStep) SetDelayedRouting(v DelayedRouting) {
	o.DelayedRouting = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *WorkflowStep) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStep) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *WorkflowStep) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *WorkflowStep) SetItemId(v string) {
	o.ItemId = &v
}

// GetRecipientRouting returns the RecipientRouting field value if set, zero value otherwise.
func (o *WorkflowStep) GetRecipientRouting() RecipientRouting {
	if o == nil || IsNil(o.RecipientRouting) {
		var ret RecipientRouting
		return ret
	}
	return *o.RecipientRouting
}

// GetRecipientRoutingOk returns a tuple with the RecipientRouting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStep) GetRecipientRoutingOk() (*RecipientRouting, bool) {
	if o == nil || IsNil(o.RecipientRouting) {
		return nil, false
	}
	return o.RecipientRouting, true
}

// HasRecipientRouting returns a boolean if a field has been set.
func (o *WorkflowStep) HasRecipientRouting() bool {
	if o != nil && !IsNil(o.RecipientRouting) {
		return true
	}

	return false
}

// SetRecipientRouting gets a reference to the given RecipientRouting and assigns it to the RecipientRouting field.
func (o *WorkflowStep) SetRecipientRouting(v RecipientRouting) {
	o.RecipientRouting = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WorkflowStep) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStep) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WorkflowStep) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *WorkflowStep) SetStatus(v string) {
	o.Status = &v
}

// GetTriggeredDate returns the TriggeredDate field value if set, zero value otherwise.
func (o *WorkflowStep) GetTriggeredDate() string {
	if o == nil || IsNil(o.TriggeredDate) {
		var ret string
		return ret
	}
	return *o.TriggeredDate
}

// GetTriggeredDateOk returns a tuple with the TriggeredDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStep) GetTriggeredDateOk() (*string, bool) {
	if o == nil || IsNil(o.TriggeredDate) {
		return nil, false
	}
	return o.TriggeredDate, true
}

// HasTriggeredDate returns a boolean if a field has been set.
func (o *WorkflowStep) HasTriggeredDate() bool {
	if o != nil && !IsNil(o.TriggeredDate) {
		return true
	}

	return false
}

// SetTriggeredDate gets a reference to the given string and assigns it to the TriggeredDate field.
func (o *WorkflowStep) SetTriggeredDate(v string) {
	o.TriggeredDate = &v
}

// GetTriggerOnItem returns the TriggerOnItem field value if set, zero value otherwise.
func (o *WorkflowStep) GetTriggerOnItem() string {
	if o == nil || IsNil(o.TriggerOnItem) {
		var ret string
		return ret
	}
	return *o.TriggerOnItem
}

// GetTriggerOnItemOk returns a tuple with the TriggerOnItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStep) GetTriggerOnItemOk() (*string, bool) {
	if o == nil || IsNil(o.TriggerOnItem) {
		return nil, false
	}
	return o.TriggerOnItem, true
}

// HasTriggerOnItem returns a boolean if a field has been set.
func (o *WorkflowStep) HasTriggerOnItem() bool {
	if o != nil && !IsNil(o.TriggerOnItem) {
		return true
	}

	return false
}

// SetTriggerOnItem gets a reference to the given string and assigns it to the TriggerOnItem field.
func (o *WorkflowStep) SetTriggerOnItem(v string) {
	o.TriggerOnItem = &v
}

// GetWorkflowStepId returns the WorkflowStepId field value if set, zero value otherwise.
func (o *WorkflowStep) GetWorkflowStepId() string {
	if o == nil || IsNil(o.WorkflowStepId) {
		var ret string
		return ret
	}
	return *o.WorkflowStepId
}

// GetWorkflowStepIdOk returns a tuple with the WorkflowStepId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowStep) GetWorkflowStepIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowStepId) {
		return nil, false
	}
	return o.WorkflowStepId, true
}

// HasWorkflowStepId returns a boolean if a field has been set.
func (o *WorkflowStep) HasWorkflowStepId() bool {
	if o != nil && !IsNil(o.WorkflowStepId) {
		return true
	}

	return false
}

// SetWorkflowStepId gets a reference to the given string and assigns it to the WorkflowStepId field.
func (o *WorkflowStep) SetWorkflowStepId(v string) {
	o.WorkflowStepId = &v
}

func (o WorkflowStep) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowStep) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.CompletedDate) {
		toSerialize["completedDate"] = o.CompletedDate
	}
	if !IsNil(o.DelayedRouting) {
		toSerialize["delayedRouting"] = o.DelayedRouting
	}
	if !IsNil(o.ItemId) {
		toSerialize["itemId"] = o.ItemId
	}
	if !IsNil(o.RecipientRouting) {
		toSerialize["recipientRouting"] = o.RecipientRouting
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TriggeredDate) {
		toSerialize["triggeredDate"] = o.TriggeredDate
	}
	if !IsNil(o.TriggerOnItem) {
		toSerialize["triggerOnItem"] = o.TriggerOnItem
	}
	if !IsNil(o.WorkflowStepId) {
		toSerialize["workflowStepId"] = o.WorkflowStepId
	}
	return toSerialize, nil
}

type NullableWorkflowStep struct {
	value *WorkflowStep
	isSet bool
}

func (v NullableWorkflowStep) Get() *WorkflowStep {
	return v.value
}

func (v *NullableWorkflowStep) Set(val *WorkflowStep) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowStep) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowStep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowStep(val *WorkflowStep) *NullableWorkflowStep {
	return &NullableWorkflowStep{value: val, isSet: true}
}

func (v NullableWorkflowStep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowStep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


