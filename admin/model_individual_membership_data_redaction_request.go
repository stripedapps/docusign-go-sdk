/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IndividualMembershipDataRedactionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndividualMembershipDataRedactionRequest{}

// IndividualMembershipDataRedactionRequest 
type IndividualMembershipDataRedactionRequest struct {
	// The ID of the user whose data you want to delete.
	UserId *string `json:"user_id,omitempty"`
}

// NewIndividualMembershipDataRedactionRequest instantiates a new IndividualMembershipDataRedactionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndividualMembershipDataRedactionRequest() *IndividualMembershipDataRedactionRequest {
	this := IndividualMembershipDataRedactionRequest{}
	return &this
}

// NewIndividualMembershipDataRedactionRequestWithDefaults instantiates a new IndividualMembershipDataRedactionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndividualMembershipDataRedactionRequestWithDefaults() *IndividualMembershipDataRedactionRequest {
	this := IndividualMembershipDataRedactionRequest{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *IndividualMembershipDataRedactionRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualMembershipDataRedactionRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *IndividualMembershipDataRedactionRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *IndividualMembershipDataRedactionRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o IndividualMembershipDataRedactionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndividualMembershipDataRedactionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableIndividualMembershipDataRedactionRequest struct {
	value *IndividualMembershipDataRedactionRequest
	isSet bool
}

func (v NullableIndividualMembershipDataRedactionRequest) Get() *IndividualMembershipDataRedactionRequest {
	return v.value
}

func (v *NullableIndividualMembershipDataRedactionRequest) Set(val *IndividualMembershipDataRedactionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIndividualMembershipDataRedactionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIndividualMembershipDataRedactionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndividualMembershipDataRedactionRequest(val *IndividualMembershipDataRedactionRequest) *NullableIndividualMembershipDataRedactionRequest {
	return &NullableIndividualMembershipDataRedactionRequest{value: val, isSet: true}
}

func (v NullableIndividualMembershipDataRedactionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndividualMembershipDataRedactionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


