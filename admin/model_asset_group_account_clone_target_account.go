/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AssetGroupAccountCloneTargetAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetGroupAccountCloneTargetAccount{}

// AssetGroupAccountCloneTargetAccount An object describing the target cloned account.
type AssetGroupAccountCloneTargetAccount struct {
	// The ID of the target account.
	Id *string `json:"id,omitempty"`
	// The name of the target account. This property is required in the request body when cloning an account.
	Name *string `json:"name,omitempty"`
	// The region of the target account.   **Note:** When cloning an account, you must include this property or `countryCode` in the request. If both are provided, `region` will be used.
	Region *string `json:"region,omitempty"`
	// The country code of the target account. The country code for the United States is `en`.   **Note:** When cloning an account, you must include this property or `region`. If both are provided, `region` will be used.
	CountryCode *string `json:"countryCode,omitempty"`
	// The data center site of the account. This property is read-only.
	Site *string `json:"site,omitempty"`
	Admin *AssetGroupAccountCloneTargetAccountAdmin `json:"admin,omitempty"`
}

// NewAssetGroupAccountCloneTargetAccount instantiates a new AssetGroupAccountCloneTargetAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetGroupAccountCloneTargetAccount() *AssetGroupAccountCloneTargetAccount {
	this := AssetGroupAccountCloneTargetAccount{}
	return &this
}

// NewAssetGroupAccountCloneTargetAccountWithDefaults instantiates a new AssetGroupAccountCloneTargetAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetGroupAccountCloneTargetAccountWithDefaults() *AssetGroupAccountCloneTargetAccount {
	this := AssetGroupAccountCloneTargetAccount{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AssetGroupAccountCloneTargetAccount) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetGroupAccountCloneTargetAccount) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AssetGroupAccountCloneTargetAccount) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AssetGroupAccountCloneTargetAccount) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AssetGroupAccountCloneTargetAccount) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetGroupAccountCloneTargetAccount) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AssetGroupAccountCloneTargetAccount) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AssetGroupAccountCloneTargetAccount) SetName(v string) {
	o.Name = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *AssetGroupAccountCloneTargetAccount) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetGroupAccountCloneTargetAccount) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *AssetGroupAccountCloneTargetAccount) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *AssetGroupAccountCloneTargetAccount) SetRegion(v string) {
	o.Region = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *AssetGroupAccountCloneTargetAccount) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetGroupAccountCloneTargetAccount) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *AssetGroupAccountCloneTargetAccount) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *AssetGroupAccountCloneTargetAccount) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *AssetGroupAccountCloneTargetAccount) GetSite() string {
	if o == nil || IsNil(o.Site) {
		var ret string
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetGroupAccountCloneTargetAccount) GetSiteOk() (*string, bool) {
	if o == nil || IsNil(o.Site) {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *AssetGroupAccountCloneTargetAccount) HasSite() bool {
	if o != nil && !IsNil(o.Site) {
		return true
	}

	return false
}

// SetSite gets a reference to the given string and assigns it to the Site field.
func (o *AssetGroupAccountCloneTargetAccount) SetSite(v string) {
	o.Site = &v
}

// GetAdmin returns the Admin field value if set, zero value otherwise.
func (o *AssetGroupAccountCloneTargetAccount) GetAdmin() AssetGroupAccountCloneTargetAccountAdmin {
	if o == nil || IsNil(o.Admin) {
		var ret AssetGroupAccountCloneTargetAccountAdmin
		return ret
	}
	return *o.Admin
}

// GetAdminOk returns a tuple with the Admin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetGroupAccountCloneTargetAccount) GetAdminOk() (*AssetGroupAccountCloneTargetAccountAdmin, bool) {
	if o == nil || IsNil(o.Admin) {
		return nil, false
	}
	return o.Admin, true
}

// HasAdmin returns a boolean if a field has been set.
func (o *AssetGroupAccountCloneTargetAccount) HasAdmin() bool {
	if o != nil && !IsNil(o.Admin) {
		return true
	}

	return false
}

// SetAdmin gets a reference to the given AssetGroupAccountCloneTargetAccountAdmin and assigns it to the Admin field.
func (o *AssetGroupAccountCloneTargetAccount) SetAdmin(v AssetGroupAccountCloneTargetAccountAdmin) {
	o.Admin = &v
}

func (o AssetGroupAccountCloneTargetAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetGroupAccountCloneTargetAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.CountryCode) {
		toSerialize["countryCode"] = o.CountryCode
	}
	if !IsNil(o.Site) {
		toSerialize["site"] = o.Site
	}
	if !IsNil(o.Admin) {
		toSerialize["admin"] = o.Admin
	}
	return toSerialize, nil
}

type NullableAssetGroupAccountCloneTargetAccount struct {
	value *AssetGroupAccountCloneTargetAccount
	isSet bool
}

func (v NullableAssetGroupAccountCloneTargetAccount) Get() *AssetGroupAccountCloneTargetAccount {
	return v.value
}

func (v *NullableAssetGroupAccountCloneTargetAccount) Set(val *AssetGroupAccountCloneTargetAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetGroupAccountCloneTargetAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetGroupAccountCloneTargetAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetGroupAccountCloneTargetAccount(val *AssetGroupAccountCloneTargetAccount) *NullableAssetGroupAccountCloneTargetAccount {
	return &NullableAssetGroupAccountCloneTargetAccount{value: val, isSet: true}
}

func (v NullableAssetGroupAccountCloneTargetAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetGroupAccountCloneTargetAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


