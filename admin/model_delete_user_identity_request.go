/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeleteUserIdentityRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteUserIdentityRequest{}

// DeleteUserIdentityRequest Request to delete a user's identities,
type DeleteUserIdentityRequest struct {
	// A list of identities.
	Identities []UserIdentityRequest `json:"identities"`
}

// NewDeleteUserIdentityRequest instantiates a new DeleteUserIdentityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteUserIdentityRequest(identities []UserIdentityRequest) *DeleteUserIdentityRequest {
	this := DeleteUserIdentityRequest{}
	this.Identities = identities
	return &this
}

// NewDeleteUserIdentityRequestWithDefaults instantiates a new DeleteUserIdentityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteUserIdentityRequestWithDefaults() *DeleteUserIdentityRequest {
	this := DeleteUserIdentityRequest{}
	return &this
}

// GetIdentities returns the Identities field value
func (o *DeleteUserIdentityRequest) GetIdentities() []UserIdentityRequest {
	if o == nil {
		var ret []UserIdentityRequest
		return ret
	}

	return o.Identities
}

// GetIdentitiesOk returns a tuple with the Identities field value
// and a boolean to check if the value has been set.
func (o *DeleteUserIdentityRequest) GetIdentitiesOk() ([]UserIdentityRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Identities, true
}

// SetIdentities sets field value
func (o *DeleteUserIdentityRequest) SetIdentities(v []UserIdentityRequest) {
	o.Identities = v
}

func (o DeleteUserIdentityRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteUserIdentityRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["identities"] = o.Identities
	return toSerialize, nil
}

type NullableDeleteUserIdentityRequest struct {
	value *DeleteUserIdentityRequest
	isSet bool
}

func (v NullableDeleteUserIdentityRequest) Get() *DeleteUserIdentityRequest {
	return v.value
}

func (v *NullableDeleteUserIdentityRequest) Set(val *DeleteUserIdentityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteUserIdentityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteUserIdentityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteUserIdentityRequest(val *DeleteUserIdentityRequest) *NullableDeleteUserIdentityRequest {
	return &NullableDeleteUserIdentityRequest{value: val, isSet: true}
}

func (v NullableDeleteUserIdentityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteUserIdentityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


