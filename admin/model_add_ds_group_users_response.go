/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddDSGroupUsersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddDSGroupUsersResponse{}

// AddDSGroupUsersResponse 
type AddDSGroupUsersResponse struct {
	// 
	IsSuccess *bool `json:"is_success,omitempty"`
	// 
	TotalCount *int32 `json:"TotalCount,omitempty"`
	// A list of users.
	Users []DSGroupUserResponse `json:"users,omitempty"`
}

// NewAddDSGroupUsersResponse instantiates a new AddDSGroupUsersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddDSGroupUsersResponse() *AddDSGroupUsersResponse {
	this := AddDSGroupUsersResponse{}
	return &this
}

// NewAddDSGroupUsersResponseWithDefaults instantiates a new AddDSGroupUsersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddDSGroupUsersResponseWithDefaults() *AddDSGroupUsersResponse {
	this := AddDSGroupUsersResponse{}
	return &this
}

// GetIsSuccess returns the IsSuccess field value if set, zero value otherwise.
func (o *AddDSGroupUsersResponse) GetIsSuccess() bool {
	if o == nil || IsNil(o.IsSuccess) {
		var ret bool
		return ret
	}
	return *o.IsSuccess
}

// GetIsSuccessOk returns a tuple with the IsSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDSGroupUsersResponse) GetIsSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSuccess) {
		return nil, false
	}
	return o.IsSuccess, true
}

// HasIsSuccess returns a boolean if a field has been set.
func (o *AddDSGroupUsersResponse) HasIsSuccess() bool {
	if o != nil && !IsNil(o.IsSuccess) {
		return true
	}

	return false
}

// SetIsSuccess gets a reference to the given bool and assigns it to the IsSuccess field.
func (o *AddDSGroupUsersResponse) SetIsSuccess(v bool) {
	o.IsSuccess = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *AddDSGroupUsersResponse) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDSGroupUsersResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *AddDSGroupUsersResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *AddDSGroupUsersResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *AddDSGroupUsersResponse) GetUsers() []DSGroupUserResponse {
	if o == nil || IsNil(o.Users) {
		var ret []DSGroupUserResponse
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDSGroupUsersResponse) GetUsersOk() ([]DSGroupUserResponse, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *AddDSGroupUsersResponse) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []DSGroupUserResponse and assigns it to the Users field.
func (o *AddDSGroupUsersResponse) SetUsers(v []DSGroupUserResponse) {
	o.Users = v
}

func (o AddDSGroupUsersResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddDSGroupUsersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsSuccess) {
		toSerialize["is_success"] = o.IsSuccess
	}
	if !IsNil(o.TotalCount) {
		toSerialize["TotalCount"] = o.TotalCount
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	return toSerialize, nil
}

type NullableAddDSGroupUsersResponse struct {
	value *AddDSGroupUsersResponse
	isSet bool
}

func (v NullableAddDSGroupUsersResponse) Get() *AddDSGroupUsersResponse {
	return v.value
}

func (v *NullableAddDSGroupUsersResponse) Set(val *AddDSGroupUsersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAddDSGroupUsersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAddDSGroupUsersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddDSGroupUsersResponse(val *AddDSGroupUsersResponse) *NullableAddDSGroupUsersResponse {
	return &NullableAddDSGroupUsersResponse{value: val, isSet: true}
}

func (v NullableAddDSGroupUsersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddDSGroupUsersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


