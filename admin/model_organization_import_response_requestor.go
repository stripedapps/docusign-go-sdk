/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrganizationImportResponseRequestor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationImportResponseRequestor{}

// OrganizationImportResponseRequestor 
type OrganizationImportResponseRequestor struct {
	// The name of the requestor.
	Name *string `json:"name,omitempty"`
	// The unique ID of the requestor. If `type` is `user`, this is the requestor's user ID.
	Id *string `json:"id,omitempty"`
	// The type of the requestor. One of:  - `user` - `client_app`
	Type *string `json:"type,omitempty"`
	// The email address of the requestor.
	Email *string `json:"email,omitempty"`
}

// NewOrganizationImportResponseRequestor instantiates a new OrganizationImportResponseRequestor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationImportResponseRequestor() *OrganizationImportResponseRequestor {
	this := OrganizationImportResponseRequestor{}
	return &this
}

// NewOrganizationImportResponseRequestorWithDefaults instantiates a new OrganizationImportResponseRequestor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationImportResponseRequestorWithDefaults() *OrganizationImportResponseRequestor {
	this := OrganizationImportResponseRequestor{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationImportResponseRequestor) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationImportResponseRequestor) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationImportResponseRequestor) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationImportResponseRequestor) SetName(v string) {
	o.Name = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrganizationImportResponseRequestor) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationImportResponseRequestor) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrganizationImportResponseRequestor) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrganizationImportResponseRequestor) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OrganizationImportResponseRequestor) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationImportResponseRequestor) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OrganizationImportResponseRequestor) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *OrganizationImportResponseRequestor) SetType(v string) {
	o.Type = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *OrganizationImportResponseRequestor) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationImportResponseRequestor) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *OrganizationImportResponseRequestor) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *OrganizationImportResponseRequestor) SetEmail(v string) {
	o.Email = &v
}

func (o OrganizationImportResponseRequestor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationImportResponseRequestor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	return toSerialize, nil
}

type NullableOrganizationImportResponseRequestor struct {
	value *OrganizationImportResponseRequestor
	isSet bool
}

func (v NullableOrganizationImportResponseRequestor) Get() *OrganizationImportResponseRequestor {
	return v.value
}

func (v *NullableOrganizationImportResponseRequestor) Set(val *OrganizationImportResponseRequestor) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationImportResponseRequestor) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationImportResponseRequestor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationImportResponseRequestor(val *OrganizationImportResponseRequestor) *NullableOrganizationImportResponseRequestor {
	return &NullableOrganizationImportResponseRequestor{value: val, isSet: true}
}

func (v NullableOrganizationImportResponseRequestor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationImportResponseRequestor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


