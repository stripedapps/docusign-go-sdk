/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateUserEmailRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateUserEmailRequest{}

// UpdateUserEmailRequest And individual change of email.
type UpdateUserEmailRequest struct {
	// The ID of the users whose email address you want to change.
	Id string `json:"id"`
	// The site ID.
	SiteId int32 `json:"site_id"`
	// The new email address.
	Email string `json:"email"`
}

// NewUpdateUserEmailRequest instantiates a new UpdateUserEmailRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUserEmailRequest(id string, siteId int32, email string) *UpdateUserEmailRequest {
	this := UpdateUserEmailRequest{}
	this.Id = id
	this.SiteId = siteId
	this.Email = email
	return &this
}

// NewUpdateUserEmailRequestWithDefaults instantiates a new UpdateUserEmailRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUserEmailRequestWithDefaults() *UpdateUserEmailRequest {
	this := UpdateUserEmailRequest{}
	return &this
}

// GetId returns the Id field value
func (o *UpdateUserEmailRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UpdateUserEmailRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UpdateUserEmailRequest) SetId(v string) {
	o.Id = v
}

// GetSiteId returns the SiteId field value
func (o *UpdateUserEmailRequest) GetSiteId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value
// and a boolean to check if the value has been set.
func (o *UpdateUserEmailRequest) GetSiteIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SiteId, true
}

// SetSiteId sets field value
func (o *UpdateUserEmailRequest) SetSiteId(v int32) {
	o.SiteId = v
}

// GetEmail returns the Email field value
func (o *UpdateUserEmailRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UpdateUserEmailRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UpdateUserEmailRequest) SetEmail(v string) {
	o.Email = v
}

func (o UpdateUserEmailRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateUserEmailRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["site_id"] = o.SiteId
	toSerialize["email"] = o.Email
	return toSerialize, nil
}

type NullableUpdateUserEmailRequest struct {
	value *UpdateUserEmailRequest
	isSet bool
}

func (v NullableUpdateUserEmailRequest) Get() *UpdateUserEmailRequest {
	return v.value
}

func (v *NullableUpdateUserEmailRequest) Set(val *UpdateUserEmailRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUserEmailRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUserEmailRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUserEmailRequest(val *UpdateUserEmailRequest) *NullableUpdateUserEmailRequest {
	return &NullableUpdateUserEmailRequest{value: val, isSet: true}
}

func (v NullableUpdateUserEmailRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUserEmailRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


