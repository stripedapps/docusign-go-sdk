/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DSGroupResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DSGroupResponse{}

// DSGroupResponse 
type DSGroupResponse struct {
	// 
	DsGroupId *string `json:"ds_group_id,omitempty"`
	// Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified.
	AccountId *string `json:"account_id,omitempty"`
	// 
	SourceProductName *string `json:"source_product_name,omitempty"`
	// 
	GroupId *string `json:"group_id,omitempty"`
	// 
	GroupName *string `json:"group_name,omitempty"`
	// 
	Description *string `json:"description,omitempty"`
	// 
	IsAdmin *bool `json:"is_admin,omitempty"`
	// 
	LastModifiedOn *time.Time `json:"last_modified_on,omitempty"`
	// 
	UserCount *int32 `json:"user_count,omitempty"`
	// 
	ExternalAccountId *int64 `json:"external_account_id,omitempty"`
	// 
	AccountName *string `json:"account_name,omitempty"`
}

// NewDSGroupResponse instantiates a new DSGroupResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDSGroupResponse() *DSGroupResponse {
	this := DSGroupResponse{}
	return &this
}

// NewDSGroupResponseWithDefaults instantiates a new DSGroupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDSGroupResponseWithDefaults() *DSGroupResponse {
	this := DSGroupResponse{}
	return &this
}

// GetDsGroupId returns the DsGroupId field value if set, zero value otherwise.
func (o *DSGroupResponse) GetDsGroupId() string {
	if o == nil || IsNil(o.DsGroupId) {
		var ret string
		return ret
	}
	return *o.DsGroupId
}

// GetDsGroupIdOk returns a tuple with the DsGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSGroupResponse) GetDsGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.DsGroupId) {
		return nil, false
	}
	return o.DsGroupId, true
}

// HasDsGroupId returns a boolean if a field has been set.
func (o *DSGroupResponse) HasDsGroupId() bool {
	if o != nil && !IsNil(o.DsGroupId) {
		return true
	}

	return false
}

// SetDsGroupId gets a reference to the given string and assigns it to the DsGroupId field.
func (o *DSGroupResponse) SetDsGroupId(v string) {
	o.DsGroupId = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *DSGroupResponse) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSGroupResponse) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *DSGroupResponse) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *DSGroupResponse) SetAccountId(v string) {
	o.AccountId = &v
}

// GetSourceProductName returns the SourceProductName field value if set, zero value otherwise.
func (o *DSGroupResponse) GetSourceProductName() string {
	if o == nil || IsNil(o.SourceProductName) {
		var ret string
		return ret
	}
	return *o.SourceProductName
}

// GetSourceProductNameOk returns a tuple with the SourceProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSGroupResponse) GetSourceProductNameOk() (*string, bool) {
	if o == nil || IsNil(o.SourceProductName) {
		return nil, false
	}
	return o.SourceProductName, true
}

// HasSourceProductName returns a boolean if a field has been set.
func (o *DSGroupResponse) HasSourceProductName() bool {
	if o != nil && !IsNil(o.SourceProductName) {
		return true
	}

	return false
}

// SetSourceProductName gets a reference to the given string and assigns it to the SourceProductName field.
func (o *DSGroupResponse) SetSourceProductName(v string) {
	o.SourceProductName = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *DSGroupResponse) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSGroupResponse) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *DSGroupResponse) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *DSGroupResponse) SetGroupId(v string) {
	o.GroupId = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *DSGroupResponse) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSGroupResponse) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *DSGroupResponse) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *DSGroupResponse) SetGroupName(v string) {
	o.GroupName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DSGroupResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSGroupResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DSGroupResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DSGroupResponse) SetDescription(v string) {
	o.Description = &v
}

// GetIsAdmin returns the IsAdmin field value if set, zero value otherwise.
func (o *DSGroupResponse) GetIsAdmin() bool {
	if o == nil || IsNil(o.IsAdmin) {
		var ret bool
		return ret
	}
	return *o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSGroupResponse) GetIsAdminOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAdmin) {
		return nil, false
	}
	return o.IsAdmin, true
}

// HasIsAdmin returns a boolean if a field has been set.
func (o *DSGroupResponse) HasIsAdmin() bool {
	if o != nil && !IsNil(o.IsAdmin) {
		return true
	}

	return false
}

// SetIsAdmin gets a reference to the given bool and assigns it to the IsAdmin field.
func (o *DSGroupResponse) SetIsAdmin(v bool) {
	o.IsAdmin = &v
}

// GetLastModifiedOn returns the LastModifiedOn field value if set, zero value otherwise.
func (o *DSGroupResponse) GetLastModifiedOn() time.Time {
	if o == nil || IsNil(o.LastModifiedOn) {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedOn
}

// GetLastModifiedOnOk returns a tuple with the LastModifiedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSGroupResponse) GetLastModifiedOnOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModifiedOn) {
		return nil, false
	}
	return o.LastModifiedOn, true
}

// HasLastModifiedOn returns a boolean if a field has been set.
func (o *DSGroupResponse) HasLastModifiedOn() bool {
	if o != nil && !IsNil(o.LastModifiedOn) {
		return true
	}

	return false
}

// SetLastModifiedOn gets a reference to the given time.Time and assigns it to the LastModifiedOn field.
func (o *DSGroupResponse) SetLastModifiedOn(v time.Time) {
	o.LastModifiedOn = &v
}

// GetUserCount returns the UserCount field value if set, zero value otherwise.
func (o *DSGroupResponse) GetUserCount() int32 {
	if o == nil || IsNil(o.UserCount) {
		var ret int32
		return ret
	}
	return *o.UserCount
}

// GetUserCountOk returns a tuple with the UserCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSGroupResponse) GetUserCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UserCount) {
		return nil, false
	}
	return o.UserCount, true
}

// HasUserCount returns a boolean if a field has been set.
func (o *DSGroupResponse) HasUserCount() bool {
	if o != nil && !IsNil(o.UserCount) {
		return true
	}

	return false
}

// SetUserCount gets a reference to the given int32 and assigns it to the UserCount field.
func (o *DSGroupResponse) SetUserCount(v int32) {
	o.UserCount = &v
}

// GetExternalAccountId returns the ExternalAccountId field value if set, zero value otherwise.
func (o *DSGroupResponse) GetExternalAccountId() int64 {
	if o == nil || IsNil(o.ExternalAccountId) {
		var ret int64
		return ret
	}
	return *o.ExternalAccountId
}

// GetExternalAccountIdOk returns a tuple with the ExternalAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSGroupResponse) GetExternalAccountIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ExternalAccountId) {
		return nil, false
	}
	return o.ExternalAccountId, true
}

// HasExternalAccountId returns a boolean if a field has been set.
func (o *DSGroupResponse) HasExternalAccountId() bool {
	if o != nil && !IsNil(o.ExternalAccountId) {
		return true
	}

	return false
}

// SetExternalAccountId gets a reference to the given int64 and assigns it to the ExternalAccountId field.
func (o *DSGroupResponse) SetExternalAccountId(v int64) {
	o.ExternalAccountId = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *DSGroupResponse) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSGroupResponse) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *DSGroupResponse) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *DSGroupResponse) SetAccountName(v string) {
	o.AccountName = &v
}

func (o DSGroupResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DSGroupResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DsGroupId) {
		toSerialize["ds_group_id"] = o.DsGroupId
	}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.SourceProductName) {
		toSerialize["source_product_name"] = o.SourceProductName
	}
	if !IsNil(o.GroupId) {
		toSerialize["group_id"] = o.GroupId
	}
	if !IsNil(o.GroupName) {
		toSerialize["group_name"] = o.GroupName
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.IsAdmin) {
		toSerialize["is_admin"] = o.IsAdmin
	}
	if !IsNil(o.LastModifiedOn) {
		toSerialize["last_modified_on"] = o.LastModifiedOn
	}
	if !IsNil(o.UserCount) {
		toSerialize["user_count"] = o.UserCount
	}
	if !IsNil(o.ExternalAccountId) {
		toSerialize["external_account_id"] = o.ExternalAccountId
	}
	if !IsNil(o.AccountName) {
		toSerialize["account_name"] = o.AccountName
	}
	return toSerialize, nil
}

type NullableDSGroupResponse struct {
	value *DSGroupResponse
	isSet bool
}

func (v NullableDSGroupResponse) Get() *DSGroupResponse {
	return v.value
}

func (v *NullableDSGroupResponse) Set(val *DSGroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDSGroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDSGroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDSGroupResponse(val *DSGroupResponse) *NullableDSGroupResponse {
	return &NullableDSGroupResponse{value: val, isSet: true}
}

func (v NullableDSGroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDSGroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


