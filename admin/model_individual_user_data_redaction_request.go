/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IndividualUserDataRedactionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndividualUserDataRedactionRequest{}

// IndividualUserDataRedactionRequest 
type IndividualUserDataRedactionRequest struct {
	// The ID of the user whose data you want to delete.
	UserId *string `json:"user_id,omitempty"`
	// A list of accounts from which you want to delete the user's data. At least one account is required.
	Memberships []MembershipDataRedactionRequest `json:"memberships,omitempty"`
}

// NewIndividualUserDataRedactionRequest instantiates a new IndividualUserDataRedactionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndividualUserDataRedactionRequest() *IndividualUserDataRedactionRequest {
	this := IndividualUserDataRedactionRequest{}
	return &this
}

// NewIndividualUserDataRedactionRequestWithDefaults instantiates a new IndividualUserDataRedactionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndividualUserDataRedactionRequestWithDefaults() *IndividualUserDataRedactionRequest {
	this := IndividualUserDataRedactionRequest{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *IndividualUserDataRedactionRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualUserDataRedactionRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *IndividualUserDataRedactionRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *IndividualUserDataRedactionRequest) SetUserId(v string) {
	o.UserId = &v
}

// GetMemberships returns the Memberships field value if set, zero value otherwise.
func (o *IndividualUserDataRedactionRequest) GetMemberships() []MembershipDataRedactionRequest {
	if o == nil || IsNil(o.Memberships) {
		var ret []MembershipDataRedactionRequest
		return ret
	}
	return o.Memberships
}

// GetMembershipsOk returns a tuple with the Memberships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualUserDataRedactionRequest) GetMembershipsOk() ([]MembershipDataRedactionRequest, bool) {
	if o == nil || IsNil(o.Memberships) {
		return nil, false
	}
	return o.Memberships, true
}

// HasMemberships returns a boolean if a field has been set.
func (o *IndividualUserDataRedactionRequest) HasMemberships() bool {
	if o != nil && !IsNil(o.Memberships) {
		return true
	}

	return false
}

// SetMemberships gets a reference to the given []MembershipDataRedactionRequest and assigns it to the Memberships field.
func (o *IndividualUserDataRedactionRequest) SetMemberships(v []MembershipDataRedactionRequest) {
	o.Memberships = v
}

func (o IndividualUserDataRedactionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndividualUserDataRedactionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.Memberships) {
		toSerialize["memberships"] = o.Memberships
	}
	return toSerialize, nil
}

type NullableIndividualUserDataRedactionRequest struct {
	value *IndividualUserDataRedactionRequest
	isSet bool
}

func (v NullableIndividualUserDataRedactionRequest) Get() *IndividualUserDataRedactionRequest {
	return v.value
}

func (v *NullableIndividualUserDataRedactionRequest) Set(val *IndividualUserDataRedactionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIndividualUserDataRedactionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIndividualUserDataRedactionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndividualUserDataRedactionRequest(val *IndividualUserDataRedactionRequest) *NullableIndividualUserDataRedactionRequest {
	return &NullableIndividualUserDataRedactionRequest{value: val, isSet: true}
}

func (v NullableIndividualUserDataRedactionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndividualUserDataRedactionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


