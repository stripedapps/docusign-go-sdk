/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrganizationExportsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationExportsResponse{}

// OrganizationExportsResponse 
type OrganizationExportsResponse struct {
	// 
	Exports []OrganizationExportResponse `json:"exports,omitempty"`
}

// NewOrganizationExportsResponse instantiates a new OrganizationExportsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationExportsResponse() *OrganizationExportsResponse {
	this := OrganizationExportsResponse{}
	return &this
}

// NewOrganizationExportsResponseWithDefaults instantiates a new OrganizationExportsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationExportsResponseWithDefaults() *OrganizationExportsResponse {
	this := OrganizationExportsResponse{}
	return &this
}

// GetExports returns the Exports field value if set, zero value otherwise.
func (o *OrganizationExportsResponse) GetExports() []OrganizationExportResponse {
	if o == nil || IsNil(o.Exports) {
		var ret []OrganizationExportResponse
		return ret
	}
	return o.Exports
}

// GetExportsOk returns a tuple with the Exports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationExportsResponse) GetExportsOk() ([]OrganizationExportResponse, bool) {
	if o == nil || IsNil(o.Exports) {
		return nil, false
	}
	return o.Exports, true
}

// HasExports returns a boolean if a field has been set.
func (o *OrganizationExportsResponse) HasExports() bool {
	if o != nil && !IsNil(o.Exports) {
		return true
	}

	return false
}

// SetExports gets a reference to the given []OrganizationExportResponse and assigns it to the Exports field.
func (o *OrganizationExportsResponse) SetExports(v []OrganizationExportResponse) {
	o.Exports = v
}

func (o OrganizationExportsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationExportsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Exports) {
		toSerialize["exports"] = o.Exports
	}
	return toSerialize, nil
}

type NullableOrganizationExportsResponse struct {
	value *OrganizationExportsResponse
	isSet bool
}

func (v NullableOrganizationExportsResponse) Get() *OrganizationExportsResponse {
	return v.value
}

func (v *NullableOrganizationExportsResponse) Set(val *OrganizationExportsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationExportsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationExportsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationExportsResponse(val *OrganizationExportsResponse) *NullableOrganizationExportsResponse {
	return &NullableOrganizationExportsResponse{value: val, isSet: true}
}

func (v NullableOrganizationExportsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationExportsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


