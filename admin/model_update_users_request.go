/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateUsersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateUsersRequest{}

// UpdateUsersRequest A list of users whose information you want to change.
type UpdateUsersRequest struct {
	// A list of users whose information you want to change.
	Users []UpdateUserRequest `json:"users,omitempty"`
}

// NewUpdateUsersRequest instantiates a new UpdateUsersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUsersRequest() *UpdateUsersRequest {
	this := UpdateUsersRequest{}
	return &this
}

// NewUpdateUsersRequestWithDefaults instantiates a new UpdateUsersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUsersRequestWithDefaults() *UpdateUsersRequest {
	this := UpdateUsersRequest{}
	return &this
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *UpdateUsersRequest) GetUsers() []UpdateUserRequest {
	if o == nil || IsNil(o.Users) {
		var ret []UpdateUserRequest
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUsersRequest) GetUsersOk() ([]UpdateUserRequest, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *UpdateUsersRequest) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []UpdateUserRequest and assigns it to the Users field.
func (o *UpdateUsersRequest) SetUsers(v []UpdateUserRequest) {
	o.Users = v
}

func (o UpdateUsersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateUsersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	return toSerialize, nil
}

type NullableUpdateUsersRequest struct {
	value *UpdateUsersRequest
	isSet bool
}

func (v NullableUpdateUsersRequest) Get() *UpdateUsersRequest {
	return v.value
}

func (v *NullableUpdateUsersRequest) Set(val *UpdateUsersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUsersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUsersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUsersRequest(val *UpdateUsersRequest) *NullableUpdateUsersRequest {
	return &NullableUpdateUsersRequest{value: val, isSet: true}
}

func (v NullableUpdateUsersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUsersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


