/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrgExportSelectedAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrgExportSelectedAccount{}

// OrgExportSelectedAccount 
type OrgExportSelectedAccount struct {
	// Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified.
	AccountId *string `json:"account_id,omitempty"`
}

// NewOrgExportSelectedAccount instantiates a new OrgExportSelectedAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgExportSelectedAccount() *OrgExportSelectedAccount {
	this := OrgExportSelectedAccount{}
	return &this
}

// NewOrgExportSelectedAccountWithDefaults instantiates a new OrgExportSelectedAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgExportSelectedAccountWithDefaults() *OrgExportSelectedAccount {
	this := OrgExportSelectedAccount{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *OrgExportSelectedAccount) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgExportSelectedAccount) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *OrgExportSelectedAccount) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *OrgExportSelectedAccount) SetAccountId(v string) {
	o.AccountId = &v
}

func (o OrgExportSelectedAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrgExportSelectedAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	return toSerialize, nil
}

type NullableOrgExportSelectedAccount struct {
	value *OrgExportSelectedAccount
	isSet bool
}

func (v NullableOrgExportSelectedAccount) Get() *OrgExportSelectedAccount {
	return v.value
}

func (v *NullableOrgExportSelectedAccount) Set(val *OrgExportSelectedAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgExportSelectedAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgExportSelectedAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgExportSelectedAccount(val *OrgExportSelectedAccount) *NullableOrgExportSelectedAccount {
	return &NullableOrgExportSelectedAccount{value: val, isSet: true}
}

func (v NullableOrgExportSelectedAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgExportSelectedAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


