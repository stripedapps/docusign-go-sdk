/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CloneErrorDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloneErrorDetails{}

// CloneErrorDetails 
type CloneErrorDetails struct {
	// The error code.
	Error *string `json:"error,omitempty"`
	// The error description.
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// When **true,** indicates that the error was caused by the system. When **false,** indicates that the error was caused by the user.
	IsSystemError *bool `json:"isSystemError,omitempty"`
}

// NewCloneErrorDetails instantiates a new CloneErrorDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloneErrorDetails() *CloneErrorDetails {
	this := CloneErrorDetails{}
	return &this
}

// NewCloneErrorDetailsWithDefaults instantiates a new CloneErrorDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloneErrorDetailsWithDefaults() *CloneErrorDetails {
	this := CloneErrorDetails{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *CloneErrorDetails) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneErrorDetails) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *CloneErrorDetails) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *CloneErrorDetails) SetError(v string) {
	o.Error = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *CloneErrorDetails) GetErrorDescription() string {
	if o == nil || IsNil(o.ErrorDescription) {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneErrorDetails) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorDescription) {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *CloneErrorDetails) HasErrorDescription() bool {
	if o != nil && !IsNil(o.ErrorDescription) {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *CloneErrorDetails) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetIsSystemError returns the IsSystemError field value if set, zero value otherwise.
func (o *CloneErrorDetails) GetIsSystemError() bool {
	if o == nil || IsNil(o.IsSystemError) {
		var ret bool
		return ret
	}
	return *o.IsSystemError
}

// GetIsSystemErrorOk returns a tuple with the IsSystemError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneErrorDetails) GetIsSystemErrorOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSystemError) {
		return nil, false
	}
	return o.IsSystemError, true
}

// HasIsSystemError returns a boolean if a field has been set.
func (o *CloneErrorDetails) HasIsSystemError() bool {
	if o != nil && !IsNil(o.IsSystemError) {
		return true
	}

	return false
}

// SetIsSystemError gets a reference to the given bool and assigns it to the IsSystemError field.
func (o *CloneErrorDetails) SetIsSystemError(v bool) {
	o.IsSystemError = &v
}

func (o CloneErrorDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloneErrorDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.ErrorDescription) {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	if !IsNil(o.IsSystemError) {
		toSerialize["isSystemError"] = o.IsSystemError
	}
	return toSerialize, nil
}

type NullableCloneErrorDetails struct {
	value *CloneErrorDetails
	isSet bool
}

func (v NullableCloneErrorDetails) Get() *CloneErrorDetails {
	return v.value
}

func (v *NullableCloneErrorDetails) Set(val *CloneErrorDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCloneErrorDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCloneErrorDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloneErrorDetails(val *CloneErrorDetails) *NullableCloneErrorDetails {
	return &NullableCloneErrorDetails{value: val, isSet: true}
}

func (v NullableCloneErrorDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloneErrorDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


