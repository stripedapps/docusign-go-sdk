/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserProductPermissionProfilesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserProductPermissionProfilesRequest{}

// UserProductPermissionProfilesRequest 
type UserProductPermissionProfilesRequest struct {
	// The email address associated with the user whose permissions you want to update. This property is required.
	Email string `json:"email"`
	// A list of one or more products and their associated permissions.
	ProductPermissionProfiles []ProductPermissionProfileRequest `json:"product_permission_profiles"`
}

// NewUserProductPermissionProfilesRequest instantiates a new UserProductPermissionProfilesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserProductPermissionProfilesRequest(email string, productPermissionProfiles []ProductPermissionProfileRequest) *UserProductPermissionProfilesRequest {
	this := UserProductPermissionProfilesRequest{}
	this.Email = email
	this.ProductPermissionProfiles = productPermissionProfiles
	return &this
}

// NewUserProductPermissionProfilesRequestWithDefaults instantiates a new UserProductPermissionProfilesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserProductPermissionProfilesRequestWithDefaults() *UserProductPermissionProfilesRequest {
	this := UserProductPermissionProfilesRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *UserProductPermissionProfilesRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UserProductPermissionProfilesRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UserProductPermissionProfilesRequest) SetEmail(v string) {
	o.Email = v
}

// GetProductPermissionProfiles returns the ProductPermissionProfiles field value
func (o *UserProductPermissionProfilesRequest) GetProductPermissionProfiles() []ProductPermissionProfileRequest {
	if o == nil {
		var ret []ProductPermissionProfileRequest
		return ret
	}

	return o.ProductPermissionProfiles
}

// GetProductPermissionProfilesOk returns a tuple with the ProductPermissionProfiles field value
// and a boolean to check if the value has been set.
func (o *UserProductPermissionProfilesRequest) GetProductPermissionProfilesOk() ([]ProductPermissionProfileRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductPermissionProfiles, true
}

// SetProductPermissionProfiles sets field value
func (o *UserProductPermissionProfilesRequest) SetProductPermissionProfiles(v []ProductPermissionProfileRequest) {
	o.ProductPermissionProfiles = v
}

func (o UserProductPermissionProfilesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserProductPermissionProfilesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["product_permission_profiles"] = o.ProductPermissionProfiles
	return toSerialize, nil
}

type NullableUserProductPermissionProfilesRequest struct {
	value *UserProductPermissionProfilesRequest
	isSet bool
}

func (v NullableUserProductPermissionProfilesRequest) Get() *UserProductPermissionProfilesRequest {
	return v.value
}

func (v *NullableUserProductPermissionProfilesRequest) Set(val *UserProductPermissionProfilesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserProductPermissionProfilesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserProductPermissionProfilesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserProductPermissionProfilesRequest(val *UserProductPermissionProfilesRequest) *NullableUserProductPermissionProfilesRequest {
	return &NullableUserProductPermissionProfilesRequest{value: val, isSet: true}
}

func (v NullableUserProductPermissionProfilesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserProductPermissionProfilesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


