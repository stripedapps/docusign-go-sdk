/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OrgReportRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrgReportRequest{}

// OrgReportRequest 
type OrgReportRequest struct {
	// 
	ReportType *string `json:"report_type,omitempty"`
	// 
	ReportDateRange *string `json:"report_date_range,omitempty"`
	// 
	AccountIds []string `json:"account_ids,omitempty"`
	// 
	CustomStartDate *time.Time `json:"custom_start_date,omitempty"`
	// 
	CustomEndDate *time.Time `json:"custom_end_date,omitempty"`
}

// NewOrgReportRequest instantiates a new OrgReportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgReportRequest() *OrgReportRequest {
	this := OrgReportRequest{}
	return &this
}

// NewOrgReportRequestWithDefaults instantiates a new OrgReportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgReportRequestWithDefaults() *OrgReportRequest {
	this := OrgReportRequest{}
	return &this
}

// GetReportType returns the ReportType field value if set, zero value otherwise.
func (o *OrgReportRequest) GetReportType() string {
	if o == nil || IsNil(o.ReportType) {
		var ret string
		return ret
	}
	return *o.ReportType
}

// GetReportTypeOk returns a tuple with the ReportType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgReportRequest) GetReportTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ReportType) {
		return nil, false
	}
	return o.ReportType, true
}

// HasReportType returns a boolean if a field has been set.
func (o *OrgReportRequest) HasReportType() bool {
	if o != nil && !IsNil(o.ReportType) {
		return true
	}

	return false
}

// SetReportType gets a reference to the given string and assigns it to the ReportType field.
func (o *OrgReportRequest) SetReportType(v string) {
	o.ReportType = &v
}

// GetReportDateRange returns the ReportDateRange field value if set, zero value otherwise.
func (o *OrgReportRequest) GetReportDateRange() string {
	if o == nil || IsNil(o.ReportDateRange) {
		var ret string
		return ret
	}
	return *o.ReportDateRange
}

// GetReportDateRangeOk returns a tuple with the ReportDateRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgReportRequest) GetReportDateRangeOk() (*string, bool) {
	if o == nil || IsNil(o.ReportDateRange) {
		return nil, false
	}
	return o.ReportDateRange, true
}

// HasReportDateRange returns a boolean if a field has been set.
func (o *OrgReportRequest) HasReportDateRange() bool {
	if o != nil && !IsNil(o.ReportDateRange) {
		return true
	}

	return false
}

// SetReportDateRange gets a reference to the given string and assigns it to the ReportDateRange field.
func (o *OrgReportRequest) SetReportDateRange(v string) {
	o.ReportDateRange = &v
}

// GetAccountIds returns the AccountIds field value if set, zero value otherwise.
func (o *OrgReportRequest) GetAccountIds() []string {
	if o == nil || IsNil(o.AccountIds) {
		var ret []string
		return ret
	}
	return o.AccountIds
}

// GetAccountIdsOk returns a tuple with the AccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgReportRequest) GetAccountIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AccountIds) {
		return nil, false
	}
	return o.AccountIds, true
}

// HasAccountIds returns a boolean if a field has been set.
func (o *OrgReportRequest) HasAccountIds() bool {
	if o != nil && !IsNil(o.AccountIds) {
		return true
	}

	return false
}

// SetAccountIds gets a reference to the given []string and assigns it to the AccountIds field.
func (o *OrgReportRequest) SetAccountIds(v []string) {
	o.AccountIds = v
}

// GetCustomStartDate returns the CustomStartDate field value if set, zero value otherwise.
func (o *OrgReportRequest) GetCustomStartDate() time.Time {
	if o == nil || IsNil(o.CustomStartDate) {
		var ret time.Time
		return ret
	}
	return *o.CustomStartDate
}

// GetCustomStartDateOk returns a tuple with the CustomStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgReportRequest) GetCustomStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CustomStartDate) {
		return nil, false
	}
	return o.CustomStartDate, true
}

// HasCustomStartDate returns a boolean if a field has been set.
func (o *OrgReportRequest) HasCustomStartDate() bool {
	if o != nil && !IsNil(o.CustomStartDate) {
		return true
	}

	return false
}

// SetCustomStartDate gets a reference to the given time.Time and assigns it to the CustomStartDate field.
func (o *OrgReportRequest) SetCustomStartDate(v time.Time) {
	o.CustomStartDate = &v
}

// GetCustomEndDate returns the CustomEndDate field value if set, zero value otherwise.
func (o *OrgReportRequest) GetCustomEndDate() time.Time {
	if o == nil || IsNil(o.CustomEndDate) {
		var ret time.Time
		return ret
	}
	return *o.CustomEndDate
}

// GetCustomEndDateOk returns a tuple with the CustomEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgReportRequest) GetCustomEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CustomEndDate) {
		return nil, false
	}
	return o.CustomEndDate, true
}

// HasCustomEndDate returns a boolean if a field has been set.
func (o *OrgReportRequest) HasCustomEndDate() bool {
	if o != nil && !IsNil(o.CustomEndDate) {
		return true
	}

	return false
}

// SetCustomEndDate gets a reference to the given time.Time and assigns it to the CustomEndDate field.
func (o *OrgReportRequest) SetCustomEndDate(v time.Time) {
	o.CustomEndDate = &v
}

func (o OrgReportRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrgReportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReportType) {
		toSerialize["report_type"] = o.ReportType
	}
	if !IsNil(o.ReportDateRange) {
		toSerialize["report_date_range"] = o.ReportDateRange
	}
	if !IsNil(o.AccountIds) {
		toSerialize["account_ids"] = o.AccountIds
	}
	if !IsNil(o.CustomStartDate) {
		toSerialize["custom_start_date"] = o.CustomStartDate
	}
	if !IsNil(o.CustomEndDate) {
		toSerialize["custom_end_date"] = o.CustomEndDate
	}
	return toSerialize, nil
}

type NullableOrgReportRequest struct {
	value *OrgReportRequest
	isSet bool
}

func (v NullableOrgReportRequest) Get() *OrgReportRequest {
	return v.value
}

func (v *NullableOrgReportRequest) Set(val *OrgReportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgReportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgReportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgReportRequest(val *OrgReportRequest) *NullableOrgReportRequest {
	return &NullableOrgReportRequest{value: val, isSet: true}
}

func (v NullableOrgReportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgReportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


