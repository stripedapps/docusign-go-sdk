/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrganizationAccountSettingsImportResultResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationAccountSettingsImportResultResponse{}

// OrganizationAccountSettingsImportResultResponse 
type OrganizationAccountSettingsImportResultResponse struct {
	// 
	Id *string `json:"id,omitempty"`
	// 
	SiteId *int32 `json:"site_id,omitempty"`
	// 
	Url *string `json:"url,omitempty"`
	// 
	NumberProcessedAccounts *int64 `json:"number_processed_accounts,omitempty"`
	ErrorDetails *OASIRRErrorDetails `json:"error_details,omitempty"`
	// 
	ProcessingIssuesByAccount []OASIRROrganizationAccountSettingsErrorDataResponse `json:"processing_issues_by_account,omitempty"`
	// 
	NumberUnprocessedAccounts *int64 `json:"number_unprocessed_accounts,omitempty"`
}

// NewOrganizationAccountSettingsImportResultResponse instantiates a new OrganizationAccountSettingsImportResultResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationAccountSettingsImportResultResponse() *OrganizationAccountSettingsImportResultResponse {
	this := OrganizationAccountSettingsImportResultResponse{}
	return &this
}

// NewOrganizationAccountSettingsImportResultResponseWithDefaults instantiates a new OrganizationAccountSettingsImportResultResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationAccountSettingsImportResultResponseWithDefaults() *OrganizationAccountSettingsImportResultResponse {
	this := OrganizationAccountSettingsImportResultResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrganizationAccountSettingsImportResultResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAccountSettingsImportResultResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrganizationAccountSettingsImportResultResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrganizationAccountSettingsImportResultResponse) SetId(v string) {
	o.Id = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *OrganizationAccountSettingsImportResultResponse) GetSiteId() int32 {
	if o == nil || IsNil(o.SiteId) {
		var ret int32
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAccountSettingsImportResultResponse) GetSiteIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *OrganizationAccountSettingsImportResultResponse) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given int32 and assigns it to the SiteId field.
func (o *OrganizationAccountSettingsImportResultResponse) SetSiteId(v int32) {
	o.SiteId = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *OrganizationAccountSettingsImportResultResponse) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAccountSettingsImportResultResponse) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *OrganizationAccountSettingsImportResultResponse) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *OrganizationAccountSettingsImportResultResponse) SetUrl(v string) {
	o.Url = &v
}

// GetNumberProcessedAccounts returns the NumberProcessedAccounts field value if set, zero value otherwise.
func (o *OrganizationAccountSettingsImportResultResponse) GetNumberProcessedAccounts() int64 {
	if o == nil || IsNil(o.NumberProcessedAccounts) {
		var ret int64
		return ret
	}
	return *o.NumberProcessedAccounts
}

// GetNumberProcessedAccountsOk returns a tuple with the NumberProcessedAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAccountSettingsImportResultResponse) GetNumberProcessedAccountsOk() (*int64, bool) {
	if o == nil || IsNil(o.NumberProcessedAccounts) {
		return nil, false
	}
	return o.NumberProcessedAccounts, true
}

// HasNumberProcessedAccounts returns a boolean if a field has been set.
func (o *OrganizationAccountSettingsImportResultResponse) HasNumberProcessedAccounts() bool {
	if o != nil && !IsNil(o.NumberProcessedAccounts) {
		return true
	}

	return false
}

// SetNumberProcessedAccounts gets a reference to the given int64 and assigns it to the NumberProcessedAccounts field.
func (o *OrganizationAccountSettingsImportResultResponse) SetNumberProcessedAccounts(v int64) {
	o.NumberProcessedAccounts = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *OrganizationAccountSettingsImportResultResponse) GetErrorDetails() OASIRRErrorDetails {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret OASIRRErrorDetails
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAccountSettingsImportResultResponse) GetErrorDetailsOk() (*OASIRRErrorDetails, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *OrganizationAccountSettingsImportResultResponse) HasErrorDetails() bool {
	if o != nil && !IsNil(o.ErrorDetails) {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given OASIRRErrorDetails and assigns it to the ErrorDetails field.
func (o *OrganizationAccountSettingsImportResultResponse) SetErrorDetails(v OASIRRErrorDetails) {
	o.ErrorDetails = &v
}

// GetProcessingIssuesByAccount returns the ProcessingIssuesByAccount field value if set, zero value otherwise.
func (o *OrganizationAccountSettingsImportResultResponse) GetProcessingIssuesByAccount() []OASIRROrganizationAccountSettingsErrorDataResponse {
	if o == nil || IsNil(o.ProcessingIssuesByAccount) {
		var ret []OASIRROrganizationAccountSettingsErrorDataResponse
		return ret
	}
	return o.ProcessingIssuesByAccount
}

// GetProcessingIssuesByAccountOk returns a tuple with the ProcessingIssuesByAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAccountSettingsImportResultResponse) GetProcessingIssuesByAccountOk() ([]OASIRROrganizationAccountSettingsErrorDataResponse, bool) {
	if o == nil || IsNil(o.ProcessingIssuesByAccount) {
		return nil, false
	}
	return o.ProcessingIssuesByAccount, true
}

// HasProcessingIssuesByAccount returns a boolean if a field has been set.
func (o *OrganizationAccountSettingsImportResultResponse) HasProcessingIssuesByAccount() bool {
	if o != nil && !IsNil(o.ProcessingIssuesByAccount) {
		return true
	}

	return false
}

// SetProcessingIssuesByAccount gets a reference to the given []OASIRROrganizationAccountSettingsErrorDataResponse and assigns it to the ProcessingIssuesByAccount field.
func (o *OrganizationAccountSettingsImportResultResponse) SetProcessingIssuesByAccount(v []OASIRROrganizationAccountSettingsErrorDataResponse) {
	o.ProcessingIssuesByAccount = v
}

// GetNumberUnprocessedAccounts returns the NumberUnprocessedAccounts field value if set, zero value otherwise.
func (o *OrganizationAccountSettingsImportResultResponse) GetNumberUnprocessedAccounts() int64 {
	if o == nil || IsNil(o.NumberUnprocessedAccounts) {
		var ret int64
		return ret
	}
	return *o.NumberUnprocessedAccounts
}

// GetNumberUnprocessedAccountsOk returns a tuple with the NumberUnprocessedAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAccountSettingsImportResultResponse) GetNumberUnprocessedAccountsOk() (*int64, bool) {
	if o == nil || IsNil(o.NumberUnprocessedAccounts) {
		return nil, false
	}
	return o.NumberUnprocessedAccounts, true
}

// HasNumberUnprocessedAccounts returns a boolean if a field has been set.
func (o *OrganizationAccountSettingsImportResultResponse) HasNumberUnprocessedAccounts() bool {
	if o != nil && !IsNil(o.NumberUnprocessedAccounts) {
		return true
	}

	return false
}

// SetNumberUnprocessedAccounts gets a reference to the given int64 and assigns it to the NumberUnprocessedAccounts field.
func (o *OrganizationAccountSettingsImportResultResponse) SetNumberUnprocessedAccounts(v int64) {
	o.NumberUnprocessedAccounts = &v
}

func (o OrganizationAccountSettingsImportResultResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationAccountSettingsImportResultResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.NumberProcessedAccounts) {
		toSerialize["number_processed_accounts"] = o.NumberProcessedAccounts
	}
	if !IsNil(o.ErrorDetails) {
		toSerialize["error_details"] = o.ErrorDetails
	}
	if !IsNil(o.ProcessingIssuesByAccount) {
		toSerialize["processing_issues_by_account"] = o.ProcessingIssuesByAccount
	}
	if !IsNil(o.NumberUnprocessedAccounts) {
		toSerialize["number_unprocessed_accounts"] = o.NumberUnprocessedAccounts
	}
	return toSerialize, nil
}

type NullableOrganizationAccountSettingsImportResultResponse struct {
	value *OrganizationAccountSettingsImportResultResponse
	isSet bool
}

func (v NullableOrganizationAccountSettingsImportResultResponse) Get() *OrganizationAccountSettingsImportResultResponse {
	return v.value
}

func (v *NullableOrganizationAccountSettingsImportResultResponse) Set(val *OrganizationAccountSettingsImportResultResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationAccountSettingsImportResultResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationAccountSettingsImportResultResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationAccountSettingsImportResultResponse(val *OrganizationAccountSettingsImportResultResponse) *NullableOrganizationAccountSettingsImportResultResponse {
	return &NullableOrganizationAccountSettingsImportResultResponse{value: val, isSet: true}
}

func (v NullableOrganizationAccountSettingsImportResultResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationAccountSettingsImportResultResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


