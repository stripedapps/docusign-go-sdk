/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MemberGroupsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberGroupsResponse{}

// MemberGroupsResponse A response about member groups. It contains the groups and paging information.
type MemberGroupsResponse struct {
	// A list of the responses.
	Groups []MemberGroupResponse `json:"groups,omitempty"`
	Paging *PagingResponseProperties `json:"paging,omitempty"`
}

// NewMemberGroupsResponse instantiates a new MemberGroupsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberGroupsResponse() *MemberGroupsResponse {
	this := MemberGroupsResponse{}
	return &this
}

// NewMemberGroupsResponseWithDefaults instantiates a new MemberGroupsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberGroupsResponseWithDefaults() *MemberGroupsResponse {
	this := MemberGroupsResponse{}
	return &this
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *MemberGroupsResponse) GetGroups() []MemberGroupResponse {
	if o == nil || IsNil(o.Groups) {
		var ret []MemberGroupResponse
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberGroupsResponse) GetGroupsOk() ([]MemberGroupResponse, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *MemberGroupsResponse) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []MemberGroupResponse and assigns it to the Groups field.
func (o *MemberGroupsResponse) SetGroups(v []MemberGroupResponse) {
	o.Groups = v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *MemberGroupsResponse) GetPaging() PagingResponseProperties {
	if o == nil || IsNil(o.Paging) {
		var ret PagingResponseProperties
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberGroupsResponse) GetPagingOk() (*PagingResponseProperties, bool) {
	if o == nil || IsNil(o.Paging) {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *MemberGroupsResponse) HasPaging() bool {
	if o != nil && !IsNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given PagingResponseProperties and assigns it to the Paging field.
func (o *MemberGroupsResponse) SetPaging(v PagingResponseProperties) {
	o.Paging = &v
}

func (o MemberGroupsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberGroupsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	return toSerialize, nil
}

type NullableMemberGroupsResponse struct {
	value *MemberGroupsResponse
	isSet bool
}

func (v NullableMemberGroupsResponse) Get() *MemberGroupsResponse {
	return v.value
}

func (v *NullableMemberGroupsResponse) Set(val *MemberGroupsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberGroupsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberGroupsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberGroupsResponse(val *MemberGroupsResponse) *NullableMemberGroupsResponse {
	return &NullableMemberGroupsResponse{value: val, isSet: true}
}

func (v NullableMemberGroupsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberGroupsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


