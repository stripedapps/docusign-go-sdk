/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the MembershipResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipResponse{}

// MembershipResponse Information about group membership.
type MembershipResponse struct {
	// The email address.
	Email *string `json:"email,omitempty"`
	// The ID of the account.
	AccountId *string `json:"account_id,omitempty"`
	// The external account ID.
	ExternalAccountId *string `json:"external_account_id,omitempty"`
	// The name of the account.
	AccountName *string `json:"account_name,omitempty"`
	// When **true,** this is an external account.
	IsExternalAccount *bool `json:"is_external_account,omitempty"`
	// The status of the user's membership.
	Status *string `json:"status,omitempty"`
	PermissionProfile *PermissionProfileResponse `json:"permission_profile,omitempty"`
	// The date the user's account was created.
	CreatedOn *time.Time `json:"created_on,omitempty"`
	// A list of groups the user is a member of in this account,
	Groups []MemberGroupResponse `json:"groups,omitempty"`
	// When **true,** the user has administration  privileges on the account.
	IsAdmin *bool `json:"is_admin,omitempty"`
}

// NewMembershipResponse instantiates a new MembershipResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipResponse() *MembershipResponse {
	this := MembershipResponse{}
	return &this
}

// NewMembershipResponseWithDefaults instantiates a new MembershipResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipResponseWithDefaults() *MembershipResponse {
	this := MembershipResponse{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *MembershipResponse) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipResponse) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *MembershipResponse) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *MembershipResponse) SetEmail(v string) {
	o.Email = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *MembershipResponse) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipResponse) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *MembershipResponse) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *MembershipResponse) SetAccountId(v string) {
	o.AccountId = &v
}

// GetExternalAccountId returns the ExternalAccountId field value if set, zero value otherwise.
func (o *MembershipResponse) GetExternalAccountId() string {
	if o == nil || IsNil(o.ExternalAccountId) {
		var ret string
		return ret
	}
	return *o.ExternalAccountId
}

// GetExternalAccountIdOk returns a tuple with the ExternalAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipResponse) GetExternalAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalAccountId) {
		return nil, false
	}
	return o.ExternalAccountId, true
}

// HasExternalAccountId returns a boolean if a field has been set.
func (o *MembershipResponse) HasExternalAccountId() bool {
	if o != nil && !IsNil(o.ExternalAccountId) {
		return true
	}

	return false
}

// SetExternalAccountId gets a reference to the given string and assigns it to the ExternalAccountId field.
func (o *MembershipResponse) SetExternalAccountId(v string) {
	o.ExternalAccountId = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *MembershipResponse) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipResponse) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *MembershipResponse) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *MembershipResponse) SetAccountName(v string) {
	o.AccountName = &v
}

// GetIsExternalAccount returns the IsExternalAccount field value if set, zero value otherwise.
func (o *MembershipResponse) GetIsExternalAccount() bool {
	if o == nil || IsNil(o.IsExternalAccount) {
		var ret bool
		return ret
	}
	return *o.IsExternalAccount
}

// GetIsExternalAccountOk returns a tuple with the IsExternalAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipResponse) GetIsExternalAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExternalAccount) {
		return nil, false
	}
	return o.IsExternalAccount, true
}

// HasIsExternalAccount returns a boolean if a field has been set.
func (o *MembershipResponse) HasIsExternalAccount() bool {
	if o != nil && !IsNil(o.IsExternalAccount) {
		return true
	}

	return false
}

// SetIsExternalAccount gets a reference to the given bool and assigns it to the IsExternalAccount field.
func (o *MembershipResponse) SetIsExternalAccount(v bool) {
	o.IsExternalAccount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MembershipResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MembershipResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MembershipResponse) SetStatus(v string) {
	o.Status = &v
}

// GetPermissionProfile returns the PermissionProfile field value if set, zero value otherwise.
func (o *MembershipResponse) GetPermissionProfile() PermissionProfileResponse {
	if o == nil || IsNil(o.PermissionProfile) {
		var ret PermissionProfileResponse
		return ret
	}
	return *o.PermissionProfile
}

// GetPermissionProfileOk returns a tuple with the PermissionProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipResponse) GetPermissionProfileOk() (*PermissionProfileResponse, bool) {
	if o == nil || IsNil(o.PermissionProfile) {
		return nil, false
	}
	return o.PermissionProfile, true
}

// HasPermissionProfile returns a boolean if a field has been set.
func (o *MembershipResponse) HasPermissionProfile() bool {
	if o != nil && !IsNil(o.PermissionProfile) {
		return true
	}

	return false
}

// SetPermissionProfile gets a reference to the given PermissionProfileResponse and assigns it to the PermissionProfile field.
func (o *MembershipResponse) SetPermissionProfile(v PermissionProfileResponse) {
	o.PermissionProfile = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *MembershipResponse) GetCreatedOn() time.Time {
	if o == nil || IsNil(o.CreatedOn) {
		var ret time.Time
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipResponse) GetCreatedOnOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedOn) {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *MembershipResponse) HasCreatedOn() bool {
	if o != nil && !IsNil(o.CreatedOn) {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given time.Time and assigns it to the CreatedOn field.
func (o *MembershipResponse) SetCreatedOn(v time.Time) {
	o.CreatedOn = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *MembershipResponse) GetGroups() []MemberGroupResponse {
	if o == nil || IsNil(o.Groups) {
		var ret []MemberGroupResponse
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipResponse) GetGroupsOk() ([]MemberGroupResponse, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *MembershipResponse) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []MemberGroupResponse and assigns it to the Groups field.
func (o *MembershipResponse) SetGroups(v []MemberGroupResponse) {
	o.Groups = v
}

// GetIsAdmin returns the IsAdmin field value if set, zero value otherwise.
func (o *MembershipResponse) GetIsAdmin() bool {
	if o == nil || IsNil(o.IsAdmin) {
		var ret bool
		return ret
	}
	return *o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipResponse) GetIsAdminOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAdmin) {
		return nil, false
	}
	return o.IsAdmin, true
}

// HasIsAdmin returns a boolean if a field has been set.
func (o *MembershipResponse) HasIsAdmin() bool {
	if o != nil && !IsNil(o.IsAdmin) {
		return true
	}

	return false
}

// SetIsAdmin gets a reference to the given bool and assigns it to the IsAdmin field.
func (o *MembershipResponse) SetIsAdmin(v bool) {
	o.IsAdmin = &v
}

func (o MembershipResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.ExternalAccountId) {
		toSerialize["external_account_id"] = o.ExternalAccountId
	}
	if !IsNil(o.AccountName) {
		toSerialize["account_name"] = o.AccountName
	}
	if !IsNil(o.IsExternalAccount) {
		toSerialize["is_external_account"] = o.IsExternalAccount
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.PermissionProfile) {
		toSerialize["permission_profile"] = o.PermissionProfile
	}
	if !IsNil(o.CreatedOn) {
		toSerialize["created_on"] = o.CreatedOn
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.IsAdmin) {
		toSerialize["is_admin"] = o.IsAdmin
	}
	return toSerialize, nil
}

type NullableMembershipResponse struct {
	value *MembershipResponse
	isSet bool
}

func (v NullableMembershipResponse) Get() *MembershipResponse {
	return v.value
}

func (v *NullableMembershipResponse) Set(val *MembershipResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipResponse(val *MembershipResponse) *NullableMembershipResponse {
	return &NullableMembershipResponse{value: val, isSet: true}
}

func (v NullableMembershipResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


