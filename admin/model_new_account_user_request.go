/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NewAccountUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewAccountUserRequest{}

// NewAccountUserRequest A new user request.
type NewAccountUserRequest struct {
	PermissionProfile *PermissionProfileRequest `json:"permission_profile,omitempty"`
	// The new user's requested groups.
	Groups []GroupRequest `json:"groups,omitempty"`
	// The full name of the user.
	UserName *string `json:"user_name,omitempty"`
	// The user's first name.
	FirstName *string `json:"first_name,omitempty"`
	// The user's last name.
	LastName *string `json:"last_name,omitempty"`
	// The email address of the user.
	Email string `json:"email"`
	// The account ID of the user's default account.
	DefaultAccountId *string `json:"default_account_id,omitempty"`
	// The language and culture of the user.    * Chinese Simplified: `zh_CN`   * Chinese Traditional: `zh_TW`   * Dutch: `nl`   * English: `en`   * French: `fr`   * German: `de`   * Italian: `it`   * Japanese: `ja`   * Korean: `ko`   * Portuguese: `pt`   * Portuguese Brazil: `pt_BR`   * Russian: `ru`   * Spanish: `es` 
	LanguageCulture *string `json:"language_culture,omitempty"`
	// 
	SelectedLanguages *string `json:"selected_languages,omitempty"`
	// The access code that the user needs to activate an account.
	AccessCode *string `json:"access_code,omitempty"`
	// The user's federated status. One of:  - `RemoveStatus` - `FedAuthRequired` - `FedAuthBypass` - `Evicted` 
	FederatedStatus *string `json:"federated_status,omitempty"`
	// When **true,** the user's account is activated automatically.
	AutoActivateMemberships *bool `json:"auto_activate_memberships,omitempty"`
}

// NewNewAccountUserRequest instantiates a new NewAccountUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewAccountUserRequest(email string) *NewAccountUserRequest {
	this := NewAccountUserRequest{}
	this.Email = email
	return &this
}

// NewNewAccountUserRequestWithDefaults instantiates a new NewAccountUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewAccountUserRequestWithDefaults() *NewAccountUserRequest {
	this := NewAccountUserRequest{}
	return &this
}

// GetPermissionProfile returns the PermissionProfile field value if set, zero value otherwise.
func (o *NewAccountUserRequest) GetPermissionProfile() PermissionProfileRequest {
	if o == nil || IsNil(o.PermissionProfile) {
		var ret PermissionProfileRequest
		return ret
	}
	return *o.PermissionProfile
}

// GetPermissionProfileOk returns a tuple with the PermissionProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountUserRequest) GetPermissionProfileOk() (*PermissionProfileRequest, bool) {
	if o == nil || IsNil(o.PermissionProfile) {
		return nil, false
	}
	return o.PermissionProfile, true
}

// HasPermissionProfile returns a boolean if a field has been set.
func (o *NewAccountUserRequest) HasPermissionProfile() bool {
	if o != nil && !IsNil(o.PermissionProfile) {
		return true
	}

	return false
}

// SetPermissionProfile gets a reference to the given PermissionProfileRequest and assigns it to the PermissionProfile field.
func (o *NewAccountUserRequest) SetPermissionProfile(v PermissionProfileRequest) {
	o.PermissionProfile = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *NewAccountUserRequest) GetGroups() []GroupRequest {
	if o == nil || IsNil(o.Groups) {
		var ret []GroupRequest
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountUserRequest) GetGroupsOk() ([]GroupRequest, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *NewAccountUserRequest) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []GroupRequest and assigns it to the Groups field.
func (o *NewAccountUserRequest) SetGroups(v []GroupRequest) {
	o.Groups = v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *NewAccountUserRequest) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountUserRequest) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *NewAccountUserRequest) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *NewAccountUserRequest) SetUserName(v string) {
	o.UserName = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *NewAccountUserRequest) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountUserRequest) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *NewAccountUserRequest) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *NewAccountUserRequest) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *NewAccountUserRequest) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountUserRequest) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *NewAccountUserRequest) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *NewAccountUserRequest) SetLastName(v string) {
	o.LastName = &v
}

// GetEmail returns the Email field value
func (o *NewAccountUserRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *NewAccountUserRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *NewAccountUserRequest) SetEmail(v string) {
	o.Email = v
}

// GetDefaultAccountId returns the DefaultAccountId field value if set, zero value otherwise.
func (o *NewAccountUserRequest) GetDefaultAccountId() string {
	if o == nil || IsNil(o.DefaultAccountId) {
		var ret string
		return ret
	}
	return *o.DefaultAccountId
}

// GetDefaultAccountIdOk returns a tuple with the DefaultAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountUserRequest) GetDefaultAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultAccountId) {
		return nil, false
	}
	return o.DefaultAccountId, true
}

// HasDefaultAccountId returns a boolean if a field has been set.
func (o *NewAccountUserRequest) HasDefaultAccountId() bool {
	if o != nil && !IsNil(o.DefaultAccountId) {
		return true
	}

	return false
}

// SetDefaultAccountId gets a reference to the given string and assigns it to the DefaultAccountId field.
func (o *NewAccountUserRequest) SetDefaultAccountId(v string) {
	o.DefaultAccountId = &v
}

// GetLanguageCulture returns the LanguageCulture field value if set, zero value otherwise.
func (o *NewAccountUserRequest) GetLanguageCulture() string {
	if o == nil || IsNil(o.LanguageCulture) {
		var ret string
		return ret
	}
	return *o.LanguageCulture
}

// GetLanguageCultureOk returns a tuple with the LanguageCulture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountUserRequest) GetLanguageCultureOk() (*string, bool) {
	if o == nil || IsNil(o.LanguageCulture) {
		return nil, false
	}
	return o.LanguageCulture, true
}

// HasLanguageCulture returns a boolean if a field has been set.
func (o *NewAccountUserRequest) HasLanguageCulture() bool {
	if o != nil && !IsNil(o.LanguageCulture) {
		return true
	}

	return false
}

// SetLanguageCulture gets a reference to the given string and assigns it to the LanguageCulture field.
func (o *NewAccountUserRequest) SetLanguageCulture(v string) {
	o.LanguageCulture = &v
}

// GetSelectedLanguages returns the SelectedLanguages field value if set, zero value otherwise.
func (o *NewAccountUserRequest) GetSelectedLanguages() string {
	if o == nil || IsNil(o.SelectedLanguages) {
		var ret string
		return ret
	}
	return *o.SelectedLanguages
}

// GetSelectedLanguagesOk returns a tuple with the SelectedLanguages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountUserRequest) GetSelectedLanguagesOk() (*string, bool) {
	if o == nil || IsNil(o.SelectedLanguages) {
		return nil, false
	}
	return o.SelectedLanguages, true
}

// HasSelectedLanguages returns a boolean if a field has been set.
func (o *NewAccountUserRequest) HasSelectedLanguages() bool {
	if o != nil && !IsNil(o.SelectedLanguages) {
		return true
	}

	return false
}

// SetSelectedLanguages gets a reference to the given string and assigns it to the SelectedLanguages field.
func (o *NewAccountUserRequest) SetSelectedLanguages(v string) {
	o.SelectedLanguages = &v
}

// GetAccessCode returns the AccessCode field value if set, zero value otherwise.
func (o *NewAccountUserRequest) GetAccessCode() string {
	if o == nil || IsNil(o.AccessCode) {
		var ret string
		return ret
	}
	return *o.AccessCode
}

// GetAccessCodeOk returns a tuple with the AccessCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountUserRequest) GetAccessCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AccessCode) {
		return nil, false
	}
	return o.AccessCode, true
}

// HasAccessCode returns a boolean if a field has been set.
func (o *NewAccountUserRequest) HasAccessCode() bool {
	if o != nil && !IsNil(o.AccessCode) {
		return true
	}

	return false
}

// SetAccessCode gets a reference to the given string and assigns it to the AccessCode field.
func (o *NewAccountUserRequest) SetAccessCode(v string) {
	o.AccessCode = &v
}

// GetFederatedStatus returns the FederatedStatus field value if set, zero value otherwise.
func (o *NewAccountUserRequest) GetFederatedStatus() string {
	if o == nil || IsNil(o.FederatedStatus) {
		var ret string
		return ret
	}
	return *o.FederatedStatus
}

// GetFederatedStatusOk returns a tuple with the FederatedStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountUserRequest) GetFederatedStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FederatedStatus) {
		return nil, false
	}
	return o.FederatedStatus, true
}

// HasFederatedStatus returns a boolean if a field has been set.
func (o *NewAccountUserRequest) HasFederatedStatus() bool {
	if o != nil && !IsNil(o.FederatedStatus) {
		return true
	}

	return false
}

// SetFederatedStatus gets a reference to the given string and assigns it to the FederatedStatus field.
func (o *NewAccountUserRequest) SetFederatedStatus(v string) {
	o.FederatedStatus = &v
}

// GetAutoActivateMemberships returns the AutoActivateMemberships field value if set, zero value otherwise.
func (o *NewAccountUserRequest) GetAutoActivateMemberships() bool {
	if o == nil || IsNil(o.AutoActivateMemberships) {
		var ret bool
		return ret
	}
	return *o.AutoActivateMemberships
}

// GetAutoActivateMembershipsOk returns a tuple with the AutoActivateMemberships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewAccountUserRequest) GetAutoActivateMembershipsOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoActivateMemberships) {
		return nil, false
	}
	return o.AutoActivateMemberships, true
}

// HasAutoActivateMemberships returns a boolean if a field has been set.
func (o *NewAccountUserRequest) HasAutoActivateMemberships() bool {
	if o != nil && !IsNil(o.AutoActivateMemberships) {
		return true
	}

	return false
}

// SetAutoActivateMemberships gets a reference to the given bool and assigns it to the AutoActivateMemberships field.
func (o *NewAccountUserRequest) SetAutoActivateMemberships(v bool) {
	o.AutoActivateMemberships = &v
}

func (o NewAccountUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NewAccountUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PermissionProfile) {
		toSerialize["permission_profile"] = o.PermissionProfile
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	toSerialize["email"] = o.Email
	if !IsNil(o.DefaultAccountId) {
		toSerialize["default_account_id"] = o.DefaultAccountId
	}
	if !IsNil(o.LanguageCulture) {
		toSerialize["language_culture"] = o.LanguageCulture
	}
	if !IsNil(o.SelectedLanguages) {
		toSerialize["selected_languages"] = o.SelectedLanguages
	}
	if !IsNil(o.AccessCode) {
		toSerialize["access_code"] = o.AccessCode
	}
	if !IsNil(o.FederatedStatus) {
		toSerialize["federated_status"] = o.FederatedStatus
	}
	if !IsNil(o.AutoActivateMemberships) {
		toSerialize["auto_activate_memberships"] = o.AutoActivateMemberships
	}
	return toSerialize, nil
}

type NullableNewAccountUserRequest struct {
	value *NewAccountUserRequest
	isSet bool
}

func (v NullableNewAccountUserRequest) Get() *NewAccountUserRequest {
	return v.value
}

func (v *NullableNewAccountUserRequest) Set(val *NewAccountUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNewAccountUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNewAccountUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewAccountUserRequest(val *NewAccountUserRequest) *NullableNewAccountUserRequest {
	return &NullableNewAccountUserRequest{value: val, isSet: true}
}

func (v NullableNewAccountUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewAccountUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


