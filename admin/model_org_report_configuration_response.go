/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrgReportConfigurationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrgReportConfigurationResponse{}

// OrgReportConfigurationResponse 
type OrgReportConfigurationResponse struct {
	// 
	IsAccountLimitDisabled *bool `json:"is_account_limit_disabled,omitempty"`
	// 
	CustomDatesEnabled *bool `json:"custom_dates_enabled,omitempty"`
	// 
	EnabledReportTypes []int32 `json:"enabled_report_types,omitempty"`
}

// NewOrgReportConfigurationResponse instantiates a new OrgReportConfigurationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgReportConfigurationResponse() *OrgReportConfigurationResponse {
	this := OrgReportConfigurationResponse{}
	return &this
}

// NewOrgReportConfigurationResponseWithDefaults instantiates a new OrgReportConfigurationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgReportConfigurationResponseWithDefaults() *OrgReportConfigurationResponse {
	this := OrgReportConfigurationResponse{}
	return &this
}

// GetIsAccountLimitDisabled returns the IsAccountLimitDisabled field value if set, zero value otherwise.
func (o *OrgReportConfigurationResponse) GetIsAccountLimitDisabled() bool {
	if o == nil || IsNil(o.IsAccountLimitDisabled) {
		var ret bool
		return ret
	}
	return *o.IsAccountLimitDisabled
}

// GetIsAccountLimitDisabledOk returns a tuple with the IsAccountLimitDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgReportConfigurationResponse) GetIsAccountLimitDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAccountLimitDisabled) {
		return nil, false
	}
	return o.IsAccountLimitDisabled, true
}

// HasIsAccountLimitDisabled returns a boolean if a field has been set.
func (o *OrgReportConfigurationResponse) HasIsAccountLimitDisabled() bool {
	if o != nil && !IsNil(o.IsAccountLimitDisabled) {
		return true
	}

	return false
}

// SetIsAccountLimitDisabled gets a reference to the given bool and assigns it to the IsAccountLimitDisabled field.
func (o *OrgReportConfigurationResponse) SetIsAccountLimitDisabled(v bool) {
	o.IsAccountLimitDisabled = &v
}

// GetCustomDatesEnabled returns the CustomDatesEnabled field value if set, zero value otherwise.
func (o *OrgReportConfigurationResponse) GetCustomDatesEnabled() bool {
	if o == nil || IsNil(o.CustomDatesEnabled) {
		var ret bool
		return ret
	}
	return *o.CustomDatesEnabled
}

// GetCustomDatesEnabledOk returns a tuple with the CustomDatesEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgReportConfigurationResponse) GetCustomDatesEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomDatesEnabled) {
		return nil, false
	}
	return o.CustomDatesEnabled, true
}

// HasCustomDatesEnabled returns a boolean if a field has been set.
func (o *OrgReportConfigurationResponse) HasCustomDatesEnabled() bool {
	if o != nil && !IsNil(o.CustomDatesEnabled) {
		return true
	}

	return false
}

// SetCustomDatesEnabled gets a reference to the given bool and assigns it to the CustomDatesEnabled field.
func (o *OrgReportConfigurationResponse) SetCustomDatesEnabled(v bool) {
	o.CustomDatesEnabled = &v
}

// GetEnabledReportTypes returns the EnabledReportTypes field value if set, zero value otherwise.
func (o *OrgReportConfigurationResponse) GetEnabledReportTypes() []int32 {
	if o == nil || IsNil(o.EnabledReportTypes) {
		var ret []int32
		return ret
	}
	return o.EnabledReportTypes
}

// GetEnabledReportTypesOk returns a tuple with the EnabledReportTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgReportConfigurationResponse) GetEnabledReportTypesOk() ([]int32, bool) {
	if o == nil || IsNil(o.EnabledReportTypes) {
		return nil, false
	}
	return o.EnabledReportTypes, true
}

// HasEnabledReportTypes returns a boolean if a field has been set.
func (o *OrgReportConfigurationResponse) HasEnabledReportTypes() bool {
	if o != nil && !IsNil(o.EnabledReportTypes) {
		return true
	}

	return false
}

// SetEnabledReportTypes gets a reference to the given []int32 and assigns it to the EnabledReportTypes field.
func (o *OrgReportConfigurationResponse) SetEnabledReportTypes(v []int32) {
	o.EnabledReportTypes = v
}

func (o OrgReportConfigurationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrgReportConfigurationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsAccountLimitDisabled) {
		toSerialize["is_account_limit_disabled"] = o.IsAccountLimitDisabled
	}
	if !IsNil(o.CustomDatesEnabled) {
		toSerialize["custom_dates_enabled"] = o.CustomDatesEnabled
	}
	if !IsNil(o.EnabledReportTypes) {
		toSerialize["enabled_report_types"] = o.EnabledReportTypes
	}
	return toSerialize, nil
}

type NullableOrgReportConfigurationResponse struct {
	value *OrgReportConfigurationResponse
	isSet bool
}

func (v NullableOrgReportConfigurationResponse) Get() *OrgReportConfigurationResponse {
	return v.value
}

func (v *NullableOrgReportConfigurationResponse) Set(val *OrgReportConfigurationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgReportConfigurationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgReportConfigurationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgReportConfigurationResponse(val *OrgReportConfigurationResponse) *NullableOrgReportConfigurationResponse {
	return &NullableOrgReportConfigurationResponse{value: val, isSet: true}
}

func (v NullableOrgReportConfigurationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgReportConfigurationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


