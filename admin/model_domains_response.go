/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DomainsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainsResponse{}

// DomainsResponse A response about reserved domains.
type DomainsResponse struct {
	// Information about reserved domains.
	ReservedDomains []DomainResponse `json:"reserved_domains,omitempty"`
}

// NewDomainsResponse instantiates a new DomainsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainsResponse() *DomainsResponse {
	this := DomainsResponse{}
	return &this
}

// NewDomainsResponseWithDefaults instantiates a new DomainsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainsResponseWithDefaults() *DomainsResponse {
	this := DomainsResponse{}
	return &this
}

// GetReservedDomains returns the ReservedDomains field value if set, zero value otherwise.
func (o *DomainsResponse) GetReservedDomains() []DomainResponse {
	if o == nil || IsNil(o.ReservedDomains) {
		var ret []DomainResponse
		return ret
	}
	return o.ReservedDomains
}

// GetReservedDomainsOk returns a tuple with the ReservedDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainsResponse) GetReservedDomainsOk() ([]DomainResponse, bool) {
	if o == nil || IsNil(o.ReservedDomains) {
		return nil, false
	}
	return o.ReservedDomains, true
}

// HasReservedDomains returns a boolean if a field has been set.
func (o *DomainsResponse) HasReservedDomains() bool {
	if o != nil && !IsNil(o.ReservedDomains) {
		return true
	}

	return false
}

// SetReservedDomains gets a reference to the given []DomainResponse and assigns it to the ReservedDomains field.
func (o *DomainsResponse) SetReservedDomains(v []DomainResponse) {
	o.ReservedDomains = v
}

func (o DomainsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservedDomains) {
		toSerialize["reserved_domains"] = o.ReservedDomains
	}
	return toSerialize, nil
}

type NullableDomainsResponse struct {
	value *DomainsResponse
	isSet bool
}

func (v NullableDomainsResponse) Get() *DomainsResponse {
	return v.value
}

func (v *NullableDomainsResponse) Set(val *DomainsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainsResponse(val *DomainsResponse) *NullableDomainsResponse {
	return &NullableDomainsResponse{value: val, isSet: true}
}

func (v NullableDomainsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


