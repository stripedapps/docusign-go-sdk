/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeleteMembershipsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteMembershipsRequest{}

// DeleteMembershipsRequest A list of accounts to close for a user.
type DeleteMembershipsRequest struct {
	// A list of accounts to close for a user.
	Accounts []DeleteMembershipRequest `json:"accounts"`
}

// NewDeleteMembershipsRequest instantiates a new DeleteMembershipsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteMembershipsRequest(accounts []DeleteMembershipRequest) *DeleteMembershipsRequest {
	this := DeleteMembershipsRequest{}
	this.Accounts = accounts
	return &this
}

// NewDeleteMembershipsRequestWithDefaults instantiates a new DeleteMembershipsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteMembershipsRequestWithDefaults() *DeleteMembershipsRequest {
	this := DeleteMembershipsRequest{}
	return &this
}

// GetAccounts returns the Accounts field value
func (o *DeleteMembershipsRequest) GetAccounts() []DeleteMembershipRequest {
	if o == nil {
		var ret []DeleteMembershipRequest
		return ret
	}

	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value
// and a boolean to check if the value has been set.
func (o *DeleteMembershipsRequest) GetAccountsOk() ([]DeleteMembershipRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Accounts, true
}

// SetAccounts sets field value
func (o *DeleteMembershipsRequest) SetAccounts(v []DeleteMembershipRequest) {
	o.Accounts = v
}

func (o DeleteMembershipsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteMembershipsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accounts"] = o.Accounts
	return toSerialize, nil
}

type NullableDeleteMembershipsRequest struct {
	value *DeleteMembershipsRequest
	isSet bool
}

func (v NullableDeleteMembershipsRequest) Get() *DeleteMembershipsRequest {
	return v.value
}

func (v *NullableDeleteMembershipsRequest) Set(val *DeleteMembershipsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteMembershipsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteMembershipsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteMembershipsRequest(val *DeleteMembershipsRequest) *NullableDeleteMembershipsRequest {
	return &NullableDeleteMembershipsRequest{value: val, isSet: true}
}

func (v NullableDeleteMembershipsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteMembershipsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


