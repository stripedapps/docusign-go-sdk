/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OrganizationUserResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationUserResponse{}

// OrganizationUserResponse Information about a user.
type OrganizationUserResponse struct {
	// The user's unique ID.
	Id *string `json:"id,omitempty"`
	// The full name of the user.
	UserName *string `json:"user_name,omitempty"`
	// The user's first name.
	FirstName *string `json:"first_name,omitempty"`
	// The user's last name.
	LastName *string `json:"last_name,omitempty"`
	// The user's status. One of:  - `active` - `created` - `closed` 
	UserStatus *string `json:"user_status,omitempty"`
	// The user's membership status. One of:  - `activation_required` - `activation_sent` - `active` - `closed` - `disabled` 
	MembershipStatus *string `json:"membership_status,omitempty"`
	// The email address.
	Email *string `json:"email,omitempty"`
	// The date the user's account was created.
	CreatedOn *time.Time `json:"created_on,omitempty"`
	// The date on which the user became a member of the organization.
	MembershipCreatedOn *time.Time `json:"membership_created_on,omitempty"`
	// 
	DsGroups []DSGroupResponse `json:"ds_groups,omitempty"`
	// 
	MembershipId *string `json:"membership_id,omitempty"`
}

// NewOrganizationUserResponse instantiates a new OrganizationUserResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationUserResponse() *OrganizationUserResponse {
	this := OrganizationUserResponse{}
	return &this
}

// NewOrganizationUserResponseWithDefaults instantiates a new OrganizationUserResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationUserResponseWithDefaults() *OrganizationUserResponse {
	this := OrganizationUserResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrganizationUserResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUserResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrganizationUserResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrganizationUserResponse) SetId(v string) {
	o.Id = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *OrganizationUserResponse) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUserResponse) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *OrganizationUserResponse) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *OrganizationUserResponse) SetUserName(v string) {
	o.UserName = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *OrganizationUserResponse) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUserResponse) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *OrganizationUserResponse) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *OrganizationUserResponse) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *OrganizationUserResponse) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUserResponse) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *OrganizationUserResponse) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *OrganizationUserResponse) SetLastName(v string) {
	o.LastName = &v
}

// GetUserStatus returns the UserStatus field value if set, zero value otherwise.
func (o *OrganizationUserResponse) GetUserStatus() string {
	if o == nil || IsNil(o.UserStatus) {
		var ret string
		return ret
	}
	return *o.UserStatus
}

// GetUserStatusOk returns a tuple with the UserStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUserResponse) GetUserStatusOk() (*string, bool) {
	if o == nil || IsNil(o.UserStatus) {
		return nil, false
	}
	return o.UserStatus, true
}

// HasUserStatus returns a boolean if a field has been set.
func (o *OrganizationUserResponse) HasUserStatus() bool {
	if o != nil && !IsNil(o.UserStatus) {
		return true
	}

	return false
}

// SetUserStatus gets a reference to the given string and assigns it to the UserStatus field.
func (o *OrganizationUserResponse) SetUserStatus(v string) {
	o.UserStatus = &v
}

// GetMembershipStatus returns the MembershipStatus field value if set, zero value otherwise.
func (o *OrganizationUserResponse) GetMembershipStatus() string {
	if o == nil || IsNil(o.MembershipStatus) {
		var ret string
		return ret
	}
	return *o.MembershipStatus
}

// GetMembershipStatusOk returns a tuple with the MembershipStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUserResponse) GetMembershipStatusOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipStatus) {
		return nil, false
	}
	return o.MembershipStatus, true
}

// HasMembershipStatus returns a boolean if a field has been set.
func (o *OrganizationUserResponse) HasMembershipStatus() bool {
	if o != nil && !IsNil(o.MembershipStatus) {
		return true
	}

	return false
}

// SetMembershipStatus gets a reference to the given string and assigns it to the MembershipStatus field.
func (o *OrganizationUserResponse) SetMembershipStatus(v string) {
	o.MembershipStatus = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *OrganizationUserResponse) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUserResponse) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *OrganizationUserResponse) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *OrganizationUserResponse) SetEmail(v string) {
	o.Email = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *OrganizationUserResponse) GetCreatedOn() time.Time {
	if o == nil || IsNil(o.CreatedOn) {
		var ret time.Time
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUserResponse) GetCreatedOnOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedOn) {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *OrganizationUserResponse) HasCreatedOn() bool {
	if o != nil && !IsNil(o.CreatedOn) {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given time.Time and assigns it to the CreatedOn field.
func (o *OrganizationUserResponse) SetCreatedOn(v time.Time) {
	o.CreatedOn = &v
}

// GetMembershipCreatedOn returns the MembershipCreatedOn field value if set, zero value otherwise.
func (o *OrganizationUserResponse) GetMembershipCreatedOn() time.Time {
	if o == nil || IsNil(o.MembershipCreatedOn) {
		var ret time.Time
		return ret
	}
	return *o.MembershipCreatedOn
}

// GetMembershipCreatedOnOk returns a tuple with the MembershipCreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUserResponse) GetMembershipCreatedOnOk() (*time.Time, bool) {
	if o == nil || IsNil(o.MembershipCreatedOn) {
		return nil, false
	}
	return o.MembershipCreatedOn, true
}

// HasMembershipCreatedOn returns a boolean if a field has been set.
func (o *OrganizationUserResponse) HasMembershipCreatedOn() bool {
	if o != nil && !IsNil(o.MembershipCreatedOn) {
		return true
	}

	return false
}

// SetMembershipCreatedOn gets a reference to the given time.Time and assigns it to the MembershipCreatedOn field.
func (o *OrganizationUserResponse) SetMembershipCreatedOn(v time.Time) {
	o.MembershipCreatedOn = &v
}

// GetDsGroups returns the DsGroups field value if set, zero value otherwise.
func (o *OrganizationUserResponse) GetDsGroups() []DSGroupResponse {
	if o == nil || IsNil(o.DsGroups) {
		var ret []DSGroupResponse
		return ret
	}
	return o.DsGroups
}

// GetDsGroupsOk returns a tuple with the DsGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUserResponse) GetDsGroupsOk() ([]DSGroupResponse, bool) {
	if o == nil || IsNil(o.DsGroups) {
		return nil, false
	}
	return o.DsGroups, true
}

// HasDsGroups returns a boolean if a field has been set.
func (o *OrganizationUserResponse) HasDsGroups() bool {
	if o != nil && !IsNil(o.DsGroups) {
		return true
	}

	return false
}

// SetDsGroups gets a reference to the given []DSGroupResponse and assigns it to the DsGroups field.
func (o *OrganizationUserResponse) SetDsGroups(v []DSGroupResponse) {
	o.DsGroups = v
}

// GetMembershipId returns the MembershipId field value if set, zero value otherwise.
func (o *OrganizationUserResponse) GetMembershipId() string {
	if o == nil || IsNil(o.MembershipId) {
		var ret string
		return ret
	}
	return *o.MembershipId
}

// GetMembershipIdOk returns a tuple with the MembershipId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationUserResponse) GetMembershipIdOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipId) {
		return nil, false
	}
	return o.MembershipId, true
}

// HasMembershipId returns a boolean if a field has been set.
func (o *OrganizationUserResponse) HasMembershipId() bool {
	if o != nil && !IsNil(o.MembershipId) {
		return true
	}

	return false
}

// SetMembershipId gets a reference to the given string and assigns it to the MembershipId field.
func (o *OrganizationUserResponse) SetMembershipId(v string) {
	o.MembershipId = &v
}

func (o OrganizationUserResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationUserResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.UserStatus) {
		toSerialize["user_status"] = o.UserStatus
	}
	if !IsNil(o.MembershipStatus) {
		toSerialize["membership_status"] = o.MembershipStatus
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.CreatedOn) {
		toSerialize["created_on"] = o.CreatedOn
	}
	if !IsNil(o.MembershipCreatedOn) {
		toSerialize["membership_created_on"] = o.MembershipCreatedOn
	}
	if !IsNil(o.DsGroups) {
		toSerialize["ds_groups"] = o.DsGroups
	}
	if !IsNil(o.MembershipId) {
		toSerialize["membership_id"] = o.MembershipId
	}
	return toSerialize, nil
}

type NullableOrganizationUserResponse struct {
	value *OrganizationUserResponse
	isSet bool
}

func (v NullableOrganizationUserResponse) Get() *OrganizationUserResponse {
	return v.value
}

func (v *NullableOrganizationUserResponse) Set(val *OrganizationUserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationUserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationUserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationUserResponse(val *OrganizationUserResponse) *NullableOrganizationUserResponse {
	return &NullableOrganizationUserResponse{value: val, isSet: true}
}

func (v NullableOrganizationUserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationUserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


