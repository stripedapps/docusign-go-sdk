/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrgReportListResponseRequestor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrgReportListResponseRequestor{}

// OrgReportListResponseRequestor 
type OrgReportListResponseRequestor struct {
	// 
	Id *string `json:"id,omitempty"`
	// 
	Name *string `json:"name,omitempty"`
}

// NewOrgReportListResponseRequestor instantiates a new OrgReportListResponseRequestor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgReportListResponseRequestor() *OrgReportListResponseRequestor {
	this := OrgReportListResponseRequestor{}
	return &this
}

// NewOrgReportListResponseRequestorWithDefaults instantiates a new OrgReportListResponseRequestor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgReportListResponseRequestorWithDefaults() *OrgReportListResponseRequestor {
	this := OrgReportListResponseRequestor{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrgReportListResponseRequestor) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgReportListResponseRequestor) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrgReportListResponseRequestor) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrgReportListResponseRequestor) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrgReportListResponseRequestor) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgReportListResponseRequestor) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrgReportListResponseRequestor) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrgReportListResponseRequestor) SetName(v string) {
	o.Name = &v
}

func (o OrgReportListResponseRequestor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrgReportListResponseRequestor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableOrgReportListResponseRequestor struct {
	value *OrgReportListResponseRequestor
	isSet bool
}

func (v NullableOrgReportListResponseRequestor) Get() *OrgReportListResponseRequestor {
	return v.value
}

func (v *NullableOrgReportListResponseRequestor) Set(val *OrgReportListResponseRequestor) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgReportListResponseRequestor) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgReportListResponseRequestor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgReportListResponseRequestor(val *OrgReportListResponseRequestor) *NullableOrgReportListResponseRequestor {
	return &NullableOrgReportListResponseRequestor{value: val, isSet: true}
}

func (v NullableOrgReportListResponseRequestor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgReportListResponseRequestor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


