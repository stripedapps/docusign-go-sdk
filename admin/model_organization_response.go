/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OrganizationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationResponse{}

// OrganizationResponse Information about an individual organization.
type OrganizationResponse struct {
	// The ID of the organization.
	Id *string `json:"id,omitempty"`
	// The name of the organization.
	Name *string `json:"name,omitempty"`
	// A description of the organization.
	Description *string `json:"description,omitempty"`
	// The default account ID of the organization.
	DefaultAccountId *string `json:"default_account_id,omitempty"`
	// The default permission profile ID of the organization.
	DefaultPermissionProfileId *int64 `json:"default_permission_profile_id,omitempty"`
	// The date the organization's account was created.
	CreatedOn *time.Time `json:"created_on,omitempty"`
	// The user who created the organization account.
	CreatedBy *string `json:"created_by,omitempty"`
	// The date the organization's account was last updated.
	LastModifiedOn *time.Time `json:"last_modified_on,omitempty"`
	// The user who last updated the organization's account.
	LastModifiedBy *string `json:"last_modified_by,omitempty"`
	// A list of organization accounts.
	Accounts []OrganizationAccountResponse `json:"accounts,omitempty"`
	// A list of the organization accounts users.
	Users []OrganizationSimpleIdObject `json:"users,omitempty"`
	// A list of reserved domains for the organization.
	ReservedDomains []DomainResponse `json:"reserved_domains,omitempty"`
	// A list of identity providers for the organization.
	IdentityProviders []IdentityProvidersResponse `json:"identity_providers,omitempty"`
	// A list of links for the organization.
	Links []LinkResponse `json:"links,omitempty"`
}

// NewOrganizationResponse instantiates a new OrganizationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationResponse() *OrganizationResponse {
	this := OrganizationResponse{}
	return &this
}

// NewOrganizationResponseWithDefaults instantiates a new OrganizationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationResponseWithDefaults() *OrganizationResponse {
	this := OrganizationResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrganizationResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrganizationResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrganizationResponse) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationResponse) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OrganizationResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OrganizationResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OrganizationResponse) SetDescription(v string) {
	o.Description = &v
}

// GetDefaultAccountId returns the DefaultAccountId field value if set, zero value otherwise.
func (o *OrganizationResponse) GetDefaultAccountId() string {
	if o == nil || IsNil(o.DefaultAccountId) {
		var ret string
		return ret
	}
	return *o.DefaultAccountId
}

// GetDefaultAccountIdOk returns a tuple with the DefaultAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetDefaultAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultAccountId) {
		return nil, false
	}
	return o.DefaultAccountId, true
}

// HasDefaultAccountId returns a boolean if a field has been set.
func (o *OrganizationResponse) HasDefaultAccountId() bool {
	if o != nil && !IsNil(o.DefaultAccountId) {
		return true
	}

	return false
}

// SetDefaultAccountId gets a reference to the given string and assigns it to the DefaultAccountId field.
func (o *OrganizationResponse) SetDefaultAccountId(v string) {
	o.DefaultAccountId = &v
}

// GetDefaultPermissionProfileId returns the DefaultPermissionProfileId field value if set, zero value otherwise.
func (o *OrganizationResponse) GetDefaultPermissionProfileId() int64 {
	if o == nil || IsNil(o.DefaultPermissionProfileId) {
		var ret int64
		return ret
	}
	return *o.DefaultPermissionProfileId
}

// GetDefaultPermissionProfileIdOk returns a tuple with the DefaultPermissionProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetDefaultPermissionProfileIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DefaultPermissionProfileId) {
		return nil, false
	}
	return o.DefaultPermissionProfileId, true
}

// HasDefaultPermissionProfileId returns a boolean if a field has been set.
func (o *OrganizationResponse) HasDefaultPermissionProfileId() bool {
	if o != nil && !IsNil(o.DefaultPermissionProfileId) {
		return true
	}

	return false
}

// SetDefaultPermissionProfileId gets a reference to the given int64 and assigns it to the DefaultPermissionProfileId field.
func (o *OrganizationResponse) SetDefaultPermissionProfileId(v int64) {
	o.DefaultPermissionProfileId = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *OrganizationResponse) GetCreatedOn() time.Time {
	if o == nil || IsNil(o.CreatedOn) {
		var ret time.Time
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetCreatedOnOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedOn) {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *OrganizationResponse) HasCreatedOn() bool {
	if o != nil && !IsNil(o.CreatedOn) {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given time.Time and assigns it to the CreatedOn field.
func (o *OrganizationResponse) SetCreatedOn(v time.Time) {
	o.CreatedOn = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *OrganizationResponse) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *OrganizationResponse) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *OrganizationResponse) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetLastModifiedOn returns the LastModifiedOn field value if set, zero value otherwise.
func (o *OrganizationResponse) GetLastModifiedOn() time.Time {
	if o == nil || IsNil(o.LastModifiedOn) {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedOn
}

// GetLastModifiedOnOk returns a tuple with the LastModifiedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetLastModifiedOnOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModifiedOn) {
		return nil, false
	}
	return o.LastModifiedOn, true
}

// HasLastModifiedOn returns a boolean if a field has been set.
func (o *OrganizationResponse) HasLastModifiedOn() bool {
	if o != nil && !IsNil(o.LastModifiedOn) {
		return true
	}

	return false
}

// SetLastModifiedOn gets a reference to the given time.Time and assigns it to the LastModifiedOn field.
func (o *OrganizationResponse) SetLastModifiedOn(v time.Time) {
	o.LastModifiedOn = &v
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise.
func (o *OrganizationResponse) GetLastModifiedBy() string {
	if o == nil || IsNil(o.LastModifiedBy) {
		var ret string
		return ret
	}
	return *o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetLastModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedBy) {
		return nil, false
	}
	return o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *OrganizationResponse) HasLastModifiedBy() bool {
	if o != nil && !IsNil(o.LastModifiedBy) {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given string and assigns it to the LastModifiedBy field.
func (o *OrganizationResponse) SetLastModifiedBy(v string) {
	o.LastModifiedBy = &v
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *OrganizationResponse) GetAccounts() []OrganizationAccountResponse {
	if o == nil || IsNil(o.Accounts) {
		var ret []OrganizationAccountResponse
		return ret
	}
	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetAccountsOk() ([]OrganizationAccountResponse, bool) {
	if o == nil || IsNil(o.Accounts) {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *OrganizationResponse) HasAccounts() bool {
	if o != nil && !IsNil(o.Accounts) {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []OrganizationAccountResponse and assigns it to the Accounts field.
func (o *OrganizationResponse) SetAccounts(v []OrganizationAccountResponse) {
	o.Accounts = v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *OrganizationResponse) GetUsers() []OrganizationSimpleIdObject {
	if o == nil || IsNil(o.Users) {
		var ret []OrganizationSimpleIdObject
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetUsersOk() ([]OrganizationSimpleIdObject, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *OrganizationResponse) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []OrganizationSimpleIdObject and assigns it to the Users field.
func (o *OrganizationResponse) SetUsers(v []OrganizationSimpleIdObject) {
	o.Users = v
}

// GetReservedDomains returns the ReservedDomains field value if set, zero value otherwise.
func (o *OrganizationResponse) GetReservedDomains() []DomainResponse {
	if o == nil || IsNil(o.ReservedDomains) {
		var ret []DomainResponse
		return ret
	}
	return o.ReservedDomains
}

// GetReservedDomainsOk returns a tuple with the ReservedDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetReservedDomainsOk() ([]DomainResponse, bool) {
	if o == nil || IsNil(o.ReservedDomains) {
		return nil, false
	}
	return o.ReservedDomains, true
}

// HasReservedDomains returns a boolean if a field has been set.
func (o *OrganizationResponse) HasReservedDomains() bool {
	if o != nil && !IsNil(o.ReservedDomains) {
		return true
	}

	return false
}

// SetReservedDomains gets a reference to the given []DomainResponse and assigns it to the ReservedDomains field.
func (o *OrganizationResponse) SetReservedDomains(v []DomainResponse) {
	o.ReservedDomains = v
}

// GetIdentityProviders returns the IdentityProviders field value if set, zero value otherwise.
func (o *OrganizationResponse) GetIdentityProviders() []IdentityProvidersResponse {
	if o == nil || IsNil(o.IdentityProviders) {
		var ret []IdentityProvidersResponse
		return ret
	}
	return o.IdentityProviders
}

// GetIdentityProvidersOk returns a tuple with the IdentityProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetIdentityProvidersOk() ([]IdentityProvidersResponse, bool) {
	if o == nil || IsNil(o.IdentityProviders) {
		return nil, false
	}
	return o.IdentityProviders, true
}

// HasIdentityProviders returns a boolean if a field has been set.
func (o *OrganizationResponse) HasIdentityProviders() bool {
	if o != nil && !IsNil(o.IdentityProviders) {
		return true
	}

	return false
}

// SetIdentityProviders gets a reference to the given []IdentityProvidersResponse and assigns it to the IdentityProviders field.
func (o *OrganizationResponse) SetIdentityProviders(v []IdentityProvidersResponse) {
	o.IdentityProviders = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *OrganizationResponse) GetLinks() []LinkResponse {
	if o == nil || IsNil(o.Links) {
		var ret []LinkResponse
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetLinksOk() ([]LinkResponse, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *OrganizationResponse) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []LinkResponse and assigns it to the Links field.
func (o *OrganizationResponse) SetLinks(v []LinkResponse) {
	o.Links = v
}

func (o OrganizationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DefaultAccountId) {
		toSerialize["default_account_id"] = o.DefaultAccountId
	}
	if !IsNil(o.DefaultPermissionProfileId) {
		toSerialize["default_permission_profile_id"] = o.DefaultPermissionProfileId
	}
	if !IsNil(o.CreatedOn) {
		toSerialize["created_on"] = o.CreatedOn
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["created_by"] = o.CreatedBy
	}
	if !IsNil(o.LastModifiedOn) {
		toSerialize["last_modified_on"] = o.LastModifiedOn
	}
	if !IsNil(o.LastModifiedBy) {
		toSerialize["last_modified_by"] = o.LastModifiedBy
	}
	if !IsNil(o.Accounts) {
		toSerialize["accounts"] = o.Accounts
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	if !IsNil(o.ReservedDomains) {
		toSerialize["reserved_domains"] = o.ReservedDomains
	}
	if !IsNil(o.IdentityProviders) {
		toSerialize["identity_providers"] = o.IdentityProviders
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	return toSerialize, nil
}

type NullableOrganizationResponse struct {
	value *OrganizationResponse
	isSet bool
}

func (v NullableOrganizationResponse) Get() *OrganizationResponse {
	return v.value
}

func (v *NullableOrganizationResponse) Set(val *OrganizationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationResponse(val *OrganizationResponse) *NullableOrganizationResponse {
	return &NullableOrganizationResponse{value: val, isSet: true}
}

func (v NullableOrganizationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


