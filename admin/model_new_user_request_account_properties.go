/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NewUserRequestAccountProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewUserRequestAccountProperties{}

// NewUserRequestAccountProperties An individual new account user.
type NewUserRequestAccountProperties struct {
	// The account ID.
	Id string `json:"id"`
	PermissionProfile *PermissionProfileRequest `json:"permission_profile,omitempty"`
	// The new user's requested groups.
	Groups []GroupRequest `json:"groups,omitempty"`
	// The user's company name.
	CompanyName *string `json:"company_name,omitempty"`
	// The user's job title.
	JobTitle *string `json:"job_title,omitempty"`
}

// NewNewUserRequestAccountProperties instantiates a new NewUserRequestAccountProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewUserRequestAccountProperties(id string) *NewUserRequestAccountProperties {
	this := NewUserRequestAccountProperties{}
	this.Id = id
	return &this
}

// NewNewUserRequestAccountPropertiesWithDefaults instantiates a new NewUserRequestAccountProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewUserRequestAccountPropertiesWithDefaults() *NewUserRequestAccountProperties {
	this := NewUserRequestAccountProperties{}
	return &this
}

// GetId returns the Id field value
func (o *NewUserRequestAccountProperties) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *NewUserRequestAccountProperties) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *NewUserRequestAccountProperties) SetId(v string) {
	o.Id = v
}

// GetPermissionProfile returns the PermissionProfile field value if set, zero value otherwise.
func (o *NewUserRequestAccountProperties) GetPermissionProfile() PermissionProfileRequest {
	if o == nil || IsNil(o.PermissionProfile) {
		var ret PermissionProfileRequest
		return ret
	}
	return *o.PermissionProfile
}

// GetPermissionProfileOk returns a tuple with the PermissionProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewUserRequestAccountProperties) GetPermissionProfileOk() (*PermissionProfileRequest, bool) {
	if o == nil || IsNil(o.PermissionProfile) {
		return nil, false
	}
	return o.PermissionProfile, true
}

// HasPermissionProfile returns a boolean if a field has been set.
func (o *NewUserRequestAccountProperties) HasPermissionProfile() bool {
	if o != nil && !IsNil(o.PermissionProfile) {
		return true
	}

	return false
}

// SetPermissionProfile gets a reference to the given PermissionProfileRequest and assigns it to the PermissionProfile field.
func (o *NewUserRequestAccountProperties) SetPermissionProfile(v PermissionProfileRequest) {
	o.PermissionProfile = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *NewUserRequestAccountProperties) GetGroups() []GroupRequest {
	if o == nil || IsNil(o.Groups) {
		var ret []GroupRequest
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewUserRequestAccountProperties) GetGroupsOk() ([]GroupRequest, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *NewUserRequestAccountProperties) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []GroupRequest and assigns it to the Groups field.
func (o *NewUserRequestAccountProperties) SetGroups(v []GroupRequest) {
	o.Groups = v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *NewUserRequestAccountProperties) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewUserRequestAccountProperties) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *NewUserRequestAccountProperties) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *NewUserRequestAccountProperties) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise.
func (o *NewUserRequestAccountProperties) GetJobTitle() string {
	if o == nil || IsNil(o.JobTitle) {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewUserRequestAccountProperties) GetJobTitleOk() (*string, bool) {
	if o == nil || IsNil(o.JobTitle) {
		return nil, false
	}
	return o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *NewUserRequestAccountProperties) HasJobTitle() bool {
	if o != nil && !IsNil(o.JobTitle) {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *NewUserRequestAccountProperties) SetJobTitle(v string) {
	o.JobTitle = &v
}

func (o NewUserRequestAccountProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NewUserRequestAccountProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.PermissionProfile) {
		toSerialize["permission_profile"] = o.PermissionProfile
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.CompanyName) {
		toSerialize["company_name"] = o.CompanyName
	}
	if !IsNil(o.JobTitle) {
		toSerialize["job_title"] = o.JobTitle
	}
	return toSerialize, nil
}

type NullableNewUserRequestAccountProperties struct {
	value *NewUserRequestAccountProperties
	isSet bool
}

func (v NullableNewUserRequestAccountProperties) Get() *NewUserRequestAccountProperties {
	return v.value
}

func (v *NullableNewUserRequestAccountProperties) Set(val *NewUserRequestAccountProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableNewUserRequestAccountProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableNewUserRequestAccountProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewUserRequestAccountProperties(val *NewUserRequestAccountProperties) *NullableNewUserRequestAccountProperties {
	return &NullableNewUserRequestAccountProperties{value: val, isSet: true}
}

func (v NullableNewUserRequestAccountProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewUserRequestAccountProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


