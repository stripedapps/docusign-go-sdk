/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddUserResponseAccountProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddUserResponseAccountProperties{}

// AddUserResponseAccountProperties 
type AddUserResponseAccountProperties struct {
	// 
	Id *string `json:"id,omitempty"`
	// 
	SiteId *int32 `json:"site_id,omitempty"`
	// A list of one or more products and their respective permissions.
	ProductPermissionProfiles []ProductPermissionProfileResponse `json:"product_permission_profiles,omitempty"`
	// 
	DsGroups []DSGroupResponse `json:"ds_groups,omitempty"`
	// The user's company name.
	CompanyName *string `json:"company_name,omitempty"`
	// The user's job title.
	JobTitle *string `json:"job_title,omitempty"`
}

// NewAddUserResponseAccountProperties instantiates a new AddUserResponseAccountProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddUserResponseAccountProperties() *AddUserResponseAccountProperties {
	this := AddUserResponseAccountProperties{}
	return &this
}

// NewAddUserResponseAccountPropertiesWithDefaults instantiates a new AddUserResponseAccountProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddUserResponseAccountPropertiesWithDefaults() *AddUserResponseAccountProperties {
	this := AddUserResponseAccountProperties{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AddUserResponseAccountProperties) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserResponseAccountProperties) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AddUserResponseAccountProperties) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AddUserResponseAccountProperties) SetId(v string) {
	o.Id = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *AddUserResponseAccountProperties) GetSiteId() int32 {
	if o == nil || IsNil(o.SiteId) {
		var ret int32
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserResponseAccountProperties) GetSiteIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *AddUserResponseAccountProperties) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given int32 and assigns it to the SiteId field.
func (o *AddUserResponseAccountProperties) SetSiteId(v int32) {
	o.SiteId = &v
}

// GetProductPermissionProfiles returns the ProductPermissionProfiles field value if set, zero value otherwise.
func (o *AddUserResponseAccountProperties) GetProductPermissionProfiles() []ProductPermissionProfileResponse {
	if o == nil || IsNil(o.ProductPermissionProfiles) {
		var ret []ProductPermissionProfileResponse
		return ret
	}
	return o.ProductPermissionProfiles
}

// GetProductPermissionProfilesOk returns a tuple with the ProductPermissionProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserResponseAccountProperties) GetProductPermissionProfilesOk() ([]ProductPermissionProfileResponse, bool) {
	if o == nil || IsNil(o.ProductPermissionProfiles) {
		return nil, false
	}
	return o.ProductPermissionProfiles, true
}

// HasProductPermissionProfiles returns a boolean if a field has been set.
func (o *AddUserResponseAccountProperties) HasProductPermissionProfiles() bool {
	if o != nil && !IsNil(o.ProductPermissionProfiles) {
		return true
	}

	return false
}

// SetProductPermissionProfiles gets a reference to the given []ProductPermissionProfileResponse and assigns it to the ProductPermissionProfiles field.
func (o *AddUserResponseAccountProperties) SetProductPermissionProfiles(v []ProductPermissionProfileResponse) {
	o.ProductPermissionProfiles = v
}

// GetDsGroups returns the DsGroups field value if set, zero value otherwise.
func (o *AddUserResponseAccountProperties) GetDsGroups() []DSGroupResponse {
	if o == nil || IsNil(o.DsGroups) {
		var ret []DSGroupResponse
		return ret
	}
	return o.DsGroups
}

// GetDsGroupsOk returns a tuple with the DsGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserResponseAccountProperties) GetDsGroupsOk() ([]DSGroupResponse, bool) {
	if o == nil || IsNil(o.DsGroups) {
		return nil, false
	}
	return o.DsGroups, true
}

// HasDsGroups returns a boolean if a field has been set.
func (o *AddUserResponseAccountProperties) HasDsGroups() bool {
	if o != nil && !IsNil(o.DsGroups) {
		return true
	}

	return false
}

// SetDsGroups gets a reference to the given []DSGroupResponse and assigns it to the DsGroups field.
func (o *AddUserResponseAccountProperties) SetDsGroups(v []DSGroupResponse) {
	o.DsGroups = v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *AddUserResponseAccountProperties) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserResponseAccountProperties) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *AddUserResponseAccountProperties) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *AddUserResponseAccountProperties) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise.
func (o *AddUserResponseAccountProperties) GetJobTitle() string {
	if o == nil || IsNil(o.JobTitle) {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserResponseAccountProperties) GetJobTitleOk() (*string, bool) {
	if o == nil || IsNil(o.JobTitle) {
		return nil, false
	}
	return o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *AddUserResponseAccountProperties) HasJobTitle() bool {
	if o != nil && !IsNil(o.JobTitle) {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *AddUserResponseAccountProperties) SetJobTitle(v string) {
	o.JobTitle = &v
}

func (o AddUserResponseAccountProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddUserResponseAccountProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.ProductPermissionProfiles) {
		toSerialize["product_permission_profiles"] = o.ProductPermissionProfiles
	}
	if !IsNil(o.DsGroups) {
		toSerialize["ds_groups"] = o.DsGroups
	}
	if !IsNil(o.CompanyName) {
		toSerialize["company_name"] = o.CompanyName
	}
	if !IsNil(o.JobTitle) {
		toSerialize["job_title"] = o.JobTitle
	}
	return toSerialize, nil
}

type NullableAddUserResponseAccountProperties struct {
	value *AddUserResponseAccountProperties
	isSet bool
}

func (v NullableAddUserResponseAccountProperties) Get() *AddUserResponseAccountProperties {
	return v.value
}

func (v *NullableAddUserResponseAccountProperties) Set(val *AddUserResponseAccountProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableAddUserResponseAccountProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableAddUserResponseAccountProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddUserResponseAccountProperties(val *AddUserResponseAccountProperties) *NullableAddUserResponseAccountProperties {
	return &NullableAddUserResponseAccountProperties{value: val, isSet: true}
}

func (v NullableAddUserResponseAccountProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddUserResponseAccountProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


