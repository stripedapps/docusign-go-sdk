/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MultiProductUserManagement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiProductUserManagement{}

// MultiProductUserManagement Methods to manage multi-product users in an account.
type MultiProductUserManagement struct {
	// 
	Id *string `json:"id,omitempty"`
	// 
	SiteId *int32 `json:"site_id,omitempty"`
	// The full name of the user.
	UserName *string `json:"user_name,omitempty"`
	// The user's first name.
	FirstName *string `json:"first_name,omitempty"`
	// The user's last name.
	LastName *string `json:"last_name,omitempty"`
	// The email address.
	Email *string `json:"email,omitempty"`
	// The language and culture of the user.    * Chinese Simplified: `zh_CN`   * Chinese Traditional: `zh_TW`   * Dutch: `nl`   * English: `en`   * French: `fr`   * German: `de`   * Italian: `it`   * Japanese: `ja`   * Korean: `ko`   * Portuguese: `pt`   * Portuguese Brazil: `pt_BR`   * Russian: `ru`   * Spanish: `es` 
	LanguageCulture *string `json:"language_culture,omitempty"`
	// The user's federated status. One of:  - `RemoveStatus` - `FedAuthRequired` - `FedAuthBypass` - `Evicted`
	FederatedStatus *string `json:"federated_status,omitempty"`
	// 
	Accounts []AddUserResponseAccountProperties `json:"accounts,omitempty"`
}

// NewMultiProductUserManagement instantiates a new MultiProductUserManagement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiProductUserManagement() *MultiProductUserManagement {
	this := MultiProductUserManagement{}
	return &this
}

// NewMultiProductUserManagementWithDefaults instantiates a new MultiProductUserManagement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiProductUserManagementWithDefaults() *MultiProductUserManagement {
	this := MultiProductUserManagement{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MultiProductUserManagement) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiProductUserManagement) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MultiProductUserManagement) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MultiProductUserManagement) SetId(v string) {
	o.Id = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *MultiProductUserManagement) GetSiteId() int32 {
	if o == nil || IsNil(o.SiteId) {
		var ret int32
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiProductUserManagement) GetSiteIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *MultiProductUserManagement) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given int32 and assigns it to the SiteId field.
func (o *MultiProductUserManagement) SetSiteId(v int32) {
	o.SiteId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *MultiProductUserManagement) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiProductUserManagement) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *MultiProductUserManagement) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *MultiProductUserManagement) SetUserName(v string) {
	o.UserName = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *MultiProductUserManagement) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiProductUserManagement) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *MultiProductUserManagement) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *MultiProductUserManagement) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *MultiProductUserManagement) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiProductUserManagement) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *MultiProductUserManagement) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *MultiProductUserManagement) SetLastName(v string) {
	o.LastName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *MultiProductUserManagement) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiProductUserManagement) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *MultiProductUserManagement) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *MultiProductUserManagement) SetEmail(v string) {
	o.Email = &v
}

// GetLanguageCulture returns the LanguageCulture field value if set, zero value otherwise.
func (o *MultiProductUserManagement) GetLanguageCulture() string {
	if o == nil || IsNil(o.LanguageCulture) {
		var ret string
		return ret
	}
	return *o.LanguageCulture
}

// GetLanguageCultureOk returns a tuple with the LanguageCulture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiProductUserManagement) GetLanguageCultureOk() (*string, bool) {
	if o == nil || IsNil(o.LanguageCulture) {
		return nil, false
	}
	return o.LanguageCulture, true
}

// HasLanguageCulture returns a boolean if a field has been set.
func (o *MultiProductUserManagement) HasLanguageCulture() bool {
	if o != nil && !IsNil(o.LanguageCulture) {
		return true
	}

	return false
}

// SetLanguageCulture gets a reference to the given string and assigns it to the LanguageCulture field.
func (o *MultiProductUserManagement) SetLanguageCulture(v string) {
	o.LanguageCulture = &v
}

// GetFederatedStatus returns the FederatedStatus field value if set, zero value otherwise.
func (o *MultiProductUserManagement) GetFederatedStatus() string {
	if o == nil || IsNil(o.FederatedStatus) {
		var ret string
		return ret
	}
	return *o.FederatedStatus
}

// GetFederatedStatusOk returns a tuple with the FederatedStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiProductUserManagement) GetFederatedStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FederatedStatus) {
		return nil, false
	}
	return o.FederatedStatus, true
}

// HasFederatedStatus returns a boolean if a field has been set.
func (o *MultiProductUserManagement) HasFederatedStatus() bool {
	if o != nil && !IsNil(o.FederatedStatus) {
		return true
	}

	return false
}

// SetFederatedStatus gets a reference to the given string and assigns it to the FederatedStatus field.
func (o *MultiProductUserManagement) SetFederatedStatus(v string) {
	o.FederatedStatus = &v
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *MultiProductUserManagement) GetAccounts() []AddUserResponseAccountProperties {
	if o == nil || IsNil(o.Accounts) {
		var ret []AddUserResponseAccountProperties
		return ret
	}
	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiProductUserManagement) GetAccountsOk() ([]AddUserResponseAccountProperties, bool) {
	if o == nil || IsNil(o.Accounts) {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *MultiProductUserManagement) HasAccounts() bool {
	if o != nil && !IsNil(o.Accounts) {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []AddUserResponseAccountProperties and assigns it to the Accounts field.
func (o *MultiProductUserManagement) SetAccounts(v []AddUserResponseAccountProperties) {
	o.Accounts = v
}

func (o MultiProductUserManagement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiProductUserManagement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.LanguageCulture) {
		toSerialize["language_culture"] = o.LanguageCulture
	}
	if !IsNil(o.FederatedStatus) {
		toSerialize["federated_status"] = o.FederatedStatus
	}
	if !IsNil(o.Accounts) {
		toSerialize["accounts"] = o.Accounts
	}
	return toSerialize, nil
}

type NullableMultiProductUserManagement struct {
	value *MultiProductUserManagement
	isSet bool
}

func (v NullableMultiProductUserManagement) Get() *MultiProductUserManagement {
	return v.value
}

func (v *NullableMultiProductUserManagement) Set(val *MultiProductUserManagement) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiProductUserManagement) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiProductUserManagement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiProductUserManagement(val *MultiProductUserManagement) *NullableMultiProductUserManagement {
	return &NullableMultiProductUserManagement{value: val, isSet: true}
}

func (v NullableMultiProductUserManagement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiProductUserManagement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


