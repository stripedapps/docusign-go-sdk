/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NewUserResponseAccountProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewUserResponseAccountProperties{}

// NewUserResponseAccountProperties Information about a newly created user.
type NewUserResponseAccountProperties struct {
	// The user's unique ID.
	Id *string `json:"id,omitempty"`
	// The site ID of the account.
	SiteId *int32 `json:"site_id,omitempty"`
	PermissionProfile *PermissionProfileResponse `json:"permission_profile,omitempty"`
	// A list of groups that the user belongs to.
	Groups []MemberGroupResponse `json:"groups,omitempty"`
	// The user's company name.
	CompanyName *string `json:"company_name,omitempty"`
	// The job title of the user.
	JobTitle *string `json:"job_title,omitempty"`
}

// NewNewUserResponseAccountProperties instantiates a new NewUserResponseAccountProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewUserResponseAccountProperties() *NewUserResponseAccountProperties {
	this := NewUserResponseAccountProperties{}
	return &this
}

// NewNewUserResponseAccountPropertiesWithDefaults instantiates a new NewUserResponseAccountProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewUserResponseAccountPropertiesWithDefaults() *NewUserResponseAccountProperties {
	this := NewUserResponseAccountProperties{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NewUserResponseAccountProperties) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewUserResponseAccountProperties) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NewUserResponseAccountProperties) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *NewUserResponseAccountProperties) SetId(v string) {
	o.Id = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *NewUserResponseAccountProperties) GetSiteId() int32 {
	if o == nil || IsNil(o.SiteId) {
		var ret int32
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewUserResponseAccountProperties) GetSiteIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *NewUserResponseAccountProperties) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given int32 and assigns it to the SiteId field.
func (o *NewUserResponseAccountProperties) SetSiteId(v int32) {
	o.SiteId = &v
}

// GetPermissionProfile returns the PermissionProfile field value if set, zero value otherwise.
func (o *NewUserResponseAccountProperties) GetPermissionProfile() PermissionProfileResponse {
	if o == nil || IsNil(o.PermissionProfile) {
		var ret PermissionProfileResponse
		return ret
	}
	return *o.PermissionProfile
}

// GetPermissionProfileOk returns a tuple with the PermissionProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewUserResponseAccountProperties) GetPermissionProfileOk() (*PermissionProfileResponse, bool) {
	if o == nil || IsNil(o.PermissionProfile) {
		return nil, false
	}
	return o.PermissionProfile, true
}

// HasPermissionProfile returns a boolean if a field has been set.
func (o *NewUserResponseAccountProperties) HasPermissionProfile() bool {
	if o != nil && !IsNil(o.PermissionProfile) {
		return true
	}

	return false
}

// SetPermissionProfile gets a reference to the given PermissionProfileResponse and assigns it to the PermissionProfile field.
func (o *NewUserResponseAccountProperties) SetPermissionProfile(v PermissionProfileResponse) {
	o.PermissionProfile = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *NewUserResponseAccountProperties) GetGroups() []MemberGroupResponse {
	if o == nil || IsNil(o.Groups) {
		var ret []MemberGroupResponse
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewUserResponseAccountProperties) GetGroupsOk() ([]MemberGroupResponse, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *NewUserResponseAccountProperties) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []MemberGroupResponse and assigns it to the Groups field.
func (o *NewUserResponseAccountProperties) SetGroups(v []MemberGroupResponse) {
	o.Groups = v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *NewUserResponseAccountProperties) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewUserResponseAccountProperties) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *NewUserResponseAccountProperties) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *NewUserResponseAccountProperties) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise.
func (o *NewUserResponseAccountProperties) GetJobTitle() string {
	if o == nil || IsNil(o.JobTitle) {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewUserResponseAccountProperties) GetJobTitleOk() (*string, bool) {
	if o == nil || IsNil(o.JobTitle) {
		return nil, false
	}
	return o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *NewUserResponseAccountProperties) HasJobTitle() bool {
	if o != nil && !IsNil(o.JobTitle) {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *NewUserResponseAccountProperties) SetJobTitle(v string) {
	o.JobTitle = &v
}

func (o NewUserResponseAccountProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NewUserResponseAccountProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.PermissionProfile) {
		toSerialize["permission_profile"] = o.PermissionProfile
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.CompanyName) {
		toSerialize["company_name"] = o.CompanyName
	}
	if !IsNil(o.JobTitle) {
		toSerialize["job_title"] = o.JobTitle
	}
	return toSerialize, nil
}

type NullableNewUserResponseAccountProperties struct {
	value *NewUserResponseAccountProperties
	isSet bool
}

func (v NullableNewUserResponseAccountProperties) Get() *NewUserResponseAccountProperties {
	return v.value
}

func (v *NullableNewUserResponseAccountProperties) Set(val *NewUserResponseAccountProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableNewUserResponseAccountProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableNewUserResponseAccountProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewUserResponseAccountProperties(val *NewUserResponseAccountProperties) *NullableNewUserResponseAccountProperties {
	return &NullableNewUserResponseAccountProperties{value: val, isSet: true}
}

func (v NullableNewUserResponseAccountProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewUserResponseAccountProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


