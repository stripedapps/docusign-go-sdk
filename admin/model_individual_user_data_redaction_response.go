/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IndividualUserDataRedactionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndividualUserDataRedactionResponse{}

// IndividualUserDataRedactionResponse 
type IndividualUserDataRedactionResponse struct {
	// The ID of the user.
	UserId *string `json:"user_id,omitempty"`
	// The overall status of the data deletion request.
	Status *string `json:"status,omitempty"`
	// A list of objects describing the status of the deletion request for each account.
	MembershipResults []MembershipDataRedactionResponse `json:"membership_results,omitempty"`
}

// NewIndividualUserDataRedactionResponse instantiates a new IndividualUserDataRedactionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndividualUserDataRedactionResponse() *IndividualUserDataRedactionResponse {
	this := IndividualUserDataRedactionResponse{}
	return &this
}

// NewIndividualUserDataRedactionResponseWithDefaults instantiates a new IndividualUserDataRedactionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndividualUserDataRedactionResponseWithDefaults() *IndividualUserDataRedactionResponse {
	this := IndividualUserDataRedactionResponse{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *IndividualUserDataRedactionResponse) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualUserDataRedactionResponse) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *IndividualUserDataRedactionResponse) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *IndividualUserDataRedactionResponse) SetUserId(v string) {
	o.UserId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *IndividualUserDataRedactionResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualUserDataRedactionResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *IndividualUserDataRedactionResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *IndividualUserDataRedactionResponse) SetStatus(v string) {
	o.Status = &v
}

// GetMembershipResults returns the MembershipResults field value if set, zero value otherwise.
func (o *IndividualUserDataRedactionResponse) GetMembershipResults() []MembershipDataRedactionResponse {
	if o == nil || IsNil(o.MembershipResults) {
		var ret []MembershipDataRedactionResponse
		return ret
	}
	return o.MembershipResults
}

// GetMembershipResultsOk returns a tuple with the MembershipResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualUserDataRedactionResponse) GetMembershipResultsOk() ([]MembershipDataRedactionResponse, bool) {
	if o == nil || IsNil(o.MembershipResults) {
		return nil, false
	}
	return o.MembershipResults, true
}

// HasMembershipResults returns a boolean if a field has been set.
func (o *IndividualUserDataRedactionResponse) HasMembershipResults() bool {
	if o != nil && !IsNil(o.MembershipResults) {
		return true
	}

	return false
}

// SetMembershipResults gets a reference to the given []MembershipDataRedactionResponse and assigns it to the MembershipResults field.
func (o *IndividualUserDataRedactionResponse) SetMembershipResults(v []MembershipDataRedactionResponse) {
	o.MembershipResults = v
}

func (o IndividualUserDataRedactionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndividualUserDataRedactionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.MembershipResults) {
		toSerialize["membership_results"] = o.MembershipResults
	}
	return toSerialize, nil
}

type NullableIndividualUserDataRedactionResponse struct {
	value *IndividualUserDataRedactionResponse
	isSet bool
}

func (v NullableIndividualUserDataRedactionResponse) Get() *IndividualUserDataRedactionResponse {
	return v.value
}

func (v *NullableIndividualUserDataRedactionResponse) Set(val *IndividualUserDataRedactionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIndividualUserDataRedactionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIndividualUserDataRedactionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndividualUserDataRedactionResponse(val *IndividualUserDataRedactionResponse) *NullableIndividualUserDataRedactionResponse {
	return &NullableIndividualUserDataRedactionResponse{value: val, isSet: true}
}

func (v NullableIndividualUserDataRedactionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndividualUserDataRedactionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


