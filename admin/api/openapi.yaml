openapi: 3.0.1
info:
  contact:
    email: devcenter@docusign.com
    name: DocuSign Developer Center
    url: https://developers.docusign.com
  description: "An API for an organization administrator to manage organizations,\
    \ accounts and users"
  termsOfService: https://www.docusign.com/company/terms-and-conditions/developers
  title: DocuSign Admin API
  version: v2.1
externalDocs:
  description: See the DocuSign DocuSign Admin API Guide for more information.
  url: https://developers.docusign.com/docs/admin-api/reference
servers:
- url: https://api.docusign.net/Management
tags:
- description: Methods to get a list of identity providers.
  name: IdentityProviders
- description: Methods to get a list of reserved domains.
  name: ReservedDomains
- description: Methods to manage users in an account.
  name: Users
- description: Methods to manage eSignature users in an account.
  name: eSignUserManagement
- description: Methods to manage multi-product users in an account.
  name: MultiProductUserManagement
- description: Methods for exporting a user list.
  name: UserExport
- description: Methods and objects to get account information.
  name: AccountSettingsExport
- description: |-
    Methods to import users.

    To ensure your CSV is properly formatted, use the
    [Sample Bulk Add CSV file](https://admin.docusign.com/static-resources/organization-user-import.csv)
     as a template.

    You can add up to 2,000 users to an account and include up to 50 accounts per import. The maximum number of users per import is 8,000.
  name: UserImport
- description: Methods for working with organizations.
  name: Organization
- description: Methods and objects to update account settings.
  name: AccountSettingsImport
- description: Methods to import users.
  name: SingleAccountUserImport
- description: "Methods to delete user data. After a user is closed, an account or\
    \ organization administrator can use these methods to delete the user's account\
    \ data."
  name: DataDeletion
- description: Methods to clone accounts.
  name: AccountCloning
paths:
  /v2/organizations:
    get:
      description: |-
        Returns a list of organizations that the authenticated user belongs to.

        Note that the DocuSign Admin API only returns JSON, not XML.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `organization_read`.

        This method requires user authentication. It will fail with an [application access token](/docs/admin-api/admin101/application-auth/).
      operationId: Organization_Organization_GetListV2
      parameters:
      - description: |-
          Specifies how to select the organizations. Valid values:

          - `org_admin`: Returns organizations for which the authenticated user is an admin.
          - `account_membership`: Returns organizations that contain an account of which the authenticated user is a member

          Default value: `org_admin`
        in: query
        name: mode
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsResponse'
          description: OK
      security:
      - accessCode:
        - organization_read
      summary: Returns a list of organizations that the authenticated user belongs
        to.
      tags:
      - Organization
      x-ds-methodname: getOrganizations
      x-ds-method: getOrganizations
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/data_redaction/accounts/{accountId}/user:
    post:
      description: "Deletes the data for a single account membership for a specified\
        \ user.\n\nTo call this endpoint: \n* You must be an administrator (or delegated\
        \ administrator) of the specified account.\n* The user must have been closed\
        \ for at least 24 hours.\n\n**Note:** After a user's data is deleted for every\
        \ account to which they belong, their user-level data will automatically be\
        \ deleted.\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/):\
        \ `user_data_redact`.\n"
      operationId: DataRedaction_RedactIndividualMembershipData
      parameters:
      - description: |
          The ID of the account from which to delete the user's data.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualMembershipDataRedactionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualUserDataRedactionResponse'
          description: OK
      security:
      - accessCode:
        - user_data_redact
      summary: Deletes membership data for a user on an account.
      tags:
      - DataDeletion
      x-ds-methodname: redactIndividualMembershipData
      x-ds-method: redactIndividualMembershipData
      x-ds-service: Accounts
      x-ds-in-sdk: true
      x-codegen-request-body-name: requestModel
  /v2/organizations/{organizationId}/accounts/{accountId}/permissions:
    get:
      description: |+
        Returns the list of permission profiles in an account.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `permission_read`.

      operationId: Account_Accounts_GetPermissionProfilesV2
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID Guid
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
      security:
      - accessCode:
        - permission_read
      summary: Returns the list of permission profiles in an account.
      tags:
      - eSignUserManagement
      x-ds-methodname: getPermissions
      x-ds-method: getPermissions
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/accounts/{accountId}/groups:
    get:
      description: |
        Returns the list of groups in an account.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `group_read`.
      operationId: Account_Accounts_GetGroupsV2
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID Guid
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: Index of first item to include in the response. The default value
          is 0.
        in: query
        name: start
        schema:
          format: int32
          type: integer
      - description: Page size of the response. The default value is 20.
        in: query
        name: take
        schema:
          format: int32
          type: integer
      - description: Index of the last item to include in the response. Ignored if
          `take` parameter is specified.
        in: query
        name: end
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberGroupsResponse'
          description: OK
      security:
      - accessCode:
        - group_read
      summary: Returns the list of groups in an account.
      tags:
      - eSignUserManagement
      x-ds-methodname: getGroups
      x-ds-method: getGroups
      x-ds-service: Accounts
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/exports/user_list:
    get:
      description: |
        Returns a list of pending and completed export requests.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.
      operationId: OrganizationExport_OrganizationExport_Get
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationExportsResponse'
          description: OK
      security:
      - accessCode:
        - user_read
      summary: Returns a list of pending and completed export requests.
      tags:
      - UserExport
      x-ds-methodname: getUserListExports
      x-ds-method: getUserListExports
      x-ds-service: BulkExports
      x-ds-in-sdk: true
    post:
      description: "Create a user list export request.\n\nThis method initiates a\
        \ user list export request. You specify the type of export request as JSON\
        \ in the body of method, like this:\n\n``` json\n{\n\t\"type\": \"organization_memberships_export\"\
        \n}\n```\n\nThe export request type is one of three values:\n\n| Value   \
        \                                   | Description                        \
        \                                                                     |\n\
        | :----------------------------------------- | :------------------------------------------------------------------------------------------------------\
        \ |\n| `organization_memberships_export`          | Every user in every account\
        \ in the organization. Users in multiple accounts will appear more than once.\
        \ |\n| `organization_domain_users_export`         | All users of the reserved\
        \ domains.                                                               \
        \       |\n| `organization_external_memberships_export` | Users whose email\
        \ address domain is *not* linked to the organization.                    \
        \               |\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/):\
        \ `user_read`."
      operationId: OrganizationExport_OrganizationExport_Insert
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationExportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationExportResponse'
          description: OK
      security:
      - accessCode:
        - user_read
      summary: Creates a user list export request.
      tags:
      - UserExport
      x-ds-methodname: createUserListExport
      x-ds-method: createUserListExport
      x-ds-service: BulkExports
      x-ds-in-sdk: true
      x-codegen-request-body-name: request
  /v2/organizations/{organizationId}/exports/account_settings:
    get:
      description: |-
        Returns a list of pending and completed account settings export requests.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `account_read`.
      operationId: OrganizationExport_OrganizationExport_GetAccountCompare
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationExportsResponse'
          description: OK
      security:
      - accessCode:
        - account_read
      summary: Returns a list of pending and completed account settings export request.
      tags:
      - AccountSettingsExport
      x-ds-methodname: getAccountSettingsExports
      x-ds-method: getAccountSettingsExports
      x-ds-service: BulkExports
      x-ds-in-sdk: true
    post:
      description: "Creates a new account settings export request.\n\nTo learn more\
        \ about exporting account settings,\nsee [Account Settings Export][guide-export]\n\
        in the DocuSign Admin Guide.\n\nYou can export settings for up to 40 accounts\
        \ at a time.\n\nSpecify the accounts whose settings you are requesting as\
        \ JSON in the body of the request, like this:\n\n``` json\n{\n  \"accounts\"\
        :\t[\n  \t{ \"account_id\": \"9ca037f4-xxxx-xxxx-xxxx-212e57d4f22e\"},\n \
        \ \t{ \"account_id\": \"624e3e00-xxxx-xxxx-xxxx-43918c520dab\"}\n\n  ]\n}\n\
        ```\n\n[Required authentication scopes](/docs/admin-api/admin101/auth/): `account_write`.\n\
        \n### Related topics\n\n- [Account Settings import][guide-import] guide\n\
        - [Account Settings Export][guide-export] guide\n\n\n[guide-import]: https://support.docusign.com/s/document-item?bundleId=rrf1583359212854&topicId=nwl1583359167434.html\n\
        [guide-export]: https://support.docusign.com/s/document-item?bundleId=rrf1583359212854&topicId=kfj1583359164049.html"
      operationId: OrganizationExport_OrganizationExport_AccountCompare
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationAccountsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationExportResponse'
          description: OK
      security:
      - accessCode:
        - account_read
      summary: Creates a  new account settings export request.
      tags:
      - AccountSettingsExport
      x-ds-methodname: createAccountSettingsExport
      x-ds-method: createAccountSettingsExport
      x-ds-service: BulkExports
      x-ds-in-sdk: true
      x-codegen-request-body-name: request
  /v2/organizations/{organizationId}/exports/user_list/{exportId}:
    delete:
      description: |+
        Deletes a single user list export request.
        Use this method to delete pending or completed user export requests.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.

      operationId: OrganizationExport_OrganizationExport_DeleteByExportId
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The export ID GUID for the request.
        in: path
        name: exportId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
      security:
      - accessCode:
        - user_read
      summary: Deletes a single user list export request.
      tags:
      - UserExport
      x-ds-methodname: deleteUserListExport
      x-ds-method: deleteUserListExport
      x-ds-service: BulkExports
      x-ds-in-sdk: true
    get:
      description: |-
        Returns the results for single user list export request.

        Given an export ID, this method returns the results of a single user list export request.
        To get a list of all the export requests, use `getUserListExports`.

        Note that the `metadata_url` property of the response from `createUserListExport` is a read-to-use HTTP GET request to get the status.

        The results are available through a URL that
        you can access through the `results` property of the response.
        For example, to get the URL of the first result you might use
        `results[0].url`

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.
      operationId: OrganizationExport_OrganizationExport_GetByExportId
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The export ID GUID for the request.
        in: path
        name: exportId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationExportResponse'
          description: OK
      security:
      - accessCode:
        - user_read
      summary: Returns the results for single user list export request.
      tags:
      - UserExport
      x-ds-methodname: getUserListExport
      x-ds-method: getUserListExport
      x-ds-service: BulkExports
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/exports/account_settings/{exportId}:
    delete:
      description: |
        Deletes a single account settings export request.
        Any data associated with the request is also deleted.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `account_read`.
      operationId: OrganizationExport_OrganizationExport_DeleteByAccountSettingsExportId
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The export ID GUID for the request.
        in: path
        name: exportId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
      security:
      - accessCode:
        - account_read
      summary: Deletes a single account settings export request.
      tags:
      - AccountSettingsExport
      x-ds-methodname: deleteAccountSettingsExport
      x-ds-method: deleteAccountSettingsExport
      x-ds-service: BulkExports
      x-ds-in-sdk: true
    get:
      description: |-
        Returns the results for a single account settings export request.

        Given an export ID, this method returns the results of an account settings export request.
        To get a list of all the export requests, use `getAccountSettingsExports`.

        The results are available through a URL that
        you can access through the `results` property of the response.
        For example, to get the URL of first result you might use
        `results[0].url`

        The settings export is formatted like this:

        ``` json
        {
          "accounts": [
            {
              "account_id": "9ca037f4-xxxx-xxxx-xxxx-212e57d4f22e",
              "name": "The Happy Company",
              . . .
            },
            {
              "account_id": "624e3e00-xxxx-xxxx-xxxx-43918c520dab",
              "name": "LoanCo",
              . . .
            }
          ],
          "settings": [
            . . .
            {
              "category": "Signing",
              "name": "SignerCanSignOnMobile",
              "account_values": [
                {
                  "account_id": "9ca037f4-xxxx-xxxx-xxxx-212e57d4f22e",
                  "value": "true",
                  "rights": "editable"
                },
                {
                  "account_id": "624e3e00-xxxx-xxxx-xxxx-43918c520dab",
                  "value": "true",
                  "rights": "editable"
                }
              ]
            },
            . . .
          ]
        }

        ```

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `account_read`.
      operationId: OrganizationExport_OrganizationExport_GetAccountSettingsExportByExportId
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The export ID GUID for the request.
        in: path
        name: exportId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationExportResponse'
          description: OK
      security:
      - accessCode:
        - account_read
      summary: Returns the results for a single account settings export request.
      tags:
      - AccountSettingsExport
      x-ds-methodname: getAccountSettingsExport
      x-ds-method: getAccountSettingsExport
      x-ds-service: BulkExports
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/imports/account_settings:
    get:
      description: |-
        Returns the details and metadata for Bulk Account Settings Import requests in the organization.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `account_read`.
      operationId: OrganizationImport_OrganizationImportAccountSettings_Get
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationAccountSettingsImportResponse'
                type: array
          description: OK
      security:
      - accessCode:
        - account_read
      summary: Returns the details and metadata for Bulk Account Settings Import requests
        in the organization.
      tags:
      - AccountSettingsImport
      x-ds-methodname: getBulkAccountSettingsImports
      x-ds-method: getBulkAccountSettingsImports
      x-ds-service: BulkImports
      x-ds-in-sdk: true
    post:
      description: |
        Creates a new account settings import request.

        The request for this method consists of
        the contents of a CSV
        file.

        You can export your current settings as a CSV file with
        [AccountSettingsExport: createAccountSettingsExport](/docs/admin-api/reference/bulkoperations/accountsettingsexport/createaccountsettingsexport/)
        and use it as the basis
        of the changes you want to import.


        To learn more about the format
        of a settings CSV file, see
        [Preparing a CSV for account settings import][guide-import]
        in the DocuSign Admin Guide.

        You can import settings for up to 40 accounts at a time.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `account_write`.

        ### Related topics

        - [Account Settings import][guide-import] guide
        - [Account Settings Export][guide-export] guide

        [guide-import]: https://support.docusign.com/s/document-item?bundleId=rrf1583359212854&topicId=nwl1583359167434.html
        [guide-export]: https://support.docusign.com/s/document-item?bundleId=rrf1583359212854&topicId=kfj1583359164049.html
      operationId: OrganizationImport_OrganizationImportAccountSettings_Post
      parameters:
      - description: The organization ID GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationImport_OrganizationImportAccountSettings_Post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAccountSettingsImportResponse'
          description: OK
      security:
      - accessCode:
        - account_write
      summary: Creates a new account settings import request.
      tags:
      - AccountSettingsImport
      x-ds-methodname: addBulkAccountSettingsImport
      x-ds-method: addBulkAccountSettingsImport
      x-ds-service: BulkImports
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/imports/account_settings/{importId}:
    delete:
      description: |-
        Deletes a single account settings import request.
        Any data associated with the request is also deleted.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `account_write`.
      operationId: OrganizationImport_OrganizationImportAccountSettings_DeleteById
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The import ID GUID for the request.
        in: path
        name: importId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
      security:
      - accessCode:
        - account_write
      summary: Deletes a Bulk Account Settings Import request.
      tags:
      - AccountSettingsImport
      x-ds-methodname: deleteBulkAccountSettingsImport
      x-ds-method: deleteBulkAccountSettingsImport
      x-ds-service: BulkImports
      x-ds-in-sdk: true
    get:
      description: |
        Returns the details/metadata for a Bulk Account Settings Import request.

        Given an import ID, this method returns the results of an account settings import request.
        To get a list of all the import requests, use `getAccountSettingsImports`.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `account_read`.
      operationId: OrganizationImport_OrganizationImportAccountSettings_GetById
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The import ID GUID for the request.
        in: path
        name: importId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAccountSettingsImportResponse'
          description: OK
      security:
      - accessCode:
        - account_read
      summary: Returns the details/metadata for a Bulk Account Settings Import request.
      tags:
      - AccountSettingsImport
      x-ds-methodname: getBulkAccountSettingsImport
      x-ds-method: getBulkAccountSettingsImport
      x-ds-service: BulkImports
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/imports/bulk_users/add:
    post:
      description: |
        Creates a request to import *new* users.

        Your CSV import file is made up of a header row with the column headers and a row of user or account data for each user you want to add to an account. Only new users can be imported. Any changes to existing users will be ignored. To make changes to existing users, use [UserImport:updateBulkUserImports][imports].

        To ensure your CSV is properly formatted, use the
        [Sample Bulk Add CSV file](https://admin.docusign.com/static-resources/organization-user-import.csv)
         as a template. The following table describes the columns.



        | Column              | Required | Description                                                                                                                                                                                                                                                                                                                                                                                                         |
        | :------------------ | :------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
        | AccountID           | yes      | The API account ID for the account to which you want you add the user. You can find this ID in the Admin area for the account under **API and Keys.**                                                                                                                                                                                                                                                            |
        | AccountName         |          | The name of the user's account in your organization. The account name must match the account ID provided.                                                                                                                                                                                                                                                                                                           |
        | FirstName           | yes      | The user's first name.                                                                                                                                                                                                                                                                                                                                                                                              |
        | LastName            | yes      | The user's last name.                                                                                                                                                                                                                                                                                                                                                                                               |
        | UserEmail           | yes      | The user's complete email address.                                                                                                                                                                                                                                                                                                                                                                                  |
        | PermissionSet       | yes      | The user's permission set. The PermissionSet value must match an existing permission set for the account. This value is not case sensitive.                                                                                                                                                                                                                                                                         |
        | UserTitle           |          | The user's job title.                                                                                                                                                                                                                                                                                                                                                                                               |
        | CompanyName         |          | The user's company name.                                                                                                                                                                                                                                                                                                                                                                                            |
        | Group               |          | The user's assigned groups. The Group values must match existing Group names for the account. Additional Group columns can be added to the file to add users to more than one group. You do not need to add users to the Everyone group, since all new users are automatically added to that group.                                                                                                                 |
        | AddressLine1        |          | The user's address, first line.                                                                                                                                                                                                                                                                                                                                                                                     |
        | AddressLine2        |          | The user's address, second line.                                                                                                                                                                                                                                                                                                                                                                                    |
        | City                |          | The user's city name.                                                                                                                                                                                                                                                                                                                                                                                               |
        | StateRegionProvince |          | The user's regional location.                                                                                                                                                                                                                                                                                                                                                                                       |
        | PostalCode          |          | The user's postal code.                                                                                                                                                                                                                                                                                                                                                                                             |
        | Phone               |          | The user's phone number.                                                                                                                                                                                                                                                                                                                                                                                            |
        | Language            |          | The user's display language for their DocuSign account. Must be one of: <ul><li>Chinese Simplified: <code>zh_CN</code></li><li>Chinese Traditional: <code>zh_TW</code></li><li>Dutch: <code>nl</code></li><li>English: <code>en</code></li><li>French: <code>fr</code></li><li>German: <code>de</code></li><li>Italian: <code>it</code></li><li>Japanese: <code>ja</code></li><li>Korean: <code>ko</code></li><li>Portuguese: <code>pt</code></li><li>Portuguese Brazil: <code>pt_BR</code></li><li>Russian: <code>ru</code></li><li>Spanish: <code>es</code></li></ul>                                                                                                                                                                                                                                                                                                                                                            |
        | LoginPolicy         |          | The user's login policy. Valid values include the following: <ul> <li>Column left blank = The user is created with no policy assigned.</li> <li>FedAuthRequired = The user must log in with an Identity Provider.</li> <li>FedAuthBypass = The user may log in with an Identity Provider or their DocuSign username and password.</li> </ul> For more information on login policies, see [Setting User Login Policy](https://support.docusign.com/s/document-item?bundleId=rrf1583359212854&topicId=zah1583359147774.html). |
        | AutoActivate        |          | For domain users, new users can be activated automatically for domain accounts using SSO by setting the value to **true.** The user is activated automatically once the import is complete. Memberships activated in this way do not receive an activation email.                                                                                                                                                   |


        You can add up to 2,000 users to an account and include up to 50 accounts per import. The maximum number of users per import is 8,000.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.


        [imports]: /docs/admin-api/reference/bulkoperations/userimport/updatebulkuserimports/
      operationId: OrganizationImport_OrganizationImportUsers_Insert
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationImport_OrganizationImportAccountSettings_Post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationImportResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Creates a request to import new users into an account.
      tags:
      - UserImport
      x-ds-methodname: addBulkUserImport
      x-ds-method: addBulkUserImport
      x-ds-service: BulkImports
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/accounts/{accountId}/imports/bulk_users/add:
    post:
      description: |
        Import request for adding a user to a single account within the organization.
        This method lets you upload user information without requiring an AccountId column.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: OrganizationImport_OrganizationImportSingleAccountUsers_Insert
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID Guid
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationImport_OrganizationImportAccountSettings_Post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationImportResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Import request for adding a user to a single account within the organization.
      tags:
      - SingleAccountUserImport
      x-ds-methodname: createBulkImportSingleAccountAddUsersRequest
      x-ds-method: createBulkImportSingleAccountAddUsersRequest
      x-ds-service: BulkImports
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/imports/bulk_users/update:
    post:
      description: "Bulk updates information for existing users.\n\nYour CSV import\
        \ file is made up of a header row with the column headers and a row of user\
        \ or account data for each user you want to add to an account. \n\n\n**Update\
        \ limit:** You can update up to 2,000 users on an account and include up to\
        \ 50 accounts per import. The maximum number of updated users per import is\
        \ 8,000.\n\nThis method requires the following HTTP headers:\n\n| Header |\
        \ Value |\n| :--- |  :--- |\n| Content-Type | `text/csv` |\n| Content-Disposition\
        \ |  `filename=filename.csv` |\n\n\n\nTo ensure your CSV is properly formatted,\
        \ use the\n[Sample Bulk Update CSV file](https://admin.docusign.com/static-resources/organization-user-update-import.csv)\n\
        \ as a template. The following table describes the columns.\n\nNote that the\
        \ columns for bulk adding users and bulk update users are slightly different.\n\
        The update CSV file requires an `APIUserName` column, and does not have an\
        \ `AutoActivate` column.\n\n\n\n| Column              | Required | Description\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                 |\n| :------------------ | :------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\
        \ |\n| AccountID           | yes      | The 32-character API account ID of\
        \ the user's account in your organization. You can find this value in the\
        \ API and Keys section of the Admin area of the account.                 \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                    |\n| AccountName         |          | The name of the\
        \ user's account in your organization. The account name must match the account\
        \ ID provided.                                                           \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                        |\n| FirstName           | yes      | The user's\
        \ first name.                                                            \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                  |\n| LastName            | yes      | The\
        \ user's last name.                                                      \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                         |\n| UserEmail           | yes \
        \     | The user's complete email address.                               \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                   |\n| PermissionSet   \
        \    | yes      | The user's permission set. The PermissionSet value must\
        \ match an existing permission set for the account. This value is not case\
        \ sensitive.                                                             \
        \                                                                        \
        \                                                                        \
        \                                                            |\n| UserTitle\
        \           |          | The user's job title.                           \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                    |\n|\
        \ CompanyName         |          | The user's company name.              \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \      |\n| Group               |          | The user's assigned groups. The\
        \ Group values must match existing Group names for the account. Additional\
        \ Group columns can be added to the file to add users to more than one group.\
        \ You do not need to add users to the Everyone group, since all new users\
        \ are automatically added to that group.                                 \
        \                                                                        \
        \        |\n| AddressLine1        |          | The user's address, first line.\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \             |\n| AddressLine2        |          | The user's address, second\
        \ line.                                                                  \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                  |\n| City                |          | The user's city name.\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                       |\n| StateRegionProvince |          | The user's regional\
        \ location.                                                              \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                         |\n| PostalCode          |          | The user's\
        \ postal code.                                                           \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                  |\n| Phone               |          | The\
        \ user's phone number.                                                   \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                         |\n| Language            |     \
        \     | The user's display language for their DocuSign account. Must be one\
        \ of: <ul><li>Chinese Simplified: <code>zh_CN</code></li><li>Chinese Traditional:\
        \ <code>zh_TW</code></li><li>Dutch: <code>nl</code></li><li>English: <code>en</code></li><li>French:\
        \ <code>fr</code></li><li>German: <code>de</code></li><li>Italian: <code>it</code></li><li>Japanese:\
        \ <code>ja</code></li><li>Korean: <code>ko</code></li><li>Portuguese: <code>pt</code></li><li>Portuguese\
        \ Brazil: <code>pt_BR</code></li><li>Russian: <code>ru</code></li><li>Spanish:\
        \ <code>es</code></li></ul>                                              \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \              |\n| LoginPolicy         |          | The user's login policy.\
        \ Valid values include the following: <ul> <li>Column left blank = The user\
        \ is created with no policy assigned.</li> <li>FedAuthRequired = The user\
        \ must log in with an Identity Provider.</li> <li>FedAuthBypass = The user\
        \ may log in with an Identity Provider or their DocuSign username and password.</li>\
        \ </ul> For more information on login policies, see [Setting User Login Policy](https://support.docusign.com/s/document-item?bundleId=rrf1583359212854&topicId=zah1583359147774.html).\
        \ |\n| AutoActivate        |          | For domain users, new users can be\
        \ activated automatically for domain accounts using SSO by setting the value\
        \ to **true.** The user is activated automatically once the import is complete.\
        \ Memberships activated in this way do not receive an activation email.  \
        \                                                                        \
        \                                                                        \
        \ |\n\n\n\n## Updating user email addresses\n\nChanging a user's email address\
        \ should be done carefully. The user's email address is used to log in to\
        \ DocuSign and receive documents to sign from others.\nOnce changed, existing\
        \ documents that were sent or received:\n\n- Will still appear in the user's\
        \ documents list.\n- Notifications about these documents will be sent to the\
        \ new email address. If someone sends a new document to the old email address:\n\
        - DocuSign will send a notification to the old address.\n- It will not appear\
        \ in the documents list of the account.\n\nThis change of email address will\
        \ be applied to all of the user's account memberships.\n\n[Required authentication\
        \ scopes](/docs/admin-api/admin101/auth/): `user_write`."
      operationId: OrganizationImport_OrganizationImportUsers_Update
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationImport_OrganizationImportAccountSettings_Post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationImportResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Bulk updates information for existing users.
      tags:
      - UserImport
      x-ds-methodname: updateBulkUserImports
      x-ds-method: updateBulkUserImports
      x-ds-service: BulkImports
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/accounts/{accountId}/imports/bulk_users/update:
    post:
      description: |+
        Import request for updating users for a single account
        within the organization.

        This method lets you upload user information without requiring an `AccountId` column.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.

      operationId: OrganizationImport_OrganizationImportSingleAccountUsers_Update
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID Guid
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationImport_OrganizationImportAccountSettings_Post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationImportResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: |-
        Import request for updating users for a single account
        within the organization.
      tags:
      - SingleAccountUserImport
      x-ds-methodname: createBulkImportSingleAccountUpdateUsersRequest
      x-ds-method: createBulkImportSingleAccountUpdateUsersRequest
      x-ds-service: BulkImports
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/imports/bulk_users/close:
    post:
      description: |-
        Creates a request to close the accounts of existing users.

        Given a CSV list of users, close their accounts.

        Your CSV import file is made up of a header row with the column headers and a row of user or account data for each user whose account you want to close.

        To ensure your CSV is properly formatted, use the
        [Sample Bulk Update CSV file](https://admin.docusign.com/static-resources/organization-user-update-import.csv)
         as a template. The following table describes the columns.




        | Column              | Required | Description                                                                                                                                                                                                                                                                                                                                                                                                         |
        | :------------------ | :------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
        | AccountID           | yes      | The 32-character API account ID of the user's account in your organization. You can find this value in the API and Keys section of the Admin area of the account.                                                                                                                                                                                                                                                             |
        | AccountName         |          | The name of the user's account in your organization. The account name must match the account ID provided.                                                                                                                                                                                                                                                                                                           |
        | FirstName           | yes      | The user's first name.                                                                                                                                                                                                                                                                                                                                                                                              |
        | LastName            | yes      | The user's last name.                                                                                                                                                                                                                                                                                                                                                                                               |
        | UserEmail           | yes      | The user's complete email address.                                                                                                                                                                                                                                                                                                                                                                                  |
        | PermissionSet       | yes      | The user's permission set. The PermissionSet value must match an existing permission set for the account. This value is not case sensitive.                                                                                                                                                                                                                                                                         |

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: OrganizationImport_OrganizationImportUsers_Close
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationImport_OrganizationImportAccountSettings_Post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationImportResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Creates a request to close the accounts of existing users.
      tags:
      - UserImport
      x-ds-methodname: closeBulkUserImportRequest
      x-ds-method: closeBulkUserImportRequest
      x-ds-service: BulkImports
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/imports/bulk_users/close_external:
    post:
      description: |
        Closes external memberships.

        External memberships are users who have an email address at a verified domain but do not belong to the organization.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: OrganizationImport_OrganizationImportUsers_CloseExternal
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationImportResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Closes external memberships.
      tags:
      - UserImport
      x-ds-methodname: closeBulkExternalUserImportRequest
      x-ds-method: closeBulkExternalUserImportRequest
      x-ds-service: BulkImports
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/imports/bulk_users:
    get:
      description: |-
        Gets a list of all of the user import requests.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.
      operationId: OrganizationImport_OrganizationImportUsers_Get
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationImportsResponse'
          description: OK
      security:
      - accessCode:
        - user_read
      summary: Gets a list of all of the user import requests.
      tags:
      - UserImport
      x-ds-methodname: getBulkUserImportRequests
      x-ds-method: getBulkUserImportRequests
      x-ds-service: BulkImports
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/imports/bulk_users/{importId}:
    delete:
      description: |-
        Deletes a specific import request and its results.

        To delete a user, see [closeBulkUserImportRequest](/docs/admin-api/reference/bulkoperations/userimport/closebulkuserimportrequest/).

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: OrganizationImport_OrganizationImportUsers_DeleteById
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The import ID GUID for the request.
        in: path
        name: importId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Deletes a specific user import request.
      tags:
      - UserImport
      x-ds-methodname: deleteBulkUserImport
      x-ds-method: deleteBulkUserImport
      x-ds-service: BulkImports
      x-ds-in-sdk: true
    get:
      description: |-
        Returns the details of a single user import request.

        Use this method to check the status of the request by looking at the `status` property of the response.
        Once the status becomes `completed` (or fails), use this method to get the details.

        To get a list of all of the user import requests, use `getBulkUserImportRequests`.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.
      operationId: OrganizationImport_OrganizationImportUsers_GetById
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The import ID GUID for the request.
        in: path
        name: importId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationImportResponse'
          description: OK
      security:
      - accessCode:
        - user_read
      summary: Returns the details of a single user import request.
      tags:
      - UserImport
      x-ds-methodname: getBulkUserImportRequest
      x-ds-method: getBulkUserImportRequest
      x-ds-service: BulkImports
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/imports/bulk_users/{importId}/results_csv:
    get:
      description: |
        Returns the contents of the CSV file
        associated with a user import request.

        The results have an additional column,
        `ProcessingResults`,
        that describes the results of importing that row.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.
      operationId: OrganizationImport_OrganizationImportUsers_GetCSVResults
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The import ID GUID for the request.
        in: path
        name: importId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/csv:
              schema:
                type: object
          description: OK
      security:
      - accessCode:
        - user_read
      summary: |-
        Given the ID of a user import request,
        return the CSV file that was imported.
      tags:
      - UserImport
      x-ds-methodname: getBulkUserImportCSV
      x-ds-method: getBulkUserImportCSV
      x-ds-service: BulkImports
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/identity_providers:
    get:
      description: |-
        Returns the list of identity providers for an organization.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `identity_provider_read`.
      operationId: Organization_GetIdentityProviders
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvidersResponse'
          description: OK
      security:
      - accessCode:
        - identity_provider_read
      summary: Returns the list of identity providers for an organization.
      tags:
      - IdentityProviders
      x-ds-methodname: getIdentityProviders
      x-ds-method: getIdentityProviders
      x-ds-service: IdentityProviders
      x-ds-in-sdk: true
  /v2/data_redaction/organizations/{organizationId}/user:
    post:
      description: "Deletes data for one or more of a user's account memberships.\n\
        \nTo call this endpoint: \n* You must be an organization administrator (or\
        \ delegated administrator) with permission to manage the specified accounts\
        \ or the user's email domain.\n* The user must have been closed for at least\
        \ 24 hours.\n\n**Note:** After a user's data is deleted for every account\
        \ to which they belong, their user-level data will automatically be deleted.\n\
        \n[Required authentication scopes](/docs/admin-api/admin101/auth/): `user_data_redact`."
      operationId: DataRedaction_RedactIndividualUserData
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualUserDataRedactionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualUserDataRedactionResponse'
          description: OK
      security:
      - accessCode:
        - user_data_redact
      summary: Deletes data for one or more of a user's account memberships.
      tags:
      - DataDeletion
      x-ds-methodname: redactIndividualUserData
      x-ds-method: redactIndividualUserData
      x-ds-service: Organizations
      x-ds-in-sdk: true
      x-codegen-request-body-name: requestModel
  /v2/organizations/{organizationId}/reserved_domains:
    get:
      description: |-
        Returns the list of reserved domains for the organization.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `domain_read`.
      operationId: Organization_GetReservedDomains
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsResponse'
          description: OK
      security:
      - accessCode:
        - domain_read
      summary: Returns the list of reserved domains for the organization.
      tags:
      - ReservedDomains
      x-ds-methodname: getReservedDomains
      x-ds-method: getReservedDomains
      x-ds-service: ReservedDomains
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/users/profiles:
    post:
      description: |-
        Updates a user's information.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: User_Users_UpdateV2
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUsersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersUpdateResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Updates a user's information.
      tags:
      - eSignUserManagement
      x-ds-methodname: updateUser
      x-ds-method: updateUser
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: request
  /v2/organizations/{organizationId}/users/email_addresses:
    post:
      description: |
        Updates a user's email address.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: User_Users_UpdateEmailAddressesV2
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUsersEmailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersUpdateResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Updates a user's email address.
      tags:
      - Users
      x-ds-methodname: updateEmailAddress
      x-ds-method: updateEmailAddress
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: request
  /v2/organizations/{organizationId}/users/{userId}/accounts:
    delete:
      description: |-
        Closes a user's memberships.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.

        This method requires user authentication. It will fail with an [application access token](/docs/admin-api/admin101/application-auth/).
      operationId: User_Users_CloseMembershipsV2
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The user ID Guid
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMembershipsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMembershipsResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Closes a user's memberships.
      tags:
      - eSignUserManagement
      x-ds-methodname: closeMemberships
      x-ds-method: closeMemberships
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: request
  /v2/organizations/{organizationId}/users:
    get:
      description: |-
        Returns information about the users in an organization.

        You must include at least one of the following query parameters in the request:

        - `account_id`: The ID of an account associated with the organization.
        - `organization_reserved_domain_id`: The ID of one of the organization's reserved domains.
        - `email`: An email address associated with the users that you want to return.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.
      operationId: OrganizationUser_OrganizationUsers_GetV2
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: Index of first item to include in the response. The default value
          is 0.
        in: query
        name: start
        schema:
          format: int32
          type: integer
      - description: Page size of the response. The default value is 20.
        in: query
        name: take
        schema:
          format: int32
          type: integer
      - description: Index of the last item to include in the response. Ignored if
          `take` parameter is specified.
        in: query
        name: end
        schema:
          format: int32
          type: integer
      - description: "Email address of the desired user. At least one of `email`,\
          \ `account_id` or `organization_reserved_domain_id` must be specified."
        in: query
        name: email
        schema:
          type: string
      - description: Selects users by pattern matching on the user's email address
        in: query
        name: email_user_name_like
        schema:
          type: string
      - description: Status.
        in: query
        name: status
        schema:
          type: string
      - description: |
          The user's membership status. One of:

          - `activation_required`
          - `activation_sent`
          - `active`
          - `closed`
          - `disabled`
        in: query
        name: membership_status
        schema:
          type: string
      - description: "Select users that are members of the specified account. At least\
          \ one of `email`, `account_id` or `organization_reserved_domain_id` must\
          \ be specified."
        in: query
        name: account_id
        schema:
          format: uuid
          type: string
      - description: "Select users that are in the specified domain. At least one\
          \ of `email`, `account_id` or `organization_reserved_domain_id` must be\
          \ specified."
        in: query
        name: organization_reserved_domain_id
        schema:
          format: uuid
          type: string
      - description: Select users whose data have been modified since the date specified.
          `account_id` or `organization_reserved_domain_id` must be specified.
        in: query
        name: last_modified_since
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUsersResponse'
          description: OK
      security:
      - accessCode:
        - user_read
      summary: Returns information about the users in an organization.
      tags:
      - Users
      x-ds-methodname: getUsers
      x-ds-method: getUsers
      x-ds-service: Users
      x-ds-in-sdk: true
    post:
      description: |
        Creates a new user.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: OrganizationUser_Users_AddV2
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewUserResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Creates a new user.
      tags:
      - eSignUserManagement
      x-ds-methodname: createUser
      x-ds-method: createUser
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: request
  /v2/organizations/{organizationId}/users/{userId}/memberships/{membershipId}:
    post:
      description: |
        Activates user memberships.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: OrganizationUser_Users_ActivateMembershipV2
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The user ID Guid
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
      - description: The membership ID GUID.
        in: path
        name: membershipId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForceActivateMembershipRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Activates user memberships.
      tags:
      - eSignUserManagement
      x-ds-methodname: activateMembership
      x-ds-method: activateMembership
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: request
  /v2/organizations/{organizationId}/users/profile:
    get:
      description: |+
        Returns historical information about users with a specific email address.
        **Note:** The `email` query parameter is _required_.


        To get a list of users in an organization,
        use [Users: getUsers](/docs/admin-api/reference/usermanagement/users/getusers/)
        instead.

        For example, the following request gets information about
        accounts that use `max@example.net` as an email address:


        ```json
        GET /Management/v2/organizations/96e994fa-xxxx-xxxx-xxxx-c5fe9d1ccd10/users/profile?email=max@example.net

        {
          "users": [
            {
              "id": "6b67a1ee-xxxx-xxxx-xxxx-385763624163",
              "site_id": 1,
              "site_name": "Monadnock",
              "user_name": "Max Example",
              "first_name": "Max",
              "last_name": "Example",
              "user_status": "active",
              "default_account_id": "f636f297-xxxx-xxxx-xxxx-8e7a14715950",
              "default_account_name": "BizCo",
              "is_organization_admin": false,
              "created_on": "2019-04-01T22:11:56.457",
              "memberships": [
                {
                  "email": "max@example.net",
                  "account_id": "624e3e00-xxxx-xxxx-xxxx-43918c520dab",
                  "external_account_id": "17xxxxx1",
                  "account_name": "LoanCo",
                  "is_external_account": false,
                  "status": "active",
                  "permission_profile": { },
                  "created_on": "2019-04-01T22:11:56.457",
                  "groups": [ ],
                  "is_admin": false
                },
                {
                  "email": "max@example.net",
                  "account_id": "f636f297-xxxx-xxxx-xxxx-8e7a14715950",
                  "external_account_id": "25xxxxx0",
                  "account_name": "BizCo",
                  "is_external_account": true,
                  "status": "active",
                  "permission_profile": { },
                  "created_on": "2021-07-07T15:10:51.96",
                  "groups": [ ],
                  "is_admin": false
                },
                {
                  "email": "max@example.net",
                  "account_id": "6aed3a52-xxxx-xxxx-xxxx-e89988167cfd",
                  "external_account_id": "11xxxxx1",
                  "account_name": "SleepCo",
                  "is_external_account": true,
                  "status": "closed",
                  "permission_profile": { },
                  "created_on": "2021-07-11T12:40:44.26",
                  "groups": [],
                  "is_admin": true,
                  "closed_on": "2021-07-13T08:40:51.8"
                }
              ],
              "identities": [],
              "device_verification_enabled": false
            }
          ]
        }
        ```

        The response includes up to the first 20 users modified in the last 10 days.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.




      operationId: OrganizationUser_OrganizationUsers_GetProfileV2
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: |-
          The email address associated with the users you want to retrieve.

          **Note:** This property is required.
        in: query
        name: email
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDrilldownResponse'
          description: OK
      security:
      - accessCode:
        - user_read
      summary: |
        Returns historical information about users with a specific email address.
      tags:
      - eSignUserManagement
      x-ds-methodname: getUserProfiles
      x-ds-method: getUserProfiles
      x-ds-service: Users
      x-ds-in-sdk: true
  /v2/organizations/{organizationId}/users/{userId}/identities:
    delete:
      description: |
        Deletes user identities.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: OrganizationUser_DeleteIdentitiesV2
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The user ID Guid
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserIdentityRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Deletes user identities.
      tags:
      - eSignUserManagement
      x-ds-methodname: deleteIdentities
      x-ds-method: deleteIdentities
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: requestModel
  /v2/organizations/{organizationId}/accounts/{accountId}/users:
    post:
      description: |+
        Adds users to an account.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.

      operationId: OrganizationUser_OrganizationUsers_PostAccountUsersV2
      parameters:
      - description: The organization ID Guid
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID Guid
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAccountUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewUserResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Adds users to an account.
      tags:
      - eSignUserManagement
      x-ds-methodname: addUsers
      x-ds-method: addUsers
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: request
  /v2.1/organizations/{organizationId}/accounts/{accountId}/dsgroups:
    get:
      description: |-
        Returns a list of DSGroups.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.
      operationId: DocuSignGroupsv21_GetDSGroups_V2_1
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID GUID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: Start page of DSGroups.
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Page size of DSGroups.
        in: query
        name: page_size
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSGroupListResponse'
          description: OK
      security:
      - accessCode:
        - user_read
      summary: Returns a list of DSGroups.
      tags:
      - MultiProductUserManagement
      x-ds-methodname: getDSGroups
      x-ds-method: getDSGroups
      x-ds-service: DSGroups
      x-ds-in-sdk: true
    post:
      description: |-
        Creates a new DSGroup.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: DocuSignGroupsv21_AddDSGroup_V2_1
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID GUID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DSGroupAddRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSGroupResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Creates a new DSGroup.
      tags:
      - MultiProductUserManagement
      x-ds-methodname: addDSGroup
      x-ds-method: addDSGroup
      x-ds-service: DSGroups
      x-ds-in-sdk: true
      x-codegen-request-body-name: addRequest
  /v2.1/organizations/{organizationId}/accounts/{accountId}/dsgroups/{dsGroupId}:
    delete:
      description: |-
        Deletes a DSGroup.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: DocuSignGroupsv21_DeleteDSGroup_V2_1
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID GUID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: The DSGroup's GUID.
        in: path
        name: dsGroupId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - accessCode:
        - user_write
      summary: Deletes a DSGroup.
      tags:
      - MultiProductUserManagement
      x-ds-methodname: deleteDSGroup
      x-ds-method: deleteDSGroup
      x-ds-service: DSGroups
      x-ds-in-sdk: true
    get:
      description: |-
        Returns details about a single DSGroup.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.
      operationId: DocuSignGroupsv21_GetDSGroup_V2_1
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID GUID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: The DSGroup's ID GUID
        in: path
        name: dsGroupId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSGroupResponse'
          description: OK
      security:
      - accessCode:
        - user_read
      summary: Returns details about a single DSGroup.
      tags:
      - MultiProductUserManagement
      x-ds-methodname: getDSGroup
      x-ds-method: getDSGroup
      x-ds-service: DSGroups
      x-ds-in-sdk: true
  /v2.1/organizations/{organizationId}/accounts/{accountId}/dsgroups/{dsGroupId}/users:
    delete:
      description: |-
        Removes a list of users from a DSGroup. In the request body, you can specify users by ID or email address. If both parameters are included, the email address parameter will be ignored.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: DocuSignGroupsv21_RemoveDSGroupUsers_V2_1
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID GUID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: The DSGroup's GUID.
        in: path
        name: dsGroupId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DSGroupUsersRemoveRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveDSGroupUsersResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Removes a list of users from a DSGroup.
      tags:
      - MultiProductUserManagement
      x-ds-methodname: removeDSGroupUsers
      x-ds-method: removeDSGroupUsers
      x-ds-service: DSGroups
      x-ds-in-sdk: true
      x-codegen-request-body-name: dSGroupUsersRemoveRequest
    get:
      description: |-
        Gets a list of users in a DSGroup.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.
      operationId: DocuSignGroupsv21_GetDSGroupUsers_V2_1
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID GUID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: The DSGroup's GUID.
        in: path
        name: dsGroupId
        required: true
        schema:
          format: uuid
          type: string
      - description: |
          Start page of DSGroups.
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Page size of DSGroups.
        in: query
        name: page_size
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSGroupAndUsersResponse'
          description: OK
      security:
      - accessCode:
        - user_read
      summary: Gets a list of users in a DSGroup.
      tags:
      - MultiProductUserManagement
      x-ds-methodname: getDSGroupUsers
      x-ds-method: getDSGroupUsers
      x-ds-service: DSGroups
      x-ds-in-sdk: true
    post:
      description: |-
        Adds a list of users to a DSGroup.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: DocuSignGroupsv21_AddDSGroupUsers_V2_1
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID GUID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: The DSGroup's GUID.
        in: path
        name: dsGroupId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DSGroupUsersAddRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddDSGroupAndUsersResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Adds a list of users to a DSGroup.
      tags:
      - MultiProductUserManagement
      x-ds-methodname: addDSGroupUsers
      x-ds-method: addDSGroupUsers
      x-ds-service: DSGroups
      x-ds-in-sdk: true
      x-codegen-request-body-name: dSGroupUsersAddRequest
  /v2.1/organizations/{organizationId}/accounts/{accountId}/products/permission_profiles:
    get:
      description: |-
        Gets products associated with the account and the available permission profiles.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.
      operationId: OrganizationProductPermissionProfile_GetProductPermissionProfiles
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID GUID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPermissionProfilesResponse'
          description: OK
      security:
      - accessCode:
        - user_read
      summary: Gets products associated with the account and the available permission
        profiles.
      tags:
      - MultiProductUserManagement
      x-ds-methodname: getProductPermissionProfiles
      x-ds-method: getProductPermissionProfiles
      x-ds-service: ProductPermissionProfiles
      x-ds-in-sdk: true
  /v2.1/organizations/{organizationId}/accounts/{accountId}/products/users/{userId}/permission_profiles:
    get:
      description: |-
        Retrieves a list of a user's permission profiles for each account's product. The user is specified by the ID provided in the `userId` path parameter.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.
      operationId: OrganizationProductPermissionProfile_GetUserProductPermissionProfiles
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID GUID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: The user ID GUID.
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPermissionProfilesResponse'
          description: OK
      security:
      - accessCode:
        - user_read
      summary: Retrieves a user's product permission profiles by user ID.
      tags:
      - MultiProductUserManagement
      x-ds-methodname: getUserProductPermissionProfiles
      x-ds-method: getUserProductPermissionProfiles
      x-ds-service: ProductPermissionProfiles
      x-ds-in-sdk: true
    post:
      description: |-
        Sets permission profiles for one or more products for a given user. The user is specified by the `userId` path parameter.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: OrganizationProductPermissionProfile_PostUserProductPermissionProfiles
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID GUID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: The user ID GUID.
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPermissionProfilesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProductPermissionProfilesResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Assigns permission profiles for a user by user ID.
      tags:
      - MultiProductUserManagement
      x-ds-methodname: addUserProductPermissionProfiles
      x-ds-method: addUserProductPermissionProfiles
      x-ds-service: ProductPermissionProfiles
      x-ds-in-sdk: true
      x-codegen-request-body-name: productPermissionProfilesRequest
  /v2.1/organizations/{organizationId}/accounts/{accountId}/users:
    post:
      description: |-
        Creates and updates a multi-product user.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: OrganizationUser_OrganizationUsers_PostAccountUsersV2_1
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID GUID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMultiProductUserAddRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddUserResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Creates and updates a multi-product user.
      tags:
      - MultiProductUserManagement
      x-ds-methodname: addOrUpdateUser
      x-ds-method: addOrUpdateUser
      x-ds-service: Users
      x-ds-in-sdk: true
      x-codegen-request-body-name: request
  /v2.1/organizations/{organizationId}/users/dsprofile:
    get:
      description: |-
        Gets information about a user specified by the `email` query parameter.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.
      operationId: OrganizationUser_OrganizationUsers_GetDSProfiles
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: |-
          The email address of the user.

          **Note:** This property is required.
        in: query
        name: email
        schema:
          type: string
      - description: "When **true,** sorts the results in ascending order by account\
          \ name."
        in: query
        name: sort
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDrilldownResponse'
          description: OK
      security:
      - accessCode:
        - user_read
      summary: Retrieves the DS profile for a user specified by email address.
      tags:
      - MultiProductUserManagement
      x-ds-methodname: getUserDSProfilesByEmail
      x-ds-method: getUserDSProfilesByEmail
      x-ds-service: Users
      x-ds-in-sdk: true
  /v2.1/organizations/{organizationId}/users/{userId}/dsprofile:
    get:
      description: |-
        Gets information about a user specified by the `userId` query parameter.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.
      operationId: OrganizationUser_OrganizationUsers_GetDSProfileByUserId
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The user ID GUID.
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
      - description: "When **true,** sorts the results in ascending order by account\
          \ name."
        in: query
        name: sort
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDrilldownResponse'
          description: OK
      security:
      - accessCode:
        - user_read
      summary: Retrieves the DS profile for a user specified by ID.
      tags:
      - MultiProductUserManagement
      x-ds-methodname: getUserDSProfile
      x-ds-method: getUserDSProfile
      x-ds-service: Users
      x-ds-in-sdk: true
  /v2.1/organizations/{organizationId}/accounts/{accountId}/products/users:
    delete:
      description: |-
        Revokes a specified user's access to one or more products.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: OrganizationProductPermissionProfile_RemoveUserProducts
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID GUID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProductProfileDeleteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveUserProductsResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Revokes a user's access to one or more products.
      tags:
      - MultiProductUserManagement
      x-ds-methodname: removeUserProductPermission
      x-ds-method: removeUserProductPermission
      x-ds-service: ProductPermissionProfiles
      x-ds-in-sdk: true
      x-codegen-request-body-name: userProductPermissionProfilesRequest
  /v2.1/organizations/{organizationId}/accounts/{accountId}/products/permission_profiles/users:
    get:
      description: |-
        Retrieves a list of a user's permission profiles for each account's product. The user is specified by the email address provided in the `email` query parameter.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_read`.
      operationId: OrganizationProductPermissionProfile_GetUserProductPermissionProfilesByEmail
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID GUID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      - description: |-
          The email address of the user.

          **Note:** This property is required.
        in: query
        name: email
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProductPermissionProfilesResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Retrieves a user's product permission profiles by email address.
      tags:
      - MultiProductUserManagement
      x-ds-methodname: getUserProductPermissionProfilesByEmail
      x-ds-method: getUserProductPermissionProfilesByEmail
      x-ds-service: ProductPermissionProfiles
      x-ds-in-sdk: true
    post:
      description: |-
        Sets permission profiles for one or more products for a given user. The user is specified by the `email` property in the request body.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `user_write`.
      operationId: OrganizationProductPermissionProfile_PostUserProductPermissionProfilesByEmail
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The account ID GUID.
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProductPermissionProfilesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProductPermissionProfilesResponse'
          description: OK
      security:
      - accessCode:
        - user_write
      summary: Assigns permission profiles for a user by email address.
      tags:
      - MultiProductUserManagement
      x-ds-methodname: addUserProductPermissionProfilesByEmail
      x-ds-method: addUserProductPermissionProfilesByEmail
      x-ds-service: ProductPermissionProfiles
      x-ds-in-sdk: true
      x-codegen-request-body-name: userProductPermissionProfilesRequest
  /v1/organizations/{organizationId}/assetGroups/accounts:
    get:
      description: |-
        Returns a list of asset group accounts for an organization.

        An asset group is a set of modules, products, plans, and charges purchased for your organization. An asset group account is an account that has been linked to an asset group.

        To call this endpoint:
        * You must be an administrator for the specified organization.

        [Required authentication scopes](/docs/admin-api/admin101/auth/): `asset_group_account_read`.
      operationId: OrganizationProvisionAssetGroup_GetAssetGroupAccountsByOrg
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: "When **true,** only compliant accounts are returned and account\
          \ responses do not include the `compliant` field. The default value is **false.**"
        in: query
        name: compliant
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetGroupAccountsResponse'
          description: OK
      security:
      - accessCode:
        - asset_group_account_read
      summary: Get asset group accounts for an organization.
      tags:
      - AccountCloning
      x-ds-methodname: getAssetGroupAccounts
      x-ds-method: getAssetGroupAccounts
      x-ds-service: ProvisionAssetGroup
      x-ds-in-sdk: true
  /v1/organizations/{organizationId}/assetGroups/accountClone:
    post:
      description: "Clones an existing DocuSign account. Cloning an account copies\
        \ the plan items and eSignature settings. Users, templates, and permission\
        \ profiles are _not_ copied into the target account. The new account will\
        \ linked to the same organization.\n\nIn the request body, specify the source\
        \ account you are cloning by its ID. You can get the IDs for your organization's\
        \ asset group accounts using the [getAssetGroupAccounts](/docs/admin-api/reference/accountprovisioning/accountcloning/getassetgroupaccounts/)\
        \ endpoint. \n\nYou also need to specify information about the new target\
        \ account, including the name, location, and administrator. To set the location,\
        \ provide either the `countryCode` or `region` properties. (If both are specified,\
        \ the `region` value will be used.)\n\nThe request body looks like this:\n\
        ```\n{\n    \"sourceAccount\": {\n        \"id\": \"624e3e00-xxxx-xxxx-xxxx-43918c520dab\"\
        \n    },\n    \"targetAccount\": {\n        \"name\": \"My Cloned Account\"\
        ,\n        \"admin\": {\n            \"firstName\": \"Francis\",\n       \
        \     \"lastName\": \"Beagle\",\n            \"email\": \"francis@example.com\"\
        \n        },\n        \"region\": \"NA\"\n    }\n}\n```\n\nTo call this endpoint:\n\
        * You must be an administrator for the specified organization.\n* The source\
        \ account must be on the same plan as your contract.\n* The source account\
        \ must be an asset group account. An asset group is a set of modules, products,\
        \ plans, and charges purchased for your organization. An asset group account\
        \ is an account that has been linked to an asset group.\n\n[Required scopes](/docs/admin-api/admin101/auth/):\
        \ `asset_group_account_clone_write`."
      operationId: OrganizationProvisionAssetGroup_CloneAssetGroupAccount
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetGroupAccountClone'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetGroupAccountClone'
          description: OK
      security:
      - accessCode:
        - asset_group_account_clone_write
      summary: Clone an existing DocuSign account.
      tags:
      - AccountCloning
      x-ds-methodname: cloneAssetGroupAccount
      x-ds-method: cloneAssetGroupAccount
      x-ds-service: ProvisionAssetGroup
      x-ds-in-sdk: true
      x-codegen-request-body-name: request
  /v1/organizations/{organizationId}/assetGroups/accountClones:
    get:
      description: |-
        Retrieves all the cloned accounts for an organization.

        To call this endpoint:
        * You must be an administrator for the specified organization.

        [Required scopes](/docs/admin-api/admin101/auth/): `asset_group_account_clone_read`.
      operationId: OrganizationProvisionAssetGroup_GetAssetGroupAccountClonesByOrgId
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: Use this parameter to retrieve only account clones that were
          created on or after a specified date.
        in: query
        name: since_updated_date
        schema:
          format: date-time
          type: string
      - description: "When **true,** include additional details for the asset group\
          \ account clones. The default value is **false.**"
        in: query
        name: include_details
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetGroupAccountClones'
          description: OK
      security:
      - accessCode:
        - asset_group_account_clone_read
      summary: Gets all asset group account clones for an organization.
      tags:
      - AccountCloning
      x-ds-methodname: getAssetGroupAccountClonesByOrgId
      x-ds-method: getAssetGroupAccountClonesByOrgId
      x-ds-service: ProvisionAssetGroup
      x-ds-in-sdk: true
  /v1/organizations/{organizationId}/assetGroups/{assetGroupId}/accountClones/{assetGroupWorkId}:
    get:
      description: |-
        Gets information about a cloned account by the `assetGroupWorkId`.

        To call this endpoint:
        * You must be an administrator for the specified organization.

        [Required scopes](/docs/admin-api/admin101/auth/): `asset_group_account_clone_read`.
      operationId: OrganizationProvisionAssetGroup_GetAssetGroupAccountClone
      parameters:
      - description: |
          The organization's GUID.
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
      - description: The ID of the asset group.
        in: path
        name: assetGroupId
        required: true
        schema:
          format: uuid
          type: string
      - description: The ID of the asset group account clone request.
        in: path
        name: assetGroupWorkId
        required: true
        schema:
          format: uuid
          type: string
      - description: "When **true,** include additional details about the cloned account.\
          \ The default value is **false.**"
        in: query
        name: include_details
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetGroupAccountClone'
          description: OK
      security:
      - accessCode:
        - asset_group_account_clone_read
      summary: Gets information about a single cloned account.
      tags:
      - AccountCloning
      x-ds-methodname: getAssetGroupAccountClone
      x-ds-method: getAssetGroupAccountClone
      x-ds-service: ProvisionAssetGroup
      x-ds-in-sdk: true
components:
  schemas:
    AssetGroupAccountsResponse:
      description: A list of asset group accounts.
      properties:
        assetGroupAccounts:
          description: The list of asset group accounts.
          items:
            $ref: '#/components/schemas/AssetGroupAccountResponse'
          readOnly: true
          type: array
      type: object
      x-ds-definition-name: AssetGroupAccountsResponse
      x-ms-summary: A list of asset group accounts.
    AssetGroupAccountResponse:
      description: ""
      properties:
        assetGroupId:
          description: The asset group ID.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          readOnly: true
          type: string
        assetGroupName:
          description: Reserved for DocuSign.
          readOnly: true
          type: string
        accountId:
          description: The ID of the account.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          readOnly: true
          type: string
        accountName:
          description: The name of the account.
          readOnly: true
          type: string
        externalAccountId:
          description: |
            The external account ID.
          format: int64
          readOnly: true
          type: integer
        compliant:
          description: "When **true,** indicates that the account is compliant."
          readOnly: true
          type: boolean
        siteId:
          description: Reserved for DocuSign.
          format: int32
          readOnly: true
          type: integer
        siteName:
          description: Reserved for DocuSign.
          readOnly: true
          type: string
      type: object
      x-ds-definition-name: AssetGroupAccountResponse
      x-ms-summary: ""
    AssetGroupAccountClone:
      description: The account that is cloned.
      properties:
        sourceAccount:
          $ref: '#/components/schemas/AssetGroupAccountCloneSourceAccount'
        targetAccount:
          $ref: '#/components/schemas/AssetGroupAccountCloneTargetAccount'
        assetGroupWorkId:
          description: "The ID of the job that is created by the request. Use this\
            \ value to retrieve information about the clone request with the [getAssetGroupAccountClone](/docs/admin-api/reference/accountprovisioning/accountcloning/getassetgroupaccountclone/)\
            \ endpoint."
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          readOnly: true
          type: string
        assetGroupId:
          description: "The ID of the asset group to which the account belongs. Use\
            \ this value to retrieve information about the clone request with the\
            \ [getAssetGroupAccountClone](/docs/admin-api/reference/accountprovisioning/accountcloning/getassetgroupaccountclone/)\
            \ endpoint."
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          readOnly: true
          type: string
        assetGroupWorkType:
          description: The type of asset group work.
          enum:
          - Undefined
          - GroupAssetFulfillment
          - AccountAssetFulfillment
          - AccountAssetClone
          - AccountAssetCreate
          readOnly: true
          type: string
        status:
          description: |-
            The status of the clone request. Valid values:
            * `Pending`
            * `Processing`
            * `PendingError`
            * `ProcessingError`
            * `Completed`
            * `Canceled`
            * `PermanentFailure`
          enum:
          - Undefined
          - Pending
          - Processing
          - PendingError
          - ProcessingError
          - Completed
          - Canceled
          - PermanentFailure
          readOnly: true
          type: string
        cloneRequestId:
          description: Reserved for DocuSign.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          readOnly: true
          type: string
        orderId:
          description: Reserved for DocuSign.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          readOnly: true
          type: string
        attempts:
          description: The number of retries.
          format: int32
          readOnly: true
          type: integer
        createdDate:
          description: The date that the clone request was initiated.
          format: date-time
          readOnly: true
          type: string
        createdByName:
          description: The name of the user who initiated the clone request.
          readOnly: true
          type: string
        createdByEmail:
          description: The email address of the user who initiated the clone request.
          readOnly: true
          type: string
        message:
          description: "A message providing information about the clone request. If\
            \ the request resulted in an error, this message includes specific information\
            \ about the error."
          readOnly: true
          type: string
        cloneProcessingFailureDetails:
          $ref: '#/components/schemas/CloneErrorDetails'
      required:
      - sourceAccount
      - targetAccount
      type: object
      x-ds-definition-name: AssetGroupAccountClone
      x-ms-summary: The account that is cloned.
    AssetGroupAccountCloneSourceAccount:
      description: ""
      properties:
        id:
          description: |
            The ID of the account to clone. This property is required in POST requests.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        externalAccountId:
          description: |
            The external account ID of the source account.
          format: int64
          readOnly: true
          type: integer
        site:
          description: The site the source account is on.
          readOnly: true
          type: string
        name:
          description: The name of the source account.
          readOnly: true
          type: string
      required:
      - id
      type: object
      x-ds-definition-name: AssetGroupAccountCloneSourceAccount
      x-ms-summary: ""
    AssetGroupAccountCloneTargetAccount:
      description: An object describing the target cloned account.
      properties:
        id:
          description: The ID of the target account.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        name:
          description: The name of the target account. This property is required in
            the request body when cloning an account.
          type: string
        region:
          description: "The region of the target account. \n\n**Note:** When cloning\
            \ an account, you must include this property or `countryCode` in the request.\
            \ If both are provided, `region` will be used."
          type: string
        countryCode:
          description: "The country code of the target account. The country code for\
            \ the United States is `en`. \n\n**Note:** When cloning an account, you\
            \ must include this property or `region`. If both are provided, `region`\
            \ will be used."
          type: string
        site:
          description: The data center site of the account. This property is read-only.
          type: string
        admin:
          $ref: '#/components/schemas/AssetGroupAccountCloneTargetAccountAdmin'
      type: object
      x-ds-definition-name: AssetGroupAccountCloneTargetAccount
      x-ms-summary: An object describing the target cloned account.
    AssetGroupAccountCloneTargetAccountAdmin:
      description: An object describing the administrator of the cloned account.
      properties:
        email:
          description: The email address of the target account administrator. This
            property is required in the request body when cloning an account.
          type: string
        firstName:
          description: The first name of the target account administrator. This property
            is required in the request body when cloning an account.
          type: string
        lastName:
          description: The last name of the target account administrator. This property
            is required in the request body when cloning an account.
          type: string
        locale:
          description: The locale of the target account administrator. The locale
            code for the United States is `en`.
          enum:
          - None
          - zh_cn
          - zh_tw
          - nl
          - en
          - fr
          - de
          - it
          - ja
          - ko
          - pt
          - pt_br
          - ru
          - es
          - pl
          type: string
      type: object
      x-ds-definition-name: AssetGroupAccountCloneTargetAccountAdmin
      x-ms-summary: An object describing the administrator of the cloned account.
    CloneErrorDetails:
      description: ""
      properties:
        error:
          description: The error code.
          readOnly: true
          type: string
        errorDescription:
          description: The error description.
          readOnly: true
          type: string
        isSystemError:
          description: "When **true,** indicates that the error was caused by the\
            \ system. When **false,** indicates that the error was caused by the user."
          readOnly: true
          type: boolean
      type: object
      x-ds-definition-name: CloneErrorDetails
      x-ms-summary: ""
    AssetGroupAccountClones:
      description: ""
      properties:
        assetGroupWorks:
          description: The list of asset group accounts.
          items:
            $ref: '#/components/schemas/AssetGroupAccountClone'
          readOnly: true
          type: array
      type: object
      x-ds-definition-name: AssetGroupAccountClones
      x-ms-summary: ""
    OrganizationsResponse:
      description: Organization list.
      properties:
        organizations:
          description: A list of organizations of which the  authenticated user is
            a member.
          items:
            $ref: '#/components/schemas/OrganizationResponse'
          type: array
      type: object
      x-ds-definition-name: OrganizationsResponse
      x-ms-summary: Organization list.
    OrganizationResponse:
      description: Information about an individual organization.
      properties:
        id:
          description: The ID of the organization.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        name:
          description: The name of the organization.
          type: string
        description:
          description: A description of the organization.
          type: string
        default_account_id:
          description: The default account ID of the organization.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        default_permission_profile_id:
          description: The default permission profile ID of the organization.
          format: int64
          type: integer
        created_on:
          description: The date the organization's account was created.
          format: date-time
          type: string
        created_by:
          description: The user who created the organization account.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        last_modified_on:
          description: The date the organization's account was last updated.
          format: date-time
          type: string
        last_modified_by:
          description: The user who last updated the organization's account.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        accounts:
          description: A list of organization accounts.
          items:
            $ref: '#/components/schemas/OrganizationAccountResponse'
          type: array
        users:
          description: A list of the organization accounts users.
          items:
            $ref: '#/components/schemas/OrganizationSimpleIdObject'
          type: array
        reserved_domains:
          description: A list of reserved domains for the organization.
          items:
            $ref: '#/components/schemas/DomainResponse'
          type: array
        identity_providers:
          description: A list of identity providers for the organization.
          items:
            $ref: '#/components/schemas/IdentityProvidersResponse'
          type: array
        links:
          description: A list of links for the organization.
          items:
            $ref: '#/components/schemas/LinkResponse'
          type: array
      type: object
      x-ds-definition-name: OrganizationResponse
      x-ms-summary: Information about an individual organization.
    OrganizationAccountResponse:
      description: Information about an account.
      properties:
        id:
          description: The unique ID of the  account.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        name:
          description: The name of the account.
          type: string
        external_account_id:
          description: The external account ID.
          format: int64
          type: integer
        site_id:
          description: The site ID.
          format: int32
          type: integer
      type: object
      x-ds-definition-name: OrganizationAccountResponse
      x-ms-summary: Information about an account.
    OrganizationSimpleIdObject:
      description: An ID object.
      properties:
        id:
          description: The ID.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
      type: object
      x-ds-definition-name: OrganizationSimpleIdObject
      x-ms-summary: An ID object.
    DomainResponse:
      description: Information about a reserved domain.
      properties:
        id:
          description: The ID of the reserved domain.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        status:
          description: |-
            The status of the request. One of:

            - `unknown`
            - `pending`
            - `active`
            - `deactivated`
            - `rejected`
          type: string
        host_name:
          description: The host name of the reserved domain.
          type: string
        txt_token:
          description: A token  in form of text of the reserved domain.
          type: string
        identity_provider_id:
          description: The identity provider ID of the reserved domain.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        settings:
          description: |
            A list of settings for the reserved domain.
          items:
            $ref: '#/components/schemas/SettingResponse'
          type: array
        links:
          description: A list of useful links.
          items:
            $ref: '#/components/schemas/LinkResponse'
          type: array
      type: object
      x-ds-definition-name: DomainResponse
      x-ms-summary: Information about a reserved domain.
    IdentityProvidersResponse:
      description: ""
      properties:
        identity_providers:
          description: ""
          items:
            $ref: '#/components/schemas/IdentityProviderResponse'
          type: array
      type: object
      x-ds-definition-name: IdentityProvidersResponse
      x-ms-summary: ""
    LinkResponse:
      description: A link to a useful URL.
      properties:
        rel:
          description: The kind of linked item.
          type: string
        href:
          description: The URL of the linked item.
          type: string
      type: object
      x-ds-definition-name: LinkResponse
      x-ms-summary: A link to a useful URL.
    SettingResponse:
      description: A key/value list of settings.
      properties:
        key:
          description: The key of the setting.
          type: string
        value:
          description: The value of the setting.
          properties: {}
          type: object
        type:
          description: |-
            The type of the setting. One of:

            - `unknown`
            - `guid`
            - `text`
            - `integer`
            - `boolean`
            - `datetime`
            - `enumeration`
          type: string
      type: object
      x-ds-definition-name: SettingResponse
      x-ms-summary: A key/value list of settings.
    Saml2IdentityProviderResponse:
      description: Information about a SAML 2.0 identity provider.
      properties:
        issuer:
          description: The name of the certificate issuer.
          type: string
        settings:
          description: A list of settings.
          items:
            $ref: '#/components/schemas/SettingResponse'
          type: array
        certificates:
          description: A list of certificates responses.
          items:
            $ref: '#/components/schemas/CertificateResponse'
          type: array
        attribute_mappings:
          description: A list of attribute mappings.
          items:
            $ref: '#/components/schemas/RequiredAttributeMappingResponse'
          type: array
      type: object
      x-ds-definition-name: Saml2IdentityProviderResponse
      x-ms-summary: Information about a SAML 2.0 identity provider.
    CertificateResponse:
      description: Information about a single certificate.
      properties:
        id:
          description: The unique ID of the certificate.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        issuer:
          description: The certificate issuer.
          type: string
        thumbprint:
          description: The thumbprint of the certificate.
          type: string
        expiration_date:
          description: The date when the certificate expires.
          format: date-time
          type: string
        is_valid:
          description: "When **true,** the certificate is valid."
          readOnly: true
          type: boolean
        links:
          description: A list of useful links.
          items:
            $ref: '#/components/schemas/LinkResponse'
          type: array
      type: object
      x-ds-definition-name: CertificateResponse
      x-ms-summary: Information about a single certificate.
    RequiredAttributeMappingResponse:
      description: A single attribute mapping response.
      properties:
        required_attribute_id:
          description: The unique ID of the attribute.
          format: int32
          type: integer
        required_attribute_name:
          description: The name of the attribute.
          type: string
        required_attribute_friendly_name:
          description: The human-readable name of the attribute.
          type: string
        substitute_attribute_name:
          description: The name of the substitute attribute.
          type: string
      type: object
      x-ds-definition-name: RequiredAttributeMappingResponse
      x-ms-summary: A single attribute mapping response.
    PermissionsResponse:
      description: A list of permission profiles for a given account.
      properties:
        permissions:
          description: An array of permission profile responses.
          items:
            $ref: '#/components/schemas/PermissionProfileResponse'
          type: array
      type: object
      x-ds-definition-name: PermissionsResponse
      x-ms-summary: A list of permission profiles for a given account.
    PermissionProfileResponse:
      description: This object is an individual permission profile response.
      properties:
        id:
          description: The ID of the permission profile.
          format: int64
          type: integer
        name:
          description: "The name of the permission profile. \n\nExample: `DocuSign\
            \ Sender`"
          type: string
      type: object
      x-ds-definition-name: PermissionProfileResponse
      x-ms-summary: This object is an individual permission profile response.
    PermissionProfileResponse2_1:
      description: ""
      properties:
        permission_profile_id:
          description: The ID of the permission profile.
          type: string
        permission_profile_name:
          description: The human-readable name of the permission profile.
          type: string
      type: object
      x-ds-definition-name: PermissionProfileResponse2_1
      x-ms-summary: ""
    MemberGroupsResponse:
      description: A response about member groups. It contains the groups and paging
        information.
      properties:
        groups:
          description: A list of the responses.
          items:
            $ref: '#/components/schemas/MemberGroupResponse'
          type: array
        paging:
          $ref: '#/components/schemas/PagingResponseProperties'
      type: object
      x-ds-definition-name: MemberGroupsResponse
      x-ms-summary: A response about member groups. It contains the groups and paging
        information.
    MemberGroupResponse:
      description: "And individual group responses,."
      properties:
        id:
          description: The unique ID of the group.
          format: int64
          type: integer
        name:
          description: The name of the group.
          type: string
        type:
          description: |-
            The type of group. One of:

            - `invalid`
            - `admin_group`
            - `everyone_group`
            - `custom_group`
          type: string
      type: object
      x-ds-definition-name: MemberGroupResponse
      x-ms-summary: "And individual group responses,."
    PagingResponseProperties:
      description: ""
      properties:
        result_set_size:
          description: The number of items in a result set (page).
          format: int32
          type: integer
        result_set_start_position:
          description: The index position of the first result in this set.
          format: int32
          type: integer
        result_set_end_position:
          description: The index position of the last result in this set.
          format: int32
          type: integer
        total_set_size:
          description: The total number of results.
          format: int32
          type: integer
        next:
          description: 'A URL to the next set of results. '
          type: string
        previous:
          description: 'A URL to the previous set of results. '
          type: string
      type: object
      x-ds-definition-name: PagingResponseProperties
      x-ms-summary: ""
    OrganizationExportRequest:
      description: Enables you to specify the kind of export request.
      properties:
        type:
          description: "The type of export requested. One of:\n\n- `organization_domain_users_export`:\
            \ All users of the reserved domains.\n- `organization_external_memberships_export`:\
            \ Users whose email address domain is *not* linked to the organization.\
            \ \n- `organization_memberships_export`: Every user in every account in\
            \ the organization. Users in multiple accounts will appear more than once.\n\
            - `organization_account_settings_export`: This value only applies to requests\
            \ to export account settings."
          type: string
        accounts:
          description: ""
          items:
            $ref: '#/components/schemas/OrganizationExportAccount'
          type: array
        domains:
          description: ""
          items:
            $ref: '#/components/schemas/OrganizationExportDomain'
          type: array
      type: object
      x-ds-definition-name: OrganizationExportRequest
      x-ms-summary: Enables you to specify the kind of export request.
    OrganizationExportAccount:
      description: ""
      properties:
        account_id:
          description: "Select users that are members of the specified account. At\
            \ least one of `email`, `account_id` or `organization_reserved_domain_id`\
            \ must be specified."
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
      type: object
      x-ds-definition-name: OrganizationExportAccount
      x-ms-summary: ""
    OrganizationExportDomain:
      description: ""
      properties:
        domain:
          description: ""
          type: string
      type: object
      x-ds-definition-name: OrganizationExportDomain
      x-ms-summary: ""
    OrganizationExportResponse:
      description: ""
      properties:
        id:
          description: The unique ID of this request.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        type:
          description: "The type of export requested. One of:\n\n- `organization_domain_users_export`:\
            \ All users of the reserved domains.\n- `organization_external_memberships_export`:\
            \ Users whose email address domain is *not* linked to the organization.\
            \ \n- `organization_memberships_export`: Every user in every account in\
            \ the organization. Users in multiple accounts will appear more than once.\n\
            - `organization_account_settings_export`: This value only applies to requests\
            \ to export account settings."
          type: string
        requestor:
          $ref: '#/components/schemas/OrganizationExportRequestorResponse'
        created:
          description: |-
            The time and date the request was created. This is a date in ISO 8601 format.

            Example:  `2019-03-26T19:02:09.8957715Z`
          format: date-time
          type: string
        last_modified:
          description: The time and date when the request was modified. This is typically
            the same as `created`.
          format: date-time
          type: string
        completed:
          description: |
            The time and date when the request completed. Null if the request is still in progress.
          format: date-time
          type: string
        expires:
          description: The time and date when the request expires.
          format: date-time
          type: string
        status:
          description: |
            The status of the request. One of:

            - `failed`
            - `in_process`
            - `queued`
            - `completed`
          type: string
        selected_accounts:
          description: ""
          items:
            $ref: '#/components/schemas/OrgExportSelectedAccount'
          type: array
        selected_domains:
          description: ""
          items:
            $ref: '#/components/schemas/OrgExportSelectedDomain'
          type: array
        metadata_url:
          description: A pre-configured GET request to get the status of the export.
            Generally this is the same URI used to access this endpoint.
          type: string
        percent_completed:
          description: An integer between 0 to 100 (inclusive) that reports the progress
            of the request.
          format: int32
          type: integer
        number_rows:
          description: |
            The number of rows returned in this request.
          format: int64
          type: integer
        size_bytes:
          description: The size of the request in bytes.
          format: int64
          type: integer
        results:
          description: An array of results. There is one set of results for each server
            an account is in.
          items:
            $ref: '#/components/schemas/OrganizationExportTaskResponse'
          type: array
        success:
          description: "When **true,** the request succeeded. \n"
          type: boolean
      type: object
      x-ds-definition-name: OrganizationExportResponse
      x-ms-summary: ""
    OrganizationExportRequestorResponse:
      description: ""
      properties:
        name:
          description: The name of the requestor.
          type: string
        id:
          description: |-
            The unique ID of the requestor.
            If `type` is `user`, this is the requestor's user ID.
          type: string
        type:
          description: |-
            The type of the requestor. One of:

            - `user`
            - `client_app`
          type: string
        email:
          description: The email address of the requestor.
          type: string
      type: object
      x-ds-definition-name: OrganizationExportRequestorResponse
      x-ms-summary: ""
    OrgExportSelectedAccount:
      description: ""
      properties:
        account_id:
          description: "Select users that are members of the specified account. At\
            \ least one of `email`, `account_id` or `organization_reserved_domain_id`\
            \ must be specified."
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
      type: object
      x-ds-definition-name: OrgExportSelectedAccount
      x-ms-summary: ""
    OrgExportSelectedDomain:
      description: ""
      properties:
        domain:
          description: ""
          type: string
      type: object
      x-ds-definition-name: OrgExportSelectedDomain
      x-ms-summary: ""
    OrganizationExportTaskResponse:
      description: ""
      properties:
        id:
          description: The unique ID of the task request.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        site_id:
          description: The ID of the site the response is for.
          format: int32
          type: integer
        url:
          description: The URL that returns the results as a CSV text stream.
          type: string
        number_rows:
          description: The number of rows returned in the result.
          format: int64
          type: integer
        size_bytes:
          description: The size of the response in bytes.
          format: int64
          type: integer
        error_details:
          $ref: '#/components/schemas/OETR_ErrorDetails'
      type: object
      x-ds-definition-name: OrganizationExportTaskResponse
      x-ms-summary: ""
    OETR_ErrorDetails:
      description: ""
      properties:
        error:
          description: The error number.
          type: string
        error_description:
          description: A longer description of the error.
          type: string
      type: object
      x-ds-definition-name: OETR_ErrorDetails
      x-ms-summary: ""
    OrganizationExportsResponse:
      description: ""
      properties:
        exports:
          description: ""
          items:
            $ref: '#/components/schemas/OrganizationExportResponse'
          type: array
      type: object
      x-ds-definition-name: OrganizationExportsResponse
      x-ms-summary: ""
    OrganizationAccountsRequest:
      description: ""
      properties:
        accounts:
          description: ""
          items:
            $ref: '#/components/schemas/OrganizationAccountRequest'
          type: array
      type: object
      x-ds-definition-name: OrganizationAccountsRequest
      x-ms-summary: ""
    OrganizationAccountRequest:
      description: ""
      properties:
        account_id:
          description: "Select users that are members of the specified account. At\
            \ least one of `email`, `account_id` or `organization_reserved_domain_id`\
            \ must be specified."
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
      required:
      - account_id
      type: object
      x-ds-definition-name: OrganizationAccountRequest
      x-ms-summary: ""
    OrganizationAccountSettingsImportResponse:
      description: ""
      properties:
        created:
          description: ""
          format: date-time
          type: string
        last_modified:
          description: ""
          format: date-time
          type: string
        completed:
          description: ""
          format: date-time
          type: string
        expires:
          description: ""
          format: date-time
          type: string
        percent_completed:
          description: ""
          format: int32
          type: integer
        number_processed_accounts:
          description: ""
          format: int64
          type: integer
        number_unprocessed_accounts:
          description: ""
          format: int64
          type: integer
        results:
          description: ""
          items:
            $ref: '#/components/schemas/OrganizationAccountSettingsImportResultResponse'
          type: array
        success:
          description: ""
          type: boolean
        skipped_settings_by_account:
          additionalProperties:
            items:
              type: string
            type: array
          description: ""
          type: object
        id:
          description: ""
          type: string
        organization_id:
          description: ""
          type: string
        status:
          description: Status.
          type: string
        type:
          description: ""
          type: string
        requestor:
          $ref: '#/components/schemas/OrganizationAccountSettingsImportRequestorResponse'
      type: object
      x-ds-definition-name: OrganizationAccountSettingsImportResponse
      x-ms-summary: ""
    OrganizationAccountSettingsImportResultResponse:
      description: ""
      properties:
        id:
          description: ""
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        site_id:
          description: ""
          format: int32
          type: integer
        url:
          description: ""
          type: string
        number_processed_accounts:
          description: ""
          format: int64
          type: integer
        error_details:
          $ref: '#/components/schemas/OASIRR_ErrorDetails'
        processing_issues_by_account:
          description: ""
          items:
            $ref: '#/components/schemas/OASIRR_OrganizationAccountSettingsErrorDataResponse'
          type: array
        number_unprocessed_accounts:
          description: ""
          format: int64
          type: integer
      type: object
      x-ds-definition-name: OrganizationAccountSettingsImportResultResponse
      x-ms-summary: ""
    OrganizationAccountSettingsImportRequestorResponse:
      description: ""
      properties:
        id:
          description: ""
          type: string
        type:
          description: ""
          type: string
        name:
          description: ""
          type: string
        email:
          description: The email address.
          type: string
      type: object
      x-ds-definition-name: OrganizationAccountSettingsImportRequestorResponse
      x-ms-summary: ""
    OASIRR_ErrorDetails:
      description: ""
      properties:
        error:
          description: The error number.
          type: string
        error_description:
          description: A longer description of the error.
          type: string
      type: object
      x-ds-definition-name: OASIRR_ErrorDetails
      x-ms-summary: ""
    OASIRR_OrganizationAccountSettingsErrorDataResponse:
      description: ""
      properties:
        account_id:
          description: "Select users that are members of the specified account. At\
            \ least one of `email`, `account_id` or `organization_reserved_domain_id`\
            \ must be specified."
          type: string
        account_name:
          description: ""
          type: string
        error:
          description: The error number.
          type: string
        error_key:
          description: ""
          type: string
        setting_key:
          description: ""
          type: string
      type: object
      x-ds-definition-name: OASIRR_OrganizationAccountSettingsErrorDataResponse
      x-ms-summary: ""
    OrganizationImportResponse:
      description: ""
      properties:
        id:
          description: ""
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        type:
          description: ""
          type: string
        requestor:
          $ref: '#/components/schemas/OrganizationImportResponseRequestor'
        created:
          description: ""
          format: date-time
          type: string
        last_modified:
          description: ""
          format: date-time
          type: string
        status:
          description: Status.
          type: string
        user_count:
          description: ""
          format: int32
          type: integer
        processed_user_count:
          description: ""
          format: int32
          type: integer
        added_user_count:
          description: ""
          format: int32
          type: integer
        updated_user_count:
          description: ""
          format: int32
          type: integer
        closed_user_count:
          description: ""
          format: int32
          type: integer
        no_action_required_user_count:
          description: ""
          format: int32
          type: integer
        error_count:
          description: ""
          format: int32
          type: integer
        warning_count:
          description: ""
          format: int32
          type: integer
        invalid_column_headers:
          description: ""
          type: string
        imports_not_found_or_not_available_for_accounts:
          description: ""
          type: string
        imports_failed_for_accounts:
          description: ""
          type: string
        imports_timed_out_for_accounts:
          description: ""
          type: string
        imports_not_found_or_not_available_for_sites:
          description: ""
          type: string
        imports_failed_for_sites:
          description: ""
          type: string
        imports_timed_out_for_sites:
          description: ""
          type: string
        file_level_error_rollups:
          description: ""
          items:
            $ref: '#/components/schemas/OrganizationImportResponseErrorRollup'
          type: array
        user_level_error_rollups:
          description: ""
          items:
            $ref: '#/components/schemas/OrganizationImportResponseErrorRollup'
          type: array
        user_level_warning_rollups:
          description: ""
          items:
            $ref: '#/components/schemas/OrganizationImportResponseWarningRollup'
          type: array
        has_csv_results:
          description: ""
          type: boolean
        results_uri:
          description: ""
          type: string
      type: object
      x-ds-definition-name: OrganizationImportResponse
      x-ms-summary: ""
    OrganizationImportResponseRequestor:
      description: ""
      properties:
        name:
          description: The name of the requestor.
          type: string
        id:
          description: |-
            The unique ID of the requestor.
            If `type` is `user`, this is the requestor's user ID.
          type: string
        type:
          description: |-
            The type of the requestor. One of:

            - `user`
            - `client_app`
          type: string
        email:
          description: The email address of the requestor.
          type: string
      type: object
      x-ds-definition-name: OrganizationImportResponseRequestor
      x-ms-summary: ""
    OrganizationImportResponseErrorRollup:
      description: ""
      properties:
        error_type:
          description: |+
            The type of error. One of:


            - `no_action_taken_user_exists`
            - `user_added`
            - `user_updated`
            - `invalid_column_header`
            - `invalid_row_data`
            - `insufficient_row_data_found`
            - `extra_row_data_found`
            - `blank_username`
            - `invalid_characters_in_username`
            - `invalid_useremail_address`
            - `email_domain_is_reserved`
            - `new_name_with_existing_useremail_not_allowed`
            - `invalid_characters_in_jobtitle`
            - `invalid_membership_id`
            - `membership_not_in_account`
            - `maximum_users_exceeded`
            - `invalid_permissionset`
            - `user_permissionset_problems`
            - `invalid_group`
            - `user_group_problems`
            - `group_and_permissionset_problems`
            - `column_headers_missing`
            - `invalid_csv_data_or_syntax`
            - `invalid_characters_in_companyname`
            - `invalid_language_code`
            - `username_column_header_missing`
            - `useremail_column_header_missing`
            - `permissionset_column_header_missing`
            - `membership_id_column_header_usage_not_permitted`
            - `administrator_group_assignment_not_permitted`
            - `user_awaiting_activation`
            - `account_admin_access_denied`
            - `invalid_characters_in_address`
            - `permissionset_required`
            - `apiusername_column_header_missing`
            - `invalid_apiusername`
            - `useremail_username_combination_exists`
            - `permissionset_change_not_allowed`
            - `username_language_changes_ignored_warning`
            - `invalid_country_warning`
            - `invalid_account_id`
            - `invalid_autoactivate`
            - `invalid_loginpolicy`
            - `autoactivate_not_allowed`
            - `membership_closed`
            - `membership_closed_or_disabled_warning`
            - `cannot_close_last_active_admin`
            - `no_action_taken`
            - `cannot_close_own_membership`
            - `unspecified_error`

          type: string
        count:
          description: The number of errors of this type.
          format: int32
          type: integer
      type: object
      x-ds-definition-name: OrganizationImportResponseErrorRollup
      x-ms-summary: ""
    OrganizationImportResponseWarningRollup:
      description: ""
      properties:
        warning_type:
          description: The type of warning.
          type: string
        count:
          description: The number of warnings of this type.
          format: int32
          type: integer
      type: object
      x-ds-definition-name: OrganizationImportResponseWarningRollup
      x-ms-summary: ""
    OrganizationImportsResponse:
      description: ""
      properties:
        imports:
          description: A list of responses to user import requests.
          items:
            $ref: '#/components/schemas/OrganizationImportResponse'
          type: array
      type: object
      x-ds-definition-name: OrganizationImportsResponse
      x-ms-summary: ""
    IdentityProviderResponse:
      description: Information about a single identity provider.
      properties:
        id:
          description: The unique ID of the identity provider.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        friendly_name:
          description: The human-readable name of the identity provider.
          type: string
        auto_provision_users:
          description: "When **true,** users who use this identity provider are automatically\
            \ provisioned. "
          type: boolean
        type:
          description: |-
            The type of the identity provider. One of:

            - `none`
            - `saml_20`
            - `saml_11`
            - `saml_10`
            - `ws_federation`
            - `open_id_connect`
          type: string
        saml_20:
          $ref: '#/components/schemas/Saml2IdentityProviderResponse'
        links:
          description: A list of useful URLs.
          items:
            $ref: '#/components/schemas/LinkResponse'
          type: array
      type: object
      x-ds-definition-name: IdentityProviderResponse
      x-ms-summary: Information about a single identity provider.
    OrganizationSalesforceAccountManagersResponse:
      description: ""
      properties:
        account_id:
          description: "Select users that are members of the specified account. At\
            \ least one of `email`, `account_id` or `organization_reserved_domain_id`\
            \ must be specified."
          type: string
        account_name:
          description: ""
          type: string
        account_type:
          description: ""
          type: string
        account_owner:
          $ref: '#/components/schemas/OSAMR_Contact'
        account_manager:
          $ref: '#/components/schemas/OSAMR_Contact'
        parent_account:
          $ref: '#/components/schemas/OrganizationSalesforceAccountManagersResponse'
      type: object
      x-ds-definition-name: OrganizationSalesforceAccountManagersResponse
      x-ms-summary: ""
    IndividualUserDataRedactionRequest:
      description: ""
      properties:
        user_id:
          description: The ID of the user whose data you want to delete.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        memberships:
          description: A list of accounts from which you want to delete the user's
            data. At least one account is required.
          items:
            $ref: '#/components/schemas/MembershipDataRedactionRequest'
          type: array
      type: object
      x-ds-definition-name: IndividualUserDataRedactionRequest
      x-ms-summary: ""
    IndividualMembershipDataRedactionRequest:
      description: ""
      properties:
        user_id:
          description: The ID of the user whose data you want to delete.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
      type: object
      x-ds-definition-name: IndividualMembershipDataRedactionRequest
      x-ms-summary: ""
    IndividualUserDataRedactionResponse:
      description: ""
      properties:
        user_id:
          description: The ID of the user.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          readOnly: true
          type: string
        status:
          description: The overall status of the data deletion request.
          enum:
          - unknown
          - pending
          - failure
          - success
          - already_redacted
          readOnly: true
          type: string
        membership_results:
          description: A list of objects describing the status of the deletion request
            for each account.
          items:
            $ref: '#/components/schemas/MembershipDataRedactionResponse'
          readOnly: true
          type: array
      type: object
      x-ds-definition-name: IndividualUserDataRedactionResponse
      x-ms-summary: ""
    MembershipDataRedactionRequest:
      description: ""
      properties:
        account_id:
          description: The ID of the account from which to delete the user's data.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
      type: object
      x-ds-definition-name: MembershipDataRedactionRequest
      x-ms-summary: ""
    MembershipDataRedactionResponse:
      description: An object describing the status of the data deletion request for
        a specific account.
      properties:
        account_id:
          description: The ID of the account.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          readOnly: true
          type: string
        status:
          description: |
            The status of the data deletion request. Valid values:
            - `success`
            - `pending`
            - `failure`
            - `already_redacted`
          enum:
          - unknown
          - pending
          - failure
          - success
          - already_redacted
          readOnly: true
          type: string
      type: object
      x-ds-definition-name: MembershipDataRedactionResponse
      x-ms-summary: An object describing the status of the data deletion request for
        a specific account.
    OSAMR_Contact:
      description: ""
      properties:
        name:
          description: ""
          type: string
        email:
          description: The email address.
          type: string
        title:
          description: ""
          type: string
      type: object
      x-ds-definition-name: OSAMR_Contact
      x-ms-summary: ""
    OrgReportRequest:
      description: ""
      properties:
        report_type:
          description: ""
          type: string
        report_date_range:
          description: ""
          type: string
        account_ids:
          description: ""
          items:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
          type: array
        custom_start_date:
          description: ""
          format: date-time
          type: string
        custom_end_date:
          description: ""
          format: date-time
          type: string
      type: object
      x-ds-definition-name: OrgReportRequest
      x-ms-summary: ""
    OrgReportCreateResponse:
      description: ""
      properties:
        report_correlation_id:
          description: ""
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
      type: object
      x-ds-definition-name: OrgReportCreateResponse
      x-ms-summary: ""
    OrgReportListResponse:
      description: ""
      properties:
        reports:
          description: ""
          items:
            $ref: '#/components/schemas/OrgReportListResponse_OrgReport'
          type: array
      type: object
      x-ds-definition-name: OrgReportListResponse
      x-ms-summary: ""
    OrgReportListResponse_OrgReport:
      description: ""
      properties:
        complete:
          description: ""
          type: boolean
        report_correlation_id:
          description: ""
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        site_id:
          description: ""
          format: int32
          type: integer
        report_id:
          description: ""
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        requestor:
          $ref: '#/components/schemas/OrgReportListResponse_Requestor'
        created_on:
          description: ""
          format: date-time
          type: string
        account_export_count:
          description: ""
          format: int32
          type: integer
        url:
          description: ""
          type: string
        report_type_id:
          description: ""
          type: string
        report_date_range:
          description: ""
          type: string
        custom_start_date:
          description: ""
          format: date-time
          type: string
        custom_end_date:
          description: ""
          format: date-time
          type: string
      type: object
      x-ds-definition-name: OrgReportListResponse_OrgReport
      x-ms-summary: ""
    OrgReportListResponse_Requestor:
      description: ""
      properties:
        id:
          description: ""
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        name:
          description: ""
          type: string
      type: object
      x-ds-definition-name: OrgReportListResponse_Requestor
      x-ms-summary: ""
    OrgReportConfigurationResponse:
      description: ""
      properties:
        is_account_limit_disabled:
          description: ""
          type: boolean
        custom_dates_enabled:
          description: ""
          type: boolean
        enabled_report_types:
          description: ""
          items:
            format: int32
            type: integer
          type: array
      type: object
      x-ds-definition-name: OrgReportConfigurationResponse
      x-ms-summary: ""
    DomainsResponse:
      description: A response about reserved domains.
      properties:
        reserved_domains:
          description: Information about reserved domains.
          items:
            $ref: '#/components/schemas/DomainResponse'
          type: array
      type: object
      x-ds-definition-name: DomainsResponse
      x-ms-summary: A response about reserved domains.
    UpdateUsersRequest:
      description: A list of users whose information you want to change.
      properties:
        users:
          description: A list of users whose information you want to change.
          items:
            $ref: '#/components/schemas/UpdateUserRequest'
          type: array
      type: object
      x-ds-definition-name: UpdateUsersRequest
      x-ms-summary: A list of users whose information you want to change.
    UpdateUserRequest:
      description: Request to change a user's information.
      properties:
        id:
          description: The user's unique ID.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        site_id:
          description: The site ID.
          format: int32
          type: integer
        user_name:
          description: The full name of the user.
          type: string
        first_name:
          description: The user's first name.
          type: string
        last_name:
          description: The user's last name.
          type: string
        email:
          description: The email address.
          type: string
        default_account_id:
          description: The account ID of the user's default account.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        language_culture:
          description: |
            The language and culture of the user.

              * Chinese Simplified: `zh_CN`
              * Chinese Traditional: `zh_TW`
              * Dutch: `nl`
              * English: `en`
              * French: `fr`
              * German: `de`
              * Italian: `it`
              * Japanese: `ja`
              * Korean: `ko`
              * Portuguese: `pt`
              * Portuguese Brazil: `pt_BR`
              * Russian: `ru`
              * Spanish: `es`
          type: string
        selected_languages:
          description: ""
          type: string
        federated_status:
          description: |-
            The user's federated status. One of:

            - `RemoveStatus`
            - `FedAuthRequired`
            - `FedAuthBypass`
            - `Evicted`
          type: string
        force_password_change:
          description: "When **true,** the user will be required to change the account\
            \ password."
          type: boolean
        memberships:
          description: A list of group membership requests.
          items:
            $ref: '#/components/schemas/UpdateMembershipRequest'
          type: array
        device_verification_enabled:
          description: ""
          type: boolean
      required:
      - id
      - site_id
      type: object
      x-ds-definition-name: UpdateUserRequest
      x-ms-summary: Request to change a user's information.
    UpdateMembershipRequest:
      description: A request to update group membership.
      properties:
        account_id:
          description: The user's unique ID.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        permission_profile:
          $ref: '#/components/schemas/PermissionProfileRequest'
        groups:
          description: The user's requested groups.
          items:
            $ref: '#/components/schemas/GroupRequest'
          type: array
        company_name:
          description: The user's company name.
          type: string
        job_title:
          description: The user's job title.
          type: string
        send_activation:
          description: "When **true,** send an activation request after the update."
          type: boolean
        access_code:
          description: The access code that the user needs to activate an account.
          type: string
      required:
      - account_id
      type: object
      x-ds-definition-name: UpdateMembershipRequest
      x-ms-summary: A request to update group membership.
    PermissionProfileRequest:
      description: A permission profile.
      properties:
        id:
          description: The ID of the permission profile.
          format: int64
          type: integer
        name:
          description: The name of the permission profile.
          type: string
      required:
      - id
      type: object
      x-ds-definition-name: PermissionProfileRequest
      x-ms-summary: A permission profile.
    GroupRequest:
      description: A group for a user to belong to.
      properties:
        id:
          description: The ID of the group.
          format: int64
          type: integer
        name:
          description: The name of the group.
          type: string
        type:
          description: |-
            The type of group. One of:

            - `invalid`
            - `admin_group`
            - `everyone_group`
            - `custom_group`
          type: string
      required:
      - id
      type: object
      x-ds-definition-name: GroupRequest
      x-ms-summary: A group for a user to belong to.
    UsersUpdateResponse:
      description: The results of changing a user's information.
      properties:
        success:
          description: "When **true,** the request to change user information succeeded."
          type: boolean
        users:
          description: A list of users whose email addresses have been updated.
          items:
            $ref: '#/components/schemas/UserUpdateResponse'
          type: array
      type: object
      x-ds-definition-name: UsersUpdateResponse
      x-ms-summary: The results of changing a user's information.
    UserUpdateResponse:
      description: Error result of attempting to change a user's email address.
      properties:
        id:
          description: The ID of the user whose email address has been updated.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        site_id:
          description: The site ID.
          format: int32
          type: integer
        email:
          description: The email address.
          type: string
        error_details:
          $ref: '#/components/schemas/ErrorDetails'
      type: object
      x-ds-definition-name: UserUpdateResponse
      x-ms-summary: Error result of attempting to change a user's email address.
    ErrorDetails:
      description: Errors.
      properties:
        error:
          description: The code for the error.
          type: string
        error_description:
          description: A description of the error.
          type: string
      type: object
      x-ds-definition-name: ErrorDetails
      x-ms-summary: Errors.
    UpdateUsersEmailRequest:
      description: A change email request.
      properties:
        users:
          description: A list of users whose email address to change.
          items:
            $ref: '#/components/schemas/UpdateUserEmailRequest'
          type: array
      type: object
      x-ds-definition-name: UpdateUsersEmailRequest
      x-ms-summary: A change email request.
    UpdateUserEmailRequest:
      description: And individual change of email.
      properties:
        id:
          description: The ID of the users whose email address you want to change.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        site_id:
          description: The site ID.
          format: int32
          type: integer
        email:
          description: The new email address.
          type: string
      required:
      - email
      - id
      - site_id
      type: object
      x-ds-definition-name: UpdateUserEmailRequest
      x-ms-summary: And individual change of email.
    DeleteMembershipsRequest:
      description: A list of accounts to close for a user.
      properties:
        accounts:
          description: A list of accounts to close for a user.
          items:
            $ref: '#/components/schemas/DeleteMembershipRequest'
          type: array
      required:
      - accounts
      type: object
      x-ds-definition-name: DeleteMembershipsRequest
      x-ms-summary: A list of accounts to close for a user.
    DeleteMembershipRequest:
      description: ""
      properties:
        id:
          description: The ID of a user's account you want to close.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
      required:
      - id
      type: object
      x-ds-definition-name: DeleteMembershipRequest
      x-ms-summary: ""
    DeleteMembershipsResponse:
      description: The results of closing a user's account.
      properties:
        success:
          description: "When **true,** the request to close the accounts succeeded."
          type: boolean
        accounts:
          description: A list of accounts that were closed.
          items:
            $ref: '#/components/schemas/DeleteMembershipResponse'
          type: array
      type: object
      x-ds-definition-name: DeleteMembershipsResponse
      x-ms-summary: The results of closing a user's account.
    DeleteMembershipResponse:
      description: Results of closing accounts.
      properties:
        id:
          description: The ID of an account that could not be closed.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        error_details:
          $ref: '#/components/schemas/ErrorDetails'
      type: object
      x-ds-definition-name: DeleteMembershipResponse
      x-ms-summary: Results of closing accounts.
    OrganizationUsersResponse:
      description: A response containing information about users.
      properties:
        users:
          description: A list of users.
          items:
            $ref: '#/components/schemas/OrganizationUserResponse'
          type: array
        paging:
          $ref: '#/components/schemas/PagingResponseProperties'
      type: object
      x-ds-definition-name: OrganizationUsersResponse
      x-ms-summary: A response containing information about users.
    OrganizationUserResponse:
      description: Information about a user.
      properties:
        id:
          description: The user's unique ID.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        user_name:
          description: The full name of the user.
          type: string
        first_name:
          description: The user's first name.
          type: string
        last_name:
          description: The user's last name.
          type: string
        user_status:
          description: |
            The user's status. One of:

            - `active`
            - `created`
            - `closed`
          type: string
        membership_status:
          description: |
            The user's membership status. One of:

            - `activation_required`
            - `activation_sent`
            - `active`
            - `closed`
            - `disabled`
          type: string
        email:
          description: The email address.
          type: string
        created_on:
          description: The date the user's account was created.
          format: date-time
          type: string
        membership_created_on:
          description: The date on which the user became a member of the organization.
          format: date-time
          type: string
        ds_groups:
          description: ""
          items:
            $ref: '#/components/schemas/DSGroupResponse'
          type: array
        membership_id:
          description: ""
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
      type: object
      x-ds-definition-name: OrganizationUserResponse
      x-ms-summary: Information about a user.
    DSGroupResponse:
      description: ""
      properties:
        ds_group_id:
          description: ""
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        account_id:
          description: "Select users that are members of the specified account. At\
            \ least one of `email`, `account_id` or `organization_reserved_domain_id`\
            \ must be specified."
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        source_product_name:
          description: ""
          type: string
        group_id:
          description: ""
          type: string
        group_name:
          description: ""
          type: string
        description:
          description: ""
          type: string
        is_admin:
          description: ""
          type: boolean
        last_modified_on:
          description: ""
          format: date-time
          type: string
        user_count:
          description: ""
          format: int32
          type: integer
        external_account_id:
          description: ""
          format: int64
          type: integer
        account_name:
          description: ""
          type: string
      type: object
      x-ds-definition-name: DSGroupResponse
      x-ms-summary: ""
    NewUserRequest:
      description: Information about a new user.
      properties:
        accounts:
          description: A list of accounts the user will belong to.
          items:
            $ref: '#/components/schemas/NewUserRequestAccountProperties'
          type: array
        user_name:
          description: The full name of the user.
          type: string
        first_name:
          description: The user's first name.
          type: string
        last_name:
          description: The user's last name.
          type: string
        email:
          description: The email address.
          type: string
        default_account_id:
          description: The account ID of the user's default account.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        language_culture:
          description: |
            The language and culture of the user.

              * Chinese Simplified: `zh_CN`
              * Chinese Traditional: `zh_TW`
              * Dutch: `nl`
              * English: `en`
              * French: `fr`
              * German: `de`
              * Italian: `it`
              * Japanese: `ja`
              * Korean: `ko`
              * Portuguese: `pt`
              * Portuguese Brazil: `pt_BR`
              * Russian: `ru`
              * Spanish: `es`
          type: string
        selected_languages:
          description: ""
          type: string
        access_code:
          description: The access code that the user needs to activate an account.
          type: string
        federated_status:
          description: |-
            The user's federated status. One of:

            - `RemoveStatus`
            - `FedAuthRequired`
            - `FedAuthBypass`
            - `Evicted`
          type: string
        auto_activate_memberships:
          description: "When **true,** the user's account is activated automatically."
          type: boolean
      required:
      - accounts
      - email
      type: object
      x-ds-definition-name: NewUserRequest
      x-ms-summary: Information about a new user.
    NewUserRequestAccountProperties:
      description: An individual new account user.
      properties:
        id:
          description: The account ID.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        permission_profile:
          $ref: '#/components/schemas/PermissionProfileRequest'
        groups:
          description: The new user's requested groups.
          items:
            $ref: '#/components/schemas/GroupRequest'
          type: array
        company_name:
          description: The user's company name.
          type: string
        job_title:
          description: The user's job title.
          type: string
      required:
      - id
      type: object
      x-ds-definition-name: NewUserRequestAccountProperties
      x-ms-summary: An individual new account user.
    NewUserResponse:
      description: Information about a newly created user.
      properties:
        id:
          description: The ID of the added user
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        site_id:
          description: The site ID of the added user.
          format: int32
          type: integer
        user_name:
          description: The full name of the user.
          type: string
        first_name:
          description: The user's first name.
          type: string
        last_name:
          description: The user's last name.
          type: string
        email:
          description: The primary email address of the user.
          type: string
        language_culture:
          description: |
            The language and culture of the user.

              * Chinese Simplified: `zh_CN`
              * Chinese Traditional: `zh_TW`
              * Dutch: `nl`
              * English: `en`
              * French: `fr`
              * German: `de`
              * Italian: `it`
              * Japanese: `ja`
              * Korean: `ko`
              * Portuguese: `pt`
              * Portuguese Brazil: `pt_BR`
              * Russian: `ru`
              * Spanish: `es`
          type: string
        federated_status:
          description: |
            The user's federated status. One of:

            - `RemoveStatus`
            - `FedAuthRequired`
            - `FedAuthBypass`
            - `Evicted`
          type: string
        accounts:
          description: A list of accounts the user belongs to.
          items:
            $ref: '#/components/schemas/NewUserResponseAccountProperties'
          type: array
      type: object
      x-ds-definition-name: NewUserResponse
      x-ms-summary: Information about a newly created user.
    NewUserResponseAccountProperties:
      description: Information about a newly created user.
      properties:
        id:
          description: The user's unique ID.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        site_id:
          description: The site ID of the account.
          format: int32
          type: integer
        permission_profile:
          $ref: '#/components/schemas/PermissionProfileResponse'
        groups:
          description: A list of groups that the user belongs to.
          items:
            $ref: '#/components/schemas/MemberGroupResponse'
          type: array
        company_name:
          description: The user's company name.
          type: string
        job_title:
          description: The job title of the user.
          type: string
      type: object
      x-ds-definition-name: NewUserResponseAccountProperties
      x-ms-summary: Information about a newly created user.
    ForceActivateMembershipRequest:
      description: ""
      properties:
        site_id:
          description: ""
          format: int32
          type: integer
      required:
      - site_id
      type: object
      x-ds-definition-name: ForceActivateMembershipRequest
      x-ms-summary: ""
    UpdateResponse:
      description: A response.
      properties:
        status:
          description: |
            The status of the request.
          type: string
      type: object
      x-ds-definition-name: UpdateResponse
      x-ms-summary: A response.
    UsersDrilldownResponse:
      description: Information about a list of users.
      properties:
        users:
          description: A list of users.
          items:
            $ref: '#/components/schemas/UserDrilldownResponse'
          type: array
      type: object
      x-ds-definition-name: UsersDrilldownResponse
      x-ms-summary: Information about a list of users.
    UserDrilldownResponse:
      description: Information about a user.
      properties:
        id:
          description: The user's unique ID.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        site_id:
          description: The site ID of the organization.
          format: int32
          type: integer
        site_name:
          description: The site name of the account.
          type: string
        user_name:
          description: The full name of the user.
          type: string
        first_name:
          description: The user's first name.
          type: string
        last_name:
          description: The user's last name.
          type: string
        user_status:
          description: |
            The user's status. One of:

            - `active`
            - `created`
            - `closed`
          type: string
        default_account_id:
          description: The ID of the user's default account.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        default_account_name:
          description: The name of the user's default account.
          type: string
        language_culture:
          description: |
            The language and culture of the user.

              * Chinese Simplified: `zh_CN`
              * Chinese Traditional: `zh_TW`
              * Dutch: `nl`
              * English: `en`
              * French: `fr`
              * German: `de`
              * Italian: `it`
              * Japanese: `ja`
              * Korean: `ko`
              * Portuguese: `pt`
              * Portuguese Brazil: `pt_BR`
              * Russian: `ru`
              * Spanish: `es`
          type: string
        selected_languages:
          description: ""
          type: string
        federated_status:
          description: |
            The user's federated status. One of:

            - `RemoveStatus`
            - `FedAuthRequired`
            - `FedAuthBypass`
            - `Evicted`
          type: string
        is_organization_admin:
          description: "When **true,** the user has organization administration privileges."
          type: boolean
        created_on:
          description: The date the user's account was created.
          format: date-time
          type: string
        last_login:
          description: This property has been deprecated.
          format: date-time
          type: string
        memberships:
          description: A list of organizations that have groups that the user is a
            member of.
          items:
            $ref: '#/components/schemas/MembershipResponse'
          type: array
        identities:
          description: A list of identities associated with the user.
          items:
            $ref: '#/components/schemas/UserIdentityResponse'
          type: array
        device_verification_enabled:
          description: ""
          type: boolean
      type: object
      x-ds-definition-name: UserDrilldownResponse
      x-ms-summary: Information about a user.
    MembershipResponse:
      description: Information about group membership.
      properties:
        email:
          description: The email address.
          type: string
        account_id:
          description: The ID of the account.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        external_account_id:
          description: The external account ID.
          type: string
        account_name:
          description: The name of the account.
          type: string
        is_external_account:
          description: |-
            When **true,**
            this is an external account.
          type: boolean
        status:
          description: The status of the user's membership.
          type: string
        permission_profile:
          $ref: '#/components/schemas/PermissionProfileResponse'
        created_on:
          description: The date the user's account was created.
          format: date-time
          type: string
        groups:
          description: "A list of groups the user is a member of in this account,"
          items:
            $ref: '#/components/schemas/MemberGroupResponse'
          type: array
        is_admin:
          description: "When **true,**\nthe user has administration \nprivileges on\
            \ the account."
          type: boolean
      type: object
      x-ds-definition-name: MembershipResponse
      x-ms-summary: Information about group membership.
    UserIdentityResponse:
      description: Results of deleting a user identity.
      properties:
        id:
          description: The ID of the result.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        provider_id:
          description: The ID of the identity provider.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        user_id:
          description: The user ID.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        immutable_id:
          description: A unique ID to identify the removed user.
          type: string
        error_details:
          $ref: '#/components/schemas/ErrorDetails'
      type: object
      x-ds-definition-name: UserIdentityResponse
      x-ms-summary: Results of deleting a user identity.
    DeleteUserIdentityRequest:
      description: "Request to delete a user's identities,"
      properties:
        identities:
          description: A list of identities.
          items:
            $ref: '#/components/schemas/UserIdentityRequest'
          type: array
      required:
      - identities
      type: object
      x-ds-definition-name: DeleteUserIdentityRequest
      x-ms-summary: "Request to delete a user's identities,"
    UserIdentityRequest:
      description: "User identity,"
      properties:
        id:
          description: The ID of the identity.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
      type: object
      x-ds-definition-name: UserIdentityRequest
      x-ms-summary: "User identity,"
    DeleteResponse:
      description: Results of deleting identities.
      properties:
        success:
          description: "When **true,** the request succeeded."
          type: boolean
        identities:
          description: A list of identities to delete.
          items:
            $ref: '#/components/schemas/UserIdentityResponse'
          type: array
      type: object
      x-ds-definition-name: DeleteResponse
      x-ms-summary: Results of deleting identities.
    NewAccountUserRequest:
      description: A new user request.
      properties:
        permission_profile:
          $ref: '#/components/schemas/PermissionProfileRequest'
        groups:
          description: The new user's requested groups.
          items:
            $ref: '#/components/schemas/GroupRequest'
          type: array
        user_name:
          description: The full name of the user.
          type: string
        first_name:
          description: The user's first name.
          type: string
        last_name:
          description: The user's last name.
          type: string
        email:
          description: The email address of the user.
          type: string
        default_account_id:
          description: The account ID of the user's default account.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        language_culture:
          description: |
            The language and culture of the user.

              * Chinese Simplified: `zh_CN`
              * Chinese Traditional: `zh_TW`
              * Dutch: `nl`
              * English: `en`
              * French: `fr`
              * German: `de`
              * Italian: `it`
              * Japanese: `ja`
              * Korean: `ko`
              * Portuguese: `pt`
              * Portuguese Brazil: `pt_BR`
              * Russian: `ru`
              * Spanish: `es`
          type: string
        selected_languages:
          description: ""
          type: string
        access_code:
          description: The access code that the user needs to activate an account.
          type: string
        federated_status:
          description: |
            The user's federated status. One of:

            - `RemoveStatus`
            - `FedAuthRequired`
            - `FedAuthBypass`
            - `Evicted`
          type: string
        auto_activate_memberships:
          description: "When **true,** the user's account is activated automatically."
          type: boolean
      required:
      - email
      type: object
      x-ds-definition-name: NewAccountUserRequest
      x-ms-summary: A new user request.
    DSGroupListResponse:
      description: ""
      properties:
        page:
          description: The page number.
          format: int32
          type: integer
        page_size:
          description: The number of items per page.
          format: int32
          type: integer
        total_count:
          description: ""
          format: int32
          type: integer
        account_id:
          description: "Select users that are members of the specified account. At\
            \ least one of `email`, `account_id` or `organization_reserved_domain_id`\
            \ must be specified."
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        ds_groups:
          description: ""
          items:
            $ref: '#/components/schemas/DSGroupResponse'
          readOnly: true
          type: array
      type: object
      x-ds-definition-name: DSGroupListResponse
      x-ms-summary: ""
    DSGroupAddRequest:
      description: ""
      properties:
        group_name:
          description: ""
          type: string
        description:
          description: ""
          type: string
      required:
      - group_name
      type: object
      x-ds-definition-name: DSGroupAddRequest
      x-ms-summary: ""
    DSGroupUsersAddRequest:
      description: ""
      properties:
        user_ids:
          description: ""
          items:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
          type: array
      required:
      - user_ids
      type: object
      x-ds-definition-name: DSGroupUsersAddRequest
      x-ms-summary: ""
    AddDSGroupAndUsersResponse:
      description: ""
      properties:
        group:
          $ref: '#/components/schemas/DSGroupResponse'
        group_users:
          $ref: '#/components/schemas/AddDSGroupUsersResponse'
      type: object
      x-ds-definition-name: AddDSGroupAndUsersResponse
      x-ms-summary: ""
    AddDSGroupUsersResponse:
      description: ""
      properties:
        is_success:
          description: ""
          type: boolean
        TotalCount:
          description: ""
          format: int32
          type: integer
        users:
          description: A list of users.
          items:
            $ref: '#/components/schemas/DSGroupUserResponse'
          type: array
      type: object
      x-ds-definition-name: AddDSGroupUsersResponse
      x-ms-summary: ""
    DSGroupUserResponse:
      description: ""
      properties:
        user_id:
          description: ""
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        account_id:
          description: "Select users that are members of the specified account. At\
            \ least one of `email`, `account_id` or `organization_reserved_domain_id`\
            \ must be specified."
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        user_name:
          description: The full name of the user.
          type: string
        first_name:
          description: The user's first name.
          type: string
        last_name:
          description: The user's last name.
          type: string
        middle_name:
          description: ""
          type: string
        status:
          description: Status.
          type: string
        error_details:
          $ref: '#/components/schemas/ErrorDetails'
      type: object
      x-ds-definition-name: DSGroupUserResponse
      x-ms-summary: ""
    DSGroupAndUsersResponse:
      description: ""
      properties:
        group:
          $ref: '#/components/schemas/DSGroupResponse'
        group_users:
          $ref: '#/components/schemas/DSGroupUsersResponse'
      type: object
      x-ds-definition-name: DSGroupAndUsersResponse
      x-ms-summary: ""
    DSGroupUsersResponse:
      description: ""
      properties:
        page:
          description: The page number.
          format: int32
          type: integer
        page_size:
          description: The number of items per page.
          format: int32
          type: integer
        total_count:
          description: ""
          format: int32
          type: integer
        users:
          description: A list of users.
          items:
            $ref: '#/components/schemas/DSGroupUserResponse'
          type: array
      type: object
      x-ds-definition-name: DSGroupUsersResponse
      x-ms-summary: ""
    DSGroupUsersRemoveRequest:
      description: Information about users to remove from the group.
      properties:
        user_ids:
          description: An array of IDs corresponding to users to remove from the group.
          items:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
          type: array
        user_emails:
          description: "An array of emails associated with users to remove from the\
            \ group. **Note:** If `user_ids` is also specified, this parameter will\
            \ be ignored."
          items:
            type: string
          type: array
      type: object
      x-ds-definition-name: DSGroupUsersRemoveRequest
      x-ms-summary: Information about users to remove from the group.
    RemoveDSGroupUsersResponse:
      description: ""
      properties:
        is_success:
          description: ""
          type: boolean
        failed_users:
          description: ""
          items:
            $ref: '#/components/schemas/DSGroupUserResponse'
          type: array
      type: object
      x-ds-definition-name: RemoveDSGroupUsersResponse
      x-ms-summary: ""
    ProductPermissionProfilesResponse:
      description: ""
      properties:
        product_permission_profiles:
          description: A list of one or more products and their respective permissions.
          items:
            $ref: '#/components/schemas/ProductPermissionProfileResponse'
          readOnly: true
          type: array
      type: object
      x-ds-definition-name: ProductPermissionProfilesResponse
      x-ms-summary: ""
    ProductPermissionProfileResponse:
      description: ""
      properties:
        product_id:
          description: The ID of the product.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        product_name:
          description: The human-readable name of the product.
          type: string
        permission_profiles:
          description: ""
          items:
            $ref: '#/components/schemas/PermissionProfileResponse2_1'
          type: array
        error_message:
          description: ""
          type: string
      type: object
      x-ds-definition-name: ProductPermissionProfileResponse
      x-ms-summary: ""
    ProductPermissionProfilesRequest:
      description: ""
      properties:
        product_permission_profiles:
          description: A list of one or more products and their respective permissions.
          items:
            $ref: '#/components/schemas/ProductPermissionProfileRequest'
          type: array
      required:
      - product_permission_profiles
      type: object
      x-ds-definition-name: ProductPermissionProfilesRequest
      x-ms-summary: ""
    ProductPermissionProfileRequest:
      description: Identifies a product and an associated permission profile.
      properties:
        product_id:
          description: The ID of the product. This property is required.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        permission_profile_id:
          description: The ID of the permission profile for the given product. This
            property is required.
          type: string
      required:
      - permission_profile_id
      - product_id
      type: object
      x-ds-definition-name: ProductPermissionProfileRequest
      x-ms-summary: Identifies a product and an associated permission profile.
    UserProductPermissionProfilesResponse:
      description: ""
      properties:
        user_id:
          description: The ID of the user.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        account_id:
          description: The ID of the account.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        product_permission_profiles:
          description: A list of one or more products and their respective permissions.
          items:
            $ref: '#/components/schemas/ProductPermissionProfileResponse'
          type: array
      type: object
      x-ds-definition-name: UserProductPermissionProfilesResponse
      x-ms-summary: ""
    NewMultiProductUserAddRequest:
      description: ""
      properties:
        product_permission_profiles:
          description: A list of one or more products and their respective permissions.
          items:
            $ref: '#/components/schemas/ProductPermissionProfileRequest'
          type: array
        ds_groups:
          description: ""
          items:
            $ref: '#/components/schemas/DSGroupRequest'
          type: array
        user_name:
          description: The full name of the user.
          type: string
        first_name:
          description: The user's first name.
          type: string
        last_name:
          description: The user's last name.
          type: string
        email:
          description: The email address.
          type: string
        default_account_id:
          description: ""
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        language_culture:
          description: |
            The language and culture of the user.

              * Chinese Simplified: `zh_CN`
              * Chinese Traditional: `zh_TW`
              * Dutch: `nl`
              * English: `en`
              * French: `fr`
              * German: `de`
              * Italian: `it`
              * Japanese: `ja`
              * Korean: `ko`
              * Portuguese: `pt`
              * Portuguese Brazil: `pt_BR`
              * Russian: `ru`
              * Spanish: `es`
          type: string
        access_code:
          description: The access code that the user needs to activate an account.
          type: string
        federated_status:
          description: |-
            The user's federated status. One of:

            - `RemoveStatus`
            - `FedAuthRequired`
            - `FedAuthBypass`
            - `Evicted`
          type: string
        auto_activate_memberships:
          description: "When **true,** the user's account is activated automatically."
          type: boolean
      required:
      - email
      - product_permission_profiles
      type: object
      x-ds-definition-name: NewMultiProductUserAddRequest
      x-ms-summary: ""
    DSGroupRequest:
      description: ""
      properties:
        ds_group_id:
          description: ""
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
      required:
      - ds_group_id
      type: object
      x-ds-definition-name: DSGroupRequest
      x-ms-summary: ""
    AddUserResponse:
      description: ""
      properties:
        id:
          description: ""
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        site_id:
          description: ""
          format: int32
          type: integer
        user_name:
          description: The full name of the user.
          type: string
        first_name:
          description: The user's first name.
          type: string
        last_name:
          description: The user's last name.
          type: string
        email:
          description: The email address.
          type: string
        language_culture:
          description: |
            The language and culture of the user.

              * Chinese Simplified: `zh_CN`
              * Chinese Traditional: `zh_TW`
              * Dutch: `nl`
              * English: `en`
              * French: `fr`
              * German: `de`
              * Italian: `it`
              * Japanese: `ja`
              * Korean: `ko`
              * Portuguese: `pt`
              * Portuguese Brazil: `pt_BR`
              * Russian: `ru`
              * Spanish: `es`
          type: string
        federated_status:
          description: |-
            The user's federated status. One of:

            - `RemoveStatus`
            - `FedAuthRequired`
            - `FedAuthBypass`
            - `Evicted`
          type: string
        accounts:
          description: ""
          items:
            $ref: '#/components/schemas/AddUserResponseAccountProperties'
          readOnly: true
          type: array
      type: object
      x-ds-definition-name: AddUserResponse
      x-ms-summary: ""
    AddUserResponseAccountProperties:
      description: ""
      properties:
        id:
          description: ""
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        site_id:
          description: ""
          format: int32
          type: integer
        product_permission_profiles:
          description: A list of one or more products and their respective permissions.
          items:
            $ref: '#/components/schemas/ProductPermissionProfileResponse'
          readOnly: true
          type: array
        ds_groups:
          description: ""
          items:
            $ref: '#/components/schemas/DSGroupResponse'
          readOnly: true
          type: array
        company_name:
          description: The user's company name.
          type: string
        job_title:
          description: The user's job title.
          type: string
      type: object
      x-ds-definition-name: AddUserResponseAccountProperties
      x-ms-summary: ""
    UserProductProfileDeleteRequest:
      description: ""
      properties:
        user_email:
          description: The user's email address.
          type: string
        user_id:
          description: The user's unique ID.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        product_ids:
          description: |-
            A list of IDs corresponding to the products for which the user's access will be revoked.

            For example:

            `["230546a7-xxxx-xxxx-xxxx-af205d5494ad", "984800b7-xxxx-xxxx-xxxx-kt374a5922lk"]`
          items:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
          type: array
      required:
      - product_ids
      type: object
      x-ds-definition-name: UserProductProfileDeleteRequest
      x-ms-summary: ""
    RemoveUserProductsResponse:
      description: ""
      properties:
        is_success:
          description: "When **true,** indicates that the user's access to the specified\
            \ products was successfully revoked."
          type: boolean
        user_email:
          description: The user's email address.
          type: string
        user_id:
          description: The user's ID.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        user_product_results:
          additionalProperties:
            type: string
          description: |-
            The results of the request to revoke product access.

            Each key in the object is the ID of a product specified in the request. Each corresponding value indicates whether the user's access for that product was successfully revoked. If successful, the value is `deleted`. Otherwise, the value describes the error that occurred.

            For example:
            ```
            {
                    "230546a7-xxxx-xxxx-xxxx-af205d5494ad"": "deleted",
                    "984800b7-xxxx-xxxx-xxxx-kt374a5922lk": "Invalid product id"
            }
            ```
          type: object
      required:
      - is_success
      - user_product_results
      type: object
      x-ds-definition-name: RemoveUserProductsResponse
      x-ms-summary: ""
    UserProductPermissionProfilesRequest:
      description: ""
      properties:
        email:
          description: The email address associated with the user whose permissions
            you want to update. This property is required.
          type: string
        product_permission_profiles:
          description: A list of one or more products and their associated permissions.
          items:
            $ref: '#/components/schemas/ProductPermissionProfileRequest'
          type: array
      required:
      - email
      - product_permission_profiles
      type: object
      x-ds-definition-name: UserProductPermissionProfilesRequest
      x-ms-summary: ""
    IdentityProviders:
      description: Methods to get a list of identity providers.
      type: object
      x-ds-category: IdentityProviders
      x-ms-summary: Methods to get a list of identity providers.
    ReservedDomains:
      description: Methods to get a list of reserved domains.
      type: object
      x-ds-category: ReservedDomains
      x-ms-summary: Methods to get a list of reserved domains.
    Users:
      description: Methods to manage users in an account.
      type: object
      x-ds-category: UserManagement
      x-ms-summary: Methods to manage users in an account.
    eSignUserManagement:
      description: Methods to manage eSignature users in an account.
      type: object
      x-ds-category: UserManagement
      x-ms-summary: Methods to manage eSignature users in an account.
    MultiProductUserManagement:
      description: Methods to manage multi-product users in an account.
      properties:
        id:
          description: ""
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        site_id:
          description: ""
          format: int32
          type: integer
        user_name:
          description: The full name of the user.
          type: string
        first_name:
          description: The user's first name.
          type: string
        last_name:
          description: The user's last name.
          type: string
        email:
          description: The email address.
          type: string
        language_culture:
          description: |
            The language and culture of the user.

              * Chinese Simplified: `zh_CN`
              * Chinese Traditional: `zh_TW`
              * Dutch: `nl`
              * English: `en`
              * French: `fr`
              * German: `de`
              * Italian: `it`
              * Japanese: `ja`
              * Korean: `ko`
              * Portuguese: `pt`
              * Portuguese Brazil: `pt_BR`
              * Russian: `ru`
              * Spanish: `es`
          type: string
        federated_status:
          description: |-
            The user's federated status. One of:

            - `RemoveStatus`
            - `FedAuthRequired`
            - `FedAuthBypass`
            - `Evicted`
          type: string
        accounts:
          description: ""
          items:
            $ref: '#/components/schemas/AddUserResponseAccountProperties'
          readOnly: true
          type: array
      type: object
      x-ds-definition-name: AddUserResponse
      x-ds-category: UserManagement
      x-ds-order: "100"
      x-ms-summary: Methods to manage multi-product users in an account.
    UserExport:
      description: Methods for exporting a user list.
      type: object
      x-ds-category: BulkOperations
      x-ms-summary: Methods for exporting a user list.
    AccountSettingsExport:
      description: Methods and objects to get account information.
      type: object
      x-ds-category: BulkOperations
      x-ms-summary: Methods and objects to get account information.
    UserImport:
      description: |
        Methods to import users.
      type: object
      x-ds-category: BulkOperations
      x-ms-summary: |
        Methods to import users.
    Organization:
      description: Methods for working with organizations.
      type: object
      x-ds-category: Organization
      x-ms-summary: Methods for working with organizations.
    AccountSettingsImport:
      description: Methods and objects to update account settings.
      type: object
      x-ds-category: BulkOperations
      x-ms-summary: Methods and objects to update account settings.
    SingleAccountUserImport:
      description: Methods to import users.
      properties:
        id:
          description: ""
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        type:
          description: ""
          type: string
        requestor:
          $ref: '#/components/schemas/OrganizationImportResponseRequestor'
        created:
          description: ""
          format: date-time
          type: string
        last_modified:
          description: ""
          format: date-time
          type: string
        status:
          description: Status.
          type: string
        user_count:
          description: ""
          format: int32
          type: integer
        processed_user_count:
          description: ""
          format: int32
          type: integer
        added_user_count:
          description: ""
          format: int32
          type: integer
        updated_user_count:
          description: ""
          format: int32
          type: integer
        closed_user_count:
          description: ""
          format: int32
          type: integer
        no_action_required_user_count:
          description: ""
          format: int32
          type: integer
        error_count:
          description: ""
          format: int32
          type: integer
        warning_count:
          description: ""
          format: int32
          type: integer
        invalid_column_headers:
          description: ""
          type: string
        imports_not_found_or_not_available_for_accounts:
          description: ""
          type: string
        imports_failed_for_accounts:
          description: ""
          type: string
        imports_timed_out_for_accounts:
          description: ""
          type: string
        imports_not_found_or_not_available_for_sites:
          description: ""
          type: string
        imports_failed_for_sites:
          description: ""
          type: string
        imports_timed_out_for_sites:
          description: ""
          type: string
        file_level_error_rollups:
          description: ""
          items:
            $ref: '#/components/schemas/OrganizationImportResponseErrorRollup'
          type: array
        user_level_error_rollups:
          description: ""
          items:
            $ref: '#/components/schemas/OrganizationImportResponseErrorRollup'
          type: array
        user_level_warning_rollups:
          description: ""
          items:
            $ref: '#/components/schemas/OrganizationImportResponseWarningRollup'
          type: array
        has_csv_results:
          description: ""
          type: boolean
        results_uri:
          description: ""
          type: string
      type: object
      x-ds-definition-name: OrganizationImportResponse
      x-ds-category: BulkOperations
      x-ds-order: "100"
      x-ms-summary: Methods to import users.
    DataDeletion:
      description: Methods to delete data for closed users.
      properties:
        user_id:
          description: ""
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          readOnly: true
          type: string
        status:
          description: Status.
          enum:
          - unknown
          - pending
          - failure
          - success
          - already_redacted
          readOnly: true
          type: string
        membership_results:
          description: ""
          items:
            $ref: '#/components/schemas/MembershipDataRedactionResponse'
          readOnly: true
          type: array
      type: object
      x-ds-definition-name: IndividualUserDataRedactionResponse
      x-ds-category: UserManagement
      x-ds-order: "100"
      x-ms-summary: Methods to delete data for closed users.
    AccountCloning:
      description: Methods to clone accounts.
      properties:
        assetGroupAccounts:
          description: The list of asset group accounts.
          items:
            $ref: '#/components/schemas/AssetGroupAccountResponse'
          readOnly: true
          type: array
      type: object
      x-ds-definition-name: AssetGroupAccountsResponse
      x-ds-category: AccountProvisioning
      x-ds-order: "100"
      x-ms-summary: Methods to clone accounts.
    OrganizationImport_OrganizationImportAccountSettings_Post_request:
      properties:
        file.csv:
          description: CSV file.
          format: binary
          type: string
      required:
      - file.csv
      type: object
  securitySchemes:
    accessCode:
      description: OAuth2 Access code Grant
      flows:
        authorizationCode:
          authorizationUrl: https://account.docusign.com/oauth/auth
          scopes:
            organization_read: ""
            user_data_redact: ""
            permission_read: ""
            group_read: ""
            user_read: ""
            account_read: ""
            account_write: ""
            user_write: ""
            identity_provider_read: ""
            domain_read: ""
          tokenUrl: https://account.docusign.com/oauth/auth
      type: oauth2
x-ds-categories:
- name: IdentityProviders
  summary: Methods to get a list of identity providers.
  description: Methods to get a list of identity providers.
- name: ReservedDomains
  summary: Methods to get a list of reserved domains.
  description: Methods to get a list of reserved domains.
- name: UserManagement
  summary: Methods to manage users in an account.
  description: Methods to manage users in an account.
- name: BulkOperations
  summary: Methods to import and export users and accounts.
  description: Methods to import and export users and accounts.
- name: Organization
  summary: Methods for working with organizations.
  description: Methods for working with organizations.
- name: AccountProvisioning
  summary: Methods to provision accounts in your organization.
  description: Methods to provision accounts in your organization.
x-original-swagger-version: "2.0"
