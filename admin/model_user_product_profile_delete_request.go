/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserProductProfileDeleteRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserProductProfileDeleteRequest{}

// UserProductProfileDeleteRequest 
type UserProductProfileDeleteRequest struct {
	// The user's email address.
	UserEmail *string `json:"user_email,omitempty"`
	// The user's unique ID.
	UserId *string `json:"user_id,omitempty"`
	// A list of IDs corresponding to the products for which the user's access will be revoked.  For example:  `[\"230546a7-xxxx-xxxx-xxxx-af205d5494ad\", \"984800b7-xxxx-xxxx-xxxx-kt374a5922lk\"]`
	ProductIds []string `json:"product_ids"`
}

// NewUserProductProfileDeleteRequest instantiates a new UserProductProfileDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserProductProfileDeleteRequest(productIds []string) *UserProductProfileDeleteRequest {
	this := UserProductProfileDeleteRequest{}
	this.ProductIds = productIds
	return &this
}

// NewUserProductProfileDeleteRequestWithDefaults instantiates a new UserProductProfileDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserProductProfileDeleteRequestWithDefaults() *UserProductProfileDeleteRequest {
	this := UserProductProfileDeleteRequest{}
	return &this
}

// GetUserEmail returns the UserEmail field value if set, zero value otherwise.
func (o *UserProductProfileDeleteRequest) GetUserEmail() string {
	if o == nil || IsNil(o.UserEmail) {
		var ret string
		return ret
	}
	return *o.UserEmail
}

// GetUserEmailOk returns a tuple with the UserEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserProductProfileDeleteRequest) GetUserEmailOk() (*string, bool) {
	if o == nil || IsNil(o.UserEmail) {
		return nil, false
	}
	return o.UserEmail, true
}

// HasUserEmail returns a boolean if a field has been set.
func (o *UserProductProfileDeleteRequest) HasUserEmail() bool {
	if o != nil && !IsNil(o.UserEmail) {
		return true
	}

	return false
}

// SetUserEmail gets a reference to the given string and assigns it to the UserEmail field.
func (o *UserProductProfileDeleteRequest) SetUserEmail(v string) {
	o.UserEmail = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UserProductProfileDeleteRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserProductProfileDeleteRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UserProductProfileDeleteRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *UserProductProfileDeleteRequest) SetUserId(v string) {
	o.UserId = &v
}

// GetProductIds returns the ProductIds field value
func (o *UserProductProfileDeleteRequest) GetProductIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ProductIds
}

// GetProductIdsOk returns a tuple with the ProductIds field value
// and a boolean to check if the value has been set.
func (o *UserProductProfileDeleteRequest) GetProductIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductIds, true
}

// SetProductIds sets field value
func (o *UserProductProfileDeleteRequest) SetProductIds(v []string) {
	o.ProductIds = v
}

func (o UserProductProfileDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserProductProfileDeleteRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserEmail) {
		toSerialize["user_email"] = o.UserEmail
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	toSerialize["product_ids"] = o.ProductIds
	return toSerialize, nil
}

type NullableUserProductProfileDeleteRequest struct {
	value *UserProductProfileDeleteRequest
	isSet bool
}

func (v NullableUserProductProfileDeleteRequest) Get() *UserProductProfileDeleteRequest {
	return v.value
}

func (v *NullableUserProductProfileDeleteRequest) Set(val *UserProductProfileDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserProductProfileDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserProductProfileDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserProductProfileDeleteRequest(val *UserProductProfileDeleteRequest) *NullableUserProductProfileDeleteRequest {
	return &NullableUserProductProfileDeleteRequest{value: val, isSet: true}
}

func (v NullableUserProductProfileDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserProductProfileDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


