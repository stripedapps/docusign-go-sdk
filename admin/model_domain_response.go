/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DomainResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainResponse{}

// DomainResponse Information about a reserved domain.
type DomainResponse struct {
	// The ID of the reserved domain.
	Id *string `json:"id,omitempty"`
	// The status of the request. One of:  - `unknown` - `pending` - `active` - `deactivated` - `rejected`
	Status *string `json:"status,omitempty"`
	// The host name of the reserved domain.
	HostName *string `json:"host_name,omitempty"`
	// A token  in form of text of the reserved domain.
	TxtToken *string `json:"txt_token,omitempty"`
	// The identity provider ID of the reserved domain.
	IdentityProviderId *string `json:"identity_provider_id,omitempty"`
	// A list of settings for the reserved domain. 
	Settings []SettingResponse `json:"settings,omitempty"`
	// A list of useful links.
	Links []LinkResponse `json:"links,omitempty"`
}

// NewDomainResponse instantiates a new DomainResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainResponse() *DomainResponse {
	this := DomainResponse{}
	return &this
}

// NewDomainResponseWithDefaults instantiates a new DomainResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainResponseWithDefaults() *DomainResponse {
	this := DomainResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DomainResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DomainResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DomainResponse) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DomainResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DomainResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DomainResponse) SetStatus(v string) {
	o.Status = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *DomainResponse) GetHostName() string {
	if o == nil || IsNil(o.HostName) {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainResponse) GetHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.HostName) {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *DomainResponse) HasHostName() bool {
	if o != nil && !IsNil(o.HostName) {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *DomainResponse) SetHostName(v string) {
	o.HostName = &v
}

// GetTxtToken returns the TxtToken field value if set, zero value otherwise.
func (o *DomainResponse) GetTxtToken() string {
	if o == nil || IsNil(o.TxtToken) {
		var ret string
		return ret
	}
	return *o.TxtToken
}

// GetTxtTokenOk returns a tuple with the TxtToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainResponse) GetTxtTokenOk() (*string, bool) {
	if o == nil || IsNil(o.TxtToken) {
		return nil, false
	}
	return o.TxtToken, true
}

// HasTxtToken returns a boolean if a field has been set.
func (o *DomainResponse) HasTxtToken() bool {
	if o != nil && !IsNil(o.TxtToken) {
		return true
	}

	return false
}

// SetTxtToken gets a reference to the given string and assigns it to the TxtToken field.
func (o *DomainResponse) SetTxtToken(v string) {
	o.TxtToken = &v
}

// GetIdentityProviderId returns the IdentityProviderId field value if set, zero value otherwise.
func (o *DomainResponse) GetIdentityProviderId() string {
	if o == nil || IsNil(o.IdentityProviderId) {
		var ret string
		return ret
	}
	return *o.IdentityProviderId
}

// GetIdentityProviderIdOk returns a tuple with the IdentityProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainResponse) GetIdentityProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.IdentityProviderId) {
		return nil, false
	}
	return o.IdentityProviderId, true
}

// HasIdentityProviderId returns a boolean if a field has been set.
func (o *DomainResponse) HasIdentityProviderId() bool {
	if o != nil && !IsNil(o.IdentityProviderId) {
		return true
	}

	return false
}

// SetIdentityProviderId gets a reference to the given string and assigns it to the IdentityProviderId field.
func (o *DomainResponse) SetIdentityProviderId(v string) {
	o.IdentityProviderId = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *DomainResponse) GetSettings() []SettingResponse {
	if o == nil || IsNil(o.Settings) {
		var ret []SettingResponse
		return ret
	}
	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainResponse) GetSettingsOk() ([]SettingResponse, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *DomainResponse) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given []SettingResponse and assigns it to the Settings field.
func (o *DomainResponse) SetSettings(v []SettingResponse) {
	o.Settings = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *DomainResponse) GetLinks() []LinkResponse {
	if o == nil || IsNil(o.Links) {
		var ret []LinkResponse
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainResponse) GetLinksOk() ([]LinkResponse, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *DomainResponse) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []LinkResponse and assigns it to the Links field.
func (o *DomainResponse) SetLinks(v []LinkResponse) {
	o.Links = v
}

func (o DomainResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.HostName) {
		toSerialize["host_name"] = o.HostName
	}
	if !IsNil(o.TxtToken) {
		toSerialize["txt_token"] = o.TxtToken
	}
	if !IsNil(o.IdentityProviderId) {
		toSerialize["identity_provider_id"] = o.IdentityProviderId
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	return toSerialize, nil
}

type NullableDomainResponse struct {
	value *DomainResponse
	isSet bool
}

func (v NullableDomainResponse) Get() *DomainResponse {
	return v.value
}

func (v *NullableDomainResponse) Set(val *DomainResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainResponse(val *DomainResponse) *NullableDomainResponse {
	return &NullableDomainResponse{value: val, isSet: true}
}

func (v NullableDomainResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


