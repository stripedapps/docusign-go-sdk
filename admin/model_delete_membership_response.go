/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeleteMembershipResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteMembershipResponse{}

// DeleteMembershipResponse Results of closing accounts.
type DeleteMembershipResponse struct {
	// The ID of an account that could not be closed.
	Id *string `json:"id,omitempty"`
	ErrorDetails *ErrorDetails `json:"error_details,omitempty"`
}

// NewDeleteMembershipResponse instantiates a new DeleteMembershipResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteMembershipResponse() *DeleteMembershipResponse {
	this := DeleteMembershipResponse{}
	return &this
}

// NewDeleteMembershipResponseWithDefaults instantiates a new DeleteMembershipResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteMembershipResponseWithDefaults() *DeleteMembershipResponse {
	this := DeleteMembershipResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DeleteMembershipResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteMembershipResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DeleteMembershipResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DeleteMembershipResponse) SetId(v string) {
	o.Id = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *DeleteMembershipResponse) GetErrorDetails() ErrorDetails {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret ErrorDetails
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteMembershipResponse) GetErrorDetailsOk() (*ErrorDetails, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *DeleteMembershipResponse) HasErrorDetails() bool {
	if o != nil && !IsNil(o.ErrorDetails) {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given ErrorDetails and assigns it to the ErrorDetails field.
func (o *DeleteMembershipResponse) SetErrorDetails(v ErrorDetails) {
	o.ErrorDetails = &v
}

func (o DeleteMembershipResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteMembershipResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ErrorDetails) {
		toSerialize["error_details"] = o.ErrorDetails
	}
	return toSerialize, nil
}

type NullableDeleteMembershipResponse struct {
	value *DeleteMembershipResponse
	isSet bool
}

func (v NullableDeleteMembershipResponse) Get() *DeleteMembershipResponse {
	return v.value
}

func (v *NullableDeleteMembershipResponse) Set(val *DeleteMembershipResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteMembershipResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteMembershipResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteMembershipResponse(val *DeleteMembershipResponse) *NullableDeleteMembershipResponse {
	return &NullableDeleteMembershipResponse{value: val, isSet: true}
}

func (v NullableDeleteMembershipResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteMembershipResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


