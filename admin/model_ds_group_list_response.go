/*
DocuSign Admin API

An API for an organization administrator to manage organizations, accounts and users

API version: v2.1
Contact: devcenter@docusign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DSGroupListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DSGroupListResponse{}

// DSGroupListResponse 
type DSGroupListResponse struct {
	// The page number.
	Page *int32 `json:"page,omitempty"`
	// The number of items per page.
	PageSize *int32 `json:"page_size,omitempty"`
	// 
	TotalCount *int32 `json:"total_count,omitempty"`
	// Select users that are members of the specified account. At least one of `email`, `account_id` or `organization_reserved_domain_id` must be specified.
	AccountId *string `json:"account_id,omitempty"`
	// 
	DsGroups []DSGroupResponse `json:"ds_groups,omitempty"`
}

// NewDSGroupListResponse instantiates a new DSGroupListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDSGroupListResponse() *DSGroupListResponse {
	this := DSGroupListResponse{}
	return &this
}

// NewDSGroupListResponseWithDefaults instantiates a new DSGroupListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDSGroupListResponseWithDefaults() *DSGroupListResponse {
	this := DSGroupListResponse{}
	return &this
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *DSGroupListResponse) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSGroupListResponse) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *DSGroupListResponse) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *DSGroupListResponse) SetPage(v int32) {
	o.Page = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *DSGroupListResponse) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSGroupListResponse) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *DSGroupListResponse) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *DSGroupListResponse) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *DSGroupListResponse) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSGroupListResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *DSGroupListResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *DSGroupListResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *DSGroupListResponse) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSGroupListResponse) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *DSGroupListResponse) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *DSGroupListResponse) SetAccountId(v string) {
	o.AccountId = &v
}

// GetDsGroups returns the DsGroups field value if set, zero value otherwise.
func (o *DSGroupListResponse) GetDsGroups() []DSGroupResponse {
	if o == nil || IsNil(o.DsGroups) {
		var ret []DSGroupResponse
		return ret
	}
	return o.DsGroups
}

// GetDsGroupsOk returns a tuple with the DsGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSGroupListResponse) GetDsGroupsOk() ([]DSGroupResponse, bool) {
	if o == nil || IsNil(o.DsGroups) {
		return nil, false
	}
	return o.DsGroups, true
}

// HasDsGroups returns a boolean if a field has been set.
func (o *DSGroupListResponse) HasDsGroups() bool {
	if o != nil && !IsNil(o.DsGroups) {
		return true
	}

	return false
}

// SetDsGroups gets a reference to the given []DSGroupResponse and assigns it to the DsGroups field.
func (o *DSGroupListResponse) SetDsGroups(v []DSGroupResponse) {
	o.DsGroups = v
}

func (o DSGroupListResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DSGroupListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	if !IsNil(o.TotalCount) {
		toSerialize["total_count"] = o.TotalCount
	}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.DsGroups) {
		toSerialize["ds_groups"] = o.DsGroups
	}
	return toSerialize, nil
}

type NullableDSGroupListResponse struct {
	value *DSGroupListResponse
	isSet bool
}

func (v NullableDSGroupListResponse) Get() *DSGroupListResponse {
	return v.value
}

func (v *NullableDSGroupListResponse) Set(val *DSGroupListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDSGroupListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDSGroupListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDSGroupListResponse(val *DSGroupListResponse) *NullableDSGroupListResponse {
	return &NullableDSGroupListResponse{value: val, isSet: true}
}

func (v NullableDSGroupListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDSGroupListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


